%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Donald E Groom) (Berkeley Lab)
%%Title: (bichsel_fns.eps)
%%CreationDate: (7/25/02) (1:24 PM)
%%BoundingBox: 147 213 457 438
%%HiResBoundingBox: 147.41 223.28 456.0892 437.4027
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%DocumentNeededFonts: NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 33 582 761
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 1 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI5_OpenToView: 98 476 3 1274 981 26 0 1 3 40 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:30 33
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -33 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 92 8
%%BeginData: 8928 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD89FFA8FFFF7DFF7DA8FD11F8FC9807FD5AF8FD0BFF7DFFFFA87D
%A8A8F8FFFFFFF8FFFFF8FFF8FFFFF8F8FFF8F88CC007FD06FFF8FD04FFF8
%FFFFFFF8FFFFF8FFF8FFF8FFF8FFF8F8FD08FFF8FD05FFF8FFFFFFF8FFFF
%F8FFF8FFF8FFF8FFF8F8FD08FFF8FD05FFF8FFFFF8FFFFF8FFFFF8FFF8FF
%F8F8FFF8FD0BFF7DA8FF7DA87DA8F8F8FFFFF8FFFFF8FFF8FFFFF8F8FFF8
%F8FC9807FD06FFF8FD04FFF8FFFFFFF8FFFFF8FFF8FFF8FFF8FFF8F8FD08
%FFF8FD05FFF8FFFFFFF8FFFFF8FFF8FFF8FFF8FFF8F8FD08FFF8FD05FFF8
%FFFFF8FFFFF8FFFFF8FFF8FFFD04F8FD12FFF8F8FD0EFFF88CFFFF2FFD1A
%FFF8FD1EFFF8FD1DFFF8F8FD12FFF8FD0FFFF8FC981107FD1AFFF8FD1EFF
%F8FD1EFFF8FD12FFF8F8FD0EFFF88CBAFF2FFD1AFFF8FD1EFFF8FD1DFFF8
%F8FD12FFF8FD0FFFF8FC980B07FD1AFFF8FD1EFFF8FD1EFFF8FD0BFFA8FF
%FFFD04A8F8F8FD0EFFF88CC00B2FFD1AFFF8FD1EFFF8FD1DFFF8F8FD0BFF
%A87DFF7DA87DA8FD11F8FC980B07FD59F8FD0BFF7DA8FF7DA87DA8F8FD0F
%FFF8FFFC0B1107FD19FFF8FD1EFFF8FD1EFFF8FD12FFF8F8FD0EFFF8FF8C
%BA0B07FD19FFF8FD1EFFF8FD1DFFF8F8FD12FFF8F8FD0EFFF8FFFC981107
%FD19FFF8FD1EFFF8FD1DFFF8F8FD12FFF8FD0FFFF8FF8CBA0B07FD19FFF8
%FD1EFFF8FD1EFFF8FD12FFF8F8FD0EFFF8FFFCFF1107FD19FFF8FD1EFFF8
%FD1DFFF8F8FD0BFFA8A8FF7DFF7DA8F8F8FD0EFFF8FF8CBA0B07FD19FFF8
%FD1EFFF8FD1DFFF8F8FD0BFFA8A8FFA87DA87DF8FD0FFFF8FFFC981107FD
%19FFF8FD1EFFF8FD1EFFF8FD0BFFA8A8FF7DA87DA8FD12F88CBAF81107FD
%57F8FD12FFF8F8FD0EFFF8FFFCFFBA0B2FFD18FFF8FD1EFFF8FD1DFFF8F8
%FD12FFF8FD0FFFF8FFFFFC980B07FD18FFF8FD1EFFF8FD1EFFF8FD12FFF8
%F8FD0EFFF8FFFF8CC0FF2FFD18FFF8FD1EFFF8FD1DFFF8F8FD12FFF8F8FD
%0EFFF8FFFFFC980B07FD18FFF8FD1EFFF8FD1DFFF8F8FD12FFF8FD0FFFF8
%FFFF8CC0FF0D07FD17FFF8FD1EFFF8FD1EFFF8FD07FFA8A8FFFFA8A8FF7D
%A87DA8F8F8FD0EFFF8FFFFFC98FF0B07FD17FFF8FD1EFFF8FD1DFFF8F8FD
%07FF7DA8FFFFA8A8FF7D7DA8A8F8FD0FFFF8FFFF8CFF981107FD17FFF8FD
%1EFFF8FD1EFFF8FD06FFA8A8A8FFFFA8A8FF7DA87DA8FD13F8FCF8BA0B07
%FD56F8FD07FFA8A8FD09FFF8F8FD0EFFF8FFFF8CFC981107FD17FFF8FD1E
%FFF8FD1DFFF8F8FD07FF7D7DFD09FFF8FD0FFFF8FFFFFF8CFF0BFF07FD16
%FFF8FD1EFFF8FD1EFFF8FD07FF7DA8FD09FFF8F8FD0EFFF8FFFFFFFC9811
%FF2FFD16FFF8FD1EFFF8FD1DFFF8F8FD08FFA8FD09FFF8F8FD0EFFF8FFFF
%FF8CBA0B1107FD16FFF8FD1EFFF8FD1DFFF8F8FD05FFA8FD0CFFF8FD0FFF
%F8FFFFFFFC98BA0B2FFD16FFF8FD1EFFF8FD1EFFF8FD05FF7D52FD04FFA8
%A8FF7DA87DA8F8F8FD0EFFF8FFFFFF8CFF980BFF07FD15FFF8FD1EFFF8FD
%1DFFF8F8FD04FF7D52FD05FFA8A8FF7D7DA87DFD14F8FCF8C00BF807FD4B
%F8FFA8FFFFFD05F8FD05FFA87DFD04FFA8A8FF7DA87DA8F8FD0FFFF8FD04
%FFFC98FF0B0DFD15FFF8FD36FFA8A8A8FD04FFF8FD04FFA87DA8FD0BFFF8
%F8FD0EFFF8FD04FF8CC0FF11072FFD14FFF8FD28FFA8A8FD06FFA8FD05FF
%7DA8A8FFFFFFF8F8FD04FF7DFF7DFD0BFFF8F8FD0EFFF8FD04FFFC98BA0B
%FF07FD14FFF8FD18FFA8A8A8FD07FF7DFF7DFFA8FF7D7DFFFD067DA8527D
%7DFFFFFF7DFFFFFFF8F8FD04FFA87D7DFD0BFFF8FD0FFFF8FD04FF8CFF98
%FF0B2FFD14FFF8FD15FFA8A8A87D7DA8FFA87D7D7DA8FFA8FF7D7D7DFFA8
%7DFFFD047DA8A8FD047DFD08FFF8FD04FF527D52FD0BFFF8F8FD0EFFF8FD
%04FFFCFFBAFF0BFF0DFD13FFF8FD0FFFA87DFF7DA8FF7DA8A852A87DFF7D
%7D527D52FF7DFF7D7D52FD07FF7DA8FD07FFA8A8FFFFFFF8F8FD06FFA8FD
%04FFA8FFFFFD04A8F8F8FD0EFFF8FD05FFFC98FF0BFF07FD13FFF8FD0FFF
%7D7DFFA87DFFA8A8FD05FFA8FFFF072F070D072F070D072F070D072F070D
%072F070D072FFFFFA8A8060D072F07FD04FF52A8A8FD04FFA87DFF7DFF7D
%A8F8FD0FFFF8FD05FF8CBA9811FF07FD13FFF8FD16FFFD0A07FFFF7DFF52
%7DFFA8FF7D7DFD06FFA87DA8FD057DA8FFFFFFF8FD05FF7D7DFD04FF7DA8
%FFA8FF7DA8FD16F8FCF8F80B11F82FFD22F8072F072F072F062F7DFFA8A8
%FD07FFA8FFFFA8A87DFFFFA8FF7D7DA87D7DA8A8A87D7D7DFFFFA8FFFFF8
%F8FD05FFA87DFD0BFFF8F8FD0EFFF8FD05FF8CFF98FFFFFF070DFD11FFF8
%FD0BFF07070D0707FD05FFA87DA87D7D7DFF7DA87D7D7DFF7DFFA8A87D52
%A8FFA8FF527D527D7DA8FD0AFFF8F8FD12FFF8FD0FFFF8FD05FFFCFFBAFF
%110BFF07FD11FFF8FD07FF070D072F07FD09FF7DA87D7D7DA8FFFD057DA8
%FD0AFF110B117D0B0B110B11FFFFA8FF0B110BFF0BFD04FF7D7D7DFD0BFF
%F8F8FD0EFFF8FD05FF8CFCFFBAFF11FFFF07FD10FFF8FFFFFFFD0507FD12
%FF0B11040B0BFF0BFF0B110B0B0B110B0B0B11FD0CFF7DFFFFFFF8F8FD07
%FF7DFD0AFFF8FD0FFFF8FD06FF8CFF98FFFF11FFFF07FD0FFFF82F072F07
%FD0FFF0B110B110B110B11FD16FFA8FD05FF7DA8A8FFFFFFF8FD06FF527D
%FD0AFFF8F8FD0EFFF8FD06FFFCFFBAFFFF0BFFFF0D0707FD0AFF0707070D
%07FD0CFF0B0B110BFF0B11FD0FFFA87DA8527DFFFFA8FF7D7D7DA852A87D
%A87D7D7DFFFFA8FFFFF8F8FD05FF7DFD05FFA8FFFFFD04A8F8F8FD0EFFF8
%FD06FF8CFF98FFFFFF0BFFFFFF070D07FD04FF2F070D072FFFFFF8FD0AFF
%110B110BFD08FF7DFD04A8FFA8A87D7DA8FFFF7DA8A8FF7DFFA87DFF7D7D
%7D52FD04A87D7D7DA8FFA8FFFFF8F8FD05FF7D52FD04FFA87DFF7DFF7DA8
%F8FD0FFFF8FD07FF8CFF98FFFF11FD05FFFD0607FD06FFF8FD05FF110B0B
%0B11FD0CFF7D7DA87D7DFF7D7D527D52FFFFA87D7DA8A8A87D52FD04FF7D
%7DFD0CFFF8FD05FFA8FD05FF7DA8FFA8FFA8A8FD18F8FCF8F898F8F811FD
%13F8110B110BFD0FF8FF7D7DA8A8A8FFC098C0FFC098C098C098C098C0FF
%C098C098C098C098C0FFC098C06EC098C098C0F8FD04FF7DFD0DFFF8F8FD
%0EFFF8FD07FF8CFFFFBAFFFFFF0BFD0FFFF80B110BFD11FF98BA98BA98BA
%98BAFD1BFFA87DFFFFFFF8F8FD05FFA8A8A8FD0AFFF8FD0FFFF8FD07FFFC
%FFFF98BAFFFF0B110BFD0BFF0B110BFD0EFFC098BA98FF98BAFD1CFFA8FD
%05FF7DA8A8FFFFFFF8FD07FFA8FD0AFFF8F8FD0EFFF8FD08FFFCFFFF98FD
%04FF0B0B11FFFFFF110B0BFF11FFFFFFF8FD09FFBA98BA98BA98FD14FFA8
%FF7D7DA8FF7D7DFD05FF7D7D7DA87D7D7DFFFFA8FFFFF8F8FD07FF7DA8FD
%09FFF8F8FD0EFFF8FD08FF8CFFFFC0FD06FF0B110B11FD08FFF8FD06FFC0
%98C098FD0DFFA8A8FFFFA8FFFFFF7DA87DFFA8FF7DA87DFFFFA8FF7D7DA8
%FF7D7DA8A87D7D7DFFFF7DFFFFF8F8FD06FF7D7D7DA8FD08FFF8FD0FFFF8
%FD08FFFC8CFFFFBA98FD10FFF8FFFF98BA98FD12FFA87DFF7DA8FFFD057D
%A8A8FF7D7DA8FFA8A8FF527D52FF7DA8FD07FFA8FFFFFFF8FD05FF52A8A8
%FFFFFFA8FFFFFD04A8F8F8FD0EFFF8FD09FFFCFFFFFFBA98FD0FFF98C098
%FD15FF7DA8FFA87DFF7D7DA8FF8CFC8CFC8CFC8CFC8CFC8CFC8CFC8CFC8C
%FC8CFC8CFC8CFC8CFC8CFC8CFD06FFA8A8FFFFFFA87DFF52A87DA8FD1AF8
%8CFD04F8BA98FD0BF898BA98FD16F8FC8CFC8CFC8CFC8C8C8CFC8CFCFD1A
%FFF8F8FD04FFA8FFFFA8FFFFFF7DA8FFA8A87DA8F8FD0FFFF8FD0AFF8CFD
%04FFC098FD07FF98C098FFFFFFF8FD0FFF8CFC8CFC8CFC8CFD08FFF8FD1E
%FFF8FD04FFA87D7DFD0BFFF8F8FD0EFFF8FD0AFFFCFD06FF98BA98FF98BA
%98FD06FFF8FD0AFF8CFC8CFC8CFCFD0EFFF8FD1DFFF8F8FD12FFF8F8FD0E
%FFF8FD0BFFFCFD12FFF8FD06FFFC8CFC8CFCFD13FFF8FD1DFFF8F8FD12FF
%F8FD0FFFF8FD0BFF8CFCFD11FFF8FFFF8CFC8CFC8CFD17FFF8FD1EFFF8FD
%12FFF8F8FD0EFFF8FD0CFF8CFD11FF8CFC8CFCFD1BFFF8FD1DFFF8F8FD12
%FFF8FD0FFFF8FD0DFF8CFD0DFF8CFC8CFCFD1EFFF8FD1EFFF8FD0BFFA8FF
%FFFD04A8F8F8FD0EFFF8FD0EFF8CFC8CFCFD05FFFC8CFC8CFCFFFFF8FD1E
%FFF8FD1DFFF8F8FD0BFFA87DFF52A87DA8FD22F88CFC8CFC8CFC8CFD45F8
%FD0BFF7DA8FFFD04A8F8FD0FFFF8FD1EFFF8FD1EFFF8FD1EFFF8FD12FFF8
%F8FD0EFFF8FD1EFFF8FD1EFFF8FD1DFFF8F8FD12FFF8F8FD0EFFF8FD1EFF
%F8FD1EFFF8FD1DFFF8F8FD12FFF8FD0FFFF8FD1EFFF8FD1EFFF8FD1EFFF8
%FD12FFF8F8FD0EFFF8FD1EFFF8FD1EFFF8FD1DFFF8F8FD0BFFA8A8FF7DA8
%7DA8F8F8FD0EFFF8FD1EFFF8FD1EFFF8FD1DFFF8F8FD0BFFA8A8FFFD04A8
%F8FD0FFFF8FD1EFFF8FD1EFFF8FD1EFFF8FD0BFF7DA8FF7DA87DA8FD6EF8
%FD12FFF8F8FD0EFFF8FD1EFFF8FD1EFFF8FD1DFFF8F8FD12FFF8FD0FFFF8
%FD1EFFF8FD1EFFF8FD1EFFF8FD12FFF8F8FD0EFFF8FD1EFFF8FD1EFFF8FD
%1DFFF8F8FD12FFF8F8FD0EFFF8FD1EFFF8FD1EFFF8FD1DFFF8F8FD0BFF7D
%FFFFFD04A8F8FD0FFFF8FD1EFFF8FD1EFFF8FD1EFFF8FD0BFFA87DFF7DA8
%7DA8F8F8FFFFF8FFFFF8FFF8FFFFF8F8FFF8F8FD09FFF8FD04FFF8FFFFFF
%F8FFFFF8FFF8FFF8FFF8FFF8F8FD08FFF8FD05FFF8FFFFFFF8FFFFF8FFF8
%FFF8FFF8FFF8F8FD08FFF8FD05FFF8FFFFF8FFFFF8FFFFF8FFF8FFFD04F8
%FD0BFF7DA8A87DA8A8A8F8FFFFFFF8FFFFF8FFF8FFFFF8F8FFF8F8FD09FF
%F8FD04FFF8FFFFFFF8FFFFF8FFF8FFF8FFF8FFF8F8FD08FFF8FD05FFF8FF
%FFFFF8FFFFF8FFF8FFF8FFF8FFF8F8FD08FFF8FD05FFF8FFFFF8FFFFF8FF
%FFF8FFF8FFF8F8FFF8FD12FFFD6EF8FD11FF7DFFFFA8A8FD0CFFA8FD0EFF
%7DFD0EFFA8FFA8A8FD0BFF7DA87DFD0CFFA8FFFD04A8FD09FF7DFFA8FF7D
%FD08FFA8FFFF7DFFA8FF7DFD0FFFA87DFF7DA8FD0CFF7DFD0EFFA87DFD0D
%FF7DFF7DA8FD0BFFA87DA87DFD0BFF7DFF7DA87DA8FD09FFA87DA87DA87D
%FD07FF7DFFFFA87DA87DA8FD0FFF7DA8A87DA8FD0CFF7DA8FD0DFF7DA8FD
%0DFF7DFFA8A8FD0BFF52A87DA8FD0BFF7DFD05A8FD09FF7DA87DA87DA8FD
%07FF7DA8FF7DA87DA87DFDBDFFA8FD7FFF7D52FFFFFF7DFD08FFA8FD04FF
%A8FD6CFF527D527DFF7DFF7D7DFFA87DA8A8FFFF7D7D7DA8A8FD6BFF5252
%A87DFF7DFF527DFFA87DA87DFFFF7D7D7D52FD6CFF7DFFA8A8FD06FF7DFD
%FCFFFDBBFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			dup length 1 sub
			1 exch
			getinterval
			
			cvn
			findfont
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
					findfont
					[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: NewCenturySchlbk-Italic
%%IncludeFont: NewCenturySchlbk-Roman
%%IncludeFont: Symbol
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _NewCenturySchlbk-Italic NewCenturySchlbk-Italic
[/_NewCenturySchlbk-Italic/NewCenturySchlbk-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _NewCenturySchlbk-Roman NewCenturySchlbk-Roman
[/_NewCenturySchlbk-Roman/NewCenturySchlbk-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Symbol Symbol
[32/space
/exclam
/universal
/numbersign
/existential
/percent
/ampersand
/suchthat
/parenleft
/parenright
/asteriskmath
/plus
/comma
/minus
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/congruent
/Alpha
/Beta
/Chi
/Delta
/Epsilon
/Phi
/Gamma
/Eta
/Iota
/theta1
/Kappa
/Lambda
/Mu
/Nu
/Omicron
/Pi
/Theta
/Rho
/Sigma
/Tau
/Upsilon
/sigma1
/Omega
/Xi
/Psi
/Zeta
/bracketleft
/therefore
/bracketright
/perpendicular
/underscore
/radicalex
/alpha
/beta
/chi
/delta
/epsilon
/phi
/gamma
/eta
/iota
/phi1
/kappa
/lambda
/mu
/nu
/omicron
/pi
/theta
/rho
/sigma
/tau
/upsilon
/omega1
/omega
/xi
/psi
/zeta
/braceleft
/bar
/braceright
/similar
161/Upsilon1
/minute
/lessequal
/fraction
/infinity
/florin
/club
/diamond
/heart
/spade
/arrowboth
/arrowleft
/arrowup
/arrowright
/arrowdown
/degree
/plusminus
/second
/greaterequal
/multiply
/proportional
/partialdiff
/bullet
/divide
/notequal
/equivalence
/approxequal
/ellipsis
/arrowvertex
/arrowhorizex
/carriagereturn
/aleph
/Ifraktur
/Rfraktur
/weierstrass
/circlemultiply
/circleplus
/emptyset
/intersection
/union
/propersuperset
/reflexsuperset
/notsubset
/propersubset
/reflexsubset
/element
/notelement
/angle
/gradient
/registerserif
/copyrightserif
/trademarkserif
/product
/radical
/dotmath
/logicalnot
/logicaland
/logicalor
/arrowdblboth
/arrowdblleft
/arrowdblup
/arrowdblright
/arrowdbldown
/lozenge
/angleleft
/registersans
/copyrightsans
/trademarksans
/summation
/parenlefttp
/parenleftex
/parenleftbt
/bracketlefttp
/bracketleftex
/bracketleftbt
/bracelefttp
/braceleftmid
/braceleftbt
/braceex
241/angleright
/integral
/integraltp
/integralex
/integralbt
/parenrighttp
/parenrightex
/parenrightbt
/bracketrighttp
/bracketrightex
/bracketrightbt
/bracerighttp
/bracerightmid
/bracerightbt
/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_BeginPalette
0 0 Pb
0.0392 0.2588 0.6039 Xa
(New Color Swatch 3) Pc
0 0.4784 0.1961 Xa
(New Color Swatch 4) Pc
0.898 0.4392 0 Xa
(New Color Swatch 5) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 To
1 0 0 1 226.2863 237.5458 0 Tp
0 Tv
TP
-2.502 0 Td
0 Tr
0 O
0 0 0 Xa
300 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
%_ 0 50 XQ
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
22.3198 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 262.0803 237.5458 0 Tp
0 Tv
TP
-2.502 0 Td
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 188.3009 237.5458 0 Tp
0 Tv
TP
-6.255 0 Td
0 Tr
(0.3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 336.7897 237.5458 0 Tp
0 Tv
TP
-5.004 0 Td
0 Tr
(30) Tx 
(\r) TX 
TO
0 To
1 0 0 1 410.2592 237.5458 0 Tp
0 Tv
TP
-7.506 0 Td
0 Tr
(300) Tx 
(\r) TX 
TO
0 To
1 0 0 1 300.3838 237.5458 0 Tp
0 Tv
TP
-5.004 0 Td
0 Tr
(10) Tx 
(\r) TX 
TO
0 To
1 0 0 1 375.0837 237.5458 0 Tp
0 Tv
TP
-7.506 0 Td
0 Tr
(100) Tx 
(\r) TX 
TO
0 To
1 0 0 1 446.0812 237.5458 0 Tp
0 Tv
TP
-10.008 0 Td
0 Tr
(1000) Tx 
(\r) TX 
TO
U
0 To
1 0 0 1 317.4898 226.38 0 Tp
0 Tv
TP
-25.3947 0 Td
0 Tr
/_Symbol 10 10 -2.93 Tf
(bg  ) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
(\(= ) Tx 
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
(p/m) Tx 
/_Symbol 10 10 -2.93 Tf
(\)) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 184.228 246.8253 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
2 Ta
(0.50) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 262.9588 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.55) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 281.5704 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.60) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 300.182 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.65) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 318.776 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.70) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 337.3876 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.75) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 355.9992 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.80) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 374.6108 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.85) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 393.2224 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.90) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 411.8164 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(0.95) Tx 
(\r) TX 
TO
0 To
1 0 0 1 184.228 428.5827 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
(1.00) Tx 
(\r) TX 
TO
U
0 To
0 1 -1 0 161.1299 338.8934 0 Tp
0 Tv
TP
-40.3116 0 Td
0 Tr
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
1 Ta
(\() Tx 
/_Symbol 10 10 -2.93 Tf
(D) Tx 
/_NewCenturySchlbk-Italic 8 7.744 -1.816 Tf
-1.86 Ts
(p) Tx 
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Ts
(/x) Tx 
/_Symbol 10 10 -2.93 Tf
(\)) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
( ) Tx 
/_NewCenturySchlbk-Roman 14 13.7199 -3.0099 Tf
-1.86 Ts
(/) Tx 
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Ts
( dE) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
(/) Tx 
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
(d) Tx 
100 Tt
1.0001 Tc
(x) Tx 
/_NewCenturySchlbk-Roman 8 7.84 -1.72 Tf
-1.86 Ts
0 Tt
0 Tc
(min) Tx 
(\r) TX 
TO
u
0 R
0 0 0 XA
0.4 w 2.5 M
187.637 246.8253 m
449.3944 246.8253 l
S
449.3944 246.8253 m
449.3944 250.5511 l
S
187.637 246.8253 m
187.637 248.6882 l
S
u
226.4946 246.8213 m
226.4946 252.41 l
S
300.8004 246.8213 m
300.8004 252.41 l
S
375.0886 246.8213 m
375.0886 252.41 l
S
196.9165 246.8213 m
196.9165 249.6156 l
S
204.1221 246.8213 m
204.1221 249.6156 l
S
210.0096 246.8213 m
210.0096 249.6156 l
S
214.9833 246.8213 m
214.9833 249.6156 l
S
219.2891 246.8213 m
219.2891 249.6156 l
S
223.0852 246.8213 m
223.0852 249.6156 l
S
248.8497 246.8213 m
248.8497 249.6156 l
S
261.9428 246.8213 m
261.9428 249.6156 l
S
271.2223 246.8213 m
271.2223 249.6156 l
S
278.4279 246.8213 m
278.4279 249.6156 l
S
284.3154 246.8213 m
284.3154 249.6156 l
S
289.2891 246.8213 m
289.2891 249.6156 l
S
293.5949 246.8213 m
293.5949 249.6156 l
S
297.391 246.8213 m
297.391 249.6156 l
S
323.1555 246.8213 m
323.1555 249.6156 l
S
336.2486 246.8213 m
336.2486 249.6156 l
S
345.5281 246.8213 m
345.5281 249.6156 l
S
352.7337 246.8213 m
352.7337 249.6156 l
S
358.6036 246.8213 m
358.6036 249.6156 l
S
363.5772 246.8213 m
363.5772 249.6156 l
S
367.9007 246.8213 m
367.9007 249.6156 l
S
371.6968 246.8213 m
371.6968 249.6156 l
S
397.4613 246.8213 m
397.4613 249.6156 l
S
410.5368 246.8213 m
410.5368 249.6156 l
S
419.8338 246.8213 m
419.8338 249.6156 l
S
427.0219 246.8213 m
427.0219 249.6156 l
S
432.9094 246.8213 m
432.9094 249.6156 l
S
437.883 246.8213 m
437.883 249.6156 l
S
442.1888 246.8213 m
442.1888 249.6156 l
S
446.0025 246.8213 m
446.0025 249.6156 l
S
U
187.637 432.9061 m
449.3944 432.9061 l
S
226.4946 432.88 m
226.4946 427.2913 l
S
300.8004 432.88 m
300.8004 427.2913 l
S
375.0886 432.88 m
375.0886 427.2913 l
S
449.3944 432.9061 m
449.3944 429.1803 l
S
187.637 432.9061 m
187.637 431.0432 l
S
196.9165 432.88 m
196.9165 430.0856 l
S
204.1221 432.88 m
204.1221 430.0856 l
S
210.0096 432.88 m
210.0096 430.0856 l
S
214.9833 432.88 m
214.9833 430.0856 l
S
219.2891 432.88 m
219.2891 430.0856 l
S
223.0852 432.88 m
223.0852 430.0856 l
S
248.8497 432.88 m
248.8497 430.0856 l
S
261.9428 432.88 m
261.9428 430.0856 l
S
271.2223 432.88 m
271.2223 430.0856 l
S
278.4279 432.88 m
278.4279 430.0856 l
S
284.3154 432.88 m
284.3154 430.0856 l
S
289.2891 432.88 m
289.2891 430.0856 l
S
293.5949 432.88 m
293.5949 430.0856 l
S
297.391 432.88 m
297.391 430.0856 l
S
323.1555 432.88 m
323.1555 430.0856 l
S
336.2486 432.88 m
336.2486 430.0856 l
S
345.5281 432.88 m
345.5281 430.0856 l
S
352.7337 432.88 m
352.7337 430.0856 l
S
358.6036 432.88 m
358.6036 430.0856 l
S
363.5772 432.88 m
363.5772 430.0856 l
S
367.9007 432.88 m
367.9007 430.0856 l
S
371.6968 432.88 m
371.6968 430.0856 l
S
397.4613 432.88 m
397.4613 430.0856 l
S
410.5368 432.88 m
410.5368 430.0856 l
S
419.8338 432.88 m
419.8338 430.0856 l
S
427.0219 432.88 m
427.0219 430.0856 l
S
432.9094 432.88 m
432.9094 430.0856 l
S
437.883 432.88 m
437.883 430.0856 l
S
442.1888 432.88 m
442.1888 430.0856 l
S
446.0025 432.88 m
446.0025 430.0856 l
S
187.637 246.8253 m
187.637 432.9061 l
S
187.637 246.8253 m
192.8743 246.8253 l
S
187.637 265.4368 m
192.8743 265.4368 l
S
187.637 284.0484 m
192.8743 284.0484 l
S
187.637 302.6425 m
192.8743 302.6425 l
S
187.637 321.2541 m
192.8743 321.2541 l
S
187.637 339.8656 m
192.8743 339.8656 l
S
187.637 358.4773 m
192.8743 358.4773 l
S
187.637 377.0888 m
192.8743 377.0888 l
S
187.637 395.6829 m
192.8743 395.6829 l
S
187.637 414.2944 m
192.8743 414.2944 l
S
187.637 432.9061 m
192.8743 432.9061 l
S
187.637 250.5511 m
190.2556 250.5511 l
S
187.637 254.2769 m
190.2556 254.2769 l
S
187.637 257.9852 m
190.2556 257.9852 l
S
187.637 261.711 m
190.2556 261.711 l
S
187.637 269.1626 m
190.2556 269.1626 l
S
187.637 272.8709 m
190.2556 272.8709 l
S
187.637 276.5967 m
190.2556 276.5967 l
S
187.637 280.3226 m
190.2556 280.3226 l
S
187.637 287.7567 m
190.2556 287.7567 l
S
187.637 291.4825 m
190.2556 291.4825 l
S
187.637 295.2084 m
190.2556 295.2084 l
S
187.637 298.9342 m
190.2556 298.9342 l
S
187.637 306.3683 m
190.2556 306.3683 l
S
187.637 310.0941 m
190.2556 310.0941 l
S
187.637 313.8199 m
190.2556 313.8199 l
S
187.637 317.5457 m
190.2556 317.5457 l
S
187.637 324.9799 m
190.2556 324.9799 l
S
187.637 328.7057 m
190.2556 328.7057 l
S
187.637 332.4315 m
190.2556 332.4315 l
S
187.637 336.1398 m
190.2556 336.1398 l
S
187.637 343.5915 m
190.2556 343.5915 l
S
187.637 347.3173 m
190.2556 347.3173 l
S
187.637 351.0256 m
190.2556 351.0256 l
S
187.637 354.7514 m
190.2556 354.7514 l
S
187.637 362.2031 m
190.2556 362.2031 l
S
187.637 365.9113 m
190.2556 365.9113 l
S
187.637 369.6372 m
190.2556 369.6372 l
S
187.637 373.363 m
190.2556 373.363 l
S
187.637 380.7971 m
190.2556 380.7971 l
S
187.637 384.5229 m
190.2556 384.5229 l
S
187.637 388.2487 m
190.2556 388.2487 l
S
187.637 391.9746 m
190.2556 391.9746 l
S
187.637 399.4087 m
190.2556 399.4087 l
S
187.637 403.1345 m
190.2556 403.1345 l
S
187.637 406.8604 m
190.2556 406.8604 l
S
187.637 410.5862 m
190.2556 410.5862 l
S
187.637 418.0203 m
190.2556 418.0203 l
S
187.637 421.7462 m
190.2556 421.7462 l
S
187.637 425.472 m
190.2556 425.472 l
S
187.637 429.1802 m
190.2556 429.1802 l
S
449.3944 246.8253 m
449.3944 432.9061 l
S
449.3944 246.8253 m
444.1572 246.8253 l
S
449.3944 265.4368 m
444.1572 265.4368 l
S
449.3944 284.0484 m
444.1572 284.0484 l
S
449.3944 302.6425 m
444.1572 302.6425 l
S
449.3944 321.2541 m
444.1572 321.2541 l
S
449.3944 339.8656 m
444.1572 339.8656 l
S
449.3944 358.4773 m
444.1572 358.4773 l
S
449.3944 377.0888 m
444.1572 377.0888 l
S
449.3944 395.6829 m
444.1572 395.6829 l
S
449.3944 414.2944 m
444.1572 414.2944 l
S
449.3944 432.9061 m
444.1572 432.9061 l
S
449.3944 250.5511 m
446.7759 250.5511 l
S
449.3944 254.2769 m
446.7759 254.2769 l
S
449.3944 257.9852 m
446.7759 257.9852 l
S
449.3944 261.711 m
446.7759 261.711 l
S
449.3944 269.1626 m
446.7759 269.1626 l
S
449.3944 272.8709 m
446.7759 272.8709 l
S
449.3944 276.5967 m
446.7759 276.5967 l
S
449.3944 280.3226 m
446.7759 280.3226 l
S
449.3944 287.7567 m
446.7759 287.7567 l
S
449.3944 291.4825 m
446.7759 291.4825 l
S
449.3944 295.2084 m
446.7759 295.2084 l
S
449.3944 298.9342 m
446.7759 298.9342 l
S
449.3944 306.3683 m
446.7759 306.3683 l
S
449.3944 310.0941 m
446.7759 310.0941 l
S
449.3944 313.8199 m
446.7759 313.8199 l
S
449.3944 317.5457 m
446.7759 317.5457 l
S
449.3944 324.9799 m
446.7759 324.9799 l
S
449.3944 328.7057 m
446.7759 328.7057 l
S
449.3944 332.4315 m
446.7759 332.4315 l
S
449.3944 336.1398 m
446.7759 336.1398 l
S
449.3944 343.5915 m
446.7759 343.5915 l
S
449.3944 347.3173 m
446.7759 347.3173 l
S
449.3944 351.0256 m
446.7759 351.0256 l
S
449.3944 354.7514 m
446.7759 354.7514 l
S
449.3944 362.2031 m
446.7759 362.2031 l
S
449.3944 365.9113 m
446.7759 365.9113 l
S
449.3944 369.6372 m
446.7759 369.6372 l
S
449.3944 373.363 m
446.7759 373.363 l
S
449.3944 380.7971 m
446.7759 380.7971 l
S
449.3944 384.5229 m
446.7759 384.5229 l
S
449.3944 388.2487 m
446.7759 388.2487 l
S
449.3944 391.9746 m
446.7759 391.9746 l
S
449.3944 399.4087 m
446.7759 399.4087 l
S
449.3944 403.1345 m
446.7759 403.1345 l
S
449.3944 406.8604 m
446.7759 406.8604 l
S
449.3944 410.5862 m
446.7759 410.5862 l
S
449.3944 418.0203 m
446.7759 418.0203 l
S
449.3944 421.7462 m
446.7759 421.7462 l
S
449.3944 425.472 m
446.7759 425.472 l
S
449.3944 429.1802 m
446.7759 429.1802 l
S
U
u
[0.4 3 ]0 d
187.637 321.2541 m
S
449.3944 321.2541 m
S
226.4946 246.8253 m
226.4946 432.9061 l
S
300.8004 246.8253 m
300.8004 432.9061 l
S
375.0886 246.8253 m
375.0886 432.9061 l
S
187.637 265.4368 m
449.3944 265.4368 l
S
187.637 284.0484 m
449.3944 284.0484 l
S
187.637 302.6425 m
449.3944 302.6425 l
S
187.637 339.8656 m
449.3944 339.8656 l
S
187.637 358.4773 m
449.3944 358.4773 l
S
187.637 377.0888 m
449.3944 377.0888 l
S
187.637 395.6829 m
449.3944 395.6829 l
S
187.637 414.2944 m
449.3944 414.2944 l
S
187.637 321.2541 m
449.3944 321.2541 l
S
U
1 Ap
0 O
1 g
800 Ar
1 w 4 M []0 d
444.1572 303.2625 m
444.1572 355.999 L
352.7011 356.9782 L
352.7011 304.2416 L
444.1572 303.2625 L
f
0 Ap
0 R
0.898 0 0 XA
300 Ar
0.6 w 2.5 M [0.5 1.4 ]0 d
227.4964 432.9061 m
233.9288 374.5229 l
241.3453 333.0467 l
248.7794 308.3542 l
256.2135 294.3999 l
263.63 287.2822 l
271.0641 284.5229 l
278.4982 284.3648 l
285.9323 285.7707 l
293.3664 287.8797 l
300.8004 290.2699 l
308.2169 292.6073 l
315.6511 294.7514 l
323.0852 296.6846 l
330.5193 298.3894 l
337.9358 299.8305 l
345.3698 301.0959 l
352.804 302.1679 l
360.2381 303.0642 l
367.6722 303.7848 l
375.0887 304.3823 l
382.5227 304.8041 l
389.9569 305.1556 l
397.391 305.3665 l
404.8075 305.5423 l
412.2416 305.6301 l
419.6756 305.718 l
427.1098 305.7532 l
434.5439 305.7883 l
441.9604 305.8059 l
449.3944 305.8235 l
S
0.898 0.4392 0 XA
0.5 w [5 3 ]0 d
229.9744 432.9061 m
233.9288 394.9448 l
241.3453 351.0783 l
248.7794 324.9272 l
256.2135 310.0765 l
263.63 302.4316 l
271.0641 299.3384 l
278.4982 299.0221 l
285.9323 300.3577 l
293.3664 302.4492 l
300.8004 304.8393 l
308.2169 307.2119 l
315.6511 309.4087 l
323.0852 311.4298 l
330.5193 313.2048 l
337.9358 314.7163 l
345.3698 316.0871 l
352.804 317.2295 l
360.2381 318.2136 l
367.6722 319.0221 l
375.0887 319.6899 l
382.5227 320.1644 l
389.9569 320.5862 l
397.391 320.8674 l
404.8075 321.0607 l
412.2416 321.2013 l
419.6756 321.3068 l
427.1098 321.3595 l
434.5439 321.4122 l
441.9604 321.4474 l
449.3944 321.4474 l
S
0 0.4784 0.1961 XA
[5 3 2 3 ]0 d
232.0307 432.9061 m
233.9288 413.7848 l
241.3453 367.4228 l
248.7794 339.7075 l
256.2135 323.8727 l
263.63 315.595 l
271.0641 312.1328 l
278.4982 311.5704 l
285.9323 312.7479 l
293.3664 314.7339 l
300.8004 317.0889 l
308.2169 319.4439 l
315.6511 321.6583 l
323.0852 323.6618 l
330.5193 325.4544 l
337.9358 327.001 l
345.3698 328.3894 l
352.804 329.5669 l
360.2381 330.5687 l
367.6722 331.4122 l
375.0887 332.0977 l
382.5227 332.6424 l
389.9569 333.0818 l
397.391 333.3806 l
404.8075 333.6091 l
412.2416 333.7672 l
419.6756 333.8727 l
427.1098 333.9606 l
434.5439 333.9957 l
441.9604 334.0308 l
449.3944 334.066 l
S
0.0392 0.2588 0.6039 XA
[]0 d
233.8409 432.9061 m
233.9288 432.0097 l
241.3453 383.0994 l
248.7794 353.7848 l
256.2135 336.9307 l
263.63 328.0027 l
271.0641 324.1187 l
278.4982 323.2576 l
285.9323 324.2769 l
293.3664 326.1223 l
300.8004 328.3894 l
308.2169 330.7092 l
315.6511 332.8709 l
323.0852 334.8217 l
330.5193 336.6143 l
337.9358 338.1434 l
345.3698 339.5317 l
352.804 340.6565 l
360.2381 341.711 l
367.6722 342.5546 l
375.0887 343.24 l
382.5227 343.7496 l
389.9569 344.2242 l
397.391 344.5581 l
404.8075 344.7865 l
412.2416 344.9623 l
419.6756 345.0854 l
427.1098 345.1732 l
434.5439 345.2435 l
441.9604 345.2787 l
449.3944 345.2962 l
S
1 Ap
800 Ar
1 w 4 M
455.5188 223.28 m
455.5188 435.3584 L
151.3712 435.3584 L
151.3712 223.28 L
455.5188 223.28 L
n
0 O
0 0 0 0 k
438.6667 327.3333 m
438.6667 363.3334 L
430.3333 363.3334 L
430.3333 327.3333 L
438.6667 327.3333 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(Layer 2) Ln
0 A
0 To
0.9981 0.0608 -0.0608 0.9981 357.7734 305.2175 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
%_ 0 50 XQ
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
100 100 Tz
-10 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
22.3198 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
-0.0899 Tc
0 Tw
(80 ) Tx 
/_Symbol 9 9 -2.637 Tf
(m) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
(m \(18.7 mg/cm) Tx 
300 Ar
/_NewCenturySchlbk-Roman 8 7.84 -1.72 Tf
4 Ts
0 Tt
0 Tc
(2) Tx 
800 Ar
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
-10 Tt
-0.0899 Tc
(\)) Tx 
(\r) TX 
TO
0 To
0.9981 0.0608 -0.0608 0.9981 352.2022 319.7366 0 Tp
0 Tv
TP
0 Tr
(160 ) Tx 
/_Symbol 9 9 -2.637 Tf
(m) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
(m \(37.4 mg/cm) Tx 
300 Ar
/_NewCenturySchlbk-Roman 8 7.84 -1.72 Tf
4 Ts
0 Tt
0 Tc
(2) Tx 
800 Ar
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
-10 Tt
-0.0899 Tc
(\)) Tx 
(\r) TX 
TO
0 To
0.9981 0.0608 -0.0608 0.9981 336.6239 343.4412 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Italic 9 8.712 -2.043 Tf
(x) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
( = 640 ) Tx 
/_Symbol 9 9 -2.637 Tf
(m) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
(m \(149 mg/cm) Tx 
300 Ar
/_NewCenturySchlbk-Roman 8 7.84 -1.72 Tf
4 Ts
0 Tt
0 Tc
(2) Tx 
800 Ar
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
-10 Tt
-0.0899 Tc
(\)\r) Tx 
0 -11 Td
(\r) Tx 
TO
0 To
0.9981 0.0608 -0.0608 0.9981 351.7441 333.0658 0 Tp
0 Tv
TP
0 Tr
(320 ) Tx 
/_Symbol 9 9 -2.637 Tf
(m) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
(m \(74.7 mg/cm) Tx 
300 Ar
/_NewCenturySchlbk-Roman 8 7.84 -1.72 Tf
4 Ts
0 Tt
0 Tc
(2) Tx 
800 Ar
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
-10 Tt
-0.0899 Tc
(\)) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
