%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%AI8_CreatorVersion: 10.0%%For: (Don Groom) (Lawrence Berkeley Lab)%%Title: (edriftvel_09_deg.eps)%%CreationDate: 9/28/09 9:21 AM%%BoundingBox: 122 158 453 478%%HiResBoundingBox: 122.811 158.6621 452.1025 477.9756%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Symbol%%+ Times-Roman%%+ Times-Italic%%DocumentNeededFonts: Symbol%%+ Times-Roman%%+ Times-Italic%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 1%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30 31 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: 106.8374 391.0762 4 1860 1152 26 0 1 53 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:30 31%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 124 8%%BeginData: 9566 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFF7DFD6FA87DFD09FF7D52A8FFFFFFA8FD4EFFA8FD20FFA8FD%09FF5252A8FFFFFF7DA87DA8FD4AFF7D7D7DFFFFFF7DFF52A8FFA87DFFA8%7D7DA8FD10FFA8FD09FF7D52A8FFFFFFA8FD4CFF7DA87D7DFFFF27527D7D%52FF2752FFFF2752A8FD10FFA8FD0FFFA8FD4BFF7DFD06FF52277D7DFFFF%5227FFFFF852FD11FFA8FD0FFF7D7DFD49FF7DFD07FF7D52FF52FF7D2752%FFA8F82752FD10FFA8FD0FFF7DFD49FF7DFD25FF7DFD0FFFA8FD47FFA87D%FD26FFA8FD0FFF7DA8FD45FFA8A8FD27FFA8FD0FFFA8FD45FFA8A8FD28FF%A8FD0FFF7DA8A8FD42FFA8A8FD29FFA8FD0FFFA8FD43FFA8FD2BFFA8FD0F%FFA8FD42FFA8FD2CFFA8FD0FFF7D7DFD3FFFA87DFD2DFFA8FD0FFF7DFD3F%FFA8A8FD2EFF7DFD09FF7D52A8FFFFFFA8FD3EFFA8A8FD2FFFA8FD0AFF7D%FD04FF7DA8A8A8FD37FF7DA8FFA8A8FD30FFA8FD0AFF52FD04FFA8FD16FF%7D7DFFFF7DFD08FFA87DFFFF7DA8FF7DA8FFFFFFFD057DA8FD05FFFD04A8%FD31FFA8FD0FFF7DA8A8FD14FF7D7DFFFF527DFF7DFD05FF5252FF7D52FF%277D52FFFF52A87D27FF27FD07FFA8FD33FFA8FD0FFFA8FD16FF527DFFA8%2727A827A87D27A8FF2727FF7D277D7D52277DFF27FFFF275227FD06FF7D%FD34FFA8FD0FFFA8FD16FF52527D27FF277D27FFFF7DFFFF52527D7D52A8%FF7D277DFF7D527D277D27FF52FFFFFF7DFD35FFA8FD0FFF7D7DFD33FF7D%52FFFF7DFD36FFA8FD0FFF7DFD34FFA852A87DFD37FF7DFD0FFFA8FD36FF%7DFD38FFA8FD0FFF7DA8FD34FFA8FD39FFA8FD0FFFA8FD33FFA8A8FD3AFF%A8FD0FFF7DA8A8FD30FFA8A8FD3BFFA8FD0FFFA8FD31FFA8A8FD3CFFA8FD%09FF7D7DA8FFFFFFA8FD30FFA8A8FD3DFFA8FD09FF5252A8FFFFFF7D7DA8%A8FD2CFFA8A8FD3EFFA8FD09FF7D7D7DFFFFFF7DFD2EFFA8A8FD3FFF7DFD%0FFFA8FD2DFFA8A8FD40FFA8FD0FFF7DA8FD2BFFA8FD42FFA8FD0FFFA8FD%2BFF7DFD43FFA8FD0FFFA8FD2AFFA8FD44FFA8FD0FFF7D7DFD28FF7DA8FD%44FFA8FD0FFFA8FD28FFA8FD46FFA8FD0FFF7D7DFD26FF7DFD47FFA8FD0F%FF7DFD26FF7DA8FD47FF7DFD0FFFA8FD24FFA87DF8FD3BFFFD04527D7D52%7DA85227A8FFA8FFFF7D27527DFD09FF7DA8FD23FFA8FD3AFFA8FFFF5227%FF7DFF7DFF7DFF27A8FFFFA8FFFF7DFFFFA8A8FD08FFA8FD22FFA8A8FD34%FFA8FFFFFF7DFF7D7DFFFF5252FF7DA87D527DA852527DFFA8FFFFFF5252%52FFFFFF5252A8FFFFFFA8FD22FF7DFD30FFA8FD04FFA852A8A8FFFFA87D%FD0FFFA8FFFFFF27277DFD04FFA87DFFFFFF7D7DA8A8FD1EFF7DFD17FF7D%7DFFFFA8FD14FFA87DA87DFFA8A87DCACAC3C2BCFFFFFF5252527D7D7D52%7DA85227A8FFA8FFFF522727FD04FF7D7DA8FFFFFFA8FD20FFA8FD18FF27%FFFFFFF8FFFF7DFD0CFFA8FFFFA8A8A852FFCFCFC9C99AC2C2C299C2A8FF%FF52527D527D7D527DFF52A8FFFFA8FFFF2752F87DFD09FF7D7DFD1EFFA8%FD19FF27FFFF5252527D27FD05FFA8FD05FF7D7D7DFFFFFFA1A1FD04C299%9999C299C26F7DFFFF527D7D7DA87D527DA852527DFFA8FFA8A8FFFFA8FD%09FF7DFD1EFFA8A8FD19FF277D5252FF27277DFD06FF7DFFA8A8FFFFA8CA%C3C3C2C2BBC299C2997675C2C2C9C9CFFD10FF7DFFFF7D7D52A8FD09FFA8%FD1DFFA8A8FD21FFA8A8FFFFFFA8A87DA8FFC9C3FD04C299C2754BBCC2C2%C3A1CACAFD07FF52527D52FF7D527DA85227A8FFA8FD0FFF7DA8FD1BFFA8%FD24FF52FF7DFFFFCAC3C9C2C299A06FFD05C2A0CFCAFD08FFA87DFFFF7D%27FF52FF7D7D52FF27A8FFFFA8FFFFFF52277DFD09FFA8FD1BFFA8A8FD1D%FFA8A8FFFF7DA8A8A8CAC9C2C2A09999C299C29975C2C9C9FD07FFA8FD04%7DA87D52FFFF527D7D7DA8A852FFA852527DFFA8FFFFFF527D52FD09FFA8%FD1AFFA8A8FD1EFFA87DA8A8FFCAC9FD04C299994BC2C2C9C9CFCFFD05FF%A8A87DA87D7D52FD05FFA8FD0FFFA8FFFFFF52527DFD09FF7D7DFD18FFA8%A8FD19FFA8A8FFFF7DFF7DA1C3C2BCC2996F99FD04C2C9C9FD07FF7D7D52%52A8FFFFFFA8A8FD15FFA8FFFFFF275252FD09FFA8FD19FFA8FD1BFF52A8%FFCFC3C275C299C299C275C2C3CACAFD05FFA87D27A8A8FFFFFFA8FD1BFF%A8FFFFFF522752FD09FF7D7DFD17FFA8FD19FFA8A8A1A1C3C2C2C2754B99%C2C2C3C3CACAFFFFFFA8A87D7D7DA8A8A8FD21FFA8FFFFFF527D7DFD09FF%7DFD17FF7DFD17FF52FFA8CFC3C2A0C299C2C2C26FC9C9FFFFFFA8FFA8A8%7D7D27FD27FF7DFFFFFF52527DFD04FF52FD04FFA8FD16FF7DFD11FFA8A8%FFFFA87DA852C3C2C2C2756F99C2BCC9A1A8FD04FF52277DA8FD2BFFA8FF%FFFF275252FFFFFF7D7DFD04FF7DA8A8A8FD12FF7DFD13FF7DA87DFFC9C3%99C299C2C2C299C9CAFFFFFFA8FF7D7DA8FFA8FD2DFFA8FFFF7DFFFFA8A8%FFFF7D27A8FFFFFFA8FD14FF7DFD13FFA852CAC9C2C2996F99C2C2C9C9FF%FFFFA8A87D27A8FD32FFA8FFFF7D52527DFD09FFA8FD13FFA8FD12FFA8A1%C99AC299C299C275C9CAFFFFFF52A87DA8FFFFA8FD33FFA8FD0FFF7D7DFD%11FFA8FD0FFFA87D7DA7C2C2994B99C2C2C2C3FFFFFFA8A87D7DFD39FFA8%FD0FFFA8FD12FFA8FD0FFF7D52C9C2C2999A4BC2C9FFFFFF527D7DFD3DFF%A8FD0FFF7D7DFD10FF7DFD0AFFA8A8FFFF7DCA9A75999999C2C2CACAFFA8%7D5252FD3FFFA8FFFFFF7DFD0BFF7DFD10FFA8FFA8FD0AFF527DA7C9C299%4AC2C2C9CAFFA8A87DA8FD42FF7DFFFFFF7DF82752FD08FFA8FD0FFFA8A8%FF27FD08FFA8524BA0C299C2BCC2C3FFFFA87D27FD45FFA8FF7DA8FF7D27%7DFD08FF7DA8FD0EFFA8FD09FFA87D7DC3759A99C2C2CAA8FF7D7DA8FFA8%FD45FFA8FFFF7D527DFD0AFFA8FD0EFF7DFD08FFA87D76769A6F4B99C2C9%FFA8277DFD4AFFA8FF7D5227277DFD09FFA8FD0DFFA8FD09FF527C9AC275%9A75CFFFA87DA87DFD2CFF7D7DFF7DA852FD19FFA8FFA87DFD0CFF7D7DFD%0CFFA8FD07FFA85175997575C3A7A87D7DA8FD2FFF527DFF7D527DFF7DFD%17FFA8FD09FF7D52FD04FFA8FD0CFFA8FD07FF52A1C24A75C2CFFFA827FD%32FF7D7DFFFF27A87D277DFD16FFA8FD09FFA827FD04FF7D7DA8A8FD09FF%A8FD05FF7DA89A996E4BC9FF7D52A87DFD32FFFD0452A8277D527DFD16FF%A8FD09FF7D7DFD04FF7DFD0BFF7DFD05FF7D7C999999C3A8A852A8FD46FF%52A8527D52FF7D7D7DFF27527DFF7DFD0FFFA8FD0AFFA8A8FD04FF4B526F%9975CAA8277DFD37FF7DA8FD0FFF7D527D7D527D7DFF7DFF5252FFFFA8FD%0FFF7DA8FD09FFA8FD04FF7DC36F75C3FF527D27FD23FF7DFD05FFFD0FA8%7D52FD07A87DA8A8A8FD04FF527D7DA87DA87D7D7DFF277D52FFA8FD0FFF%A8FD08FF527DFF7DFFFF4BC24A4BCA7D52FFFFA8FD08FF277DFD09FFA827%A87DA87DA87DA87DA87DA87DA87D277DA87DA87DFD1BFFA852FD11FFA8FD%0FFFA8FD09FF7DFFA8A87C9A99A0A87D527DFFA8FD06FF7DA87DA87DA8A8%A87DA8A8A87DA8A87DFD30FF7DFD11FFA8FD0FFF7D7DFD07FF7DFFFF5227%994AC97D52A8A87D7D277D7DA87DA87DFD52FFA8FD0FFFA8FD08FFA8FFFF%76756F7D522727A8A8FD5BFFA8FD0FFF7D7DFD06FFA8FFFF4B4B6F7627FF%FFA8FD5DFFA8FD0FFF7DFD07FFF87D7C6F20CA7DA8FD60FF7DFD0FFFA8FD%06FF5252F86F752727FD62FFA8FD0FFF7DA8FD04FF7D7D76A0997D27FD63%FFA8FD0FFFA8FFFFFFA82727527575A85252FD63FFA8FD09FF7D7DFD04FF%A8FFA8A8525252A199A17DFF52FD63FFA8FD0AFF52FD04FF7D7D52F852A8%5275A152A8FFA8FD63FFA8FD09FF527DA8FFFFFFA8FFFF7D525226C37DFD%38FF52527DFFFF52FD0FFF7DFFFFFF52FFFFA87DA87D7D527D52A87D7DFD%08FFA8FD0FFF7D7D7D27FF519952A8FD2CFF52FD0BFF5252527D527D527D%27FD04527D27525252FF522752FF7D277DFFFF52FFFF7D5252FF7D527D7D%7DFD07FFA8FD0FFF7DFF27A8A8757DFD2DFF7D52A8FD0AFFFD05527D7D52%5252A8FD05527D52FF527D52FF525252FFFF7DFFA8527D7DFF52FD047DFD%07FF7DFD0FFFA8A87DFFA14B7DFD56FFA8A8FD08FF7DFD08FFA8FD0FFF7D%277DA8757DA8FD69FFA8FD0FFFA8F8A87D27A8FD3AFFA8275252A8FF7DA8%7DFD06FFA8FFFF7DFFFF7D7D527D527D5252527D52FD10FFA8FD0FFF7D7D%FFFF52FD28FFA8A8FFA8FFFFA8A8FFA8FFFFFFA8FFA8A8FFFFFF7D277DA8%5252FF527D527D5252527D7D52527DA87DFFA8A87D527D7D7DFF7DFD10FF%A8FD0FFF7D27FF7DF8FD28FF7D7DFF7D7DFF527DFF5252FF527DFF7D52FF%FFFF527D52A85252A8FD04527D277D5252275252A852A8527DFD05527D52%FD10FFA8FD0FFFA8A8FFFFA8FD51FF7DFD08FF7DFD10FFA8FD0FFF5227FF%A8A8FD6BFFA8FD0FFF7D7DFFA8FD6CFF7DFD09FFA852FD04FF7DA8FF7DFD%31FFA8FD0AFFA827FF277DA87D52FD06FFA8FFFFFF52FFFFFF7DA85252FD%067DA8FD0FFFA8FD0AFF7DFD04FFF87DA87DFD30FFA8F8A8FD0AFF52A852%52FF7D7D275252A85252F8FF7D277DFFFF7DFFFF7D7D52277D7D527D7DFD%0FFFA8FD0AFF27FD04FF277DFFF8FD31FF7DFD0AFFA827525227A8525252%7D52FF7D527D7D7D2752A8FF7DFFA852FD087DFD0FFFA8FD0FFF277DA87D%FD52FF7DFD08FFA8A8FD0FFFA8FD0FFF2752A8A8FD6CFFA8FD0FFF52FFA8%FD6DFFA8FD0FFF277DA8FD6DFFA8FD0FFF7DFFA8FD6DFF7DFD0FFFA8FFA8%FD6DFFA8FD0FFF7DA87DFD6DFFA8FD0FFFA8FFA8FD6DFFA8FD0FFF7DFF7D%FD1BFFA8FD4BFFA8FD05FFA8FD0FFF5252FD0DFF7DFD0EFFA8FD0EFF7DFD%0EFFA8FD0FFFA8FD0EFF7DFD0EFFA8FD05FFA8FD0FFF7DA8FFFFA8FD0AFF%A8FD0AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0EFFA8FD%06FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD09FF7D52A8FFFFFF7D7DFFFF%A8FFFF7DFFFFFF7DFFFFFF7DFFFFFF7DFFFFFF7DFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFF7DFFFFFF7DFFFFFF7DFFFFFF7DFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFF7DFFFFFF7DFFFFFF7DFFFFFF7DFFFF%FF7DFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD09FF7DFF52FFFFFFFD05%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8%A8A87DA87DA87DA87DA87DA87DA87DA87DA87DFD09FF7D52A8FDFCFFFD06%FF7D7D7DFD0CFFA852A8FD0DFFA852FD0DFF527DFD0DFF5252FD0CFFA852%7D52A8FD0BFF527D7D7DFD0BFF52FF7D52FD12FF7DFF7DFD0DFF7DA8FD0D%FF7D7DFD0CFF7D7D52FD0DFF5252FD0DFF7D7DFF52FD0BFF52FF7DFD0CFF%7DA87D7DFD12FF7D7D7DFD0CFF7D52A8FD0CFFA87D27FD0CFFA8527DFD0D%FF5252FD0CFFA8527D52A8FD0BFF5252527DFD0BFF27A85252FDFCFFFD47%FF525252FFFFFFA8FF52FF277D7D52FF7DFD06FFA8FD69FF27A8A8FFFFA8%52FF2752A8527DA87DFF7D5252527D7DFF52FD68FF2752FFFFFF7D7DFFF8%A8FF277DFFFD047D277D7D52FF52FD67FF7D275252FFFFA87DA827F8FF52%7DFF7D7D275227525227FF52FD6EFF7DFD0FFF7DA8FDA8FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(6/10/1996) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 68 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/havefont{	systemdict /languagelevel known		{		/Font resourcestatus dup			{ exch pop exch pop }		if		}		{		systemdict /FontDirectory get 1 index known			{ pop true }			{			systemdict /fileposition known				{				dup length 6 add exch				Ss 6 250 getinterval				cvs pop				Ss exch 0 exch getinterval				status					{ pop pop pop pop true }					{ false }				ifelse				}				{				pop false				}			ifelse			}		ifelse		}	ifelse} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def/subststring {	exch 2 index exch search	{		exch pop		exch dup () eq		{			pop exch concatstring		}		{			3 -1 roll			exch concatstring			concatstring		} ifelse		exch pop true	}	{		pop pop false	} ifelse} def/concatstring {	1 index length 1 index length	1 index add	string	dup 0 5 index putinterval	dup 2 index 4 index putinterval	4 1 roll pop pop pop} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	2 index havefont	{		3 index		255 string		cvs				dup		(_Symbol_)		eq		{			pop			2 index			findfont					}		{			1 index 0 eq			{				dup length 1 sub				1 exch				getinterval								cvn				findfont			}			{				pop 2 index findfont			} ifelse		} ifelse	}	{		dup 1 eq		{			2 index 64 string cvs			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring			{				exch pop dup havefont				{					findfont false				}				{					pop true				} ifelse			}			{				pop	dup				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring				{					exch pop dup havefont					{						findfont false					}					{						pop true					} ifelse				}				{					pop pop true				} ifelse			} ifelse			{				1 index 1 eq				{					/Ryumin-Light-Ext-RKSJ-V havefont					{/Ryumin-Light-Ext-RKSJ-V}					{/Courier}					ifelse				}				{					/Ryumin-Light-83pv-RKSJ-H havefont					{/Ryumin-Light-83pv-RKSJ-H}					{/Courier}					ifelse				} ifelse				findfont				[1 0 0.5 1 0 0] makefont			} if		}		{			/Courier findfont		} ifelse	} ifelse	_wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 10 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontScript exch def	/FontDirection exch def	/FontRequest exch def	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{W B} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{W F } def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{W S} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat	_shift aload pop _lineorientation 1 eq { exch } if translate	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	1 index type /nametype eq	{		dup 0.75 mul 1 index 0.25 mul neg	} if	/_fontDescent exch ddef	/_fontAscent exch ddef	/_fontSize exch ddef	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef	/_fontHeight _fontSize ddef	findfont _fontSize scalefont setfont} def/Tl{	pop neg 0 exch	_leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	0 exch	_shift astore pop	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	count 1 eq { 100 } if	100 div exch 100 div exch	_scale astore pop	iTm} def/TA{	pop} def/Tq{	pop} def/Tg{	pop} def/TG{	pop} def/Tv{	/_lineorientation exch ddef} def/TV{	/_charorientation exch ddef} def/Ty{	dup /_yokoorientation exch ddef 1 sub neg Tv} def/TY{	pop} def/T~{	Tx} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	_fontSize mul 1000 div	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse	rmoveto	pop} def/TK{	2 npop} def/T*{	_leading aload pop	_lineorientation 0 ne { exch } if	Td} def/T*-{	_leading aload pop	_lineorientation 0 ne { exch } if	exch neg exch neg	Td} def/T-{	_ax neg 0 rmoveto	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ findfont _fontSize scalefont setfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%/X^{	currentfont 5 1 roll	dup havefont		{		findfont _fontSize scalefont setfont		}		{		pop		exch		} ifelse	2 index 0 eq	{		Tx	}	{		Tj	} ifelse	pop	pop	setfont} def/T^	/X^	load def%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 50 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 40 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIDataProc null def	/XIVersion 6 def	/XIColorSpace /DeviceGray def	/XIColorValues 0 defendcurrentdict /_colorimage known not {	/colorimage where {		/colorimage get /_colorimage exch def	}{		/_colorimage null def	} ifelse} if/_image systemdict /image get def/_currenttransfer systemdict /currenttransfer get def/FourEqual {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual { 				/plateindex 0 def			}{				0 1 0 0 FourEqual { 					/plateindex 1 def				}{					0 0 1 0 FourEqual {						/plateindex 2 def					}{						0 0 0 1 FourEqual { 							/plateindex 3 def						}{							0 0 0 0 FourEqual {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/clrspaceissepn {	type /arraytype eq } def/clrspacegetname {	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse} def/clrspacegetalt {	aload pop pop pop colormake} def/clrspacegetcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/clrspacemarksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				/findcmykcustomcolor where {					pop					dup length 2 sub get					0.1 0.1 0.1 0.1 5 -1 roll					findcmykcustomcolor 1 setcustomcolor					systemdict /currentgray get exec					1 ne				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/colormake {	dup clrspacegetcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/colorexpand {	dup clrspacegetname exch	dup clrspaceissepn {		clrspacegetalt		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				clrspacegetalt colortint colortocmyk			} ifelse		} ifelse	} ifelse} def/makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/WalkRGBString {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/CMYKToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/SeparateCMYKImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne {			sourcearray plateindex get exec		}{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub {				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/ColorImageCompositeEmulator {	pop true eq {		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse				load		 end		} if		image	} ifelse} def/colorimage {	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index end		dup 8 eq exch 1 eq or not {		/_colorimage load null ne {			_colorimage		}{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}{		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {			/_colorimage load null eq {				ColorImageCompositeEmulator			}{				dup 1 eq {					pop pop image				}{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						grestore					} if				} ifelse			} ifelse		}{			dup 1 eq {				pop pop				image			}{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0 {									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace clrspacegetcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] makeimagedict _image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] makeimagedict _image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} stringapply			} concatprocs _image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} stringapply			} concatprocs false _pticomps			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse		} ifelse	} ifelse} def/graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray proctintimage} def/cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK proctintimage} def/rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB proctintimage} def/tintimage {	TestPlateIndex -1 eq {		colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop graytintimage		}{			dup /DeviceRGB eq {				pop rgbtintimage			}{				pop cmyktintimage			} ifelse		} ifelse	}{		dup clrspacemarksplate {			plateindex 5 lt {				colortocmyk plateindex get 1 exch sub				exch {1 0}{0 1} ifelse () graytintimage			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage			} ifelse		}{			pop pop pop			{pop 1} 0 1 () /DeviceGray proctintimage		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace tintimage} def/XIImage {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIType 1 eq {			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH {	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEncoding 0 ne XIVersion 6 le and {			currentfile 128 string readline pop pop		} if		XICompression 0 eq {			/XIBuffer1 XIRowBytes string def			XIEncoding 0 eq {				{currentfile XIBuffer1 readhexstring pop}			}{				{currentfile XIBuffer1 readstring pop}			} ifelse		}{			/XIBuffer1 256 string def			/XIBuffer2 XIRowBytes string def			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}			/ASCIIHexDecode filter /DCTDecode filter			/XIFile exch def			{XIFile XIBuffer2 readstring pop}		} ifelse		/XIDataProc exch def				XIVersion 6 le {			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIType 1 eq {				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if		XIEnable {			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Symbol%%IncludeFont: Times-Roman%%IncludeFont: Times-Italicuserdict /_useSmoothShade true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI55J_Tsume: None%AI3_BeginEncoding: _Symbol Symbol[/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/universal/numbersign/existential/percent/ampersand/suchthat/parenleft/parenright/asteriskmath/plus/comma/minus/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/congruent/Alpha/Beta/Chi/Delta/Epsilon/Phi/Gamma/Eta/Iota/theta1/Kappa/Lambda/Mu/Nu/Omicron/Pi/Theta/Rho/Sigma/Tau/Upsilon/sigma1/Omega/Xi/Psi/Zeta/bracketleft/therefore/bracketright/perpendicular/underscore/radicalex/alpha/beta/chi/delta/epsilon/phi/gamma/eta/iota/phi1/kappa/lambda/mu/nu/omicron/pi/theta/rho/sigma/tau/upsilon/omega1/omega/xi/psi/zeta/braceleft/bar/braceright/similar/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/Euro/Upsilon1/minute/lessequal/fraction/infinity/florin/club/diamond/heart/spade/arrowboth/arrowleft/arrowup/arrowright/arrowdown/degree/plusminus/second/greaterequal/multiply/proportional/partialdiff/bullet/divide/notequal/equivalence/approxequal/ellipsis/arrowvertex/arrowhorizex/carriagereturn/aleph/Ifraktur/Rfraktur/weierstrass/circlemultiply/circleplus/emptyset/intersection/union/propersuperset/reflexsuperset/notsubset/propersubset/reflexsubset/element/notelement/angle/gradient/registerserif/copyrightserif/trademarkserif/product/radical/dotmath/logicalnot/logicaland/logicalor/arrowdblboth/arrowdblleft/arrowdblup/arrowdblright/arrowdbldown/lozenge/angleleft/registersans/copyrightsans/trademarksans/summation/parenlefttp/parenleftex/parenleftbt/bracketlefttp/bracketleftex/bracketleftbt/bracelefttp/braceleftmid/braceleftbt/braceex/.notdef/angleright/integral/integraltp/integralex/integralbt/parenrighttp/parenrightex/parenrightbt/bracketrighttp/bracketrightex/bracketrightbt/bracerighttp/bracerightmid/bracerightbt/.notdef/_Symbol/Symbol 0 0 0 TZ%AI3_EndEncoding AdobeType%AI55J_Tsume: None%AI3_BeginEncoding: _Times-Roman Times-Roman[/_Times-Roman/Times-Roman 0 0 0 TZ%AI3_EndEncoding TrueType%AI55J_Tsume: None%AI3_BeginEncoding: _Times-Italic Times-Italic[/_Times-Italic/Times-Italic 0 0 0 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Black, White Radial)(Black, White Radial) 1 2 Bd[000<0000000000000000000000000000000000000000000000010101010101010101010101010202020202020202020202030303030303040404040404040505050505050606060607070707080808090909090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CAD0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0 0 0 0 1 1 1 2 50 0 %_Bs0 0 0 1 0 0 0 2 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Copper)(Copper) 0 7 Bd[<4A49494949484848484747474646464645454544444444434343424241414141404040403F3E3F3E3E3D3E3D3C3D3C3C3B3B3B3B3A3A3A3939393938383837373737363636363534353434333333333232323131303130302F2F2F2E2E2D2D2C2D2C2B2B2A2A292929292827272626262625252423242323222221212120201F1F1E1F1E1D1D1C1C1C1C1B1B1A191919191818171817161615151515141413><9291908F8E8D8D8C8B8A89888786858484838281807F7E7E7C7C7A7B7A797877767574737373727170706E6E6D6C6B6A6B6A696867676565646363626161605F5E5D5D5B5B5B5A5A585857565554535353525150504F4E4D4C4C4C4B4A49484847464544444443424140403F3E3D3C3D3C3B3A39393837363534353433323131302F2E2D2E2D2C2B2A29292827272526252423222121201F1E1E1D1C1C1B1A><A7A6A5A3A2A19F9E9C9B9A99989695949291908F8E8D8B8A8988878685838281807F7E7D7C7B7A797877767574737271706F6E6D6D6C6B6A69686766656464636261605F5F5D5D5C5B5A595958575655545353525150504F4E4D4C4B4B4A494847474645454343424140403F3E3E3D3C3B3A3A39383837363635343333323131302F2F2E2D2C2C2B2B2A2929282727262525242323222221201F1F1E1E1D1C><2D2C2C2B2B2A2A2A2A29282827272626262625242423232222222221202020201F1F1E1E1D1D1D1C1C1B1B1A1A19191918181817171616151515151414131313121211111010100F0F0F0F0E0E0E0E0D0D0D0C0C0C0C0B0B0B0A0A0A0A090909090908080808080807070707070706060606060605050505050505040404040404040403030303030303020202020202020202020201010101010101010101><9596969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2A3A3A4A5A5A6A6A7A7A8A8A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBDBDBEBEBFBFC0C0C1C2C2C3C3C4C4C5C5C6C7C7C8C8C9C9CACACBCCCCCDCDCECECFCFD0D1D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADADBDBDCDCDDDDDEDFDFE0E0E1E1E2E2E3E4E4E5E5E6E6E7E7E8E9E9EAEAEBEBECECED><4F50515253545455565758595A5B5C5D5D5E5F60616263646566676768696A6B6C6D6E6F70707172737475767778797A7A7B7C7D7E7F80818283838485868788898A8B8C8D8D8E8F90919293949596979798999A9B9C9D9E9FA0A0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBDBEBFC0C1C2C3C4C5C6C6C7C8C9CACBCCCDCECFD0D0D1D2D3D4D5D6D7D8D9D9DADBDCDDDE><35363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3>4 %_Br<60606060606060606060606060606060605F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5E5E5E5E5E5E5E5E5E5E5E5E5E5E5D5D5D5D5D5D5D5C5C5C5C5C5C5C5C5B5B5B5B5B5A5A5A5A5A59595959585858585757575757575656565555555454545353535252525151515050504F4F4E4E4E4D4D4C4C4B4B4B4A4A><AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9A9A9A9A9A9A9A9A9A9A9A9A7A7A8A8A8A8A8A7A7A7A7A7A8A6A6A6A6A6A6A5A5A5A5A4A4A4A5A3A3A4A4A3A3A3A3A2A2A2A1A1A1A0A0A19FA0A09F9F9E9E9F9D9E9C9D9E9C9D9B9C9B9B9A9B9B9A9A999A9997989798969796979696959495949493929392><EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEFEFEFEFEFEEEEEEEEEEEDEDEEEEEEEDEDEEEEEDEDEDEDEDEDEDEDEDECECECEBEBEAEAEAE9E9E7E8E6E7E5E5E3E3E2E2E0E1DFDFDEDBDCDADAD9D7D7D5D3D4D2D0D0CFCCCDCBC9C7C7C6C3C2C0C0BFBDBBB9B8B6B7B5B3B2B0AFADABAAA8A7><5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5B5B5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A59595959595858585858565656565555555554545453535352525251515050504E4F4D4D4D4C4C4B4B4A4A4949484847474646454544434342424140403F3E3E3D3C3C3B3A3A393837373635353434333231302F2F2E2E2D><6666666666666666666666666666666666676767676767676767676868686868686869696969696A6A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6E6E6E6F6F6F707071717172727373737474757576767777787879797A7A7B7B7C7D7D7E7E7F8080818282838484858686878889898A8B8C8D8D8E8F90919292939495><2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F303030303030313131313131323232323333333334343434353535353636363737373838383939393A3A3B3B3B3C3C3D3D3D3E3E3F3F40404141414242434344454546464747484849494A4B4B4C4C4D4E4E4F><000000000000000000000000000000000101010101010101010102020202020203030303030404040404050505050606060707070808080909090A0A0B0B0B0C0C0D0D0E0E0F0F10101111121213131415151616171818191A1A1B1C1C1D1E1E1F2021212223242525262728292A2B2B2C2D2E2F303132333435>4 %_Br<4A4B4B4C4C4D4D4E4E4F4F5050515152525353545454555556575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F60><91929192939493949596959697989798999A999A9B9C9B9C9D9C9D9E9F9E9FA0A1A0A1A3A4A3A4A5A6A6A7A8A9A9AA><C4C6C8C8C9CBCDCED0D0D2D4D5D7D9D9DBDCDEDFE1E0E2E3E4E6E5E6E7E9EAEBEAECEDEEEEEEEEEEEEEEEFEFEFEFEF><2D2E2F2F30313233343536373738393A3B3C3D3E3F4041424445464748494A4B4C4D4E5051525354555658595A5B5C><9594939291908F8E8D8C8B8A898887868584838281807F7E7C7B7A797877767574737271706F6E6D6C6B6A69686766><4F4E4E4D4C4B4B4A494848474645454443424241403F3F3E3D3D3C3B3A3A393837373635343433323131302F2E2E2D><26252424232221201F1F1E1D1C1B1A1A1918171615151413121111100F0E0D0C0C0B0A090807070605040302020100>4 %_Br<000102020303040505060607080809090A0A0B0B0C0C0D0D0E0E0F0F1010101011111212131314141515151516161617171818181819191A1A1A1A1B1B1C1C1D1D1D1D1E1E1F1F201F20202121222222222323242424242425252626262627272828292829292A2A2B2B2B2B2C2C2D2D2E2E2E2E2F2F2F2F3030313031313232323233333334343434353536363736373738383838393939393A3A3A3A3B3B3B3B3C3C3D3C3D3D3E3D3E3E3E3E3F3F3F3F3F4040404041414242424243434343444444444545454546464646474747474848494949494A4A4A4A><00010101020203040405050607070708090A0A0B0B0C0D0E0E0F101111121213141515161617181918191A1B1C1C1D1E1F1F2020212223232324252627262728292A2B2A2B2C2D2E2E2E2F303130313233343534353637383839393A3B3B3C3D3D3E3E3F3F4141424243434545454647474948494A4B4B4D4C4D4E4F4F4F50515253525354555656575759595A5A5B5C5D5D5D5E5F6061606162636465646666676868696A6A6C6B6C6D6E6F706F717272747374757677777779797B7A7B7C7D7E7F7F808182838383858587868788898A8B8B8C8D8E8F8F9091><000101020203040405060607070809090A0A0B0C0C0D0D0E0F0F101011111213131414151616171819191A1A1B1C1D1D1E1E1F2021212222232425252627282829292A2B2C2C2D2E2F2F30313132333434353637373839393B3B3C3D3D3F3F4041414343444546464748494A4A4C4C4D4E4F50515252535455565758585A5A5B5C5D5E5F60616163646465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081838485868788898A8B8C8E8F90919293959697989A9B9C9E9FA0A1A3A4A5A7A8AAABACAEAFB1B2B3B5B6B8B9BBBCBEBFC1C3C4><000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101020202020202020202020202020303030303030304040404040404040505050505050506060606060607070707070708080808080809090909090A0A0A0A0A0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F0F10101010111111111212131313131414151515151616171717171818181919191A1A1B1B1C1C1C1D1D1D1D1E1E1F1F1F1F20202121212122222323242425252525262627272828292929292A2A2B2B2C2C2D2D><FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A99999898979796969595><FFFEFDFDFCFBFAF9F9F8F7F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E7E7E6E5E4E3E3E2E1E0DFDFDEDDDCDBDBDAD9D8D7D6D6D5D4D3D2D2D1D0CFCECECDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B0B0AFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8E8D8D8C8B8A898988878685858483828180807F7E7D7C7C7B7A7978787776757473737271706F6F6E6D6C6B6B6A6968676766656463626261605F5E5E5D5C5B5A5A5958575655555453525151504F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726>4 %_Br<202120201F1F1E1F1F1E1E1D1D1C1D1D1C1C1B1B1A1B1B1A1A1919181819181817171717171616151515151514141313131212121211111110100F0F0E0E0E0D0D0D0C0C0C0B0B0A090909080807070606050504030302020100><3937373736353533343332313131302F2E2E2D2C2C2B2B2A2929292827262525242323222221201F1F1E1D1C1C1C1B1A1918181817161615141413131211100F0F0E0D0C0C0B0B0A090908070706060505040403020201010100><3E3D3C3B3B3A393837373635343433323230302F2F2E2D2C2C2B2A29292827262625252423222221201F1F1E1E1B1B1A1A1918181716151514141312121111100F0F0E0E0D0C0C0B0B0A09090808070606050404030202010100><050505050505050504040404040404040303030303030302020202020202020202020202020101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000><D9D9DADADBDBDCDCDCDDDDDEDEDFDFDFE0E0E1E1E2E2E2E3E3E4E4E5E5E5E6E6E7E7E8E8E8E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFF0F0F0F1F1F2F2F3F3F3F4F4F5F5F6F6F6F7F7F8F8F9F9F9FAFAFBFBFCFCFCFDFDFEFEFFFF><B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C5C6C6C7C8C9CACACBCCCDCDCECFD0D1D1D2D3D4D5D5D6D7D8D8D9DADBDCDCDDDEDFE0E0E1E2E3E3E4E5E6E7E7E8E9EAEBEBECEDEEEEEFF0F1F2F2F3F4F5F6F6F7F8F9F9FAFBFCFDFDFEFF><A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>4 %_Br<474746464646464545454545454444434343434343424242424241414141414140404040403F3F3F3E3E3E3E3E3D3D3D3C3C3C3C3C3B3B3B3B3B3B3A3A39393939393838383737373737373636363535353535343434343433333332323232323231313030303030302F2F2F2F2F2E2E2E2D2D2D2D2D2C2C2C2B2B2B2B2B2A2A2A29292929292828282727272626262626252525242424242423232322222222222121212020><C6C4C3C2C2C1BFBEBDBCBBBBB9B8B7B6B5B3B4B3B1B0AFAEADABACABA9A8A7A6A5A5A4A3A2A19F9E9F9D9D9B9A9998989796959493929291908F8E8D8C8C8B8A898886868485848382817F7F7F7E7D7C7B7A7979787776757473737271706F6E6D6E6D6C6B6A696867676666656363626261605F5E5D5C5C5B5B59585857575655545352515151504F4E4D4C4C4B4A49484846454645444342414040403F3E3D3C3B3B3A3A39><F1F0EFEFEFEEEEEDEDECEBEBEAE9E8E7E6E5E4E3E1E0DEDDDBDAD8D6D5D3D2D0CECDCBCAC8C7C5C4C2C1BFBEBCBBBAB8B6B5B4B2B1B0AEADABAAA9A7A6A5A3A2A1A09E9D9C9A99989796949392918F8E8D8C8B8A8887868584838281807F7E7D7C7A797877767574737271706F6E6E6D6B6A6A69686766656463626160605E5D5D5C5B5A5958575656555453525150504F4E4D4C4B4A4A4948474745454443434241403F3E3E><27272626262525252525242424232323232322222221212020202020201F1F1F1E1E1D1D1D1D1D1D1C1C1B1B1B1B1B1B1A1A1A1919191919181818171717171716161616161515151515151414141414131313121212121212121211111111111010100F0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0A0A0A0A0A0A09090909090909090808080808080808070707070707070706060606060606050505><9C9C9D9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A7A8A8A9A9A9AAAAAAABABACACACADADADAEAEAEAFAFB0B0B0B1B1B1B2B2B3B3B3B4B4B4B5B5B6B6B6B7B7B7B8B8B8B9B9BABABABBBBBBBCBCBDBDBDBEBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C7C7C7C8C8C8C9C9C9CACACBCBCBCCCCCCCDCDCECECECFCFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D6D7D7D8D8D8D9D9><2B2C2D2E2E2F30313233343435363738393A3A3B3C3D3E3F4041414243444546474748494A4B4C4D4D4E4F5051525353545556575859595A5B5C5D5E5F5F60616263646566666768696A6B6C6C6D6E6F7071727273747576777878797A7B7C7D7E7E7F80818283848585868788898A8B8B8C8D8E8F9091919293949596979798999A9B9C9D9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B0B1B2B3B4B5B6B6B7B8B9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5>4 %_Br[0.0745 0.102 0.1098 0.0039 0.9294 0.8706 0.8275 2 50 100 %_Bs0.2902 0.5725 0.6549 0.1765 0.5843 0.3098 0.2078 2 50 85 %_Bs0.3765 0.6667 0.9373 0.3608 0.4 0.1765 0 2 73.9136 75 %_Bs0.2902 0.5686 0.7686 0.1765 0.5843 0.3098 0.149 2 50 63 %_Bs0 0 0 0 1 1 1 2 50 34 %_Bs0.1255 0.2235 0.2431 0.0196 0.851 0.7255 0.6471 2 50 14 %_Bs0.2784 0.7765 0.9451 0.1529 0.6118 0.1686 0 2 50 2 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Nova)(Nova) 1 3 Bd[<0807070706060605050403030303030303040405050606060607070707070707070707070707070606060505040403030202020202020304040405050606060606070707070707070707070707060606060505040404040404040404040505050506060606070707070707070707070707070706060606060505050505050505050505050505050506060606060607070707070707070707070707070606060606060505050505050505050505050505050505050505060606060606060707070707070707070707070707060606060606060605050505050504040404040404040404040404040404040405050505050505050606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404040404040404040403030303030303030303030303030303030303><0505060607070808090A0A0B0C0C0D0E0F0F10111212131415161718191A1A1B1C1D1E1F2021222324252728292A2B2D2E2F2F30313233343435363738393A3A3A3B3C3D3E3F404142434445454648494A4B4C4D4E4F4F50515254555656565758595A5B5C5D5D5E5F6061626363646566676869696A6B6D6E6F707071727374757576777879797A7B7C7D7E7E7F8081828283848586868788898A8A8B8C8D8D8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A0A1A2A4A4A5A6A7A7A8A9A9AAABACACADAEAEAFB0B0B1B2B3B3B4B5B5B6B7B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C6C8C9C9CACBCBCDCDCECFCFD0D0D1D2D2D4D4D5D6D6D7D7D8D9D9DADADBDBDDDDDEDFDFE0E0E1E1E2E2E3E3E4E4E4E5E5E6E6E7E7E8E8E9E9EAEAEAEAEBEBEBECECEDEDEDEDEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5>0.913701<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B7B6B5B4B3B2B1B0AFAEAEADACABAAA9A8A7A7A6A5A4A3A2A1A0A09F9E9D9C9B9A9A99989796959494939291908F8E8E8D8C8B8A898988878685858483828180807F7E7D7C7C7B7A797878777675747473727171706F6E6D6D6C6B6A6A696867676665646463626161605F5E5E5D5C5B5B5A59585857565655545353525151504F4F4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A393938373736353534343332323131302F2F2E2E2D2C2C2B2B2A292928282727262625242423232222212120201F1E1E1D1D1C1C1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0E0D0D0C0C0C0B0B0A0A0A0909090808080707070606060505050404040403030303020202020101010101010000000000>04 %_Br<030404050606070809090A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F2020212223232425252627272829292A2B2B2C2D2D2E2F2F303131323333343535363637383839393A3A3B3B3C3C3D3D3E3F3F404041414242434344444545464647494A4C4E5051545658595B5E6061636668696B6D707173747677797A7C7D7F8182848587888A8C8D8F9092949597989A9B9C9E9FA0A2A3A4A5A7A8A9ABACADAEB0B1B2B3B5B6B7B8BABBBDBEBF><F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDEDEDECECECECECECECECECECECECECECEDEDEDEEEEEEEFEFF0F0F0F1F1F2F3F3F4F4F5F5F6F6F7F7F8F8F9F9FAFAFAFAFAF8F8F7F7F6F6F5F5F4F3F3F2F2F2F1F1F1F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDEDEDEDEDEDECECECECECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E8E8E7E7E7E7E7E7E7E7E7E6E6E6E6E6><E9E9E9E9EAEAEAEAEBEBECECECECECEBEAE9E9E7E6E4E4E2E1DFDFDDDBDBD9D7D4D4D2D0CDCDCBC8C6C6C4C2C0BFBDBBB9B9B7B4B4B2B0ADADABA8A6A5A3A09E9D9B98969593908E8D8B8886868482817F7D7B7B78757373706E6B6B68656362605D5A5A575452514F4D4D4C4B49494846454544434242413F3E3E3D3C3B3B3A383737353434333130302F2E2C2D2B2A29292827262625242222211F1F1D1C1A1A18171515131210100F0D0C0B0A0807080707070707><00000000010101010101010101020202020202020303030303030404040404040505050505050606060707070808080909090A0A0B0B0B0C0C0D0D0D0E0E0F0F1010101111121213131414151616171818191A1A1B1C1C1D1E1F1F2021222323242526262728292A2A292A282726262524232322201F1F1E1D1C1C1B191818171716161515151413121211100F0F0E0D0C0C0B0A09090808080807070707060606060505050404030403030202010101010101010101><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A><00000000000101010101010101010202020202020202020303030303030303030404040404040404040505050505050505050606060606060606060707070707070707070808080808080808080909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F1010101010101010101111111111111111111212121212121212121313131313131313131414141414><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151516171818191A1B1B1C1D1E1E1F20212122232424252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142434344454646474849494A4B4C4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F60606162626364656566676868696A6B6B6C6D6E6E6F70717172737374757676777879797A7B7C7C7D7E7F7F808182828384858586>4 %_Br[0.0314 0.0196 0.9137 0 1 1 0 2 38.2022 0 %_Bs0.0118 0.9608 0.9137 0 1 0 0 2 50 75.2809 %_Bs0.749 0.902 0.0275 0.0039 0.2902 0.0784 0.5255 2 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (RGB Rainbow)(RGB Rainbow) 0 6 Bd[<F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E3E3E2E1E0DFDEDCDBDAD9D8D6D5D4D3D1D0CFCECCCBCAC8C7C6C5C3C2C1BFBEBDBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A5A4A3A1A09E9D9B9A9896959392908F8D8C8A898786858382817F7E7D7B7A79787675747371706F6D6C6B6A686766646362615F5E5C5B5A585755545251504E4D4C4A494746454342413F3E3D3B3A393736353332312F2E2D2B2A29272625242221201F1E1E1D1C1B1A191817171615141413121111100F0F0E0D0D0C0B0B0A0A09090807070606060505040404030303030202020202><EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F8F8F8F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F2F3F3>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202>14 %_Br<D5D5D6D7D8D9DADBDDDEDFDFDFDFDFDEDEDEDDDDDCDCDCDBDBDBDBDADADADADADADBDBDCDCDDDEDEDFE0E1E2E3E4E6E8E9E9EAEBEAEAE9E8E8E7E7E6E6E5E5E4E4E3E2E1E0E0DFDFDFDFDFDFE0E0E1E2E3E5E7E8EBEDEFF1F2F4F5F4F3F1EFEDEBEAE8E7E6E5E4E3E2E2E2E2E2E2E2E3E4E5E7E8EAEBEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E8E8E9E9EAEAEBEBEBEAEAEAEAEAEAEAEAEAEBEBECEDEEEFF1F3F5F6F7F8F9FBFCFCFCF9F7F6F4F2F1F0EEEDEDECECEBEBEBEBECECEDEDEEEEEFEFEFEFEFEFEFEFF0F0F0F1F1F2F2F3F4F5F6F7F8F9FBFCFDFDFEFFFFFFFFFFFDFCFBFBFAF9F8F8F7F7F6F6F6F5F5F5F5F4F4F4F4F4F4F4F4F4F4><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010202020203030304040404050505050606060607070707070707070708090A0B0C0E11131517191B1D1F21232527282A2B2D2E3031323334353637383A3C3D3F4042444547494A4C4E4F5153555658595B5C5E5F606263646667696A6C6D6F707273757677797A7B7D7E7F80818384858687898A8C8E9091939597989A9C9D9FA0A2A3A4A6A7A8AAABACAEAFB0B2B4B5B7B9BABCBDBFC1C2C4C5C7C8CACBCCCECFD1D2D3D5D6D7D8DADBDCDDDEDFE1E2E3E3E4E5E6E7E7E8E9E9EAEAEBEBEBECECECECEDED>00<01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>14 %_Br<ECECECECECECECECECECEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E3E3E3E4E4E4E5E5E6E6E7E7E8E8E9EAEAEBEBECEDEEEEEFF0F0F0F0F0F0F0F1F1F1F1F1F1F1F0EFEEEDEDECEBEAEAE9E8E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDBDBDBDBDBDBDBDCDCDCDDDDDDDEDEDFDFE0E0E1E1E2E3E3E4E5E6E6E7E8E9E9E9E9E9E9E9E9E9E9E9E9E8E7E6E6E5E4E3E2E2E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D9D9D8D8D8D7D7D7D7D6D6D6D6D6D5D5D5D5D5D5>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F1F1F0F0EFEEEDEDECEBEAE9E8E7E5E4E3E2E1E0DFDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC8C7C6C4C3C1BFBDBBB9B7B4B2B0AEACAAA8A6A4A2A09E9C9A98969492908E8C8A8987858381807E7C7A7977757372706E6C6B6967666462615F5E5C5A595756545351504E4D4B4A484746444341403E3D3B3A3837353432312F2E2C2B29282625242221201E1D1C1A1918171514131211100E0D0C0B0A0908070605040302010000>0<00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>4 %_Br<0808090A0A0B0C0C0D0E0E0F101011121314141516171818191A1B1C1D1E1F1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A6B6C6D6E6F70717273747475767778797A7B7C7D7E7F8081838485868788898A8B8C8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BBBCBDBEC0C1C2C3C4C5C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D6D7D8D9DADBDBDCDDDEDEDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBEBEBEBEBECECECEC><05050505050505040404040404040404030303030303020202020202010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEBEBEBEBEBEBECECECECECEDEDEDEDEEEEEEEFEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F7F8F8F8F8F9F9F9F9FAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>104 %_Br<03030303040404040404040404040404040505050505050505050606060606060606060606060606060606060606060606060606060605050505050404040404040404040404040505050506060606060607070707070707070707060606060605050505050505050505050505050506060606060707070707070707070707060606060605050505050505050505050505060606060707070707070707070707070606060605050504040404040404040405050606060607070707070707070707070606060605050404040302020202020303040405050606060707070707070707070707070706060606050504040303030303030304050506060607070708><F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDBDAD9D8D7D6D5D4D2D1D0CFCECDCBCAC9C8C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605F5E5D5C5B5A595857565655545251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A3A39383736353434333231302F2E2D2B2A2928272524232221201F1E1D1C1B1A19181716151413121211100F0F0E0D0C0C0B0A0A090808070706060505>0.913701<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>04 %_Br[0.0078 0.9529 0 0 1 0.0078 1 2 50 100 %_Bs0.9569 0.9294 0 0 0 0 1 2 50 80 %_Bs0.8353 0 0 0 0.0039 1 1 2 50 60 %_Bs0.9255 0 1 0 0 1 0 2 50 40 %_Bs0.0314 0.0196 0.9137 0 1 1 0 2 50 20 %_Bs0.0118 0.9608 0.9137 0 1 0 0 2 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Tropical Sunset)(Tropical Sunset) 0 5 Bd[<0303030304040404040404040404040404050505050505050505050606060606060606060606060606060606060606060606060606060606060605050505050504040404040404040404040404040405050505050606060606060607070707070707070707070707070606060606060605050505050505050505050505050505050505050505060606060606060606070707070707070707070707070707070707070606060606060606060605050505050505050505050505050505050505050505050505050505050505060606060606060606060606060707070707070707070707070707070707070707070707070707><F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECECEBEAEAE9E8E7E6E5E4E4E3E2E1E1E0DFDEDDDBDAD9D8D7D7D6D5D4D2D1D0CFCECECDCBCAC9C8C8C6C5C4C3C2C1C1C0BFBEBDBDBCBBBAB9B9B8B7B6B5B5B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A2A2A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8E8D8C8C8B8B8A8989888887868685858484838382818180807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767675757474737373727271717170706F6F6F6E6E6E6D6D6D6B6B6B6A6A6A696969696868686767676767666666666665656565656564646464646464><E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0><0000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101>1<000102030405060708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212222232425262728292A2B2B2C2D2E2F3031323333343536373838393A3B3C3D3E3E3F4041424243444546464748494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061616263636465656667676869696A6B6B6C6D6D6E6F6F70707172727373747575767677787879797A7A7B7B7C7D7D7E7E7F7F8080818182828383848485858686878788888889898A8A8B8B8B8C8C8D8D8D8E8E8F8F8F909090919191929292939393949494949595959696969696979797979798989898989899999999999999>04 %_Br<08070707060606050504030303030303030404050506060606070707070707070707070707070606060505040403030202020202030404040505060606060707070707070707070707060606060505040404040404040404050505060606060707070707070707070707070606060605050505050505050505050505060606060607070707070707070707070606060606050505050505050505050505050505060606060607070707070707070707060606060606050505050404040404040404040404040505050505060606060606060606060606060606060606060606060606060606060505050505050505050404040404040404040404040403030303><0505060607070808090A0A0B0C0C0D0E0F0F10111212131415161718191A1B1C1D1E1F2021222324252728292A2B2D2E2F30313233343435363738393A3A3B3C3D3E3F4041424344454648494A4B4C4D4E4F505152545556565758595A5B5C5D5E5F606162636465666768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C8C9CACBCDCECFD0D1D2D4D5D6D7D8D9DADBDDDEDFE0E1E2E3E4E4E5E6E7E8E9EAEAEBECEDEDEEEFEFF0F0F1F1F2F2F3F3F3F4F4F4F4F4F5F5>0.913701<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>04 %_Br<02020201010202020303030303040404040404040404040404040404040403030303030202020201010101000000000001010203030303040405050505060606060606060606060505050505050505050504040404040404030304040404040505050505050606060606060606060606060606060606060606060605050505050505040404040404050505050506060606060606070707070707070707070707070606060606060505050504040404030303030303030303030404040505050606060607070707070708080808080808080808070707070707070706060606050505040404040303030303030303030304050505050606060606070707070708><9E9D9D9C9C9B9A9A9998979696959594939392929190908F8F8E8D8D8B8B8A89898888878686858584838382828180807F7F7E7C7C7B7B7A7979787877767675757372727171706F6F6E6E6D6C6C6B6B6A6969686867666665656463636262615F5F5E5E5D5C5C5B5B5A5959585857565655555452525151504F4F4E4E4D4D4D4C4C4B4A4A494847464645454443424141403F3F3E3E3D3C3C3B3B3A393938383736363535343333333332313130302F2E2E2D2D2C2B2B2A2A292727262625242422222120201F1F1E1D1D1C1C1B1A1A1919181717161615141413131211111111100F0F0E0E0E0D0D0C0C0B0B0B0A0A0A090908080807070707060606050505><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010202030304050506070708090A0A0B0C0D0D0E0F101011121314141617191B1C1E1F2123242627292B2C2E2F3133343637393B3C3E3F4142434546484A4B4D4E4F5152545557585A5B5C5E606162646567686A6B6C6E6F717273757677797A7C7D7E7F818283858687898A8B8D8E8F919293959697999A9B9C9E9FA0A1A3A4A5A6A7A9AAABACADAFB0B1B2B3B5B6B8B9BBBDBEBFC1C2C4C5C6C8C9CACBCDCECFD0D1D2D4D5D6D7D7D8D9DADBDCDDDDDEDFDFDFDFE0E0E0E1E1E1E2E2E3E3E4E4E4E5E5E6E6E6E7E7E7E7E8E8E8E8E8E9E9E9>01<6667676868696A6A6B6B6C6D6D6E6E6F70707171727373747475767677777879797A7A7B7C7C7D7D7E7F7F80808182828383848585868687888889898A8B8B8C8C8D8E8E8F8F909191929293949495959697979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A6A6A7A7A8A9A9AAAAABACACADADAEAFAFB0B0B1B2B2B3B3B4B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBEBEBFBFC0C1C1C2C2C3C4C4C5C5C6C7C7C8C8C9CACACBCBCCCDCDCECECFD0D0D1D1D2D3D3D4D4D5D6D6D7D7D8D9D9DADADBDCDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E8E8E9E9EAEBEBECECEDEEEEEFEFF0F1F1F2F2F3F4F4F5F5F6F7F7F8F8F9FAFAFBFBFCFDFDFEFEFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br<D5D5D5D6D6D6D7D7D8D8D9DADADCDBDCDDDCDCDCDBDADAD9D9D8D7D7D6D6D5D4D3D3D2D1D0D0CFCECDCDCCCBCACAC9C8C8C7C6C6C5C5C4C4C3C3C3C2C2C2C1C1C0C0C0BFBFBEBEBEBDBCBBBABAB9B8B7B6B5B3B2B1B0AFADACABA9A8A7A5A4A2A09F9E9D9C9B9A999897969594939291908E8E8C8B8A8988878685838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4C4B4A4948474645444341403F3E3D3C3B3A3837363534333231302E2D2C2B2A2928262524232221201E1D1C1B1A1A191817161615141313121110100F0E0D0C0C0B0A0909080706060504040302020202><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010102020202020303030303040404040405050607080A0A0C0C0E0F0F11111315151717191A1B1C1D1E2020222324262628292A2C2C2E2E2F3131333335363738393A3C3C3E3E404141434345474748494A4C4C4D4E4F515152535456565758595B5B5C5D5E5F60616163646566666869696B6B6C6E6E6F6F717272747475777778787A7B7B7D7D7E7F8081818284848585878888898A8B8C8C8E8E8F90909292939494959697989899999A9C9C9D9D9E>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFEFEFDFDFCFBFBFAFAF9F8F8F7F7F6F5F5F4F4F3F2F2F1F1F0EFEFEEEEEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E3E3E2E2E1E0E0DFDFDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCBCBCACAC9C8C8C7C7C6C5C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACACABAAAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A9A999898979796959594949392929191908F8F8E8E8D8C8C8B8B8A89898888878686858584838382828180807F7F7E7D7D7C7C7B7A7A79797877777676757474737372717170706F6E6E6D6D6C6B6B6A6A696868676766>14 %_Br[0.0275 0.3922 0.9412 0.0039 1 0.6 0 2 50 100 %_Bs0.0118 0.9608 0.9137 0 1 0 0 2 35.5263 57.3034 %_Bs0.0314 0.0196 0.9137 0 1 1 0 2 50 55.618 %_Bs0.0078 0.6196 0 0 1 0.4 1 2 50 44.9438 %_Bs0.8353 0 0 0 0 1 1 2 50 19.1011 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (White, Black)(White, Black) 0 2 Bd[000<0000000000000000000000000000000000000000000000010101010101010101010101010202020202020202020202030303030303040404040404040505050505050606060607070707080808090909090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CAD0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0 0 0 1 0 0 0 2 50 100 %_Bs0 0 0 0 1 1 1 2 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d0 XR40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.3882 0.6039 0.1529 Xa 0.3882 0.6039 0.1529 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.4039 0.4 0.0824 Xa 0.4039 0.4 0.0824 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.8 0.8 0.1176 Xa 0.8 0.8 0.1176 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.0824 0.4157 0.1725 Xa 0.0824 0.4157 0.1725 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Honeycomb)(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [%AI3_Tile(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR52.3345 28.1372 m40.6475 21.3906 L40.6475 7.9009 L52.3345 1.1543 L64.0161 7.9009 L64.0161 21.3906 L52.3345 28.1372 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR43.9536 19.4839 m43.9536 9.8081 L52.3345 4.9702 L60.7153 9.8081 L60.7153 19.4839 L52.3345 24.3218 L43.9536 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR25.7944 28.1406 m14.1099 21.3911 L14.1099 7.9014 L25.7944 1.1548 L37.479 7.9014 L37.479 21.394 L25.7944 28.1406 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR17.4126 19.4839 m17.4126 9.8081 L25.7944 4.9702 L34.1743 9.8081 L34.1743 19.4839 L25.7944 24.3218 L17.4126 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR12.6846 50.7852 m1 44.0356 L1 30.5459 L12.6846 23.7993 L24.3691 30.5459 L24.3691 44.0386 L12.6846 50.7852 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR4.3027 42.1284 m4.3027 32.4526 L12.6846 27.6147 L21.0645 32.4526 L21.0645 42.1284 L12.6846 46.9663 L4.3027 42.1284 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR65.603 51.1226 m53.9185 44.3765 L53.9185 30.8843 L65.603 24.1382 L77.2871 30.8843 L77.2871 44.3774 L65.603 51.1226 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR57.2202 42.4692 m57.2202 32.7915 L65.603 27.9536 L73.9819 32.7915 L73.9819 42.4692 L65.603 47.3081 L57.2202 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR39.0649 51.1235 m27.3774 44.3765 L27.3774 30.8843 L39.0649 24.1382 L50.7471 30.8843 L50.7471 44.3774 L39.0649 51.1235 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR30.6821 42.4692 m30.6821 32.7915 L39.0649 27.9517 L47.4438 32.7915 L47.4438 42.4702 L39.0649 47.3091 L30.6821 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR25.7944 74.1074 m14.1099 67.3599 L14.1099 53.8682 L25.7944 47.1221 L37.479 53.8682 L37.479 67.3599 L25.7944 74.1074 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR17.4126 65.4526 m17.4126 55.7749 L25.7944 50.937 L34.1743 55.7749 L34.1772 65.4526 L25.7944 70.2905 L17.4126 65.4526 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR52.3345 74.1074 m40.6475 67.3599 L40.6475 53.8682 L52.3345 47.1221 L64.0161 53.8682 L64.0161 67.3599 L52.3345 74.1074 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR43.9536 65.4526 m43.9536 55.7749 L52.3345 50.937 L60.7153 55.7749 L60.7153 65.4526 L52.3345 70.2905 L43.9536 65.4526 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Jungle Stripes)(Jungle Stripes) 37 19 73 55 [%AI3_Tile(0 O 0 R 0 0.5333 0.2157 Xa 0 0.5333 0.2157 XA) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &(0 O 0 R 0.6549 0.851 0.3412 Xa 0.6549 0.851 0.3412 XA) @(%AI6_BeginPatternLayer0 J 0 j 9 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Mediterranean Tiles)(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [%AI3_Tile(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.1216 0.1333 1 Xa 0.1216 0.1333 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.6514 7.1123 m43.6514 16.9727 L33.7915 16.9727 L33.7915 7.1123 L43.6514 7.1123 Lf26.8296 23.9307 m26.8296 33.791 L16.9702 33.791 L16.9702 23.9307 L26.8296 23.9307 Lf10.0093 7.1094 m10.0093 16.9697 L0.1538 16.9697 L0.1538 7.1094 L10.0093 7.1094 Lf43.6494 40.752 m43.6494 50.6113 L33.7876 50.6113 L33.7876 40.752 L43.6494 40.752 Lf10.0083 40.749 m10.0083 50.6084 L0.1499 50.6084 L0.1499 40.749 L10.0083 40.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.8 0.8 0.8 Xa 0.8 0.8 0.8 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.2 0.2 Xa 0.2 0.2 0.2 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6039 0.6 0.6 Xa 0.6039 0.6 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4 0.4 0.4 Xa 0.4 0.4 0.4 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0 0 0 Xa([Registration]) Pc0 0 0 Xa([Registration]) Pc1 1 1 Xa(White) Pc0 0 0 Xa(Black) Pc0.6 0.6 0.6 Xa(Gray) Pc0.8 0.8 0.8 Xa(Light Gray) Pc0 1 1 Xa(Bright Blue) Pc0.6 1 1 Xa(Light Blue) Pc0.8 1 1 Xa(Pale Blue) Pc1 0 1 Xa(Violet) Pc1 0.4 1 Xa(Light Violet) Pc1 0.8 1 Xa(Pale Violet) Pc1 1 0 Xa(Yellow) Pc1 1 0.4 Xa(Light Yellow) Pc0.2 0.4 1 Xa(New Color Swatch 1) Pc1 1 0.6 Xa(Pale Yellow) Pc0.6 0.2 0 Xa(Brown) Pc0.8 0.4 0.2078 Xa(Light Brown) Pc1 0.5922 0.4 Xa(Pale Brown) Pc0 0 1 Xa(Blue) Pc0.4 0.4 1 Xa(Faded Blue) Pc0.8 0.8 1 Xa(Faded Pale Blue) Pc1 0 0 Xa(Red) Pc1 0.4 0.4 Xa(Light Red) Pc1 0.6 0.6 Xa(Mauve) Pc0 0.6 0 Xa(Forest Green) Pc0.2 0.8 0.2 Xa(Green) Pc0.6 1 0.4 Xa(Pale Green) Pc0 1 0 Xa(Bright Green) Pc0.4 1 0.4 Xa(Light Bright Green) Pc0.5922 1 0.6 Xa(Pale Light Green) Pc0.6 0 0.8 Xa(Purple) Pc0.6 0.4 0.8 Xa(Periwinkle) Pc0.8 0.6 0.8 Xa(Lavender) Pc1 0.6 0 Xa(Orange) Pc1 0.8 0.4 Xa(Pale Orange) Pc1 1 0.6 Xa(Light Pale Orange) PcBb2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(White, Black) PcBb0 0 0 0 Bh2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black, White Radial) PcBb2 (Copper) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper) PcBb2 (RGB Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(RGB Rainbow) PcBb0 0 0 0 Bh2 (Nova) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Nova) PcBb2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Tropical Sunset) Pc(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Mediterranean Tiles) Pc(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Pyramids) Pc(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Honeycomb) Pc(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Jungle Stripes) Pc(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Camouflage) Pc(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Azure Rings) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 A300 Ar0 O1 0.5922 0.4 Xa0 J 0 j 1 w 4 M []0 d1 XR172.4424 250.2393 m173.2407 251.8359 l174.0386 253.4316 l174.8364 254.8672 l175.6348 256.3037 l176.4326 257.7402 l177.2305 259.0176 l178.0283 260.293 l178.8267 261.5703 l179.6245 262.6875 l180.4224 263.9648 l181.2207 265.082 l182.0186 266.1992 l182.8164 267.3164 l183.4551 268.2734 l184.2529 269.3916 l185.0513 270.3486 l185.8491 271.4658 l186.647 272.4229 l187.4453 273.3809 l188.2432 274.1797 l189.041 275.1367 l189.8394 276.0938 l190.6372 276.8926 l191.4351 277.8496 l192.2329 278.6475 l193.0313 279.4453 l193.8291 280.2441 l194.627 281.041 l195.4253 281.8398 l196.2231 282.6377 l196.8613 283.4355 l197.6592 284.2344 l198.457 284.8721 l199.2554 285.6699 l200.0532 286.4688 l200.8511 287.1074 l201.6494 287.7461 l202.4473 288.543 l203.2451 289.1816 l204.0435 289.8203 l204.8413 290.458 l205.6392 291.0967 l206.4375 291.8945 l207.2354 292.5332 l208.0332 293.0117 l208.8311 293.6504 l209.6294 294.2891 l210.2681 294.9277 l211.0659 295.5645 l211.8638 296.2031 l212.6616 296.6826 l213.46 297.3213 l214.2578 297.959 l215.0557 298.4375 l215.854 299.0762 l216.6514 299.5547 l217.4492 300.1934 l218.2476 300.6729 l219.0454 301.1504 l219.8433 301.7891 l220.6416 302.2695 l221.4395 302.7471 l222.2373 303.3857 l223.0352 303.8652 l223.6738 304.3438 l224.4722 304.8223 l225.27 305.3008 l226.0679 305.7793 l226.8662 306.2588 l227.6641 306.7373 l228.4619 307.2168 l229.2598 307.6953 l230.0581 308.1738 l230.856 308.6523 l231.6538 309.1309 l232.4521 309.6104 l233.25 310.0898 l234.0479 310.5684 l234.8462 311.0469 l235.644 311.3652 l236.2822 311.8447 l237.0801 312.3232 l237.8779 312.8027 l238.6763 313.1211 l239.4741 313.5996 l240.272 314.0801 l241.0703 314.3984 l241.8682 314.877 l242.666 315.1963 l243.4639 315.6758 l244.2622 316.1543 l245.0601 316.4727 l245.8579 316.9512 l246.6563 317.2715 l247.4541 317.75 l248.252 318.0693 l249.0503 318.3887 l249.6885 318.8672 l250.4868 319.1855 l251.2847 319.666 l252.0825 319.9844 l252.8809 320.3027 l253.6787 320.7822 l254.4766 321.1016 l255.2749 321.4209 l256.0728 321.8984 l256.8706 322.2188 l257.6685 322.5371 l258.4668 322.8574 l259.2646 323.3359 l260.0625 323.6553 l260.8608 323.9746 l261.6587 324.293 l262.4565 324.6133 l263.0952 325.0918 l263.8931 325.4102 l264.6914 325.7295 l265.4893 326.0488 l266.2871 326.3682 l267.0854 326.6875 l267.8833 327.0068 l268.6812 327.3262 l269.4795 327.6455 l270.2773 327.9648 l271.0752 328.2832 l271.873 328.6035 l272.6714 328.9219 l273.4692 329.2412 l274.2671 329.5605 l275.0654 329.8789 l275.7036 330.1992 l276.5015 330.5176 l277.2993 330.8379 l278.0972 331.1563 l278.8955 331.4746 l279.6934 331.7949 l280.4912 332.1133 l281.2896 332.4336 l282.0874 332.752 l282.8853 332.9121 l283.6836 333.2314 l284.4814 333.5508 l285.2793 333.8691 l286.0776 334.1895 l286.8755 334.5078 l287.6733 334.667 l288.4712 334.9863 l289.1099 335.3057 l289.9082 335.625 l290.7061 335.9443 l291.5039 336.1035 l292.3018 336.4238 l293.1001 336.7422 l293.8979 337.0605 l294.6958 337.2207 l295.4941 337.54 l296.292 337.8594 l297.0898 338.0195 l297.8882 338.3379 l298.686 338.6572 l299.4839 338.8174 l300.2817 339.1367 l301.0801 339.4551 l301.8779 339.6152 l302.5161 339.9336 l303.314 340.2529 l304.1123 340.4141 l304.9097 340.7324 l305.7075 341.0508 l306.5059 341.2109 l307.3037 341.5303 l308.1025 341.6895 l308.9004 342.0098 l309.6992 342.1689 l310.4961 342.4883 l311.2949 342.8076 l312.0928 342.9668 l312.8906 343.2852 l313.6885 343.4453 l314.4863 343.7646 l315.2852 343.9238 l315.9238 344.2432 l316.7207 344.4033 l317.5195 344.7227 l318.3164 344.8818 l319.1152 345.2012 l319.9131 345.3613 l320.7109 345.6797 l321.5098 345.8389 l322.3066 346.1582 l323.1055 346.3184 l323.9033 346.6367 l324.7012 346.7969 l325.499 347.1162 l326.2969 347.2754 l327.0957 347.4355 l327.8926 347.7549 l328.5313 347.9141 l329.3281 348.2324 l330.127 348.3936 l330.9248 348.7129 l331.7227 348.8711 l332.5215 349.0313 l333.3184 349.3506 l334.1172 349.5098 l334.915 349.8291 l335.7129 349.9893 l336.5107 350.1484 l337.3086 350.4678 l338.1074 350.627 l338.9043 350.7871 l339.7031 351.1064 l340.501 351.2656 l341.2988 351.4258 l341.9385 351.7441 l342.7363 351.9043 l343.5342 352.0635 l344.332 352.3828 l345.1309 352.543 l345.9277 352.7021 l346.7266 353.0215 l347.5244 353.1816 l348.3223 353.3408 l349.1201 353.6602 l349.918 353.8184 l350.7168 353.9795 l351.5137 354.1387 l352.3125 354.457 l353.1104 354.6172 l353.9082 354.7773 l354.7061 355.0957 l355.3438 355.2559 l356.1426 355.415 l356.9395 355.5752 l357.7383 355.8945 l358.5361 356.0537 l359.334 356.2129 l360.1318 356.373 l360.9297 356.6924 l361.7285 356.8516 l362.5254 357.0117 l363.3242 357.1719 l364.1221 357.3301 l364.9199 357.6494 l365.7178 357.8086 l366.5156 357.9688 l367.3145 358.1289 l368.1113 358.4473 l368.75 358.6074 l369.5488 358.7676 l370.3467 358.9268 l371.1445 359.0859 l371.9424 359.4053 l372.7402 359.5654 l373.5391 359.7246 l374.3359 359.8848 l375.1348 360.043 l375.9326 360.2031 l376.7305 360.5234 l377.5283 360.6816 l378.3262 360.8418 l379.125 361.001 l379.9219 361.1611 l380.7207 361.3203 l381.3594 361.6396 l382.1572 361.7988 l382.9551 361.959 l383.7529 362.1191 l384.5508 362.2783 l385.3496 362.4375 l386.1465 362.5977 l386.9453 362.917 l387.7432 363.0762 l388.541 363.2363 l389.3398 363.3945 l390.1367 363.5547 l390.9355 363.7139 l391.7324 363.874 l392.5313 364.0332 l393.3291 364.1934 l394.127 364.5117 l394.7646 364.6719 l395.5625 364.832 l396.3613 364.9912 l397.1582 365.1504 l397.957 365.3105 l398.7549 365.4707 l399.5527 365.6299 l400.3506 365.7891 l401.1484 365.9482 l401.9473 366.2676 l402.7441 366.4277 l403.543 366.5869 l404.3408 366.7461 l405.1387 366.9063 l405.9375 367.0664 l406.7344 367.2256 l407.5332 367.3848 l407.6934 367.7041 l408.0117 368.3418 l408.1719 368.0234 l408.1719 367.5449 l408.3301 366.4277 l408.3301 359.7246 l408.1719 359.5645 l408.1719 358.9258 l408.0117 358.6074 l407.8525 358.7666 l407.5332 359.4053 l406.7344 359.2461 l405.9375 359.0859 l405.1387 358.9258 l404.3408 358.7666 l403.543 358.6074 l402.7441 358.4473 l401.9473 358.2881 l401.1484 358.1279 l400.3506 357.9688 l399.5527 357.6494 l398.7549 357.4902 l397.957 357.3301 l397.1582 357.1699 l396.3613 357.0117 l395.5625 356.8516 l394.7646 356.6924 l394.127 356.5313 l393.3291 356.373 l392.5313 356.2129 l391.7324 356.0537 l390.9355 355.8945 l390.1367 355.7344 l389.3398 355.5752 l388.541 355.2559 l387.7432 355.0957 l386.9453 354.9375 l386.1465 354.7773 l385.3496 354.6172 l384.5508 354.457 l383.7529 354.2988 l382.9551 354.1387 l382.1572 353.9795 l381.3594 353.6602 l380.7207 353.5 l379.9219 353.3408 l379.125 353.1816 l378.3262 353.0215 l377.5283 352.8613 l376.7305 352.7021 l375.9326 352.3828 l375.1348 352.2227 l374.3359 352.0635 l373.5391 351.9043 l372.7402 351.7441 l371.9424 351.5859 l371.1445 351.2656 l370.3467 351.1064 l369.5488 350.9473 l368.75 350.7871 l368.1113 350.627 l367.3145 350.3086 l366.5156 350.1484 l365.7178 349.9893 l364.9199 349.8291 l364.1221 349.6699 l363.3242 349.3506 l362.5254 349.1914 l361.7285 349.0313 l360.9297 348.8711 l360.1318 348.5527 l359.334 348.3936 l358.5361 348.2324 l357.7383 348.0742 l356.9395 347.7549 l356.1426 347.5957 l355.3438 347.4355 l354.7061 347.2754 l353.9082 346.957 l353.1104 346.7969 l352.3125 346.6367 l351.5137 346.3184 l350.7168 346.1582 l349.918 346 l349.1201 345.8389 l348.3223 345.5195 l347.5244 345.3613 l346.7266 345.2012 l345.9277 344.8818 l345.1309 344.7227 l344.332 344.5625 l343.5342 344.2432 l342.7363 344.084 l341.9385 343.9238 l341.2988 343.6055 l340.501 343.4453 l339.7031 343.2852 l338.9043 342.9668 l338.1074 342.8076 l337.3086 342.4883 l336.5107 342.3281 l335.7129 342.1689 l334.915 341.8496 l334.1172 341.6895 l333.3184 341.3711 l332.5215 341.2109 l331.7227 341.0508 l330.9248 340.7324 l330.127 340.5723 l329.3281 340.2529 l328.5313 340.0938 l327.8926 339.9336 l327.0957 339.6152 l326.2969 339.4551 l325.499 339.1367 l324.7012 338.9766 l323.9033 338.6572 l323.1055 338.498 l322.3066 338.1787 l321.5098 338.0195 l320.7109 337.6992 l319.9131 337.54 l319.1152 337.2207 l318.3164 337.0605 l317.5195 336.7422 l316.7207 336.583 l315.9238 336.2637 l315.2852 336.1035 l314.4863 335.7852 l313.6885 335.625 l312.8906 335.3057 l312.0928 335.1465 l311.2949 334.8271 l310.4961 334.5078 l309.6992 334.3477 l308.9004 334.0293 l308.1025 333.8691 l307.3037 333.5508 l306.5059 333.2314 l305.7075 333.0713 l304.9097 332.752 l304.1123 332.5928 l303.314 332.2734 l302.5161 331.9541 l301.8779 331.7949 l301.0801 331.4746 l300.2817 331.1563 l299.4839 330.9961 l298.686 330.6777 l297.8882 330.3584 l297.0898 330.1992 l296.292 329.8789 l295.4941 329.5605 l294.6958 329.4004 l293.8979 329.0811 l293.1001 328.7617 l292.3018 328.4434 l291.5039 328.2832 l290.7061 327.9648 l289.9082 327.6455 l289.1099 327.3262 l288.4712 327.166 l287.6733 326.8477 l286.8755 326.5273 l286.0776 326.209 l285.2793 326.0488 l284.4814 325.7295 l283.6836 325.4102 l282.8853 325.0918 l282.0874 324.7725 l281.2896 324.4531 l280.4912 324.293 l279.6934 323.9746 l278.8955 323.6553 l278.0972 323.3359 l277.2993 323.0166 l276.5015 322.6973 l275.7036 322.3789 l275.0654 322.0596 l274.2671 321.7402 l273.4692 321.4209 l272.6714 321.1016 l271.873 320.7822 l271.0752 320.623 l270.2773 320.3027 l269.4795 319.9844 l268.6812 319.666 l267.8833 319.3457 l267.0854 318.8672 l266.2871 318.5479 l265.4893 318.2285 l264.6914 317.9092 l263.8931 317.5898 l263.0952 317.2715 l262.4565 316.9512 l261.6587 316.6328 l260.8608 316.3125 l260.0625 315.9941 l259.2646 315.6758 l258.4668 315.1963 l257.6685 314.877 l256.8706 314.5576 l256.0728 314.2383 l255.2749 313.9189 l254.4766 313.4414 l253.6787 313.1211 l252.8809 312.8027 l252.0825 312.4834 l251.2847 312.0039 l250.4868 311.6855 l249.6885 311.3652 l249.0503 311.0469 l248.252 310.5684 l247.4541 310.249 l246.6563 309.7695 l245.8579 309.4512 l245.0601 309.1309 l244.2622 308.6523 l243.4639 308.333 l242.666 307.8555 l241.8682 307.5352 l241.0703 307.0566 l240.272 306.7373 l239.4741 306.2588 l238.6763 305.9395 l237.8779 305.4609 l237.0801 305.1406 l236.2822 304.6621 l235.644 304.3438 l234.8462 303.8652 l234.0479 303.3857 l233.25 303.0664 l232.4521 302.5879 l231.6538 302.1094 l230.856 301.6309 l230.0581 301.3115 l229.2598 300.832 l228.4619 300.3535 l227.6641 299.875 l226.8662 299.3955 l226.0679 299.0762 l225.27 298.5977 l224.4722 298.1191 l223.6738 297.6406 l223.0352 297.1611 l222.2373 296.6826 l221.4395 296.2031 l220.6416 295.7256 l219.8433 295.2461 l219.0454 294.7676 l218.2476 294.1289 l217.4492 293.6504 l216.6514 293.1709 l215.854 292.6934 l215.0557 292.0547 l214.2578 291.5752 l213.46 291.0967 l212.6616 290.458 l211.8638 289.9785 l211.0659 289.501 l210.2681 288.8623 l209.6294 288.3828 l208.8311 287.7461 l208.0332 287.1074 l207.2354 286.627 l206.4375 285.9893 l205.6392 285.3516 l204.8413 284.8721 l204.0435 284.2344 l203.2451 283.5957 l202.4473 282.957 l201.6494 282.3184 l200.8511 281.6797 l200.0532 281.041 l199.2554 280.4023 l198.457 279.7656 l197.6592 278.9668 l196.8613 278.3281 l196.2231 277.6904 l195.4253 276.8926 l194.627 276.2539 l193.8291 275.4551 l193.0313 274.6582 l192.2329 274.0195 l191.4351 273.2207 l190.6372 272.4229 l189.8394 271.625 l189.041 270.8271 l188.2432 269.8691 l187.4453 269.0723 l186.647 268.2734 l185.8491 267.3164 l185.0513 266.5176 l184.2529 265.5605 l183.4551 264.6035 l182.8164 263.6445 l182.0186 262.6875 l181.2207 261.5703 l180.4224 260.6133 l179.6245 259.4961 l178.8267 258.3789 l178.0283 257.2617 l177.2305 256.1445 l176.4326 254.8672 l175.6348 253.5908 l174.8364 252.3135 l174.0386 251.0371 l173.2407 249.6006 l172.4424 248.1641 lF0 To1 0 0 1 283.6758 164.6641 0 Tp0 TvTP0 Tr0 g0 XR%_ 0 50 XQ/_Times-Italic 14 14 -5.7832 Tf0 Ts100 100 Tz0 Tt%_0 0 100 100 Xu%AI55J_GlyphSubst: GlyphSubstNone 0 TA%_ 0 XL0 TY0 TV25.2 0 XbXB0 0 5 TC100 100 200 TW25 TG0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq0 Tg0 0 Tl0 Tc0 Tw(E) Tx /_Times-Roman 14 14 -6.002 Tf(  \(kV/cm\)) Tx (\r) TX TO0 To0 1 -1 0 136.811 338.5752 0 Tp0 TvTP-36.7785 0 Td0 Tr/_Times-Italic 14 14 -5.7832 Tf1 Ta(V) Tx /_Times-Italic 12 12 -4.957 Tf-3 Ts(d) Tx /_Times-Roman 14 14 -6.002 Tf0 Ts(   \(mm/) Tx /_Symbol 14 14 -4.102 Tf(m) Tx /_Times-Roman 14 14 -6.002 Tf(s\)) Tx (\r) TX TOu0 R0 G0.4 w 10 M162.3877 194.8574 m162.3877 477.5093 l451.9023 477.5093 l451.9023 194.8574 l162.3877 194.8574 ls*u162.3877 203.3164 m162.3877 194.8574 lS1 D172.123 199.168 m172.123 194.8574 lS0 D181.8594 199.168 m181.8594 194.8574 lS191.5947 199.168 m191.5947 194.8574 lS1 D201.3301 203.3164 m201.3301 194.8574 lS0 D211.0659 199.168 m211.0659 194.8574 lS220.8013 199.168 m220.8013 194.8574 lS230.5371 199.168 m230.5371 194.8574 lS240.2725 203.3164 m240.2725 194.8574 lS250.168 199.168 m250.168 194.8574 lS1 D259.9033 199.168 m259.9033 194.8574 lS269.6392 199.168 m269.6392 194.8574 lS279.3745 203.3164 m279.3745 194.8574 lS0 D289.1099 199.168 m289.1099 194.8574 lS1 D298.8457 199.168 m298.8457 194.8574 lS308.5811 199.168 m308.5811 194.8574 lS0 D318.3164 203.3164 m318.3164 194.8574 lS1 D328.0527 199.168 m328.0527 194.8574 lS337.7881 199.168 m337.7881 194.8574 lS0 D347.5244 199.168 m347.5244 194.8574 lS357.2588 203.3164 m357.2588 194.8574 lS1 D367.1543 199.168 m367.1543 194.8574 lS0 D376.8906 199.168 m376.8906 194.8574 lS1 D386.627 199.168 m386.627 194.8574 lS0 D396.3613 203.3164 m396.3613 194.8574 lS1 D406.0977 199.168 m406.0977 194.8574 lS0 D415.832 199.168 m415.832 194.8574 lS425.5684 199.168 m425.5684 194.8574 lS1 D435.3047 203.3164 m435.3047 194.8574 lS435.3047 203.3164 m435.3047 194.8574 lS0 D445.0391 199.168 m445.0391 194.8574 lS*U*u1 D171.0059 194.8574 m162.3877 194.8574 lS166.6973 201.7207 m162.3877 201.7207 lS0 D166.6973 208.7432 m162.3877 208.7432 lS166.6973 215.6055 m162.3877 215.6055 lS166.6973 222.4688 m162.3877 222.4688 lS1 D171.0059 229.3311 m162.3877 229.3311 lS166.6973 236.1943 m162.3877 236.1943 lS0 D166.6973 243.2168 m162.3877 243.2168 lS166.6973 250.0791 m162.3877 250.0791 lS166.6973 256.9424 m162.3877 256.9424 lS1 D171.0059 263.8047 m162.3877 263.8047 lS0 D166.6973 270.668 m162.3877 270.668 lS1 D166.6973 277.5313 m162.3877 277.5313 lS166.6973 284.5527 m162.3877 284.5527 lS166.6973 291.416 m162.3877 291.416 lS171.0059 298.2793 m162.3877 298.2793 lS166.6973 305.1406 m162.3877 305.1406 lS166.6973 312.0039 m162.3877 312.0039 lS0 D166.6973 319.0273 m162.3877 319.0273 lS1 D166.6973 325.8887 m162.3877 325.8887 lS0 D171.0059 332.752 m162.3877 332.752 lS1 D166.6973 339.6152 m162.3877 339.6152 lS166.6973 346.4775 m162.3877 346.4775 lS0 D166.6973 353.3408 m162.3877 353.3408 lS166.6973 360.3633 m162.3877 360.3633 lS1 D171.0059 367.2256 m162.3877 367.2256 lS0 D166.6973 374.0889 m162.3877 374.0889 lS1 D166.6973 380.9512 m162.3877 380.9512 lS0 D166.6973 387.8145 m162.3877 387.8145 lS1 D166.6973 394.8369 m162.3877 394.8369 lS0 D171.0059 401.6997 m162.3877 401.6997 lS1 D166.6973 408.562 m162.3877 408.562 lS166.6973 415.4248 m162.3877 415.4248 lS0 D166.6973 422.2876 m162.3877 422.2876 lS166.6973 429.1509 m162.3877 429.1509 lS1 D171.0059 436.1729 m162.3877 436.1729 lS166.6973 443.0356 m162.3877 443.0356 lS166.6973 449.8989 m162.3877 449.8989 lS0 D166.6973 456.7617 m162.3877 456.7617 lS166.6973 463.624 m162.3877 463.624 lS1 D171.0059 470.647 m162.3877 470.647 lS171.0059 470.647 m162.3877 470.647 lS*UU0 D0 O1 1 1 Xa1 w 4 M1 XR425.7793 477.5093 m425.7793 477.5977 425.707 477.6689 425.6191 477.6689 c425.5313 477.6689 425.459 477.5977 425.459 477.5093 c425.459 477.4214 425.5313 477.3496 425.6191 477.3496 c425.707 477.3496 425.7793 477.4214 425.7793 477.5093 cF162.5537 194.8262 m162.5537 194.9141 162.4824 194.9844 162.394 194.9844 c162.3062 194.9844 162.2344 194.9141 162.2344 194.8262 c162.2344 194.7383 162.3062 194.666 162.394 194.666 c162.4824 194.666 162.5537 194.7383 162.5537 194.8262 cF*u0 XR172.4424 250.2393 m173.2407 251.8359 l174.0386 253.4316 l174.8364 254.8672 l175.6348 256.3037 l176.4326 257.7402 l177.2305 259.0176 l178.0283 260.293 l178.8267 261.5703 l179.6245 262.6875 l180.4224 263.9648 l181.2207 265.082 l182.0186 266.1992 l182.8164 267.3164 l183.4551 268.2734 l184.2529 269.3916 l185.0513 270.3486 l185.8491 271.4658 l186.647 272.4229 l187.4453 273.3809 l188.2432 274.1797 l189.041 275.1367 l189.8394 276.0938 l190.6372 276.8926 l191.4351 277.8496 l192.2329 278.6475 l193.0313 279.4453 l193.8291 280.2441 l194.627 281.041 l195.4253 281.8398 l196.2231 282.6377 l196.8613 283.4355 l197.6592 284.2344 l198.457 284.8721 l199.2554 285.6699 l200.0532 286.4688 l200.8511 287.1074 l201.6494 287.7461 l202.4473 288.543 l203.2451 289.1816 l204.0435 289.8203 l204.8413 290.458 l205.6392 291.0967 l206.4375 291.8945 l207.2354 292.5332 l208.0332 293.0117 l208.8311 293.6504 l209.6294 294.2891 l210.2681 294.9277 l211.0659 295.5645 l211.8638 296.2031 l212.6616 296.6826 l213.46 297.3213 l214.2578 297.959 l215.0557 298.4375 l215.854 299.0762 l216.6514 299.5547 l217.4492 300.1934 l218.2476 300.6729 l219.0454 301.1504 l219.8433 301.7891 l220.6416 302.2695 l221.4395 302.7471 l222.2373 303.3857 l223.0352 303.8652 l223.6738 304.3438 l224.4722 304.8223 l225.27 305.3008 l226.0679 305.7793 l226.8662 306.2588 l227.6641 306.7373 l228.4619 307.2168 l229.2598 307.6953 l230.0581 308.1738 l230.856 308.6523 l231.6538 309.1309 l232.4521 309.6104 l233.25 310.0898 l234.0479 310.5684 l234.8462 311.0469 l235.644 311.3652 l236.2822 311.8447 l237.0801 312.3232 l237.8779 312.8027 l238.6763 313.1211 l239.4741 313.5996 l240.272 314.0801 l241.0703 314.3984 l241.8682 314.877 l242.666 315.1963 l243.4639 315.6758 l244.2622 316.1543 l245.0601 316.4727 l245.8579 316.9512 l246.6563 317.2715 l247.4541 317.75 l248.252 318.0693 l249.0503 318.3887 l249.6885 318.8672 l250.4868 319.1855 l251.2847 319.666 l252.0825 319.9844 l252.8809 320.3027 l253.6787 320.7822 l254.4766 321.1016 l255.2749 321.4209 l256.0728 321.8984 l256.8706 322.2188 l257.6685 322.5371 l258.4668 322.8574 l259.2646 323.3359 l260.0625 323.6553 l260.8608 323.9746 l261.6587 324.293 l262.4565 324.6133 l263.0952 325.0918 l263.8931 325.4102 l264.6914 325.7295 l265.4893 326.0488 l266.2871 326.3682 l267.0854 326.6875 l267.8833 327.0068 l268.6812 327.3262 l269.4795 327.6455 l270.2773 327.9648 l271.0752 328.2832 l271.873 328.6035 l272.6714 328.9219 l273.4692 329.2412 l274.2671 329.5605 l275.0654 329.8789 l275.7036 330.1992 l276.5015 330.5176 l277.2993 330.8379 l278.0972 331.1563 l278.8955 331.4746 l279.6934 331.7949 l280.4912 332.1133 l281.2896 332.4336 l282.0874 332.752 l282.8853 332.9121 l283.6836 333.2314 l284.4814 333.5508 l285.2793 333.8691 l286.0776 334.1895 l286.8755 334.5078 l287.6733 334.667 l288.4712 334.9863 l289.1099 335.3057 l289.9082 335.625 l290.7061 335.9443 l291.5039 336.1035 l292.3018 336.4238 l293.1001 336.7422 l293.8979 337.0605 l294.6958 337.2207 l295.4941 337.54 l296.292 337.8594 l297.0898 338.0195 l297.8882 338.3379 l298.686 338.6572 l299.4839 338.8174 l300.2817 339.1367 l301.0801 339.4551 l301.8779 339.6152 l302.5161 339.9336 l303.314 340.2529 l304.1123 340.4141 l304.9097 340.7324 l305.7075 341.0508 l306.5059 341.2109 l307.3037 341.5303 l308.1025 341.6895 l308.9004 342.0098 l309.6992 342.1689 l310.4961 342.4883 l311.2949 342.8076 l312.0928 342.9668 l312.8906 343.2852 l313.6885 343.4453 l314.4863 343.7646 l315.2852 343.9238 l315.9238 344.2432 l316.7207 344.4033 l317.5195 344.7227 l318.3164 344.8818 l319.1152 345.2012 l319.9131 345.3613 l320.7109 345.6797 l321.5098 345.8389 l322.3066 346.1582 l323.1055 346.3184 l323.9033 346.6367 l324.7012 346.7969 l325.499 347.1162 l326.2969 347.2754 l327.0957 347.4355 l327.8926 347.7549 l328.5313 347.9141 l329.3281 348.2324 l330.127 348.3936 l330.9248 348.7129 l331.7227 348.8711 l332.5215 349.0313 l333.3184 349.3506 l334.1172 349.5098 l334.915 349.8291 l335.7129 349.9893 l336.5107 350.1484 l337.3086 350.4678 l338.1074 350.627 l338.9043 350.7871 l339.7031 351.1064 l340.501 351.2656 l341.2988 351.4258 l341.9385 351.7441 l342.7363 351.9043 l343.5342 352.0635 l344.332 352.3828 l345.1309 352.543 l345.9277 352.7021 l346.7266 353.0215 l347.5244 353.1816 l348.3223 353.3408 l349.1201 353.6602 l349.918 353.8184 l350.7168 353.9795 l351.5137 354.1387 l352.3125 354.457 l353.1104 354.6172 l353.9082 354.7773 l354.7061 355.0957 l355.3438 355.2559 l356.1426 355.415 l356.9395 355.5752 l357.7383 355.8945 l358.5361 356.0537 l359.334 356.2129 l360.1318 356.373 l360.9297 356.6924 l361.7285 356.8516 l362.5254 357.0117 l363.3242 357.1719 l364.1221 357.3301 l364.9199 357.6494 l365.7178 357.8086 l366.5156 357.9688 l367.3145 358.1289 l368.1113 358.4473 l368.75 358.6074 l369.5488 358.7676 l370.3467 358.9268 l371.1445 359.0859 l371.9424 359.4053 l372.7402 359.5654 l373.5391 359.7246 l374.3359 359.8848 l375.1348 360.043 l375.9326 360.2031 l376.7305 360.5234 l377.5283 360.6816 l378.3262 360.8418 l379.125 361.001 l379.9219 361.1611 l380.7207 361.3203 l381.3594 361.6396 l382.1572 361.7988 l382.9551 361.959 l383.7529 362.1191 l384.5508 362.2783 l385.3496 362.4375 l386.1465 362.5977 l386.9453 362.917 l387.7432 363.0762 l388.541 363.2363 l389.3398 363.3945 l390.1367 363.5547 l390.9355 363.7139 l391.7324 363.874 l392.5313 364.0332 l393.3291 364.1934 l394.127 364.5117 l394.7646 364.6719 l395.5625 364.832 l396.3613 364.9912 l397.1582 365.1504 l397.957 365.3105 l398.7549 365.4707 l399.5527 365.6299 l400.3506 365.7891 l401.1484 365.9482 l401.9473 366.2676 l402.7441 366.4277 l403.543 366.5869 l404.3408 366.7461 l405.1387 366.9063 l405.9375 367.0664 l406.7344 367.2256 l407.5332 367.3848 l408.1719 367.5449 lN172.4424 248.1641 m173.2407 249.6006 l174.0386 251.0371 l174.8364 252.3135 l175.6348 253.5908 l176.4326 254.8672 l177.2305 256.1445 l178.0283 257.2617 l178.8267 258.3789 l179.6245 259.4961 l180.4224 260.6133 l181.2207 261.5703 l182.0186 262.6875 l182.8164 263.6445 l183.4551 264.6035 l184.2529 265.5605 l185.0513 266.5176 l185.8491 267.3164 l186.647 268.2734 l187.4453 269.0723 l188.2432 269.8691 l189.041 270.8271 l189.8394 271.625 l190.6372 272.4229 l191.4351 273.2207 l192.2329 274.0195 l193.0313 274.6582 l193.8291 275.4551 l194.627 276.2539 l195.4253 276.8926 l196.2231 277.6904 l196.8613 278.3281 l197.6592 278.9668 l198.457 279.7656 l199.2554 280.4023 l200.0532 281.041 l200.8511 281.6797 l201.6494 282.3184 l202.4473 282.957 l203.2451 283.5957 l204.0435 284.2344 l204.8413 284.8721 l205.6392 285.3516 l206.4375 285.9893 l207.2354 286.627 l208.0332 287.1074 l208.8311 287.7461 l209.6294 288.3828 l210.2681 288.8623 l211.0659 289.501 l211.8638 289.9785 l212.6616 290.458 l213.46 291.0967 l214.2578 291.5752 l215.0557 292.0547 l215.854 292.6934 l216.6514 293.1709 l217.4492 293.6504 l218.2476 294.1289 l219.0454 294.7676 l219.8433 295.2461 l220.6416 295.7256 l221.4395 296.2031 l222.2373 296.6826 l223.0352 297.1611 l223.6738 297.6406 l224.4722 298.1191 l225.27 298.5977 l226.0679 299.0762 l226.8662 299.3955 l227.6641 299.875 l228.4619 300.3535 l229.2598 300.832 l230.0581 301.3115 l230.856 301.6309 l231.6538 302.1094 l232.4521 302.5879 l233.25 303.0664 l234.0479 303.3857 l234.8462 303.8652 l235.644 304.3438 l236.2822 304.6621 l237.0801 305.1406 l237.8779 305.4609 l238.6763 305.9395 l239.4741 306.2588 l240.272 306.7373 l241.0703 307.0566 l241.8682 307.5352 l242.666 307.8555 l243.4639 308.333 l244.2622 308.6523 l245.0601 309.1309 l245.8579 309.4512 l246.6563 309.7695 l247.4541 310.249 l248.252 310.5684 l249.0503 311.0469 l249.6885 311.3652 l250.4868 311.6855 l251.2847 312.0039 l252.0825 312.4834 l252.8809 312.8027 l253.6787 313.1211 l254.4766 313.4414 l255.2749 313.9189 l256.0728 314.2383 l256.8706 314.5576 l257.6685 314.877 l258.4668 315.1963 l259.2646 315.6758 l260.0625 315.9941 l260.8608 316.3125 l261.6587 316.6328 l262.4565 316.9512 l263.0952 317.2715 l263.8931 317.5898 l264.6914 317.9092 l265.4893 318.2285 l266.2871 318.5479 l267.0854 318.8672 l267.8833 319.3457 l268.6812 319.666 l269.4795 319.9844 l270.2773 320.3027 l271.0752 320.623 l271.873 320.7822 l272.6714 321.1016 l273.4692 321.4209 l274.2671 321.7402 l275.0654 322.0596 l275.7036 322.3789 l276.5015 322.6973 l277.2993 323.0166 l278.0972 323.3359 l278.8955 323.6553 l279.6934 323.9746 l280.4912 324.293 l281.2896 324.4531 l282.0874 324.7725 l282.8853 325.0918 l283.6836 325.4102 l284.4814 325.7295 l285.2793 326.0488 l286.0776 326.209 l286.8755 326.5273 l287.6733 326.8477 l288.4712 327.166 l289.1099 327.3262 l289.9082 327.6455 l290.7061 327.9648 l291.5039 328.2832 l292.3018 328.4434 l293.1001 328.7617 l293.8979 329.0811 l294.6958 329.4004 l295.4941 329.5605 l296.292 329.8789 l297.0898 330.1992 l297.8882 330.3584 l298.686 330.6777 l299.4839 330.9961 l300.2817 331.1563 l301.0801 331.4746 l301.8779 331.7949 l302.5161 331.9541 l303.314 332.2734 l304.1123 332.5928 l304.9097 332.752 l305.7075 333.0713 l306.5059 333.2314 l307.3037 333.5508 l308.1025 333.8691 l308.9004 334.0293 l309.6992 334.3477 l310.4961 334.5078 l311.2949 334.8271 l312.0928 335.1465 l312.8906 335.3057 l313.6885 335.625 l314.4863 335.7852 l315.2852 336.1035 l315.9238 336.2637 l316.7207 336.583 l317.5195 336.7422 l318.3164 337.0605 l319.1152 337.2207 l319.9131 337.54 l320.7109 337.6992 l321.5098 338.0195 l322.3066 338.1787 l323.1055 338.498 l323.9033 338.6572 l324.7012 338.9766 l325.499 339.1367 l326.2969 339.4551 l327.0957 339.6152 l327.8926 339.9336 l328.5313 340.0938 l329.3281 340.2529 l330.127 340.5723 l330.9248 340.7324 l331.7227 341.0508 l332.5215 341.2109 l333.3184 341.3711 l334.1172 341.6895 l334.915 341.8496 l335.7129 342.1689 l336.5107 342.3281 l337.3086 342.4883 l338.1074 342.8076 l338.9043 342.9668 l339.7031 343.2852 l340.501 343.4453 l341.2988 343.6055 l341.9385 343.9238 l342.7363 344.084 l343.5342 344.2432 l344.332 344.5625 l345.1309 344.7227 l345.9277 344.8818 l346.7266 345.2012 l347.5244 345.3613 l348.3223 345.5195 l349.1201 345.8389 l349.918 346 l350.7168 346.1582 l351.5137 346.3184 l352.3125 346.6367 l353.1104 346.7969 l353.9082 346.957 l354.7061 347.2754 l355.3438 347.4355 l356.1426 347.5957 l356.9395 347.7549 l357.7383 348.0742 l358.5361 348.2324 l359.334 348.3936 l360.1318 348.5527 l360.9297 348.8711 l361.7285 349.0313 l362.5254 349.1914 l363.3242 349.3506 l364.1221 349.6699 l364.9199 349.8291 l365.7178 349.9893 l366.5156 350.1484 l367.3145 350.3086 l368.1113 350.627 l368.75 350.7871 l369.5488 350.9473 l370.3467 351.1064 l371.1445 351.2656 l371.9424 351.5859 l372.7402 351.7441 l373.5391 351.9043 l374.3359 352.0635 l375.1348 352.2227 l375.9326 352.3828 l376.7305 352.7021 l377.5283 352.8613 l378.3262 353.0215 l379.125 353.1816 l379.9219 353.3408 l380.7207 353.5 l381.3594 353.6602 l382.1572 353.9795 l382.9551 354.1387 l383.7529 354.2988 l384.5508 354.457 l385.3496 354.6172 l386.1465 354.7764 l386.9453 354.9355 l387.7432 355.0957 l388.541 355.2559 l389.3398 355.5742 l390.1367 355.7344 l390.9355 355.8945 l391.7324 356.0537 l392.5313 356.2129 l393.3291 356.373 l394.127 356.5313 l394.7646 356.6924 l395.5625 356.8516 l396.3613 357.0117 l397.1582 357.1699 l397.957 357.3301 l398.7549 357.4902 l399.5527 357.6494 l400.3506 357.9688 l401.1484 358.1279 l401.9473 358.2881 l402.7441 358.4473 l403.543 358.6074 l404.3408 358.7666 l405.1387 358.9258 l405.9375 359.0859 l406.7344 359.2461 l407.5332 359.4053 l408.1719 359.5645 lN*U*u0 R0 G0.5 w 10 M316.2422 348.0742 m316.2422 349.6699 lS315.6045 349.6699 m317.04 349.6699 lS316.2422 346.6367 m316.2422 345.041 lS1 D315.6045 345.041 m317.04 345.041 lS0 D347.0449 358.2881 m347.0449 359.8848 lS1 D346.4063 359.8848 m347.8438 359.8848 lS0 D347.0449 356.6924 m347.0449 355.0957 lS1 D346.4063 355.0957 m347.8438 355.0957 lS285.4395 337.2207 m285.4395 338.498 lS284.8013 338.498 m286.2373 338.498 lS0 D285.4395 335.7852 m285.4395 334.3477 lS284.8013 334.3477 m286.2373 334.3477 lS254.6367 323.3359 m254.6367 325.5703 lS253.998 325.5703 m255.4346 325.5703 lS254.6367 321.8984 m254.6367 319.5049 lS253.998 319.5049 m255.4346 319.5049 lS1 D223.9932 306.2588 m223.9932 309.291 lS0 D223.1953 309.291 m224.6318 309.291 lS223.9932 304.8223 m223.9932 301.7891 lS223.1953 301.7891 m224.6318 301.7891 lS377.8477 367.2256 m377.8477 368.6621 lS377.0508 368.6621 m378.6465 368.6621 lS377.8477 365.7891 m377.8477 364.5127 lS377.0508 364.5127 m378.6465 364.5127 lS1 D377.8477 364.832 m377.8477 367.0664 lS377.0508 367.0664 m378.6465 367.0664 lS377.8477 363.2363 m377.8477 361.001 lS377.0508 361.001 m378.6465 361.001 lS0 D408.6504 370.2578 m408.6504 371.375 lS407.8525 371.375 m409.2891 371.375 lS1 D408.6504 368.8223 m408.6504 367.7051 lS407.8525 367.7051 m409.2891 367.7051 lS408.6504 371.2158 m408.6504 373.291 lS0 D407.8525 373.291 m409.2891 373.291 lS1 D408.6504 369.7793 m408.6504 367.7051 lS407.8525 367.7051 m409.2891 367.7051 lS0 D393.1689 367.8643 m393.1689 369.9395 lS1 D392.5313 369.9395 m393.9668 369.9395 lS393.1689 366.4277 m393.1689 364.3535 lS392.5313 364.3535 m393.9668 364.3535 lS0 D362.5254 362.2783 m362.5254 363.874 lS1 D361.7285 363.874 m363.1641 363.874 lS0 D362.5254 360.8418 m362.5254 359.0859 lS1 D361.7285 359.0859 m363.1641 359.0859 lS331.7227 353.9795 m331.7227 355.2559 lS0 D330.9248 355.2559 m332.3623 355.2559 lS1 D331.7227 352.3828 m331.7227 351.1064 lS330.9248 351.1064 m332.3623 351.1064 lS0 D300.9204 343.6055 m300.9204 345.041 lS300.1226 345.041 m301.5591 345.041 lS300.9204 342.1689 m300.9204 340.8916 lS1 D300.1226 340.8916 m301.5591 340.8916 lS0 D270.1177 331.9541 m270.1177 334.5078 lS1 D269.3198 334.5078 m270.7559 334.5078 lS270.1177 330.5176 m270.1177 328.123 lS0 D269.3198 328.123 m270.7559 328.123 lS239.3149 315.9941 m239.3149 318.5479 lS1 D238.5171 318.5479 m240.1133 318.5479 lS0 D239.3149 314.5576 m239.3149 311.8447 lS238.5171 311.8447 m240.1133 311.8447 lS1 D208.5122 293.4902 m208.5122 296.0449 lS0 D207.874 296.0449 m209.3101 296.0449 lS208.5122 292.0547 m208.5122 289.3418 lS1 D207.874 289.3418 m209.3101 289.3418 lS193.1904 277.6904 m193.1904 289.501 lS0 D192.3926 289.501 m193.8291 289.501 lS1 D193.1904 276.2539 m193.1904 264.6035 lS0 D192.3926 264.6035 m193.8291 264.6035 lS1 D193.1904 278.0098 m192.5518 277.0518 l193.1904 276.0938 l193.8291 277.0518 l193.1904 278.0098 ls208.5122 293.6504 m207.874 292.6934 l208.5122 291.7354 l209.1504 292.6934 l208.5122 293.6504 ls239.3149 316.1543 m238.6768 315.1963 l239.3149 314.2383 l239.9531 315.1963 l239.3149 316.1543 ls270.1177 332.2734 m269.4795 331.3154 l270.1177 330.3584 l270.7559 331.3154 l270.1177 332.2734 ls300.9204 343.9238 m300.2817 342.9668 l300.9204 342.0098 l301.5591 342.9668 l300.9204 343.9238 ls0 D331.7227 354.1387 m331.085 353.1816 l331.7227 352.2227 l332.3623 353.1816 l331.7227 354.1387 ls1 D362.5254 362.4375 m361.8887 361.4805 l362.5254 360.5234 l363.1641 361.4805 l362.5254 362.4375 ls393.1689 368.1836 m392.5313 367.2256 l393.1689 366.2676 l393.8086 367.2256 l393.1689 368.1836 ls408.6504 371.5352 m408.0117 370.5771 l408.6504 369.6191 l409.2891 370.5771 l408.6504 371.5352 ls408.6504 370.5771 m408.0117 369.6191 l408.6504 368.6621 l409.2891 369.6191 l408.6504 370.5771 ls377.8477 364.9912 m377.209 364.0332 l377.8477 363.0762 l378.4863 364.0332 l377.8477 364.9912 ls377.8477 367.5449 m377.209 366.5869 l377.8477 365.6299 l378.4863 366.5869 l377.8477 367.5449 ls223.9932 306.418 m223.355 305.4609 l223.9932 304.5039 l224.6318 305.4609 l223.9932 306.418 ls254.6367 323.4951 m253.998 322.5371 l254.6367 321.5801 l255.2749 322.5371 l254.6367 323.4951 ls285.4395 337.3809 m284.8013 336.4238 l285.4395 335.4648 l286.0776 336.4238 l285.4395 337.3809 ls347.0449 358.4473 m346.4063 357.4902 l347.0449 356.5332 l347.6826 357.4902 l347.0449 358.4473 ls316.2422 348.2324 m315.6045 347.2754 l316.2422 346.3184 l316.8809 347.2754 l316.2422 348.2324 ls173.0811 250.5957 m173.0811 251.125 172.6519 251.5537 172.123 251.5537 c171.5947 251.5537 171.166 251.125 171.166 250.5957 c171.166 250.0684 171.5947 249.6387 172.123 249.6387 c172.6519 249.6387 173.0811 250.0684 173.0811 250.5957 cS177.9072 260.4785 m177.9072 261.0068 177.4785 261.4365 176.9497 261.4365 c176.4209 261.4365 175.9922 261.0068 175.9922 260.4785 c175.9922 259.9512 176.4209 259.5215 176.9497 259.5215 c177.4785 259.5215 177.9072 259.9512 177.9072 260.4785 cS187.6362 274.1914 m187.6362 274.7207 187.2075 275.1494 186.6787 275.1494 c186.1504 275.1494 185.7212 274.7207 185.7212 274.1914 c185.7212 273.6621 186.1504 273.2334 186.6787 273.2334 c187.2075 273.2334 187.6362 273.6621 187.6362 274.1914 cS197.519 284.6875 m197.519 285.2158 197.0898 285.6455 196.561 285.6455 c196.0332 285.6455 195.6035 285.2158 195.6035 284.6875 c195.6035 284.1582 196.0332 283.7295 196.561 283.7295 c197.0898 283.7295 197.519 284.1582 197.519 284.6875 cS207.248 293.3438 m207.248 293.8721 206.8193 294.3008 206.2905 294.3008 c205.7617 294.3008 205.333 293.8721 205.333 293.3438 c205.333 292.8145 205.7617 292.3857 206.2905 292.3857 c206.8193 292.3857 207.248 292.8145 207.248 293.3438 cS216.9775 300.6992 m216.9775 301.2266 216.5479 301.6553 216.0195 301.6553 c215.4912 301.6553 215.062 301.2266 215.062 300.6992 c215.062 300.1699 215.4912 299.7402 216.0195 299.7402 c216.5479 299.7402 216.9775 300.1699 216.9775 300.6992 cS226.7065 307.21 m226.7065 307.7383 226.2778 308.168 225.749 308.168 c225.2202 308.168 224.7915 307.7383 224.7915 307.21 c224.7915 306.6816 225.2202 306.252 225.749 306.252 c226.2778 306.252 226.7065 306.6816 226.7065 307.21 cS236.4355 313.2617 m236.4355 313.791 236.0068 314.2188 235.4785 314.2188 c234.9497 314.2188 234.521 313.791 234.521 313.2617 c234.521 312.7324 234.9497 312.3037 235.4785 312.3037 c236.0068 312.3037 236.4355 312.7324 236.4355 313.2617 cS241.2622 315.6367 m241.2622 316.165 240.833 316.5947 240.3042 316.5947 c239.7759 316.5947 239.3467 316.165 239.3467 315.6367 c239.3467 315.1094 239.7759 314.6797 240.3042 314.6797 c240.833 314.6797 241.2622 315.1094 241.2622 315.6367 cS241.2622 315.8662 m241.2622 316.3945 240.833 316.8242 240.3042 316.8242 c239.7759 316.8242 239.3467 316.3945 239.3467 315.8662 c239.3467 315.3379 239.7759 314.9102 240.3042 314.9102 c240.833 314.9102 241.2622 315.3379 241.2622 315.8662 cS231.5327 310.4277 m231.5327 310.957 231.104 311.3848 230.5752 311.3848 c230.0469 311.3848 229.6177 310.957 229.6177 310.4277 c229.6177 309.8984 230.0469 309.4697 230.5752 309.4697 c231.104 309.4697 231.5327 309.8984 231.5327 310.4277 cS231.5327 309.2793 m231.5327 309.8066 231.104 310.2363 230.5752 310.2363 c230.0469 310.2363 229.6177 309.8066 229.6177 309.2793 c229.6177 308.75 230.0469 308.3203 230.5752 308.3203 c231.104 308.3203 231.5327 308.75 231.5327 309.2793 cS182.8105 267.9863 m182.8105 268.5156 182.3809 268.9443 181.853 268.9443 c181.3237 268.9443 180.895 268.5156 180.895 267.9863 c180.895 267.458 181.3237 267.0293 181.853 267.0293 c182.3809 267.0293 182.8105 267.458 182.8105 267.9863 cS192.5396 279.7852 m192.5396 280.3125 192.1108 280.7422 191.5815 280.7422 c191.0532 280.7422 190.624 280.3125 190.624 279.7852 c190.624 279.2559 191.0532 278.8262 191.5815 278.8262 c192.1108 278.8262 192.5396 279.2559 192.5396 279.7852 cS202.2686 289.207 m202.2686 289.7344 201.8394 290.1641 201.311 290.1641 c200.7827 290.1641 200.3535 289.7344 200.3535 289.207 c200.3535 288.6787 200.7827 288.25 201.311 288.25 c201.8394 288.25 202.2686 288.6787 202.2686 289.207 cS221.7271 303.9922 m221.7271 304.5215 221.2979 304.9512 220.7695 304.9512 c220.2412 304.9512 219.812 304.5215 219.812 303.9922 c219.812 303.4629 220.2412 303.0352 220.7695 303.0352 c221.2979 303.0352 221.7271 303.4629 221.7271 303.9922 cS211.998 297.3262 m211.998 297.8555 211.5688 298.2852 211.04 298.2852 c210.5112 298.2852 210.0825 297.8555 210.0825 297.3262 c210.0825 296.7988 210.5112 296.3701 211.04 296.3701 c211.5688 296.3701 211.998 296.7988 211.998 297.3262 cS316.2422 340.8916 m316.2422 342.0098 lS0 D315.6045 342.0098 m317.04 342.0098 lS1 D316.2422 339.4551 m316.2422 338.3379 lS315.6045 338.3379 m317.04 338.3379 lS0 D316.2422 341.0508 m316.2422 342.3281 lS1 D315.6045 342.3281 m317.04 342.3281 lS0 D316.2422 339.6152 m316.2422 338.1787 lS1 D315.6045 338.1787 m317.04 338.1787 lS316.2422 340.5723 m316.2422 343.9238 lS315.6045 343.9238 m317.04 343.9238 lS0 D316.2422 339.1367 m316.2422 335.7852 lS1 D315.6045 335.7852 m317.04 335.7852 lS0 D316.2422 340.4141 m316.2422 341.8496 lS1 D315.6045 341.8496 m317.04 341.8496 lS316.2422 338.9766 m316.2422 337.3809 lS315.6045 337.3809 m317.04 337.3809 lS0 D347.0449 349.1914 m347.0449 349.8291 lS1 D346.4063 349.8291 m347.8438 349.8291 lS0 D347.0449 347.7549 m347.0449 347.1162 lS1 D346.4063 347.1162 m347.8438 347.1162 lS0 D285.4395 330.5176 m285.4395 331.9541 lS284.8013 331.9541 m286.2373 331.9541 lS1 D285.4395 328.9219 m285.4395 327.4844 lS284.8013 327.4844 m286.2373 327.4844 lS0 D254.6367 318.3887 m254.6367 319.0273 lS253.998 319.0273 m255.4346 319.0273 lS1 D254.6367 316.9512 m254.6367 316.4727 lS0 D253.998 316.4727 m255.4346 316.4727 lS1 D223.9932 300.6729 m223.9932 301.7891 lS0 D223.1953 301.7891 m224.6318 301.7891 lS1 D223.9932 299.0762 m223.9932 297.959 lS223.1953 297.959 m224.6318 297.959 lS377.8477 355.8945 m377.8477 356.6924 lS377.0508 356.6924 m378.6465 356.6924 lS0 D377.8477 354.457 m377.8477 353.8184 lS377.0508 353.8184 m378.6465 353.8184 lS408.6504 362.1191 m408.6504 362.7578 lS407.8525 362.7578 m409.2891 362.7578 lS1 D408.6504 360.6816 m408.6504 360.043 lS407.8525 360.043 m409.2891 360.043 lS0 D393.1689 358.9268 m393.1689 359.8848 lS392.5313 359.8848 m393.9668 359.8848 lS393.1689 357.4902 m393.1689 356.6924 lS392.5313 356.6924 m393.9668 356.6924 lS362.5254 352.543 m362.5254 353.8184 lS1 D361.7285 353.8184 m363.1641 353.8184 lS362.5254 351.1064 m362.5254 349.8291 lS0 D361.7285 349.8291 m363.1641 349.8291 lS1 D331.7227 345.2012 m331.7227 346 lS330.9248 346 m332.3623 346 lS331.7227 343.7646 m331.7227 342.9668 lS330.9248 342.9668 m332.3623 342.9668 lS300.9204 335.4648 m300.9204 336.7422 lS0 D300.1226 336.7422 m301.5591 336.7422 lS300.9204 334.0293 m300.9204 332.9121 lS1 D300.1226 332.9121 m301.5591 332.9121 lS0 D270.1177 324.4531 m270.1177 325.7295 lS269.3198 325.7295 m270.7559 325.7295 lS270.1177 323.0166 m270.1177 321.7402 lS1 D269.3198 321.7402 m270.7559 321.7402 lS239.3149 309.9297 m239.3149 310.7266 lS0 D238.5171 310.7266 m240.1133 310.7266 lS239.3149 308.4932 m239.3149 307.5352 lS1 D238.5171 307.5352 m240.1133 307.5352 lS208.5122 289.8203 m208.5122 290.1387 lS207.874 290.1387 m209.3101 290.1387 lS0 D208.5122 288.3828 m208.5122 288.0645 lS1 D207.874 288.0645 m209.3101 288.0645 lS193.1904 273.3809 m193.1904 276.7324 lS192.3926 276.7324 m193.8291 276.7324 lS0 D193.1904 271.9453 m193.1904 268.5938 lS192.3926 268.5938 m193.8291 268.5938 lS1 D192.2329 272.4229 m192.8711 272.4229 l192.8711 271.7852 l193.5098 271.7852 l193.5098 272.4229 l194.1479 272.4229 l194.1479 273.0615 l193.5098 273.0615 l193.5098 273.7002 l192.8711 273.7002 l192.8711 273.0615 l192.2329 273.0615 l192.2329 272.4229 ls207.5547 288.8623 m208.1934 288.8623 l208.1934 288.2236 l208.8311 288.2236 l208.8311 288.8623 l209.4697 288.8623 l209.4697 289.501 l208.8311 289.501 l208.8311 290.1387 l208.1934 290.1387 l208.1934 289.501 l207.5547 289.501 l207.5547 288.8623 ls238.3574 308.8125 m238.9956 308.8125 l238.9956 308.1738 l239.6338 308.1738 l239.6338 308.8125 l240.2725 308.8125 l240.2725 309.4512 l239.6338 309.4512 l239.6338 310.0898 l238.9956 310.0898 l238.9956 309.4512 l238.3574 309.4512 l238.3574 308.8125 ls269.1602 323.4951 m269.7983 323.4951 l269.7983 322.8574 l270.437 322.8574 l270.437 323.4951 l271.0752 323.4951 l271.0752 324.1338 l270.437 324.1338 l270.437 324.7725 l269.7983 324.7725 l269.7983 324.1338 l269.1602 324.1338 l269.1602 323.4951 ls299.9629 334.5078 m300.6011 334.5078 l300.6011 333.8691 l301.2397 333.8691 l301.2397 334.5078 l301.8779 334.5078 l301.8779 335.1465 l301.2397 335.1465 l301.2397 335.7852 l300.6011 335.7852 l300.6011 335.1465 l299.9629 335.1465 l299.9629 334.5078 ls330.7656 344.084 m331.4043 344.084 l331.4043 343.4453 l332.043 343.4453 l332.043 344.084 l332.6816 344.084 l332.6816 344.7227 l332.043 344.7227 l332.043 345.3613 l331.4043 345.3613 l331.4043 344.7227 l330.7656 344.7227 l330.7656 344.084 ls361.5684 351.5859 m362.207 351.5859 l362.207 350.9473 l362.8447 350.9473 l362.8447 351.5859 l363.4844 351.5859 l363.4844 352.2227 l362.8447 352.2227 l362.8447 352.8613 l362.207 352.8613 l362.207 352.2227 l361.5684 352.2227 l361.5684 351.5859 ls392.2129 357.9688 m392.8496 357.9688 l392.8496 357.3301 l393.4883 357.3301 l393.4883 357.9688 l394.127 357.9688 l394.127 358.6074 l393.4883 358.6074 l393.4883 359.2461 l392.8496 359.2461 l392.8496 358.6074 l392.2129 358.6074 l392.2129 357.9688 ls0 D407.6934 361.1611 m408.3301 361.1611 l408.3301 360.5234 l408.9707 360.5234 l408.9707 361.1611 l409.6074 361.1611 l409.6074 361.7988 l408.9707 361.7988 l408.9707 362.4375 l408.3301 362.4375 l408.3301 361.7988 l407.6934 361.7988 l407.6934 361.1611 ls1 D376.8906 354.9375 m377.5283 354.9375 l377.5283 354.2988 l378.167 354.2988 l378.167 354.9375 l378.8047 354.9375 l378.8047 355.5752 l378.167 355.5752 l378.167 356.2129 l377.5283 356.2129 l377.5283 355.5752 l376.8906 355.5752 l376.8906 354.9375 ls223.0356 299.5547 m223.6738 299.5547 l223.6738 298.918 l224.3125 298.918 l224.3125 299.5547 l224.9512 299.5547 l224.9512 300.1934 l224.3125 300.1934 l224.3125 300.832 l223.6738 300.832 l223.6738 300.1934 l223.0356 300.1934 l223.0356 299.5547 ls253.6792 317.4307 m254.3174 317.4307 l254.3174 316.792 l254.9561 316.792 l254.9561 317.4307 l255.5938 317.4307 l255.5938 318.0693 l254.9561 318.0693 l254.9561 318.707 l254.3174 318.707 l254.3174 318.0693 l253.6792 318.0693 l253.6792 317.4307 ls284.4819 329.4004 m285.1201 329.4004 l285.1201 328.7617 l285.7588 328.7617 l285.7588 329.4004 l286.397 329.4004 l286.397 330.0391 l285.7588 330.0391 l285.7588 330.6777 l285.1201 330.6777 l285.1201 330.0391 l284.4819 330.0391 l284.4819 329.4004 ls346.0869 348.0742 m346.7266 348.0742 l346.7266 347.4355 l347.3633 347.4355 l347.3633 348.0742 l348.002 348.0742 l348.002 348.7129 l347.3633 348.7129 l347.3633 349.3506 l346.7266 349.3506 l346.7266 348.7129 l346.0869 348.7129 l346.0869 348.0742 ls315.2852 339.2949 m315.9238 339.2949 l315.9238 338.6572 l316.5605 338.6572 l316.5605 339.2949 l317.2002 339.2949 l317.2002 339.9336 l316.5605 339.9336 l316.5605 340.5723 l315.9238 340.5723 l315.9238 339.9336 l315.2852 339.9336 l315.2852 339.2949 ls315.2852 339.6152 m315.9238 339.6152 l315.9238 338.9766 l316.5605 338.9766 l316.5605 339.6152 l317.2002 339.6152 l317.2002 340.2529 l316.5605 340.2529 l316.5605 340.8916 l315.9238 340.8916 l315.9238 340.2529 l315.2852 340.2529 l315.2852 339.6152 ls315.2852 339.9336 m315.9238 339.9336 l315.9238 339.2949 l316.5605 339.2949 l316.5605 339.9336 l317.2002 339.9336 l317.2002 340.5723 l316.5605 340.5723 l316.5605 341.2109 l315.9238 341.2109 l315.9238 340.5723 l315.2852 340.5723 l315.2852 339.9336 ls315.2852 339.9336 m315.9238 339.9336 l315.9238 339.2949 l316.5605 339.2949 l316.5605 339.9336 l317.2002 339.9336 l317.2002 340.5723 l316.5605 340.5723 l316.5605 341.2109 l315.9238 341.2109 l315.9238 340.5723 l315.2852 340.5723 l315.2852 339.9336 ls172.123 248.6436 m171.166 248.6436 l171.166 246.7275 l173.0811 246.7275 l173.0811 248.6436 l172.123 248.6436 ls176.9111 258.0586 m175.9536 258.0586 l175.9536 256.1445 l177.8691 256.1445 l177.8691 258.0586 l176.9111 258.0586 ls186.647 271.1465 m185.6895 271.1465 l185.6895 269.2305 l187.6045 269.2305 l187.6045 271.1465 l186.647 271.1465 ls196.542 281.2012 m195.5845 281.2012 l195.5845 279.2861 l197.5 279.2861 l197.5 281.2012 l196.542 281.2012 ls206.2778 289.501 m205.3198 289.501 l205.3198 287.585 l207.2354 287.585 l207.2354 289.501 l206.2778 289.501 ls216.0132 296.5234 m215.0557 296.5234 l215.0557 294.6074 l216.9712 294.6074 l216.9712 296.5234 l216.0132 296.5234 ls225.749 302.7471 m224.7915 302.7471 l224.7915 300.832 l226.7065 300.832 l226.7065 302.7471 l225.749 302.7471 ls235.4844 308.333 m234.5273 308.333 l234.5273 306.418 l236.4419 306.418 l236.4419 308.333 l235.4844 308.333 ls*U*u240.2725 310.8867 m239.3149 310.8867 l239.3149 308.9717 l241.23 308.9717 l241.23 310.8867 l240.2725 310.8867 ls230.5371 305.7793 m229.5791 305.7793 l229.5791 303.8652 l231.4946 303.8652 l231.4946 305.7793 l230.5371 305.7793 ls181.8594 265.2412 m180.9014 265.2412 l180.9014 263.3262 l182.8164 263.3262 l182.8164 265.2412 l181.8594 265.2412 ls191.5947 276.4131 m190.6372 276.4131 l190.6372 274.498 l192.5518 274.498 l192.5518 276.4131 l191.5947 276.4131 ls201.3301 285.3516 m200.3726 285.3516 l200.3726 283.4355 l202.2881 283.4355 l202.2881 285.3516 l201.3301 285.3516 ls220.8013 299.7148 m219.8438 299.7148 l219.8438 297.7998 l221.7593 297.7998 l221.7593 299.7148 l220.8013 299.7148 ls211.0659 292.8516 m210.1079 292.8516 l210.1079 290.9375 l212.0234 290.9375 l212.0234 292.8516 l211.0659 292.8516 ls211.0659 292.8516 m210.1079 292.8516 l210.1079 290.9375 l212.0234 290.9375 l212.0234 292.8516 l211.0659 292.8516 ls211.0659 293.4902 m210.1079 293.4902 l210.1079 291.5752 l212.0234 291.5752 l212.0234 293.4902 l211.0659 293.4902 ls211.0659 293.1709 m210.1079 293.1709 l210.1079 291.2559 l212.0234 291.2559 l212.0234 293.1709 l211.0659 293.1709 ls316.2422 330.5176 m316.2422 332.4336 lS0 D315.6045 332.4336 m317.04 332.4336 lS1 D316.2422 329.5605 m316.2422 327.6455 lS0 D315.6045 327.6455 m317.04 327.6455 lS1 D347.0449 338.9766 m347.0449 339.9336 lS346.4063 339.9336 m347.8438 339.9336 lS0 D347.0449 338.0195 m347.0449 336.9023 lS1 D346.4063 336.9023 m347.8438 336.9023 lS0 D285.4395 321.2617 m285.4395 322.8574 lS1 D284.8013 322.8574 m286.2373 322.8574 lS285.4395 320.3027 m285.4395 318.5479 lS284.8013 318.5479 m286.2373 318.5479 lS0 D254.6367 309.291 m254.6367 311.0469 lS1 D253.998 311.0469 m255.4346 311.0469 lS0 D254.6367 308.333 m254.6367 306.418 lS253.998 306.418 m255.4346 306.418 lS1 D223.9932 292.5332 m223.9932 294.6074 lS0 D223.1953 294.6074 m224.6318 294.6074 lS223.9932 291.7354 m223.9932 289.501 lS1 D223.1953 289.501 m224.6318 289.501 lS377.8477 345.5195 m377.8477 346.7969 lS0 D377.0508 346.7969 m378.6465 346.7969 lS377.8477 344.7227 m377.8477 343.4453 lS377.0508 343.4453 m378.6465 343.4453 lS408.6504 351.7441 m408.6504 353.3408 lS1 D407.8525 353.3408 m409.2891 353.3408 lS0 D408.6504 350.7871 m408.6504 349.0313 lS1 D407.8525 349.0313 m409.2891 349.0313 lS393.1689 348.0742 m393.1689 349.3506 lS0 D392.5313 349.3506 m393.9668 349.3506 lS1 D393.1689 347.1162 m393.1689 345.8389 lS392.5313 345.8389 m393.9668 345.8389 lS362.5254 342.4883 m362.5254 343.6055 lS361.7285 343.6055 m363.1641 343.6055 lS0 D362.5254 341.6895 m362.5254 340.5723 lS361.7285 340.5723 m363.1641 340.5723 lS331.7227 335.625 m331.7227 337.54 lS1 D330.9248 337.54 m332.3623 337.54 lS0 D331.7227 334.8271 m331.7227 332.9121 lS1 D330.9248 332.9121 m332.3623 332.9121 lS300.9204 326.8477 m300.9204 328.123 lS0 D300.1226 328.123 m301.5591 328.123 lS1 D300.9204 325.8887 m300.9204 324.6133 lS300.1226 324.6133 m301.5591 324.6133 lS270.1177 315.0371 m270.1177 316.4727 lS0 D269.3198 316.4727 m270.7559 316.4727 lS270.1177 314.2383 m270.1177 312.8027 lS1 D269.3198 312.8027 m270.7559 312.8027 lS0 D239.3149 301.3115 m239.3149 303.0664 lS1 D238.5171 303.0664 m240.1133 303.0664 lS239.3149 300.5137 m239.3149 298.7568 lS238.5171 298.7568 m240.1133 298.7568 lS0 D208.5122 282.4785 m208.5122 284.8721 lS1 D207.874 284.8721 m209.3101 284.8721 lS208.5122 281.5215 m208.5122 279.127 lS0 D207.874 279.127 m209.3101 279.127 lS193.1904 270.668 m193.1904 276.5732 lS1 D192.3926 276.5732 m193.8291 276.5732 lS0 D193.1904 269.8691 m193.1904 263.8047 lS1 D192.3926 263.8047 m193.8291 263.8047 lS*U*u0.75 w172.123 244.6533 m171.166 242.7383 l173.0811 242.7383 l172.123 244.6533 ls176.9111 253.4316 m175.9536 251.5156 l177.8691 251.5156 l176.9111 253.4316 ls186.647 265.7207 m185.6895 263.8047 l187.6045 263.8047 l186.647 265.7207 ls196.542 275.1367 m195.5845 273.2207 l197.5 273.2207 l196.542 275.1367 ls206.2778 282.7969 m205.3198 280.8828 l207.2354 280.8828 l206.2778 282.7969 ls216.0132 289.501 m215.0557 287.585 l216.9712 287.585 l216.0132 289.501 ls225.749 295.4063 m224.7915 293.4902 l226.7065 293.4902 l225.749 295.4063 ls235.4844 300.6729 m234.5273 298.7568 l236.4419 298.7568 l235.4844 300.6729 ls240.2725 303.0664 m239.3149 301.1504 l241.23 301.1504 l240.2725 303.0664 ls230.5371 297.959 m229.5791 296.0449 l231.4946 296.0449 l230.5371 297.959 ls181.8594 260.293 m180.9014 258.3789 l182.8164 258.3789 l181.8594 260.293 ls191.5947 270.668 m190.6372 268.7529 l192.5518 268.7529 l191.5947 270.668 ls201.3301 279.127 m200.3726 277.2109 l202.2881 277.2109 l201.3301 279.127 ls220.8013 292.5332 m219.8438 290.6172 l221.7593 290.6172 l220.8013 292.5332 ls211.0659 286.3086 m210.1079 284.3926 l212.0234 284.3926 l211.0659 286.3086 ls*U0 D0 O0 g1 w 4 M1 XR405.7588 287.9043 m405.7588 288.6973 405.1152 289.3418 404.3223 289.3418 c403.5293 289.3418 402.8857 288.6973 402.8857 287.9043 c402.8857 287.1113 403.5293 286.4688 404.3223 286.4688 c405.1152 286.4688 405.7588 287.1113 405.7588 287.9043 cF279.585 287.5977 m279.585 288.3906 278.9419 289.0342 278.1489 289.0342 c277.356 289.0342 276.7124 288.3906 276.7124 287.5977 c276.7124 286.8047 277.356 286.1621 278.1489 286.1621 c278.9419 286.1621 279.585 286.8047 279.585 287.5977 cF201.5981 280.0898 m201.5981 280.8838 200.9551 281.5273 200.1621 281.5273 c199.3691 281.5273 198.7256 280.8838 198.7256 280.0898 c198.7256 279.2969 199.3691 278.6543 200.1621 278.6543 c200.9551 278.6543 201.5981 279.2969 201.5981 280.0898 cF188.5747 273.8086 m188.5747 274.6016 187.9316 275.2441 187.1387 275.2441 c186.3457 275.2441 185.7021 274.6016 185.7021 273.8086 c185.7021 273.0156 186.3457 272.3721 187.1387 272.3721 c187.9316 272.3721 188.5747 273.0156 188.5747 273.8086 cF176.3179 266.5313 m176.3179 267.3232 175.6743 267.9668 174.8809 267.9668 c174.0884 267.9668 173.4448 267.3232 173.4448 266.5313 c173.4448 265.7383 174.0884 265.0938 174.8809 265.0938 c175.6743 265.0938 176.3179 265.7383 176.3179 266.5313 cF170.4956 263.8496 m170.4956 264.6426 169.8516 265.2871 169.0591 265.2871 c168.2661 265.2871 167.623 264.6426 167.623 263.8496 c167.623 263.0566 168.2661 262.4141 169.0591 262.4141 c169.8516 262.4141 170.4956 263.0566 170.4956 263.8496 cF373.6602 292.6543 m373.6602 293.4473 373.0156 294.0918 372.2227 294.0918 c371.4307 294.0918 370.7871 293.4473 370.7871 292.6543 c370.7871 291.8613 371.4307 291.2188 372.2227 291.2188 c373.0156 291.2188 373.6602 291.8613 373.6602 292.6543 cF250.168 288.6709 m250.168 289.4648 249.5244 290.1074 248.7314 290.1074 c247.938 290.1074 247.2949 289.4648 247.2949 288.6709 c247.2949 287.877 247.938 287.2344 248.7314 287.2344 c249.5244 287.2344 250.168 287.877 250.168 288.6709 cF216.4604 285.4531 m216.4604 286.2461 215.8169 286.8896 215.0239 286.8896 c214.231 286.8896 213.5879 286.2461 213.5879 285.4531 c213.5879 284.6602 214.231 284.0176 215.0239 284.0176 c215.8169 284.0176 216.4604 284.6602 216.4604 285.4531 cF196.6958 283.7676 m196.6958 284.5605 196.0518 285.2031 195.2593 285.2031 c194.4658 285.2031 193.8228 284.5605 193.8228 283.7676 c193.8228 282.9746 194.4658 282.3311 195.2593 282.3311 c196.0518 282.3311 196.6958 282.9746 196.6958 283.7676 cF183.8252 272.124 m183.8252 272.916 183.1816 273.5596 182.3892 273.5596 c181.5962 273.5596 180.9526 272.916 180.9526 272.124 c180.9526 271.3311 181.5962 270.6875 182.3892 270.6875 c183.1816 270.6875 183.8252 271.3311 183.8252 272.124 cF172.9473 262.3184 m172.9473 263.1113 172.3037 263.7539 171.5107 263.7539 c170.7173 263.7539 170.0737 263.1113 170.0737 262.3184 c170.0737 261.5244 170.7173 260.8809 171.5107 260.8809 c172.3037 260.8809 172.9473 261.5244 172.9473 262.3184 cF168.8101 254.5039 m168.8101 255.2969 168.166 255.9395 167.3735 255.9395 c166.5811 255.9395 165.9375 255.2969 165.9375 254.5039 c165.9375 253.71 166.5811 253.0664 167.3735 253.0664 c168.166 253.0664 168.8101 253.71 168.8101 254.5039 cF167.1245 248.6807 m167.1245 249.4736 166.481 250.1172 165.688 250.1172 c164.8955 250.1172 164.252 249.4736 164.252 248.6807 c164.252 247.8887 164.8955 247.2451 165.688 247.2451 c166.481 247.2451 167.1245 247.8887 167.1245 248.6807 cF165.439 236.6543 m165.439 237.4463 164.7954 238.0898 164.0029 238.0898 c163.21 238.0898 162.5664 237.4463 162.5664 236.6543 c162.5664 235.8613 163.21 235.2168 164.0029 235.2168 c164.7954 235.2168 165.439 235.8613 165.439 236.6543 cF164.9795 229.6816 m164.9795 230.4756 164.3359 231.1191 163.5435 231.1191 c162.7505 231.1191 162.1069 230.4756 162.1069 229.6816 c162.1069 228.8887 162.7505 228.2461 163.5435 228.2461 c164.3359 228.2461 164.9795 228.8887 164.9795 229.6816 cF164.8262 228.0742 m164.8262 228.8672 164.1831 229.5107 163.3896 229.5107 c162.5972 229.5107 161.9536 228.8672 161.9536 228.0742 c161.9536 227.2813 162.5972 226.6377 163.3896 226.6377 c164.1831 226.6377 164.8262 227.2813 164.8262 228.0742 cF318.043 289.666 m318.043 290.46 317.4004 291.1035 316.6064 291.1035 c315.8125 291.1035 315.1699 290.46 315.1699 289.666 c315.1699 288.873 315.8125 288.2305 316.6064 288.2305 c317.4004 288.2305 318.043 288.873 318.043 289.666 cF223.9678 284.5332 m223.9678 285.3262 223.3242 285.9688 222.5313 285.9688 c221.7383 285.9688 221.0952 285.3262 221.0952 284.5332 c221.0952 283.7412 221.7383 283.0977 222.5313 283.0977 c223.3242 283.0977 223.9678 283.7412 223.9678 284.5332 cF208.9526 281.6992 m208.9526 282.4922 208.3096 283.1357 207.5161 283.1357 c206.7236 283.1357 206.0796 282.4922 206.0796 281.6992 c206.0796 280.9072 206.7236 280.2637 207.5161 280.2637 c208.3096 280.2637 208.9526 280.9072 208.9526 281.6992 cF194.3208 275.6465 m194.3208 276.4395 193.6772 277.084 192.8843 277.084 c192.0913 277.084 191.4478 276.4395 191.4478 275.6465 c191.4478 274.8545 192.0913 274.2109 192.8843 274.2109 c193.6772 274.2109 194.3208 274.8545 194.3208 275.6465 cF178.999 267.6807 m178.999 268.4727 178.3555 269.1172 177.563 269.1172 c176.7695 269.1172 176.126 268.4727 176.126 267.6807 c176.126 266.8867 176.7695 266.2441 177.563 266.2441 c178.3555 266.2441 178.999 266.8867 178.999 267.6807 cF175.0151 261.7051 m175.0151 262.498 174.3716 263.1406 173.5791 263.1406 c172.7861 263.1406 172.1426 262.498 172.1426 261.7051 c172.1426 260.9121 172.7861 260.2676 173.5791 260.2676 c174.3716 260.2676 175.0151 260.9121 175.0151 261.7051 cF171.4912 257.2617 m171.4912 258.0547 170.8477 258.6973 170.0547 258.6973 c169.2622 258.6973 168.6182 258.0547 168.6182 257.2617 c168.6182 256.4688 169.2622 255.8252 170.0547 255.8252 c170.8477 255.8252 171.4912 256.4688 171.4912 257.2617 cF167.5078 249.293 m167.5078 250.0869 166.8647 250.7305 166.0713 250.7305 c165.2783 250.7305 164.6348 250.0869 164.6348 249.293 c164.6348 248.501 165.2783 247.8574 166.0713 247.8574 c166.8647 247.8574 167.5078 248.501 167.5078 249.293 cF166.2056 243.5488 m166.2056 244.3418 165.562 244.9844 164.769 244.9844 c163.9761 244.9844 163.333 244.3418 163.333 243.5488 c163.333 242.7559 163.9761 242.1113 164.769 242.1113 c165.562 242.1113 166.2056 242.7559 166.2056 243.5488 cF164.9795 224.8564 m164.9795 225.6494 164.3359 226.293 163.5435 226.293 c162.7505 226.293 162.1069 225.6494 162.1069 224.8564 c162.1069 224.0645 162.7505 223.4199 163.5435 223.4199 c164.3359 223.4199 164.9795 224.0645 164.9795 224.8564 cF164.8262 223.0947 m164.8262 223.8877 164.1831 224.5313 163.3896 224.5313 c162.5972 224.5313 161.9536 223.8877 161.9536 223.0947 c161.9536 222.3008 162.5972 221.6582 163.3896 221.6582 c164.1831 221.6582 164.8262 222.3008 164.8262 223.0947 cF164.6733 221.0254 m164.6733 221.8193 164.0298 222.4629 163.2368 222.4629 c162.4438 222.4629 161.8003 221.8193 161.8003 221.0254 c161.8003 220.2324 162.4438 219.5898 163.2368 219.5898 c164.0298 219.5898 164.6733 220.2324 164.6733 221.0254 cF164.4434 217.3486 m164.4434 218.1406 163.7998 218.7852 163.0073 218.7852 c162.2144 218.7852 161.5708 218.1406 161.5708 217.3486 c161.5708 216.5566 162.2144 215.9131 163.0073 215.9131 c163.7998 215.9131 164.4434 216.5566 164.4434 217.3486 cF*u0 R0 G0.4 w 10 M0 XR163.5054 228.5332 m166.0586 248.1641 l168.4526 257.1016 l170.8467 262.3691 l173.2407 265.8799 l175.6348 268.5938 l178.0283 270.668 l180.4224 272.4229 l182.9761 273.7002 l185.3701 274.9775 l187.7642 275.9346 l190.1582 276.8926 l192.5518 277.6904 l194.9458 278.3281 l197.5 278.9668 l199.894 279.6055 l202.2881 280.084 l204.6816 280.5635 l207.0757 281.041 l209.4697 281.5215 l212.0234 281.8398 l214.4175 282.1592 l216.811 282.6377 l219.2051 282.957 l221.5991 283.2764 l223.9932 283.5957 l226.5474 283.7559 l228.9409 284.0742 l231.335 284.3926 l233.729 284.5527 l236.123 284.8721 l238.5171 285.0313 l241.0703 285.1914 l243.4644 285.5107 l245.8584 285.6699 l248.2524 285.8301 l250.6465 285.9893 l253.0405 286.3086 l255.4346 286.4688 l257.9878 286.627 l260.3818 286.7871 l262.7759 286.9473 l265.1699 287.1074 l267.564 287.2656 l269.958 287.4258 l272.5117 287.585 l274.9058 287.585 l277.2998 287.7461 l279.6938 287.9043 l282.0879 288.0645 lS282.0879 288.0645 m284.4819 288.2236 l287.0352 288.3828 l289.4292 288.3828 l291.8232 288.543 l294.2173 288.7031 l296.6113 288.8623 l299.0054 288.8623 l301.5591 289.0215 l303.9531 289.1816 l306.3472 289.1816 l308.7412 289.3418 l311.1348 289.501 l313.5293 289.501 l316.082 289.6602 l318.4766 289.6602 l320.8711 289.8203 l323.2646 289.9785 l325.6582 289.9785 l328.0527 290.1387 l330.4473 290.1387 l333 290.2988 l335.3945 290.2988 l337.7881 290.458 l340.1816 290.458 l342.5762 290.6172 l344.9697 290.6172 l347.5244 290.7773 l349.918 290.7773 l352.3125 290.9375 l354.7061 290.9375 l357.0996 291.0967 l359.4941 291.0967 l362.0469 291.2559 l364.4414 291.2559 l366.835 291.416 l371.623 291.416 l374.0166 291.5752 l376.5713 291.5752 l378.9648 291.7354 l381.3594 291.7354 l383.7529 291.8945 l388.541 291.8945 l391.0947 292.0547 l393.4883 292.0547 l395.8828 292.2139 l400.6699 292.2139 lS400.6699 292.2139 m403.0645 292.373 lS*U0 O0 g1 w 4 M1 XR367.3145 472.4023 m365.8789 469.5293 l368.75 469.5293 l367.3145 472.4023 lf315.2852 436.4922 m313.8477 433.6196 l316.7207 433.6196 l315.2852 436.4922 lf262.6167 378.2383 m261.1802 375.3652 l264.0532 375.3652 l262.6167 378.2383 lf211.2251 316.9512 m209.7891 314.0801 l212.6616 314.0801 l211.2251 316.9512 lf186.8066 291.416 m185.3701 288.543 l188.2432 288.543 l186.8066 291.416 lf182.9761 277.3711 m181.54 274.498 l184.4126 274.498 l182.9761 277.3711 lf177.2305 262.8477 m175.7939 259.9746 l178.667 259.9746 l177.2305 262.8477 lf172.6021 244.6533 m171.166 241.7803 l174.0386 241.7803 l172.6021 244.6533 lf170.3677 228.6934 m168.9312 225.8203 l171.8042 225.8203 l170.3677 228.6934 lf*u0 R0 G0.4 w 10 M0 XR165.4199 194.8574 m167.4951 209.0625 l169.5698 225.0225 l171.6445 236.9922 l173.5601 246.7275 l175.6348 254.707 l177.7095 261.7305 l179.7842 267.7949 l181.8594 273.2207 l183.9341 278.0098 l185.8491 282.6377 l187.9238 286.7871 l189.9985 290.6172 l192.0732 294.2891 l194.1479 297.7998 l196.2231 301.1504 l198.2979 304.3438 l200.2134 307.5352 l202.2881 310.5684 l204.3628 313.4414 l206.4375 316.1543 l208.5122 318.8672 l210.5869 321.5801 l212.502 324.1338 l214.5771 326.8477 l216.6519 329.2412 l218.7266 331.7949 l220.8013 334.1895 l222.876 336.583 l224.9512 338.9766 l226.8662 341.2109 l228.9409 343.6055 l231.0156 345.8389 l233.0903 348.0742 l235.165 350.3086 l237.2397 352.543 l239.1553 354.7773 l241.23 356.8516 l243.3052 359.0859 l245.3799 361.1611 l247.4546 363.2363 l249.5293 365.3105 l251.604 367.3848 l253.519 369.4609 l255.5938 371.5352 l257.6689 373.6094 l259.7437 375.6846 l261.8184 377.7598 l263.8931 379.6748 l265.8086 381.749 lS265.8086 381.749 m267.8833 383.665 l269.958 385.7402 l272.0332 387.6543 l274.1079 389.7295 l276.1826 391.6445 l278.2573 393.5596 l280.1724 395.6348 l282.2471 397.5498 l284.3218 399.4648 l286.397 401.3804 l288.4717 403.2954 l290.5464 405.2109 l292.4619 407.1255 l294.5366 409.041 l296.6113 410.9561 l298.686 412.8716 l300.7612 414.7866 l302.8359 416.542 l304.751 418.4575 l306.8262 420.3726 l308.9004 422.2876 l310.9746 424.0435 l313.0498 425.959 l315.125 427.8735 l317.2002 429.6294 l319.1152 431.5449 l321.1904 433.3003 l323.2646 435.2153 l325.3389 436.9707 l327.4141 438.8862 l329.4893 440.6416 l331.4043 442.5571 l333.4785 444.313 l335.5547 446.2275 l337.6289 447.9834 l339.7031 449.8989 l341.7773 451.6543 l343.8535 453.4097 l345.7676 455.3247 l347.8438 457.0806 l349.918 458.8364 l351.9922 460.5918 l354.0664 462.5068 l356.1426 464.2627 l358.0566 466.0181 l360.1318 467.7734 l362.207 469.5293 l364.2822 471.4448 l366.3564 473.2002 lS*U0 0 0 XA[3 3 ]0 d172.4424 252.3135 m173.2407 253.9102 l174.0386 255.3457 l174.8364 256.9424 l175.6348 258.2188 l176.4326 259.6553 l177.2305 260.9316 l178.0283 262.209 l178.8267 263.4863 l179.6245 264.7627 l180.4224 265.8799 l181.2207 266.998 l182.0186 268.1143 l182.8164 269.2305 l183.4551 270.3486 l184.2529 271.3066 l185.0513 272.2637 l185.8491 273.3809 l186.647 274.3389 l187.4453 275.1367 l188.2432 276.0938 l189.041 277.0518 l189.8394 278.0098 l190.6372 278.8066 l191.4351 279.6055 l192.2329 280.5635 l193.0313 281.3613 l193.8291 282.1592 l194.627 282.957 l195.4253 283.7559 l196.2231 284.5527 l196.8613 285.3516 l197.6592 285.9893 l198.457 286.7871 l199.2554 287.585 l200.0532 288.2236 l200.8511 289.0215 l201.6494 289.6602 l202.4473 290.2988 l203.2451 291.0967 l204.0435 291.7354 l204.8413 292.373 l205.6392 293.0117 l206.4375 293.6504 l207.2354 294.2891 l208.0332 294.9277 l208.8311 295.5645 l209.6294 296.2031 l210.2681 296.8418 l211.0659 297.4805 l211.8638 297.959 l212.6616 298.5977 l213.46 299.2363 l214.2578 299.7148 l215.0557 300.3535 l215.854 300.832 l216.6514 301.4707 l217.4492 301.9492 l218.2476 302.5879 l219.0454 303.0664 l219.8433 303.7051 l220.6416 304.1836 l221.4395 304.6621 l222.2373 305.1406 l223.0352 305.7793 l223.6738 306.2588 l224.4722 306.7373 l225.27 307.2168 l226.0679 307.6953 l226.8662 308.1738 l227.6641 308.8125 l228.4619 309.291 l229.2598 309.7695 l230.0581 310.249 l230.856 310.7266 l231.6538 311.0469 l232.4521 311.5254 l233.25 312.0039 l234.0479 312.4834 l234.8462 312.9609 l235.644 313.4414 l236.2822 313.9189 l237.0801 314.2383 l237.8779 314.7168 l238.6763 315.1963 l239.4741 315.6758 l240.272 315.9941 l241.0703 316.4727 l241.8682 316.9512 l242.666 317.2715 l243.4639 317.75 l244.2622 318.0693 l245.0601 318.5479 l245.8579 319.0273 l246.6563 319.3457 l247.4541 319.8242 l248.252 320.1436 l249.0503 320.623 l249.6885 320.9414 l250.4868 321.4209 l251.2847 321.7402 l252.0825 322.0596 l252.8809 322.5371 l253.6787 322.8574 l254.4766 323.3359 l255.2749 323.6553 l256.0728 323.9746 l256.8706 324.4531 l257.6685 324.7725 l258.4668 325.0918 l259.2646 325.5703 l260.0625 325.8887 l260.8608 326.209 l261.6587 326.5273 l262.4565 327.0068 l263.0952 327.3262 l263.8931 327.6455 l264.6914 327.9648 l265.4893 328.2832 l266.2871 328.6035 l267.0854 329.0811 l267.8833 329.4004 l268.6812 329.7197 l269.4795 330.0391 l270.2773 330.3584 l271.0752 330.6777 l271.873 330.9961 l272.6714 331.3154 l273.4692 331.6348 l274.2671 331.9541 l275.0654 332.2734 l275.7036 332.752 l276.5015 333.0713 l277.2993 333.3906 l278.0972 333.709 l278.8955 334.0293 l279.6934 334.1895 l280.4912 334.5078 l281.2896 334.8271 l282.0874 335.1465 l282.8853 335.4648 l283.6836 335.7852 l284.4814 336.1035 l285.2793 336.4238 l286.0776 336.7422 l286.8755 337.0605 l287.6733 337.3809 l288.4712 337.54 l289.1099 337.8594 l289.9082 338.1787 l290.7061 338.498 l291.5039 338.8174 l292.3018 339.1367 l293.1001 339.2949 l293.8979 339.6152 l294.6958 339.9336 l295.4941 340.2529 l296.292 340.5723 l297.0898 340.7324 l297.8882 341.0508 l298.686 341.3711 l299.4839 341.6895 l300.2817 341.8496 l301.0801 342.1689 l301.8779 342.4883 l302.5161 342.8076 l303.314 342.9668 l304.1123 343.2852 l304.9097 343.6055 l305.7075 343.7646 l306.5059 344.084 l307.3037 344.4033 l308.1025 344.5625 l308.9004 344.8818 l309.6992 345.2012 l310.4961 345.3613 l311.2949 345.6797 l312.0928 345.8389 l312.8906 346.1582 l313.6885 346.4775 l314.4863 346.6367 l315.2852 346.957 l315.9238 347.1162 l316.7207 347.4355 l317.5195 347.7549 l318.3164 347.9141 l319.1152 348.2324 l319.9131 348.3936 l320.7109 348.7129 l321.5098 348.8711 l322.3066 349.1914 l323.1055 349.5098 l323.9033 349.6699 l324.7012 349.9893 l325.499 350.1484 l326.2969 350.4678 l327.0957 350.627 l327.8926 350.9473 l328.5313 351.1064 l329.3281 351.4258 l330.127 351.5859 l330.9248 351.9043 l331.7227 352.0635 l332.5215 352.2227 l333.3184 352.543 l334.1172 352.7021 l334.915 353.0215 l335.7129 353.1816 l336.5107 353.5 l337.3086 353.6602 l338.1074 353.9795 l338.9043 354.1387 l339.7031 354.2988 l340.501 354.6172 l341.2988 354.7773 l341.9385 355.0957 l342.7363 355.2559 l343.5342 355.415 l344.332 355.7344 l345.1309 355.8945 l345.9277 356.2129 l346.7266 356.373 l347.5244 356.5332 l348.3223 356.8516 l349.1201 357.0117 l349.918 357.1719 l350.7168 357.4902 l351.5137 357.6494 l352.3125 357.8086 l353.1104 358.1289 l353.9082 358.2881 l354.7061 358.4473 l355.3438 358.7676 l356.1426 358.9268 l356.9395 359.0859 l357.7383 359.4053 l358.5361 359.5654 l359.334 359.7246 l360.1318 360.043 l360.9297 360.2031 l361.7285 360.3633 l362.5254 360.5234 l363.3242 360.8418 l364.1221 361.001 l364.9199 361.1611 l365.7178 361.4805 l366.5156 361.6396 l367.3145 361.7988 l368.1113 361.959 l368.75 362.2783 l369.5488 362.4375 l370.3467 362.5977 l371.1445 362.7578 l371.9424 362.917 l372.7402 363.2363 l373.5391 363.3945 l374.3359 363.5547 l375.1348 363.7148 l375.9326 364.0332 l376.7305 364.1934 l377.5283 364.3535 l378.3262 364.5127 l379.125 364.6719 l379.9219 364.9912 l380.7207 365.1514 l381.3594 365.3105 l382.1572 365.4707 l382.9551 365.6299 l383.7529 365.9492 l384.5508 366.1094 l385.3496 366.2676 l386.1465 366.4277 l386.9453 366.5869 l387.7432 366.748 l388.541 367.0664 l389.3398 367.2256 l390.1367 367.3848 l390.9355 367.5449 l391.7324 367.7051 l392.5313 367.8643 l393.3291 368.0234 l394.127 368.3438 l394.7646 368.5029 l395.5625 368.6621 l396.3613 368.8223 l397.1582 368.9805 l397.957 369.1416 l398.7549 369.3008 l399.5527 369.6191 l400.3506 369.7793 l401.1484 369.9395 l401.9473 370.0986 l402.7441 370.2578 l403.543 370.418 l404.3408 370.5771 l405.1387 370.7373 l405.9375 370.8965 l406.7344 371.0566 l407.5332 371.375 l408.1719 371.5352 lS0.6 0.2 0 XA0.6 w []0 d172.4424 249.1211 m173.2407 250.7178 l174.0386 252.1543 l174.8364 253.5908 l175.6348 255.0273 l176.4326 256.3037 l177.2305 257.5801 l178.0283 258.8574 l178.8267 259.9746 l179.6245 261.0918 l180.4224 262.209 l181.2207 263.3262 l182.0186 264.4434 l182.8164 265.4014 l183.4551 266.5176 l184.2529 267.4756 l185.0513 268.4336 l185.8491 269.3916 l186.647 270.3486 l187.4453 271.1465 l188.2432 272.1035 l189.041 272.9023 l189.8394 273.8594 l190.6372 274.6582 l191.4351 275.4551 l192.2329 276.2539 l193.0313 277.0518 l193.8291 277.8496 l194.627 278.6475 l195.4253 279.4453 l196.2231 280.084 l196.8613 280.8828 l197.6592 281.5215 l198.457 282.3184 l199.2554 282.957 l200.0532 283.7559 l200.8511 284.3926 l201.6494 285.0313 l202.4473 285.6699 l203.2451 286.3086 l204.0435 286.9473 l204.8413 287.585 l205.6392 288.2236 l206.4375 288.8623 l207.2354 289.501 l208.0332 290.1387 l208.8311 290.7773 l209.6294 291.2559 l210.2681 291.8945 l211.0659 292.5332 l211.8638 293.0117 l212.6616 293.6504 l213.46 294.1289 l214.2578 294.7676 l215.0557 295.2461 l215.854 295.8848 l216.6514 296.3633 l217.4492 296.8418 l218.2476 297.4805 l219.0454 297.959 l219.8433 298.4375 l220.6416 298.918 l221.4395 299.5547 l222.2373 300.0342 l223.0352 300.5137 l223.6738 300.9922 l224.4722 301.4707 l225.27 301.9492 l226.0679 302.4277 l226.8662 302.9072 l227.6641 303.3857 l228.4619 303.8652 l229.2598 304.3438 l230.0581 304.8223 l230.856 305.1406 l231.6538 305.6201 l232.4521 306.0996 l233.25 306.5781 l234.0479 307.0566 l234.8462 307.375 l235.644 307.8555 l236.2822 308.333 l237.0801 308.6523 l237.8779 309.1309 l238.6763 309.6104 l239.4741 309.9297 l240.272 310.4082 l241.0703 310.7266 l241.8682 311.2061 l242.666 311.5254 l243.4639 312.0039 l244.2622 312.3232 l245.0601 312.8027 l245.8579 313.1211 l246.6563 313.5996 l247.4541 313.9189 l248.252 314.3984 l249.0503 314.7168 l249.6885 315.0371 l250.4868 315.5156 l251.2847 315.835 l252.0825 316.1543 l252.8809 316.6328 l253.6787 316.9512 l254.4766 317.2715 l255.2749 317.75 l256.0728 318.0693 l256.8706 318.3887 l257.6685 318.707 l258.4668 319.0273 l259.2646 319.5049 l260.0625 319.8242 l260.8608 320.1436 l261.6587 320.4629 l262.4565 320.7822 l263.0952 321.1016 l263.8931 321.4209 l264.6914 321.8984 l265.4893 322.2188 l266.2871 322.5371 l267.0854 322.8574 l267.8833 323.1758 l268.6812 323.4951 l269.4795 323.8145 l270.2773 324.1338 l271.0752 324.4531 l271.873 324.7725 l272.6714 325.0918 l273.4692 325.4102 l274.2671 325.7295 l275.0654 326.0488 l275.7036 326.3682 l276.5015 326.6875 l277.2993 327.0068 l278.0972 327.3262 l278.8955 327.4844 l279.6934 327.8047 l280.4912 328.123 l281.2896 328.4434 l282.0874 328.7617 l282.8853 329.0811 l283.6836 329.4004 l284.4814 329.5605 l285.2793 329.8789 l286.0776 330.1992 l286.8755 330.5176 l287.6733 330.8379 l288.4712 330.9961 l289.1099 331.3154 l289.9082 331.6348 l290.7061 331.9541 l291.5039 332.2734 l292.3018 332.4336 l293.1001 332.752 l293.8979 333.0713 l294.6958 333.2314 l295.4941 333.5508 l296.292 333.8691 l297.0898 334.1895 l297.8882 334.3477 l298.686 334.667 l299.4839 334.9863 l300.2817 335.1465 l301.0801 335.4648 l301.8779 335.7852 l302.5161 335.9443 l303.314 336.2637 l304.1123 336.4238 l304.9097 336.7422 l305.7075 337.0605 l306.5059 337.2207 l307.3037 337.54 l308.1025 337.6992 l308.9004 338.0195 l309.6992 338.3379 l310.4961 338.498 l311.2949 338.8174 l312.0928 338.9766 l312.8906 339.2949 l313.6885 339.4551 l314.4863 339.7754 l315.2852 340.0938 l315.9238 340.2529 l316.7207 340.5723 l317.5195 340.7324 l318.3164 341.0508 l319.1152 341.2109 l319.9131 341.5303 l320.7109 341.6895 l321.5098 342.0098 l322.3066 342.1689 l323.1055 342.3281 l323.9033 342.6465 l324.7012 342.8076 l325.499 343.127 l326.2969 343.2852 l327.0957 343.6055 l327.8926 343.7646 l328.5313 344.084 l329.3281 344.2432 l330.127 344.4033 l330.9248 344.7227 l331.7227 344.8818 l332.5215 345.2012 l333.3184 345.3613 l334.1172 345.6797 l334.915 345.8389 l335.7129 346 l336.5107 346.3184 l337.3086 346.4775 l338.1074 346.6367 l338.9043 346.957 l339.7031 347.1162 l340.501 347.2754 l341.2988 347.5957 l341.9385 347.7549 l342.7363 348.0742 l343.5342 348.2324 l344.332 348.3936 l345.1309 348.7129 l345.9277 348.8711 l346.7266 349.0313 l347.5244 349.1914 l348.3223 349.5098 l349.1201 349.6699 l349.918 349.8291 l350.7168 350.1484 l351.5137 350.3086 l352.3125 350.4678 l353.1104 350.7871 l353.9082 350.9473 l354.7061 351.1064 l355.3438 351.2656 l356.1426 351.5859 l356.9395 351.7441 l357.7383 351.9043 l358.5361 352.0635 l359.334 352.3828 l360.1318 352.543 l360.9297 352.7021 l361.7285 352.8613 l362.5254 353.1816 l363.3242 353.3408 l364.1221 353.5 l364.9199 353.6602 l365.7178 353.8184 l366.5156 354.1387 l367.3145 354.2988 l368.1113 354.457 l368.75 354.6172 l369.5488 354.7773 l370.3467 355.0957 l371.1445 355.2559 l371.9424 355.415 l372.7402 355.5752 l373.5391 355.7344 l374.3359 356.0537 l375.1348 356.2129 l375.9326 356.373 l376.7305 356.5332 l377.5283 356.6924 l378.3262 356.8516 l379.125 357.1719 l379.9219 357.3301 l380.7207 357.4902 l381.3594 357.6494 l382.1572 357.8086 l382.9551 357.9688 l383.7529 358.1279 l384.5508 358.4473 l385.3496 358.6074 l386.1465 358.7666 l386.9453 358.9258 l387.7432 359.0859 l388.541 359.2461 l389.3398 359.4053 l390.1367 359.5645 l390.9355 359.7246 l391.7324 360.043 l392.5313 360.2031 l393.3291 360.3623 l394.127 360.5215 l394.7646 360.6816 l395.5625 360.8418 l396.3613 361.001 l397.1582 361.1602 l397.957 361.3203 l398.7549 361.4805 l399.5527 361.6396 l400.3506 361.7988 l401.1484 362.1172 l401.9473 362.2783 l402.7441 362.4375 l403.543 362.5977 l404.3408 362.7559 l405.1387 362.916 l405.9375 363.0762 l406.7344 363.2363 l407.5332 363.3945 l408.1719 363.5547 lS0 0 0 XA[1 2 ]0 d172.4424 244.8125 m173.2407 246.4082 l174.0386 247.6855 l174.8364 249.1211 l175.6348 250.3984 l176.4326 251.5156 l177.2305 252.793 l178.0283 253.9102 l178.8267 255.0273 l179.6245 256.1445 l180.4224 257.2617 l181.2207 258.2188 l182.0186 259.1768 l182.8164 260.1348 l183.4551 261.0918 l184.2529 262.0488 l185.0513 263.0078 l185.8491 263.8047 l186.647 264.7627 l187.4453 265.5605 l188.2432 266.3594 l189.041 267.3164 l189.8394 268.1143 l190.6372 268.9121 l191.4351 269.5508 l192.2329 270.3486 l193.0313 271.1465 l193.8291 271.7852 l194.627 272.584 l195.4253 273.2207 l196.2231 274.0195 l196.8613 274.6582 l197.6592 275.2969 l198.457 276.0938 l199.2554 276.7324 l200.0532 277.3711 l200.8511 278.0098 l201.6494 278.6475 l202.4473 279.2861 l203.2451 279.9248 l204.0435 280.4023 l204.8413 281.041 l205.6392 281.6797 l206.4375 282.1592 l207.2354 282.7969 l208.0332 283.4355 l208.8311 283.915 l209.6294 284.5527 l210.2681 285.0313 l211.0659 285.6699 l211.8638 286.1494 l212.6616 286.627 l213.46 287.2656 l214.2578 287.7461 l215.0557 288.2236 l215.854 288.7031 l216.6514 289.1816 l217.4492 289.6602 l218.2476 290.2988 l219.0454 290.7773 l219.8433 291.2559 l220.6416 291.7354 l221.4395 292.2139 l222.2373 292.6934 l223.0352 293.1709 l223.6738 293.4902 l224.4722 293.9688 l225.27 294.4482 l226.0679 294.9277 l226.8662 295.4063 l227.6641 295.8848 l228.4619 296.2031 l229.2598 296.6826 l230.0581 297.1611 l230.856 297.4805 l231.6538 297.959 l232.4521 298.4375 l233.25 298.7568 l234.0479 299.2363 l234.8462 299.5547 l235.644 300.0342 l236.2822 300.3535 l237.0801 300.832 l237.8779 301.1504 l238.6763 301.6309 l239.4741 301.9492 l240.272 302.4277 l241.0703 302.7471 l241.8682 303.2266 l242.666 303.5449 l243.4639 303.8652 l244.2622 304.3438 l245.0601 304.6621 l245.8579 304.9814 l246.6563 305.4609 l247.4541 305.7793 l248.252 306.0996 l249.0503 306.418 l249.6885 306.8975 l250.4868 307.2168 l251.2847 307.5352 l252.0825 307.8555 l252.8809 308.1738 l253.6787 308.6523 l254.4766 308.9717 l255.2749 309.291 l256.0728 309.6104 l256.8706 309.9297 l257.6685 310.249 l258.4668 310.5684 l259.2646 310.8867 l260.0625 311.2061 l260.8608 311.5254 l261.6587 311.8447 l262.4565 312.1641 l263.0952 312.4834 l263.8931 312.8027 l264.6914 313.1211 l265.4893 313.4414 l266.2871 313.7598 l267.0854 314.0801 l267.8833 314.3984 l268.6812 314.7168 l269.4795 315.0371 l270.2773 315.3555 l271.0752 315.6758 l271.873 315.9941 l272.6714 316.1543 l273.4692 316.4727 l274.2671 316.792 l275.0654 317.1113 l275.7036 317.4307 l276.5015 317.75 l277.2993 317.9092 l278.0972 318.2285 l278.8955 318.5479 l279.6934 318.8672 l280.4912 319.0273 l281.2896 319.3457 l282.0874 319.666 l282.8853 319.9844 l283.6836 320.1436 l284.4814 320.4629 l285.2793 320.7822 l286.0776 321.1016 l286.8755 321.2617 l287.6733 321.5801 l288.4712 321.8984 l289.1099 322.0596 l289.9082 322.3789 l290.7061 322.6973 l291.5039 322.8574 l292.3018 323.1758 l293.1001 323.4951 l293.8979 323.6553 l294.6958 323.9746 l295.4941 324.1338 l296.292 324.4531 l297.0898 324.7725 l297.8882 324.9316 l298.686 325.252 l299.4839 325.4102 l300.2817 325.7295 l301.0801 325.8887 l301.8779 326.209 l302.5161 326.5273 l303.314 326.6875 l304.1123 327.0068 l304.9097 327.166 l305.7075 327.4844 l306.5059 327.6455 l307.3037 327.9648 l308.1025 328.123 l308.9004 328.4434 l309.6992 328.6035 l310.4961 328.9219 l311.2949 329.0811 l312.0928 329.4004 l312.8906 329.5605 l313.6885 329.7197 l314.4863 330.0391 l315.2852 330.1992 l315.9238 330.5176 l316.7207 330.6777 l317.5195 330.9961 l318.3164 331.1563 l319.1152 331.3154 l319.9131 331.6348 l320.7109 331.7949 l321.5098 332.1133 l322.3066 332.2734 l323.1055 332.4336 l323.9033 332.752 l324.7012 332.9121 l325.499 333.2314 l326.2969 333.3906 l327.0957 333.5508 l327.8926 333.8691 l328.5313 334.0293 l329.3281 334.1895 l330.127 334.5078 l330.9248 334.667 l331.7227 334.8271 l332.5215 335.1465 l333.3184 335.3057 l334.1172 335.4648 l334.915 335.7852 l335.7129 335.9443 l336.5107 336.1035 l337.3086 336.2637 l338.1074 336.583 l338.9043 336.7422 l339.7031 336.9023 l340.501 337.2207 l341.2988 337.3809 l341.9385 337.54 l342.7363 337.6992 l343.5342 338.0195 l344.332 338.1787 l345.1309 338.3379 l345.9277 338.498 l346.7266 338.8174 l347.5244 338.9766 l348.3223 339.1367 l349.1201 339.2949 l349.918 339.4551 l350.7168 339.7754 l351.5137 339.9336 l352.3125 340.0938 l353.1104 340.2529 l353.9082 340.4141 l354.7061 340.7324 l355.3438 340.8916 l356.1426 341.0508 l356.9395 341.2109 l357.7383 341.3711 l358.5361 341.6895 l359.334 341.8496 l360.1318 342.0098 l360.9297 342.1689 l361.7285 342.3281 l362.5254 342.4883 l363.3242 342.8076 l364.1221 342.9668 l364.9199 343.127 l365.7178 343.2852 l366.5156 343.4453 l367.3145 343.6045 l368.1113 343.7637 l368.75 344.084 l369.5488 344.2432 l370.3467 344.4023 l371.1445 344.5625 l371.9424 344.7227 l372.7402 344.8818 l373.5391 345.041 l374.3359 345.2012 l375.1348 345.3594 l375.9326 345.6797 l376.7305 345.8389 l377.5283 345.998 l378.3262 346.1582 l379.125 346.3184 l379.9219 346.4775 l380.7207 346.6367 l381.3594 346.7969 l382.1572 346.9561 l382.9551 347.1162 l383.7529 347.2754 l384.5508 347.4355 l385.3496 347.5947 l386.1465 347.7539 l386.9453 348.0742 l387.7432 348.2324 l388.541 348.3926 l389.3398 348.5518 l390.1367 348.7129 l390.9355 348.8711 l391.7324 349.0313 l392.5313 349.1904 l393.3291 349.3496 l394.127 349.5098 l394.7646 349.6699 l395.5625 349.8291 l396.3613 349.9883 l397.1582 350.1484 l397.957 350.3086 l398.7549 350.4678 l399.5527 350.627 l400.3506 350.7871 l401.1484 350.9453 l401.9473 351.1064 l402.7441 351.2656 l403.543 351.4258 l404.3408 351.584 l405.1387 351.7441 l405.9375 351.9043 l406.7344 352.0635 l407.5332 352.2227 l408.1719 352.3828 lS0 To1 0 0 1 413.6406 370.5781 0 Tp0 TvTP0 Tr0 O0 g1 w 4 M []0 d/_Times-Roman 11 11 -4.7158 Tf0 Ta( 87.0 K) Tx (\r) TX TO0 To1 0 0 1 413.6406 359.5957 0 Tp0 TvTP0 Tr( 89.8 K) Tx (\r) TX TO0 To1 0 0 1 413.6406 349.4033 0 Tp0 TvTP0 Tr( 93.9 K) Tx (\r) TX TO0 To1 0 0 1 408.7402 290.3926 0 Tp0 TvTP0 Tr( 163.0 K) Tx (\r) TX TO0 To1 0 0 1 372.25 463.5249 0 Tp0 TvTP0 Tr/_Times-Roman 12 12 -5.1445 Tf( 97.0 K) Tx (\r) TX TO0 To1 0 0 1 310.8521 357.4727 0 Tp0 TvTP0 Tr(LAr) Tx (\r) TX TO0 To1 0 0 1 221.417 423.0737 0 Tp0 TvTP0 Tr(LAr + 0.5% CH) Tx /_Times-Roman 10 10 -4.2871 Tf-3 Ts(4) Tx (\r) TX TO0 To1 0 0 1 370.4526 297.1084 0 Tp0 TvTP0 Tr/_Times-Roman 12 12 -5.1445 Tf0 Ts(LXe) Tx (\r) TX TO1 XR300.748 229.377 m300.748 230.4336 299.8901 231.291 298.833 231.291 c297.7759 231.291 296.9175 230.4336 296.9175 229.377 c296.9175 228.3193 297.7759 227.4609 298.833 227.4609 c299.8901 227.4609 300.748 228.3193 300.748 229.377 cF0 To1 0 0 1 327.8926 226.7773 0 Tp0 TvTP0 Tr0 XR/_Times-Roman 10.944 10.944 -4.6918 Tf22.9824 0 XbXB(Miller et al. \(1968\)) Tx (\r) TX TO1 XR298.8457 258.8574 m296.9307 255.0273 l300.7612 255.0273 l298.8457 258.8574 lf0 To1 0 0 1 327.8926 254.0684 0 Tp0 TvTP0 Tr0 XR(Shibamura et al. \(1976\)) Tx (\r) TX TO*u1 D0 R0 G0.75 w 10 M281.29 243.166 m281.29 244.2227 280.4316 245.0811 279.3745 245.0811 c278.3174 245.0811 277.4595 244.2227 277.4595 243.166 c277.4595 242.1074 278.3174 241.25 279.3745 241.25 c280.4316 241.25 281.29 242.1074 281.29 243.166 cS287.1953 245.1318 m285.918 243.2168 l287.1953 241.3008 l288.4717 243.2168 l287.1953 245.1318 ls295.0151 245.1318 m293.1001 245.1318 l293.1001 241.3008 l296.9307 241.3008 l296.9307 245.1318 l295.0151 245.1318 ls300.7612 242.5781 m302.0376 242.5781 l302.0376 241.3008 l303.3145 241.3008 l303.3145 242.5781 l304.5908 242.5781 l304.5908 243.8555 l303.3145 243.8555 l303.3145 245.1318 l302.0376 245.1318 l302.0376 243.8555 l300.7612 243.8555 l300.7612 242.5781 ls310.4961 245.1318 m308.5811 241.3008 l312.4121 241.3008 l310.4961 245.1318 ls*U0 D316.4023 243.8555 m320.2324 243.8555 l317.1328 241.6035 l318.3164 245.2461 l319.501 241.6035 l316.4023 243.8555 ls0 To1 0 0 1 327.8926 240.1836 0 Tp0 TvTP0 Tr0 O0 g1 w 4 M(Walkowiak \(2000\)) Tx (\r) TX TOu0 To1 0 0 1 162.5474 180.8135 0 Tp0 TvTP-2.75 0 Td0 Tr0 0 0 Xa/_Times-Roman 11 11 -4.7158 Tf1 Ta(0) Tx (\r) TX TO0 To1 0 0 1 201.4897 180.8135 0 Tp0 TvTP-2.75 0 Td0 Tr(2) Tx (\r) TX TO0 To1 0 0 1 240.4321 180.8135 0 Tp0 TvTP-2.75 0 Td0 Tr(4) Tx (\r) TX TO0 To1 0 0 1 279.3745 180.8135 0 Tp0 TvTP-2.75 0 Td0 Tr(6) Tx (\r) TX TO0 To1 0 0 1 318.3164 180.8135 0 Tp0 TvTP-2.75 0 Td0 Tr(8) Tx (\r) TX TO0 To1 0 0 1 357.2588 180.8135 0 Tp0 TvTP-5.5 0 Td0 Tr(10) Tx (\r) TX TO0 To1 0 0 1 396.8398 180.8135 0 Tp0 TvTP-5.5 0 Td0 Tr(12) Tx (\r) TX TO0 To1 0 0 1 435.7832 180.8135 0 Tp0 TvTP-5.5 0 Td0 Tr(14) Tx (\r) TX TOUu0 To1 0 0 1 152.333 191.0273 0 Tp0 TvTP-5.5 0 Td0 Tr2 Ta(0) Tx (\r) TX TO0 To1 0 0 1 152.333 225.502 0 Tp0 TvTP-5.5 0 Td0 Tr(1) Tx (\r) TX TO0 To1 0 0 1 152.333 259.3359 0 Tp0 TvTP-5.5 0 Td0 Tr(2) Tx (\r) TX TO0 To1 0 0 1 152.333 294.6074 0 Tp0 TvTP-5.5 0 Td0 Tr(3) Tx (\r) TX TO0 To1 0 0 1 152.333 329.0811 0 Tp0 TvTP-5.5 0 Td0 Tr(4) Tx (\r) TX TO0 To1 0 0 1 152.333 362.917 0 Tp0 TvTP-5.5 0 Td0 Tr(5) Tx (\r) TX TO0 To1 0 0 1 152.333 397.3804 0 Tp0 TvTP-5.5 0 Td0 Tr(6) Tx (\r) TX TO0 To1 0 0 1 152.333 431.854 0 Tp0 TvTP-5.5 0 Td0 Tr(7) Tx (\r) TX TO0 To1 0 0 1 152.333 466.9756 0 Tp0 TvTP-5.5 0 Td0 Tr(8) Tx (\r) TX TOU*u0 R0 G0.5 w 10 M192.2329 270.5078 m194.1479 270.5078 l192.5986 269.3828 l193.1904 271.2031 l193.7822 269.3828 l192.2329 270.5078 ls207.5547 282.3184 m209.4697 282.3184 l207.9199 281.1924 l208.5122 283.0137 l209.104 281.1924 l207.5547 282.3184 ls238.3574 301.3115 m240.2725 301.3115 l238.7227 300.1855 l239.3149 302.0068 l239.9067 300.1855 l238.3574 301.3115 ls269.1602 314.877 m271.0752 314.877 l269.5259 313.752 l270.1177 315.5723 l270.7095 313.752 l269.1602 314.877 ls299.9629 326.6875 m301.8779 326.6875 l300.3286 325.5615 l300.9204 327.3828 l301.5122 325.5615 l299.9629 326.6875 ls330.7656 335.625 m332.6816 335.625 l331.1309 334.5 l331.7227 336.3203 l332.3145 334.5 l330.7656 335.625 ls361.5684 342.4883 m363.4844 342.4883 l361.9346 341.3633 l362.5254 343.1836 l363.1172 341.3633 l361.5684 342.4883 ls392.2129 347.9141 m394.127 347.9141 l392.5781 346.7891 l393.1689 348.6094 l393.7617 346.7891 l392.2129 347.9141 ls407.6934 351.5859 m409.6074 351.5859 l408.0586 350.459 l408.6504 352.2813 l409.2422 350.459 l407.6934 351.5859 ls376.8906 345.5195 m378.8047 345.5195 l377.2559 344.3945 l377.8477 346.2158 l378.4395 344.3945 l376.8906 345.5195 ls223.0356 292.373 m224.9512 292.373 l223.4014 291.248 l223.9932 293.0693 l224.5854 291.248 l223.0356 292.373 ls253.6792 309.1309 m255.5938 309.1309 l254.0449 308.0059 l254.6367 309.8281 l255.2285 308.0059 l253.6792 309.1309 ls284.4819 321.1016 m286.397 321.1016 l284.8477 319.9746 l285.4395 321.7969 l286.0313 319.9746 l284.4819 321.1016 ls346.0869 338.8174 m348.002 338.8174 l346.4531 337.6914 l347.0449 339.5137 l347.6367 337.6914 l346.0869 338.8174 ls315.2852 330.3584 m317.2002 330.3584 l315.6504 329.2324 l316.2422 331.0537 l316.834 329.2324 l315.2852 330.3584 ls*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_typography_AI5 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF