%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Acr36828869207441600.tmp.pdf
%%Creator: (Adobe Acrobat 11.0.3)
%%For: qianwang
%%CreationDate: 9/16/13, 11:21 AM
%%BoundingBox: -1 0 248 177
%%HiResBoundingBox: 0 0 247.0684 176.1642
%%CropBox: 0 0 247.0684 176.1642
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 944 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2013-09-16T11:21:06+02:00"
   xmp:CreateDate="2013-09-16T11:21:06+02:00"
   xmp:MetadataDate="2013-09-16T11:21:06+02:00"
   xmp:CreatorTool="PowerPoint"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:fc7a2f1f-5510-7f44-bf85-5ab3d898dbe9"
   xmpMM:InstanceID="uuid:9980c2cc-e7cc-8f47-8f53-95a64f47d23a"
   pdf:Producer="Mac OS X 10.8.4 Quartz PDFContext">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Qian Wang</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceRGB] /CSA add_res
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -176.164 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.6294e-06 0 mo
-7.6294e-06 176.164 li
247.068 176.164 li
247.068 0 li
cp
clp
-88.4476 -128.651 mo
631.552 -128.651 li
631.552 411.349 li
-88.4476 411.349 li
cp
false sop
1 1 1 rgb
ef
gsave
-6.27374 178.252 mo
237.533 178.252 li
237.533 -.398987 li
-6.27374 -.398987 li
cp
clp
-1.02139 -.654388 mo
237.869 -.654388 li
237.869 170.575 li
-1.02139 170.575 li
cp
/2 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
gsave
-6.27374 -.398987 mo
237.533 -.398987 li
237.533 178.252 li
-6.27374 178.252 li
cp
clp
gsave
-6.27374 178.252 mo
237.533 178.252 li
237.533 -.398987 li
-6.27374 -.398987 li
cp
clp
39.8646 6.6051 mo
227.136 6.6051 li
227.136 141.234 li
39.8646 141.234 li
cp
0 0 0 0 cmyk
f
39.8646 141.234 mo
40.2891 140.81 li
40.2891 7.02969 li
226.713 7.02969 li
227.138 6.6051 li
39.8646 6.6051 li
39.8646 141.234 li
ef
39.8646 141.234 mo
40.2891 140.81 li
226.713 140.81 li
226.713 7.02969 li
227.138 6.6051 li
227.138 141.234 li
39.8646 141.234 li
ef
.317369 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
39.8646 141.234 mo
227.137 141.234 li
227.137 6.6051 li
39.8646 6.6051 li
cp
39.8646 141.234 mo
227.138 141.234 li
39.8646 141.234 mo
227.138 141.234 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: GYRQMX+Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /GYRQMX+Helvetica def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 33 /g3 putdup 34 /g8 putdup 35 /g1 putdup 36 /g2 putdup 37 /g19 putdup 38 /g31 putdup 39 /g26 putdup 40 /g5 putdup 41 /g29 putdup 42 /g21 putdup 43 /g37 putdup 44 /g27 putdup 45 /g45 putdup 46 /g22 putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings15 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/g3 <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/g8 <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/g1 <1C60D8A8C9B854D00D> |-/g2 <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/g19 <1C60D8A8C9B6FF86FAE761919412E75DCB56A17E0B647886E974BE0CD2DDC55247C89172C0F24B317CED95A1845F91927547B6F787BE4A81523EC6B90B7AF23F6F8A8BDDC51D0AA285D7E086AD8E028BD7D16A89F17742D556071D7D56166C6C8A71E0DFC3DA3B4DBE27EC4E6BE207A1EAF47A71BE409951D1C5060119CDD071AF7E9076F56846B6D62E52B2CB6390635FC230> |-/g31 <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/g26 <1C60D8A8C9B64EDFA60949676B75C625C6948873966B83A549B84A6BD5D6EE9C83058CE085EB61> |-/g5 <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/g29 <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/g21 <1C60D8A8C9B7A73DB6FA483A9791C1A03FDD99DE37EC702CFAA41FFB6235ABBC533B771F9FC9FF7FE3EF943DDF6A0978C6221B723344AE5D5FF65442A5B18CBDAF7665324680F19176D0D766874FD5E0E907> |-/g37 <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/g27 <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/g45 <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-/g22 <1C60D8A8C9B6B41C9910B30BE12408A0CCE83CFCBF71D6A0AFED0B0C7E6B8742F00BF38074693AE67B7536DF8025FC27BB7165EE6A43D7B9497E065E42F0EE8DA1C58C8863D1E0F8290CD2A3925749EE5F186B> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCQ+Helvetica /GYRQMX+Helvetica findfont ct_VMDictPut/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 209{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf180.954 164.219 mo(!)shVIXPCQ+Helvetica*1 [7.54414 0 0 -7.54414 0 0 ]msf177.035 159.452 mo(")shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf135.407 164.219 mo(!#$%&'\(\))[3.71907 3.10507 3.71907 8.68771 6.20903 7.44844 3.10506 0 ]xsh%ADOBeginSubsetFont: OCGBAA+Symbol Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /OCGBAA+Symbol def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (Symbol) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999998 0 0 0.000999998 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 112 /pi putdup 121 /psi putdef/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/pi <1C60D8A8C9B7967678F2ED2478535EB7B50DECCE78F28089B307456EDB9089371383F74718798FCF22D6D686185B9074732F57B819259A4E99DD8D356BD55E81236AB1C67A050E41981869DEEA9296AE9124988026D74E5E4B51B2F69057FA95946C8B081DF5096D1A21ACAE3DDF26EB12D2423765790F7377340145B5A19A613EEE3DA5D67DE190CE253AC7061757FE656DCAC0FAC8E090EBE75E963E5EADC51139339E48BC7859A965> |-/psi <1C60D8A8C9B6232B60CC295600FD0E895E3215A2016BDDF6F682D50A2A7103E46C09816CE9D16C068165579B09F2D6EF8CFF06DF24FF361CFD0502FA832C968069C61BACF661F555512321BD01A3245630BF8C2945315C8AE8FF210EA2AA7D5D6CFC874B1F133C8B905508E3ED43022B7325ECE021285DCE0D102625220D52ED0F8B0D77EB6D76DACC6D85EC2965E20CC13A05390F384BC1C20361CB25E4EF10E2833A5460732D5D1ACD5C0A48C5C0A45EBCC3CA1E37FF630C83CFC5D5B36C8D96D938490759C937155EB82A6C7DDAF2FA8F5B> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCR+Symbol /OCGBAA+Symbol findfont ct_VMDictPut/VIXPCR+Symbol*1 [112{/.notdef}rp /pi 8{/.notdef}rp /psi 134{/.notdef}rp]VIXPCR+Symbol nfVIXPCR+Symbol*1 [11.1653 0 0 -11.1653 0 0 ]msf127.569 164.219 mo(y)shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf118.779 164.219 mo(*\()[5.58264 0 ]xsh%ADOBeginSubsetFont: MJFQMX+Symbol Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MJFQMX+Symbol def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (Symbol) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999998 0 0 0.000999998 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /plusminus putdef/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/plusminus <1C60D8A8C9B79676883E6F8B588D6FB629029AF26B8EEDB220C43070CD22BA009B40C8439E2C7D13F62A76B12C43AF440BB5046B2792CB6BE303B06862E29E7CE16577> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCS+Symbol /MJFQMX+Symbol findfont ct_VMDictPut/VIXPCS+Symbol*1 [32{/.notdef}rp /plusminus 223{/.notdef}rp]VIXPCS+Symbol nfVIXPCS+Symbol*1 [7.54414 0 0 -7.54414 0 0 ]msf114.541 160.935 mo( )shVIXPCR+Symbol*1 [11.1653 0 0 -11.1653 0 0 ]msf108.502 164.219 mo(p)shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf105.22 164.219 mo($)shVIXPCQ+Helvetica*1 [7.54414 0 0 -7.54414 0 0 ]msf90.7077 166.655 mo(+,-)[6.28345 4.19378 0 ]xshVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf81.916 164.219 mo(.)sh64.757 137.209 mo
64.757 141.234 li
73.1253 139.221 mo
73.1253 141.234 li
81.4925 139.221 mo
81.4925 141.234 li
89.7546 139.221 mo
89.7546 141.234 li
98.1228 139.221 mo
98.1228 141.234 li
106.385 137.209 mo
106.385 141.234 li
114.752 139.221 mo
114.752 141.234 li
123.12 139.221 mo
123.12 141.234 li
131.382 139.221 mo
131.382 141.234 li
139.751 139.221 mo
139.751 141.234 li
148.013 137.209 mo
148.013 141.234 li
156.38 139.221 mo
156.38 141.234 li
164.748 139.221 mo
164.748 141.234 li
173.01 139.221 mo
173.01 141.234 li
181.379 139.221 mo
181.379 141.234 li
189.746 137.209 mo
189.746 141.234 li
64.757 137.209 mo
64.757 141.234 li
56.4949 139.221 mo
56.4949 141.234 li
48.1267 139.221 mo
48.1267 141.234 li
189.746 137.209 mo
189.746 141.234 li
198.008 139.221 mo
198.008 141.234 li
206.376 139.221 mo
206.376 141.234 li
214.638 139.221 mo
214.638 141.234 li
223.007 139.221 mo
223.007 141.234 li
@
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g9 <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/g4 <1C60D8A8C9B854D0E3687C43D46768E11610> |-/g12 <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-/g13 <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-/g14 <1C60D8A8C9B7EF326B464DF43714564059769E71FFFC685FC18F48C77D53AC88FCBBC12F494C4F63EED0BC4E888DFF584BE7D2D816586B9A4264CD850BFF6D2740D48815051A0D66B2C6D52B7F71CA6A6822ACB78F611F031D0F31B29F8F7C82DE8795DAD0A78F20A0C158D57307DA2BB022E8173A55705FD29D68A57A980A4A8A50AA38F194766F67D892E4FFF95162BD634B3243B2EC97981B62535F84C02C407EE586AAFD00BF4926CA361322725073A4D1FB7F2047C32550A5DE15> |-/g10 <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/g6 <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 47 /g9 putdup 48 /g4 putdup 49 /g12 putdup 50 /g13 putdup 51 /g14 putdup 52 /g10 putdup 53 /g6 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 202{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [9.65643 0 0 -9.65643 0 0 ]msf58.0841 150.979 mo(/01/02/03405)[5.36993 2.68546 33.6826 5.36993 2.68546 33.5763 5.36993 2.68546 33.5764 5.36993 2.68546 0 ]xsh39.8646 141.234 mo
39.8646 6.6051 li
@
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g18 <1C60D8A8C9B64EDFE336C703EA12FABA68C9F5D15F1A9B67653505BC29F8D56A4237858E054C3198877A> |-/g44 <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-/g38 <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/g42 <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/g41 <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/g7 <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 54 /g18 putdup 55 /g44 putdup 56 /g38 putdup 57 /g42 putdup 58 /g41 putdup 59 /g7 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 196{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [0 -7.54414 -7.54414 0 0 0 ]msf8.93581 25.9897 mo(")shVIXPCQ+Helvetica*1 [0 -11.1653 -11.1653 0 0 0 ]msf13.8081 125.345 mo(67&89:#\(#505;#%&'\(\))[-7.44734 -5.58264 -6.2079 -6.20791 -3.10395 -5.58265 -3.10619 -3.10395 -3.10618 -6.20791 -3.10395 -6.2079 -6.20791 -3.10618 -8.6866 -6.20792 -7.44733 -3.10394 0 ]ysh45.4795 141.234 mo
39.8646 141.234 li
42.619 135.09 mo
39.8646 135.09 li
42.619 128.947 mo
39.8646 128.947 li
42.619 122.909 mo
39.8646 122.909 li
45.4795 116.766 mo
39.8646 116.766 li
42.619 110.622 mo
39.8646 110.622 li
42.619 104.479 mo
39.8646 104.479 li
42.619 98.4414 mo
39.8646 98.4414 li
45.4795 92.2968 mo
39.8646 92.2968 li
42.619 86.1534 mo
39.8646 86.1534 li
42.619 80.0098 mo
39.8646 80.0098 li
42.619 73.8674 mo
39.8646 73.8674 li
45.4795 67.829 mo
39.8646 67.829 li
42.619 61.6855 mo
39.8646 61.6855 li
42.619 55.542 mo
39.8646 55.542 li
42.619 49.3985 mo
39.8646 49.3985 li
45.4795 43.3611 mo
39.8646 43.3611 li
42.619 37.2176 mo
39.8646 37.2176 li
42.619 31.0741 mo
39.8646 31.0741 li
42.619 24.9305 mo
39.8646 24.9305 li
45.4795 18.787 mo
39.8646 18.787 li
45.4795 18.787 mo
39.8646 18.787 li
42.619 12.7486 mo
39.8646 12.7486 li
42.619 6.6051 mo
39.8646 6.6051 li
@
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g11 <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 60 /g11 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 /g11 195{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [9.65643 0 0 -9.65643 0 0 ]msf32.133 144.624 mo(5)sh26.7312 120.154 mo("5)[5.36704 0 ]xsh26.7312 95.687 mo(45)[5.36704 0 ]xsh26.7312 71.3249 mo(<5)[5.36704 0 ]xsh26.7312 46.8564 mo(25)[5.36704 0 ]xsh21.6471 22.388 mo(;55)[5.36704 5.36704 0 ]xsh41.877 133.926 mo
39.8646 133.926 li
39.8646 134.454 mo
39.8646 133.289 li
41.877 133.926 mo
43.9956 133.926 li
43.9956 134.454 mo
43.9956 133.289 li
41.877 133.926 mo
41.877 129.476 li
41.2423 129.476 mo
42.5128 129.476 li
41.877 133.926 mo
41.877 136.785 li
41.2423 136.785 mo
42.5128 136.785 li
46.0081 122.909 mo
43.9956 122.909 li
43.9956 123.439 mo
43.9956 122.274 li
46.0081 122.909 mo
48.1267 122.909 li
48.1267 123.439 mo
48.1267 122.274 li
46.0081 122.909 mo
46.0081 116.766 li
45.4795 116.766 mo
46.6439 116.766 li
46.0081 122.909 mo
46.0081 127.57 li
45.4795 127.57 mo
46.6439 127.57 li
50.2453 117.931 mo
48.1267 117.931 li
48.1267 118.566 mo
48.1267 117.402 li
50.2453 117.931 mo
52.2577 117.931 li
52.2577 118.566 mo
52.2577 117.402 li
50.2453 117.931 mo
50.2453 111.363 li
49.6095 111.363 mo
50.7749 111.363 li
50.2453 117.931 mo
50.2453 123.227 li
49.6095 123.227 mo
50.7749 123.227 li
54.3763 98.4414 mo
52.2577 98.4414 li
52.2577 98.97 mo
52.2577 97.8056 li
54.3763 98.4414 mo
56.4949 98.4414 li
56.4949 98.97 mo
56.4949 97.8056 li
54.3763 98.4414 mo
54.3763 89.8609 li
53.7405 89.8609 mo
55.0121 89.8609 li
54.3763 98.4414 mo
54.3763 105.643 li
53.7405 105.643 mo
55.0121 105.643 li
58.5074 108.186 mo
56.4949 108.186 li
56.4949 108.821 mo
56.4949 107.551 li
58.5074 108.186 mo
60.626 108.186 li
60.626 108.821 mo
60.626 107.551 li
58.5074 108.186 mo
58.5074 100.56 li
57.9777 100.56 mo
59.1432 100.56 li
58.5074 108.186 mo
58.5074 114.541 li
57.9777 114.541 mo
59.1432 114.541 li
62.7446 95.8983 mo
60.626 95.8983 li
60.626 96.5341 mo
60.626 95.3686 li
62.7446 95.8983 mo
64.757 95.8983 li
64.757 96.5341 mo
64.757 95.3686 li
62.7446 95.8983 mo
62.7446 87.2137 li
62.1088 87.2137 mo
63.2742 87.2137 li
62.7446 95.8983 mo
62.7446 103.313 li
62.1088 103.313 mo
63.2742 103.313 li
66.8756 93.4623 mo
64.757 93.4623 li
64.757 94.0981 mo
64.757 92.9326 li
66.8756 93.4623 mo
68.9942 93.4623 li
68.9942 94.0981 mo
68.9942 92.9326 li
66.8756 93.4623 mo
66.8756 84.5655 li
66.2398 84.5655 mo
67.5104 84.5655 li
66.8756 93.4623 mo
66.8756 101.089 li
66.2398 101.089 mo
67.5104 101.089 li
71.0067 88.5904 mo
68.9942 88.5904 li
68.9942 89.2251 mo
68.9942 87.9546 li
71.0067 88.5904 mo
73.1253 88.5904 li
73.1253 89.2251 mo
73.1253 87.9546 li
71.0067 88.5904 mo
71.0067 79.269 li
70.477 79.269 mo
71.6414 79.269 li
71.0067 88.5904 mo
71.0067 96.6402 li
70.477 96.6402 mo
71.6414 96.6402 li
@
75.2428 87.4249 mo
73.1253 87.4249 li
73.1253 87.9546 mo
73.1253 86.7892 li
75.2428 87.4249 mo
77.2553 87.4249 li
77.2553 87.9546 mo
77.2553 86.7892 li
75.2428 87.4249 mo
75.2428 77.9974 li
74.6081 77.9974 mo
75.7735 77.9974 li
75.2428 87.4249 mo
75.2428 95.4748 li
74.6081 95.4748 mo
75.7735 95.4748 li
79.3739 100.877 mo
77.2553 100.877 li
77.2553 101.407 mo
77.2553 100.242 li
79.3739 100.877 mo
81.4925 100.877 li
81.4925 101.407 mo
81.4925 100.242 li
79.3739 100.877 mo
79.3739 92.5091 li
78.7391 92.5091 mo
80.0097 92.5091 li
79.3739 100.877 mo
79.3739 107.868 li
78.7391 107.868 mo
80.0097 107.868 li
83.5049 82.4469 mo
81.4925 82.4469 li
81.4925 83.0816 mo
81.4925 81.9172 li
83.5049 82.4469 mo
85.6235 82.4469 li
85.6235 83.0816 mo
85.6235 81.9172 li
83.5049 82.4469 mo
83.5049 72.702 li
82.9753 72.702 mo
84.1407 72.702 li
83.5049 82.4469 mo
83.5049 90.9202 li
82.9753 90.9202 mo
84.1407 90.9202 li
87.7421 94.7339 mo
85.6235 94.7339 li
85.6235 95.3686 mo
85.6235 94.0981 li
87.7421 94.7339 mo
89.7546 94.7339 li
89.7546 95.3686 mo
89.7546 94.0981 li
87.7421 94.7339 mo
87.7421 85.836 li
87.1063 85.836 mo
88.2718 85.836 li
87.7421 94.7339 mo
87.7421 102.254 li
87.1063 102.254 mo
88.2718 102.254 li
91.8732 89.8609 mo
89.7546 89.8609 li
89.7546 90.3905 mo
89.7546 89.2251 li
91.8732 89.8609 mo
93.9918 89.8609 li
93.9918 90.3905 mo
93.9918 89.2251 li
91.8732 89.8609 mo
91.8732 80.6456 li
91.2374 80.6456 mo
92.509 80.6456 li
91.8732 89.8609 mo
91.8732 97.6995 li
91.2374 97.6995 mo
92.509 97.6995 li
96.0042 88.5904 mo
93.9918 88.5904 li
93.9918 89.2251 mo
93.9918 87.9546 li
96.0042 88.5904 mo
98.1228 88.5904 li
98.1228 89.2251 mo
98.1228 87.9546 li
96.0042 88.5904 mo
96.0042 79.269 li
95.3684 79.269 mo
96.64 79.269 li
96.0042 88.5904 mo
96.0042 96.6402 li
95.3684 96.6402 mo
96.64 96.6402 li
100.135 89.8609 mo
98.1228 89.8609 li
98.1228 90.3905 mo
98.1228 89.2251 li
100.135 89.8609 mo
102.254 89.8609 li
102.254 90.3905 mo
102.254 89.2251 li
100.135 89.8609 mo
100.135 80.6456 li
99.6056 80.6456 mo
100.771 80.6456 li
100.135 89.8609 mo
100.135 97.6995 li
99.6056 97.6995 mo
100.771 97.6995 li
104.372 92.2968 mo
102.254 92.2968 li
102.254 92.8265 mo
102.254 91.6621 li
104.372 92.2968 mo
106.385 92.2968 li
106.385 92.8265 mo
106.385 91.6621 li
104.372 92.2968 mo
104.372 83.2939 li
103.737 83.2939 mo
104.902 83.2939 li
104.372 92.2968 mo
104.372 100.029 li
103.737 100.029 mo
104.902 100.029 li
@
108.502 81.2814 mo
106.385 81.2814 li
106.385 81.8111 mo
106.385 80.6456 li
108.502 81.2814 mo
110.621 81.2814 li
110.621 81.8111 mo
110.621 80.6456 li
108.502 81.2814 mo
108.502 71.4304 li
107.868 71.4304 mo
109.139 71.4304 li
108.502 81.2814 mo
108.502 89.7548 li
107.868 89.7548 mo
109.139 89.7548 li
112.635 88.5904 mo
110.621 88.5904 li
110.621 89.2251 mo
110.621 87.9546 li
112.635 88.5904 mo
114.752 88.5904 li
114.752 89.2251 mo
114.752 87.9546 li
112.635 88.5904 mo
112.635 79.269 li
112.105 79.269 mo
113.269 79.269 li
112.635 88.5904 mo
112.635 96.6402 li
112.105 96.6402 mo
113.269 96.6402 li
116.871 92.2968 mo
114.752 92.2968 li
114.752 92.8265 mo
114.752 91.6621 li
116.871 92.2968 mo
118.884 92.2968 li
118.884 92.8265 mo
118.884 91.6621 li
116.871 92.2968 mo
116.871 83.2939 li
116.236 83.2939 mo
117.4 83.2939 li
116.871 92.2968 mo
116.871 100.029 li
116.236 100.029 mo
117.4 100.029 li
121.002 99.6058 mo
118.884 99.6058 li
118.884 100.242 mo
118.884 98.97 li
121.002 99.6058 mo
123.12 99.6058 li
123.12 100.242 mo
123.12 98.97 li
121.002 99.6058 mo
121.002 91.2386 li
120.367 91.2386 mo
121.638 91.2386 li
121.002 99.6058 mo
121.002 106.702 li
120.367 106.702 mo
121.638 106.702 li
125.133 105.749 mo
123.12 105.749 li
123.12 106.385 mo
123.12 105.115 li
125.133 105.749 mo
127.251 105.749 li
127.251 106.385 mo
127.251 105.115 li
125.133 105.749 mo
125.133 97.8056 li
124.603 97.8056 mo
125.769 97.8056 li
125.133 105.749 mo
125.133 112.316 li
124.603 112.316 mo
125.769 112.316 li
129.37 81.2814 mo
127.251 81.2814 li
127.251 81.8111 mo
127.251 80.6456 li
129.37 81.2814 mo
131.382 81.2814 li
131.382 81.8111 mo
131.382 80.6456 li
129.37 81.2814 mo
129.37 71.4304 li
128.734 71.4304 mo
129.9 71.4304 li
129.37 81.2814 mo
129.37 89.7548 li
128.734 89.7548 mo
129.9 89.7548 li
133.501 82.4469 mo
131.382 82.4469 li
131.382 83.0816 mo
131.382 81.9172 li
133.501 82.4469 mo
135.62 82.4469 li
135.62 83.0816 mo
135.62 81.9172 li
133.501 82.4469 mo
133.501 72.702 li
132.865 72.702 mo
134.137 72.702 li
133.501 82.4469 mo
133.501 90.9202 li
132.865 90.9202 mo
134.137 90.9202 li
137.632 66.5574 mo
135.62 66.5574 li
135.62 67.1942 mo
135.62 65.9227 li
137.632 66.5574 mo
139.751 66.5574 li
139.751 67.1942 mo
139.751 65.9227 li
137.632 66.5574 mo
137.632 55.7542 li
137.102 55.7542 mo
138.268 55.7542 li
137.632 66.5574 mo
137.632 76.0911 li
137.102 76.0911 mo
138.268 76.0911 li
@
141.868 48.233 mo
139.751 48.233 li
139.751 48.7627 mo
139.751 47.5983 li
141.868 48.233 mo
143.882 48.233 li
143.882 48.7627 mo
143.882 47.5983 li
141.868 48.233 mo
141.868 36.2644 li
141.234 36.2644 mo
142.399 36.2644 li
141.868 48.233 mo
141.868 58.826 li
141.234 58.826 mo
142.399 58.826 li
@
146 40.819 mo
143.882 40.819 li
143.882 41.4548 mo
143.882 40.2893 li
146 40.819 mo
148.013 40.819 li
148.013 41.4548 mo
148.013 40.2893 li
146 40.819 mo
146 28.532 li
145.365 28.532 mo
146.635 28.532 li
146 40.819 mo
146 51.9406 li
145.365 51.9406 mo
146.635 51.9406 li
150.131 60.4139 mo
148.013 60.4139 li
148.013 61.0497 mo
148.013 59.8842 li
150.131 60.4139 mo
152.25 60.4139 li
152.25 61.0497 mo
152.25 59.8842 li
150.131 60.4139 mo
150.131 49.1862 li
149.496 49.1862 mo
150.766 49.1862 li
150.131 60.4139 mo
150.131 70.3711 li
149.496 70.3711 mo
150.766 70.3711 li
154.261 76.4084 mo
152.25 76.4084 li
152.25 76.9381 mo
152.25 75.7737 li
154.261 76.4084 mo
156.38 76.4084 li
156.38 76.9381 mo
156.38 75.7737 li
154.261 76.4084 mo
154.261 66.1339 li
153.733 66.1339 mo
154.897 66.1339 li
154.261 76.4084 mo
154.261 85.2002 li
153.733 85.2002 mo
154.897 85.2002 li
158.499 65.393 mo
156.38 65.393 li
156.38 65.9227 mo
156.38 64.7572 li
158.499 65.393 mo
160.511 65.393 li
160.511 65.9227 mo
160.511 64.7572 li
158.499 65.393 mo
158.499 54.4827 li
157.863 54.4827 mo
159.028 54.4827 li
158.499 65.393 mo
158.499 74.9256 li
157.863 74.9256 mo
159.028 74.9256 li
162.63 87.4249 mo
160.511 87.4249 li
160.511 87.9546 mo
160.511 86.7892 li
162.63 87.4249 mo
164.748 87.4249 li
164.748 87.9546 mo
164.748 86.7892 li
162.63 87.4249 mo
162.63 77.9974 li
161.994 77.9974 mo
163.265 77.9974 li
162.63 87.4249 mo
162.63 95.4748 li
161.994 95.4748 mo
163.265 95.4748 li
166.761 92.2968 mo
164.748 92.2968 li
164.748 92.8265 mo
164.748 91.6621 li
166.761 92.2968 mo
168.879 92.2968 li
168.879 92.8265 mo
168.879 91.6621 li
166.761 92.2968 mo
166.761 83.2939 li
166.231 83.2939 mo
167.396 83.2939 li
166.761 92.2968 mo
166.761 100.029 li
166.231 100.029 mo
167.396 100.029 li
170.998 102.042 mo
168.879 102.042 li
168.879 102.678 mo
168.879 101.513 li
170.998 102.042 mo
173.01 102.042 li
173.01 102.678 mo
173.01 101.513 li
170.998 102.042 mo
170.998 93.8869 li
170.362 93.8869 mo
171.528 93.8869 li
170.998 102.042 mo
170.998 108.927 li
170.362 108.927 mo
171.528 108.927 li
175.129 105.749 mo
173.01 105.749 li
173.01 106.385 mo
173.01 105.115 li
175.129 105.749 mo
177.248 105.749 li
177.248 106.385 mo
177.248 105.115 li
175.129 105.749 mo
175.129 97.8056 li
174.493 97.8056 mo
175.765 97.8056 li
175.129 105.749 mo
175.129 112.316 li
174.493 112.316 mo
175.765 112.316 li
@
179.26 114.33 mo
177.248 114.33 li
177.248 114.859 mo
177.248 113.694 li
179.26 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
179.26 114.33 mo
179.26 107.233 li
178.73 107.233 mo
179.896 107.233 li
179.26 114.33 mo
179.26 120.049 li
178.73 120.049 mo
179.896 120.049 li
183.497 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
183.497 114.33 mo
185.509 114.33 li
185.51 114.859 mo
185.51 113.694 li
183.497 114.33 mo
183.497 107.233 li
182.861 107.233 mo
184.026 107.233 li
183.497 114.33 mo
183.497 120.049 li
182.861 120.049 mo
184.026 120.049 li
187.627 116.766 mo
185.509 116.766 li
185.51 117.402 mo
185.51 116.13 li
187.627 116.766 mo
189.746 116.766 li
189.746 117.402 mo
189.746 116.13 li
187.627 116.766 mo
187.627 109.987 li
186.992 109.987 mo
188.263 109.987 li
187.627 116.766 mo
187.627 122.167 li
186.992 122.167 mo
188.263 122.167 li
191.758 111.893 mo
189.746 111.893 li
189.746 112.422 mo
189.746 111.258 li
191.758 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
191.758 111.893 mo
191.758 104.585 li
191.229 104.585 mo
192.394 104.585 li
191.758 111.893 mo
191.758 117.825 li
191.229 117.825 mo
192.394 117.825 li
195.995 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
195.995 111.893 mo
198.008 111.893 li
198.008 112.422 mo
198.008 111.258 li
195.995 111.893 mo
195.995 104.585 li
195.36 104.585 mo
196.525 104.585 li
195.995 111.893 mo
195.995 117.825 li
195.36 117.825 mo
196.525 117.825 li
200.126 117.931 mo
198.008 117.931 li
198.008 118.566 mo
198.008 117.402 li
200.126 117.931 mo
202.139 117.931 li
202.139 118.566 mo
202.139 117.402 li
200.126 117.931 mo
200.126 111.363 li
199.491 111.363 mo
200.762 111.363 li
200.126 117.931 mo
200.126 123.227 li
199.491 123.227 mo
200.762 123.227 li
204.258 128.947 mo
202.139 128.947 li
202.139 129.582 mo
202.139 128.417 li
204.258 128.947 mo
206.376 128.947 li
206.376 129.582 mo
206.376 128.417 li
204.258 128.947 mo
204.258 123.756 li
203.622 123.756 mo
204.893 123.756 li
204.258 128.947 mo
204.258 132.76 li
203.622 132.76 mo
204.893 132.76 li
208.389 116.766 mo
206.376 116.766 li
206.376 117.402 mo
206.376 116.13 li
208.389 116.766 mo
210.507 116.766 li
210.507 117.402 mo
210.507 116.13 li
208.389 116.766 mo
208.389 109.987 li
207.859 109.987 mo
209.024 109.987 li
208.389 116.766 mo
208.389 122.167 li
207.859 122.167 mo
209.024 122.167 li
@
212.626 131.489 mo
210.507 131.489 li
210.507 132.018 mo
210.507 130.853 li
212.626 131.489 mo
214.638 131.489 li
214.638 132.018 mo
214.638 130.853 li
212.626 131.489 mo
212.626 126.616 li
211.99 126.616 mo
213.155 126.616 li
212.626 131.489 mo
212.626 134.879 li
211.99 134.879 mo
213.155 134.879 li
216.757 127.781 mo
214.638 127.781 li
214.638 128.417 mo
214.638 127.145 li
216.757 127.781 mo
218.875 127.781 li
218.875 128.417 mo
218.875 127.145 li
216.757 127.781 mo
216.757 122.38 li
216.121 122.38 mo
217.392 122.38 li
216.757 127.781 mo
216.757 131.807 li
216.121 131.807 mo
217.392 131.807 li
220.888 125.345 mo
218.875 125.345 li
218.875 125.875 mo
218.875 124.71 li
220.888 125.345 mo
223.007 125.345 li
223.007 125.875 mo
223.007 124.71 li
220.888 125.345 mo
220.888 119.519 li
220.358 119.519 mo
221.523 119.519 li
220.888 125.345 mo
220.888 129.689 li
220.358 129.689 mo
221.523 129.689 li
225.124 135.09 mo
223.007 135.09 li
223.007 135.726 mo
223.007 134.561 li
225.124 135.09 mo
227.138 135.09 li
227.138 135.726 mo
227.138 134.561 li
225.124 135.09 mo
225.124 130.959 li
224.489 130.959 mo
225.654 130.959 li
225.124 135.09 mo
225.124 137.738 li
224.489 137.738 mo
225.654 137.738 li
@
226.396 135.09 mo
226.396 134.388 225.826 133.819 225.124 133.819 cv
224.422 133.819 223.853 134.388 223.853 135.09 cv
223.853 135.792 224.422 136.362 225.124 136.362 cv
225.826 136.362 226.396 135.792 226.396 135.09 cv
ef
222.158 125.345 mo
222.158 124.643 221.59 124.075 220.888 124.075 cv
220.186 124.075 219.616 124.643 219.616 125.345 cv
219.616 126.047 220.186 126.616 220.888 126.616 cv
221.59 126.616 222.158 126.047 222.158 125.345 cv
ef
218.027 127.781 mo
218.027 127.079 217.459 126.511 216.757 126.511 cv
216.055 126.511 215.485 127.079 215.485 127.781 cv
215.485 128.483 216.055 129.053 216.757 129.053 cv
217.459 129.053 218.027 128.483 218.027 127.781 cv
ef
213.896 131.489 mo
213.896 130.787 213.328 130.217 212.626 130.217 cv
211.924 130.217 211.354 130.787 211.354 131.489 cv
211.354 132.191 211.924 132.76 212.626 132.76 cv
213.328 132.76 213.896 132.191 213.896 131.489 cv
ef
209.66 116.766 mo
209.66 116.064 209.09 115.494 208.389 115.494 cv
207.687 115.494 207.118 116.064 207.118 116.766 cv
207.118 117.468 207.687 118.036 208.389 118.036 cv
209.09 118.036 209.66 117.468 209.66 116.766 cv
ef
205.529 128.947 mo
205.529 128.245 204.96 127.676 204.258 127.676 cv
203.556 127.676 202.987 128.245 202.987 128.947 cv
202.987 129.649 203.556 130.217 204.258 130.217 cv
204.96 130.217 205.529 129.649 205.529 128.947 cv
ef
201.398 117.931 mo
201.398 117.229 200.828 116.66 200.126 116.66 cv
199.424 116.66 198.856 117.229 198.856 117.931 cv
198.856 118.633 199.424 119.202 200.126 119.202 cv
200.828 119.202 201.398 118.633 201.398 117.931 cv
ef
197.267 111.893 mo
197.267 111.191 196.697 110.622 195.995 110.622 cv
195.293 110.622 194.725 111.191 194.725 111.893 cv
194.725 112.595 195.293 113.164 195.995 113.164 cv
196.697 113.164 197.267 112.595 197.267 111.893 cv
ef
193.03 111.893 mo
193.03 111.191 192.46 110.622 191.758 110.622 cv
191.056 110.622 190.488 111.191 190.488 111.893 cv
190.488 112.595 191.056 113.164 191.758 113.164 cv
192.46 113.164 193.03 112.595 193.03 111.893 cv
ef
188.899 116.766 mo
188.899 116.064 188.329 115.494 187.627 115.494 cv
186.925 115.494 186.357 116.064 186.357 116.766 cv
186.357 117.468 186.925 118.036 187.627 118.036 cv
188.329 118.036 188.899 117.468 188.899 116.766 cv
ef
184.768 114.33 mo
184.768 113.628 184.199 113.058 183.497 113.058 cv
182.795 113.058 182.226 113.628 182.226 114.33 cv
182.226 115.032 182.795 115.6 183.497 115.6 cv
184.199 115.6 184.768 115.032 184.768 114.33 cv
ef
180.53 114.33 mo
180.53 113.628 179.962 113.058 179.26 113.058 cv
178.558 113.058 177.988 113.628 177.988 114.33 cv
177.988 115.032 178.558 115.6 179.26 115.6 cv
179.962 115.6 180.53 115.032 180.53 114.33 cv
ef
176.399 105.749 mo
176.399 105.047 175.831 104.479 175.129 104.479 cv
174.427 104.479 173.857 105.047 173.857 105.749 cv
173.857 106.451 174.427 107.021 175.129 107.021 cv
175.831 107.021 176.399 106.451 176.399 105.749 cv
ef
172.269 102.042 mo
172.269 101.341 171.7 100.771 170.998 100.771 cv
170.296 100.771 169.726 101.341 169.726 102.042 cv
169.726 102.744 170.296 103.313 170.998 103.313 cv
171.7 103.313 172.269 102.744 172.269 102.042 cv
ef
168.032 92.2968 mo
168.032 91.5948 167.463 91.0263 166.761 91.0263 cv
166.059 91.0263 165.49 91.5948 165.49 92.2968 cv
165.49 92.9988 166.059 93.5685 166.761 93.5685 cv
167.463 93.5685 168.032 92.9988 168.032 92.2968 cv
ef
163.901 87.4249 mo
163.901 86.7229 163.332 86.1534 162.63 86.1534 cv
161.928 86.1534 161.359 86.7229 161.359 87.4249 cv
161.359 88.1269 161.928 88.6955 162.63 88.6955 cv
163.332 88.6955 163.901 88.1269 163.901 87.4249 cv
ef
159.77 65.393 mo
159.77 64.691 159.201 64.1214 158.499 64.1214 cv
157.796 64.1214 157.228 64.691 157.228 65.393 cv
157.228 66.095 157.796 66.6635 158.499 66.6635 cv
159.201 66.6635 159.77 66.095 159.77 65.393 cv
ef
155.533 76.4084 mo
155.533 75.7065 154.963 75.1379 154.261 75.1379 cv
153.559 75.1379 152.991 75.7065 152.991 76.4084 cv
152.991 77.1104 153.559 77.68 154.261 77.68 cv
154.963 77.68 155.533 77.1104 155.533 76.4084 cv
ef
151.402 60.4139 mo
151.402 59.7119 150.833 59.1434 150.131 59.1434 cv
149.429 59.1434 148.86 59.7119 148.86 60.4139 cv
148.86 61.1159 149.429 61.6855 150.131 61.6855 cv
150.833 61.6855 151.402 61.1159 151.402 60.4139 cv
ef
147.271 40.819 mo
147.271 40.117 146.702 39.5474 146 39.5474 cv
145.298 39.5474 144.729 40.117 144.729 40.819 cv
144.729 41.521 145.298 42.0895 146 42.0895 cv
146.702 42.0895 147.271 41.521 147.271 40.819 cv
ef
143.14 48.233 mo
143.14 47.531 142.57 46.9625 141.868 46.9625 cv
141.166 46.9625 140.598 47.531 140.598 48.233 cv
140.598 48.935 141.166 49.5046 141.868 49.5046 cv
142.57 49.5046 143.14 48.935 143.14 48.233 cv
ef
138.904 66.5574 mo
138.904 65.8554 138.334 65.2869 137.632 65.2869 cv
136.93 65.2869 136.361 65.8554 136.361 66.5574 cv
136.361 67.2594 136.93 67.829 137.632 67.829 cv
138.334 67.829 138.904 67.2594 138.904 66.5574 cv
ef
134.771 82.4469 mo
134.771 81.7449 134.203 81.1753 133.501 81.1753 cv
132.799 81.1753 132.23 81.7449 132.23 82.4469 cv
132.23 83.1489 132.799 83.7174 133.501 83.7174 cv
134.203 83.7174 134.771 83.1489 134.771 82.4469 cv
ef
130.641 81.2814 mo
130.641 80.5794 130.072 80.0098 129.37 80.0098 cv
128.668 80.0098 128.098 80.5794 128.098 81.2814 cv
128.098 81.9834 128.668 82.5519 129.37 82.5519 cv
130.072 82.5519 130.641 81.9834 130.641 81.2814 cv
ef
126.404 105.749 mo
126.404 105.047 125.835 104.479 125.133 104.479 cv
124.431 104.479 123.862 105.047 123.862 105.749 cv
123.862 106.451 124.431 107.021 125.133 107.021 cv
125.835 107.021 126.404 106.451 126.404 105.749 cv
ef
122.273 99.6058 mo
122.273 98.9038 121.704 98.3353 121.002 98.3353 cv
120.3 98.3353 119.731 98.9038 119.731 99.6058 cv
119.731 100.308 120.3 100.877 121.002 100.877 cv
121.704 100.877 122.273 100.308 122.273 99.6058 cv
ef
118.142 92.2968 mo
118.142 91.5948 117.573 91.0263 116.871 91.0263 cv
116.169 91.0263 115.6 91.5948 115.6 92.2968 cv
115.6 92.9988 116.169 93.5685 116.871 93.5685 cv
117.573 93.5685 118.142 92.9988 118.142 92.2968 cv
ef
113.905 88.5904 mo
113.905 87.8884 113.337 87.3188 112.635 87.3188 cv
111.933 87.3188 111.363 87.8884 111.363 88.5904 cv
111.363 89.2924 111.933 89.8609 112.635 89.8609 cv
113.337 89.8609 113.905 89.2924 113.905 88.5904 cv
ef
109.774 81.2814 mo
109.774 80.5794 109.204 80.0098 108.502 80.0098 cv
107.8 80.0098 107.232 80.5794 107.232 81.2814 cv
107.232 81.9834 107.8 82.5519 108.502 82.5519 cv
109.204 82.5519 109.774 81.9834 109.774 81.2814 cv
ef
105.643 92.2968 mo
105.643 91.5948 105.074 91.0263 104.372 91.0263 cv
103.67 91.0263 103.101 91.5948 103.101 92.2968 cv
103.101 92.9988 103.67 93.5685 104.372 93.5685 cv
105.074 93.5685 105.643 92.9988 105.643 92.2968 cv
ef
101.406 89.8609 mo
101.406 89.1589 100.837 88.5904 100.135 88.5904 cv
99.4332 88.5904 98.8647 89.1589 98.8647 89.8609 cv
98.8647 90.5629 99.4332 91.1325 100.135 91.1325 cv
100.837 91.1325 101.406 90.5629 101.406 89.8609 cv
ef
97.2747 88.5904 mo
97.2747 87.8884 96.7062 87.3188 96.0042 87.3188 cv
95.3022 87.3188 94.7326 87.8884 94.7326 88.5904 cv
94.7326 89.2924 95.3022 89.8609 96.0042 89.8609 cv
96.7062 89.8609 97.2747 89.2924 97.2747 88.5904 cv
ef
93.1447 89.8609 mo
93.1447 89.1589 92.5751 88.5904 91.8731 88.5904 cv
91.1711 88.5904 90.6016 89.1589 90.6016 89.8609 cv
90.6016 90.5629 91.1711 91.1325 91.8731 91.1325 cv
92.5751 91.1325 93.1447 90.5629 93.1447 89.8609 cv
ef
89.0137 94.7339 mo
89.0137 94.0319 88.4441 93.4623 87.7421 93.4623 cv
87.0401 93.4623 86.4716 94.0319 86.4716 94.7339 cv
86.4716 95.4359 87.0401 96.0044 87.7421 96.0044 cv
88.4441 96.0044 89.0137 95.4359 89.0137 94.7339 cv
ef
84.7765 82.4469 mo
84.7765 81.7449 84.2069 81.1753 83.5049 81.1753 cv
82.8029 81.1753 82.2344 81.7449 82.2344 82.4469 cv
82.2344 83.1489 82.8029 83.7174 83.5049 83.7174 cv
84.2069 83.7174 84.7765 83.1489 84.7765 82.4469 cv
ef
80.6454 100.877 mo
80.6454 100.175 80.0758 99.6058 79.3738 99.6058 cv
78.6729 99.6058 78.1033 100.175 78.1033 100.877 cv
78.1033 101.579 78.6729 102.148 79.3738 102.148 cv
80.0758 102.148 80.6454 101.579 80.6454 100.877 cv
ef
76.5144 87.4249 mo
76.5144 86.7229 75.9448 86.1534 75.2428 86.1534 cv
74.5408 86.1534 73.9723 86.7229 73.9723 87.4249 cv
73.9723 88.1269 74.5408 88.6955 75.2428 88.6955 cv
75.9448 88.6955 76.5144 88.1269 76.5144 87.4249 cv
ef
72.2772 88.5904 mo
72.2772 87.8884 71.7086 87.3188 71.0067 87.3188 cv
70.3046 87.3188 69.7351 87.8884 69.7351 88.5904 cv
69.7351 89.2924 70.3046 89.8609 71.0067 89.8609 cv
71.7086 89.8609 72.2772 89.2924 72.2772 88.5904 cv
ef
68.1461 93.4623 mo
68.1461 92.7603 67.5776 92.1918 66.8756 92.1918 cv
66.1736 92.1918 65.604 92.7603 65.604 93.4623 cv
65.604 94.1643 66.1736 94.7339 66.8756 94.7339 cv
67.5776 94.7339 68.1461 94.1643 68.1461 93.4623 cv
ef
64.0151 95.8983 mo
64.0151 95.1963 63.4465 94.6277 62.7446 94.6277 cv
62.0426 94.6277 61.473 95.1963 61.473 95.8983 cv
61.473 96.6003 62.0426 97.1698 62.7446 97.1698 cv
63.4465 97.1698 64.0151 96.6003 64.0151 95.8983 cv
ef
59.7789 108.186 mo
59.7789 107.484 59.2094 106.915 58.5074 106.915 cv
57.8054 106.915 57.2358 107.484 57.2358 108.186 cv
57.2358 108.888 57.8054 109.457 58.5074 109.457 cv
59.2094 109.457 59.7789 108.888 59.7789 108.186 cv
ef
55.6479 98.4414 mo
55.6479 97.7394 55.0783 97.1698 54.3763 97.1698 cv
53.6743 97.1698 53.1058 97.7394 53.1058 98.4414 cv
53.1058 99.1434 53.6743 99.7119 54.3763 99.7119 cv
55.0783 99.7119 55.6479 99.1434 55.6479 98.4414 cv
ef
51.5168 117.931 mo
51.5168 117.229 50.9473 116.66 50.2453 116.66 cv
49.5433 116.66 48.9747 117.229 48.9747 117.931 cv
48.9747 118.633 49.5433 119.202 50.2453 119.202 cv
50.9473 119.202 51.5168 118.633 51.5168 117.931 cv
ef
47.2796 122.909 mo
47.2796 122.207 46.7101 121.638 46.0081 121.638 cv
45.3071 121.638 44.7375 122.207 44.7375 122.909 cv
44.7375 123.611 45.3071 124.18 46.0081 124.18 cv
46.7101 124.18 47.2796 123.611 47.2796 122.909 cv
ef
43.1486 133.926 mo
43.1486 133.224 42.579 132.654 41.877 132.654 cv
41.175 132.654 40.6065 133.224 40.6065 133.926 cv
40.6065 134.628 41.175 135.196 41.877 135.196 cv
42.579 135.196 43.1486 134.628 43.1486 133.926 cv
ef
.635789 lw
39.8646 139.434 mo
cp
39.8646 139.434 mo
40.8177 136.043 li
41.877 132.865 li
42.9363 129.9 li
43.9956 127.253 li
46.0081 122.486 li
48.1267 118.355 li
50.2453 114.753 li
52.2577 111.575 li
54.3763 108.821 li
56.4949 106.279 li
58.5074 104.16 li
60.626 102.254 li
62.7446 100.454 li
64.757 98.97 li
68.9942 96.4279 li
73.1253 94.4155 li
77.2553 92.7214 li
81.4925 91.556 li
85.6235 90.6028 li
89.7546 89.8609 li
93.9918 89.3312 li
98.1228 89.0139 li
102.254 88.6955 li
106.385 88.4842 li
110.621 88.2719 li
114.752 87.8484 li
118.884 87.2137 li
123.12 86.0482 li
125.133 85.2002 li
127.251 84.0358 li
129.37 82.4469 li
131.382 80.3282 li
132.442 78.9506 li
133.501 77.4677 li
134.56 75.7737 li
135.62 73.7613 li
136.573 71.5365 li
137.632 69.1006 li
138.691 66.3462 li
139.751 63.3806 li
141.868 57.2371 li
142.822 54.1653 li
143.882 51.5171 li
144.941 49.2923 li
145.47 48.4453 li
146 47.8095 li
146.53 47.4921 li
147.06 47.2799 li
147.588 47.386 li
148.013 47.8095 li
148.541 48.4453 li
149.072 49.2923 li
149.602 50.4578 li
150.131 51.7293 li
151.19 54.9062 li
152.25 58.5076 li
154.261 66.3462 li
155.321 70.266 li
156.38 73.9725 li
157.439 77.3626 li
158.499 80.5406 li
159.558 83.4 li
160.511 86.0482 li
161.57 88.4842 li
162.63 90.6028 li
164.748 94.2042 li
166.761 97.276 li
168.879 99.8181 li
170.998 101.937 li
173.01 103.843 li
177.248 107.127 li
181.379 109.88 li
185.509 112.422 li
189.746 114.647 li
193.877 116.871 li
198.008 118.99 li
202.139 121.003 li
206.376 123.121 li
210.507 125.134 li
214.638 127.147 li
218.874 129.159 li
223.007 131.171 li
227.138 133.289 li
0 .985 1 .001 cmyk
@
.953158 lw
[1.27158 1.27158 ] 0 dsh
39.8646 140.068 mo
cp
39.8646 140.068 mo
40.8177 136.573 li
41.877 133.395 li
42.9363 130.536 li
43.9956 127.887 li
45.0549 125.345 li
46.0081 123.121 li
47.0674 121.003 li
48.1267 118.99 li
49.186 117.083 li
50.2453 115.388 li
51.3046 113.8 li
52.2577 112.316 li
54.3763 109.563 li
56.4949 107.127 li
58.5074 104.902 li
60.626 103.101 li
62.7446 101.407 li
64.757 99.9232 li
66.8756 98.5465 li
68.9942 97.3821 li
71.0067 96.4279 li
73.1253 95.4748 li
75.2428 94.7339 li
77.2553 93.9919 li
81.4925 92.9326 li
85.6235 92.1918 li
89.7546 91.6621 li
93.9918 91.4498 li
98.1228 91.4498 li
102.254 91.556 li
106.385 91.8734 li
110.621 92.2968 li
114.752 92.9326 li
118.884 93.6746 li
123.12 94.4155 li
127.251 95.3686 li
131.382 96.4279 li
135.62 97.4872 li
143.882 99.8181 li
148.013 101.195 li
152.25 102.466 li
156.38 103.949 li
160.511 105.326 li
164.748 106.809 li
173.01 109.987 li
177.248 111.575 li
181.379 113.27 li
185.509 114.965 li
189.746 116.766 li
193.877 118.461 li
202.139 122.061 li
206.376 123.969 li
210.507 125.875 li
214.638 127.676 li
218.874 129.689 li
223.007 131.595 li
227.138 133.501 li
.918 .756 0 0 cmyk
@
.635789 lw
[] 0 dsh
40.7126 133.926 mo
39.8646 133.926 li
39.8646 134.454 mo
39.8646 133.289 li
43.1486 133.926 mo
43.9956 133.926 li
43.9956 134.454 mo
43.9956 133.289 li
41.877 132.654 mo
41.877 129.476 li
41.2423 129.476 mo
42.5128 129.476 li
41.877 135.09 mo
41.877 136.785 li
41.2423 136.785 mo
42.5128 136.785 li
44.8437 122.909 mo
43.9956 122.909 li
43.9956 123.439 mo
43.9956 122.274 li
47.2797 122.909 mo
48.1267 122.909 li
48.1267 123.439 mo
48.1267 122.274 li
46.0081 121.638 mo
46.0081 116.766 li
45.4795 116.766 mo
46.6439 116.766 li
46.0081 124.075 mo
46.0081 127.57 li
45.4795 127.57 mo
46.6439 127.57 li
48.9748 117.931 mo
48.1267 117.931 li
48.1267 118.566 mo
48.1267 117.402 li
51.4107 117.931 mo
52.2577 117.931 li
52.2577 118.566 mo
52.2577 117.402 li
50.2453 116.766 mo
50.2453 111.363 li
49.6095 111.363 mo
50.7749 111.363 li
50.2453 119.202 mo
50.2453 123.227 li
49.6095 123.227 mo
50.7749 123.227 li
53.2109 98.4414 mo
52.2577 98.4414 li
52.2577 98.97 mo
52.2577 97.8056 li
55.5418 98.4414 mo
56.4949 98.4414 li
56.4949 98.97 mo
56.4949 97.8056 li
54.3763 97.1698 mo
54.3763 89.8609 li
53.7405 89.8609 mo
55.0121 89.8609 li
54.3763 99.6058 mo
54.3763 105.643 li
53.7405 105.643 mo
55.0121 105.643 li
57.3419 108.186 mo
56.4949 108.186 li
56.4949 108.821 mo
56.4949 107.551 li
59.779 108.186 mo
60.626 108.186 li
60.626 108.821 mo
60.626 107.551 li
58.5074 107.021 mo
58.5074 100.56 li
57.9777 100.56 mo
59.1432 100.56 li
58.5074 109.351 mo
58.5074 114.541 li
57.9777 114.541 mo
59.1432 114.541 li
61.473 95.8983 mo
60.626 95.8983 li
60.626 96.5341 mo
60.626 95.3686 li
63.909 95.8983 mo
64.757 95.8983 li
64.757 96.5341 mo
64.757 95.3686 li
62.7446 94.7339 mo
62.7446 87.2137 li
62.1088 87.2137 mo
63.2742 87.2137 li
62.7446 97.1698 mo
62.7446 103.313 li
62.1088 103.313 mo
63.2742 103.313 li
65.7102 93.4623 mo
64.757 93.4623 li
64.757 94.0981 mo
64.757 92.9326 li
68.04 93.4623 mo
68.9942 93.4623 li
68.9942 94.0981 mo
68.9942 92.9326 li
66.8756 92.2968 mo
66.8756 84.5655 li
66.2398 84.5655 mo
67.5104 84.5655 li
66.8756 94.7339 mo
66.8756 101.089 li
66.2398 101.089 mo
67.5104 101.089 li
69.8412 88.5904 mo
68.9942 88.5904 li
68.9942 89.2251 mo
68.9942 87.9546 li
72.2772 88.5904 mo
73.1253 88.5904 li
73.1253 89.2251 mo
73.1253 87.9546 li
71.0067 87.4249 mo
71.0067 79.269 li
70.477 79.269 mo
71.6414 79.269 li
71.0067 89.8609 mo
71.0067 96.6402 li
70.477 96.6402 mo
71.6414 96.6402 li
1 /0 /CSD get_res sepcs
1 sep
@
73.9723 87.4249 mo
73.1253 87.4249 li
73.1253 87.9546 mo
73.1253 86.7892 li
76.4083 87.4249 mo
77.2553 87.4249 li
77.2553 87.9546 mo
77.2553 86.7892 li
75.2428 86.1534 mo
75.2428 77.9974 li
74.6081 77.9974 mo
75.7735 77.9974 li
75.2428 88.5904 mo
75.2428 95.4748 li
74.6081 95.4748 mo
75.7735 95.4748 li
78.2095 100.877 mo
77.2553 100.877 li
77.2553 101.407 mo
77.2553 100.242 li
80.5393 100.877 mo
81.4925 100.877 li
81.4925 101.407 mo
81.4925 100.242 li
79.3739 99.6058 mo
79.3739 92.5091 li
78.7391 92.5091 mo
80.0097 92.5091 li
79.3739 102.042 mo
79.3739 107.868 li
78.7391 107.868 mo
80.0097 107.868 li
82.3406 82.4469 mo
81.4925 82.4469 li
81.4925 83.0816 mo
81.4925 81.9172 li
84.7765 82.4469 mo
85.6235 82.4469 li
85.6235 83.0816 mo
85.6235 81.9172 li
83.5049 81.2814 mo
83.5049 72.702 li
82.9753 72.702 mo
84.1407 72.702 li
83.5049 83.7174 mo
83.5049 90.9202 li
82.9753 90.9202 mo
84.1407 90.9202 li
86.4716 94.7339 mo
85.6235 94.7339 li
85.6235 95.3686 mo
85.6235 94.0981 li
88.9076 94.7339 mo
89.7546 94.7339 li
89.7546 95.3686 mo
89.7546 94.0981 li
87.7421 93.4623 mo
87.7421 85.836 li
87.1063 85.836 mo
88.2718 85.836 li
87.7421 95.8983 mo
87.7421 102.254 li
87.1063 102.254 mo
88.2718 102.254 li
90.6016 89.8609 mo
89.7546 89.8609 li
89.7546 90.3905 mo
89.7546 89.2251 li
93.0386 89.8609 mo
93.9918 89.8609 li
93.9918 90.3905 mo
93.9918 89.2251 li
91.8732 88.5904 mo
91.8732 80.6456 li
91.2374 80.6456 mo
92.509 80.6456 li
91.8732 91.0263 mo
91.8732 97.6995 li
91.2374 97.6995 mo
92.509 97.6995 li
94.8388 88.5904 mo
93.9918 88.5904 li
93.9918 89.2251 mo
93.9918 87.9546 li
97.2748 88.5904 mo
98.1228 88.5904 li
98.1228 89.2251 mo
98.1228 87.9546 li
96.0042 87.4249 mo
96.0042 79.269 li
95.3684 79.269 mo
96.64 79.269 li
96.0042 89.8609 mo
96.0042 96.6402 li
95.3684 96.6402 mo
96.64 96.6402 li
98.9698 89.8609 mo
98.1228 89.8609 li
98.1228 90.3905 mo
98.1228 89.2251 li
101.406 89.8609 mo
102.254 89.8609 li
102.254 90.3905 mo
102.254 89.2251 li
100.135 88.5904 mo
100.135 80.6456 li
99.6056 80.6456 mo
100.771 80.6456 li
100.135 91.0263 mo
100.135 97.6995 li
99.6056 97.6995 mo
100.771 97.6995 li
103.101 92.2968 mo
102.254 92.2968 li
102.254 92.8265 mo
102.254 91.6621 li
105.538 92.2968 mo
106.385 92.2968 li
106.385 92.8265 mo
106.385 91.6621 li
104.372 91.0263 mo
104.372 83.2939 li
103.737 83.2939 mo
104.902 83.2939 li
104.372 93.4623 mo
104.372 100.029 li
103.737 100.029 mo
104.902 100.029 li
@
107.338 81.2814 mo
106.385 81.2814 li
106.385 81.8111 mo
106.385 80.6456 li
109.668 81.2814 mo
110.621 81.2814 li
110.621 81.8111 mo
110.621 80.6456 li
108.502 80.0098 mo
108.502 71.4304 li
107.868 71.4304 mo
109.139 71.4304 li
108.502 82.4469 mo
108.502 89.7548 li
107.868 89.7548 mo
109.139 89.7548 li
111.469 88.5904 mo
110.621 88.5904 li
110.621 89.2251 mo
110.621 87.9546 li
113.905 88.5904 mo
114.752 88.5904 li
114.752 89.2251 mo
114.752 87.9546 li
112.635 87.4249 mo
112.635 79.269 li
112.105 79.269 mo
113.269 79.269 li
112.635 89.8609 mo
112.635 96.6402 li
112.105 96.6402 mo
113.269 96.6402 li
115.6 92.2968 mo
114.752 92.2968 li
114.752 92.8265 mo
114.752 91.6621 li
118.036 92.2968 mo
118.884 92.2968 li
118.884 92.8265 mo
118.884 91.6621 li
116.871 91.0263 mo
116.871 83.2939 li
116.236 83.2939 mo
117.4 83.2939 li
116.871 93.4623 mo
116.871 100.029 li
116.236 100.029 mo
117.4 100.029 li
119.837 99.6058 mo
118.884 99.6058 li
118.884 100.242 mo
118.884 98.97 li
122.167 99.6058 mo
123.12 99.6058 li
123.12 100.242 mo
123.12 98.97 li
121.002 98.4414 mo
121.002 91.2386 li
120.367 91.2386 mo
121.638 91.2386 li
121.002 100.771 mo
121.002 106.702 li
120.367 106.702 mo
121.638 106.702 li
123.967 105.749 mo
123.12 105.749 li
123.12 106.385 mo
123.12 105.115 li
126.404 105.749 mo
127.251 105.749 li
127.251 106.385 mo
127.251 105.115 li
125.133 104.479 mo
125.133 97.8056 li
124.603 97.8056 mo
125.769 97.8056 li
125.133 106.915 mo
125.133 112.316 li
124.603 112.316 mo
125.769 112.316 li
128.098 81.2814 mo
127.251 81.2814 li
127.251 81.8111 mo
127.251 80.6456 li
130.535 81.2814 mo
131.382 81.2814 li
131.382 81.8111 mo
131.382 80.6456 li
129.37 80.0098 mo
129.37 71.4304 li
128.734 71.4304 mo
129.9 71.4304 li
129.37 82.4469 mo
129.37 89.7548 li
128.734 89.7548 mo
129.9 89.7548 li
132.336 82.4469 mo
131.382 82.4469 li
131.382 83.0816 mo
131.382 81.9172 li
134.667 82.4469 mo
135.62 82.4469 li
135.62 83.0816 mo
135.62 81.9172 li
133.501 81.2814 mo
133.501 72.702 li
132.865 72.702 mo
134.137 72.702 li
133.501 83.7174 mo
133.501 90.9202 li
132.865 90.9202 mo
134.137 90.9202 li
136.467 66.5574 mo
135.62 66.5574 li
135.62 67.1942 mo
135.62 65.9227 li
138.904 66.5574 mo
139.751 66.5574 li
139.751 67.1942 mo
139.751 65.9227 li
137.632 65.393 mo
137.632 55.7542 li
137.102 55.7542 mo
138.268 55.7542 li
137.632 67.829 mo
137.632 76.0911 li
137.102 76.0911 mo
138.268 76.0911 li
@
140.598 48.233 mo
139.751 48.233 li
139.751 48.7627 mo
139.751 47.5983 li
143.034 48.233 mo
143.882 48.233 li
143.882 48.7627 mo
143.882 47.5983 li
141.868 46.9625 mo
141.868 36.2644 li
141.234 36.2644 mo
142.399 36.2644 li
141.868 49.3985 mo
141.868 58.826 li
141.234 58.826 mo
142.399 58.826 li
@
144.729 40.819 mo
143.882 40.819 li
143.882 41.4548 mo
143.882 40.2893 li
147.165 40.819 mo
148.013 40.819 li
148.013 41.4548 mo
148.013 40.2893 li
146 39.6536 mo
146 28.532 li
145.365 28.532 mo
146.635 28.532 li
146 42.0895 mo
146 51.9406 li
145.365 51.9406 mo
146.635 51.9406 li
148.966 60.4139 mo
148.013 60.4139 li
148.013 61.0497 mo
148.013 59.8842 li
151.402 60.4139 mo
152.25 60.4139 li
152.25 61.0497 mo
152.25 59.8842 li
150.131 59.2495 mo
150.131 49.1862 li
149.496 49.1862 mo
150.766 49.1862 li
150.131 61.6855 mo
150.131 70.3711 li
149.496 70.3711 mo
150.766 70.3711 li
153.097 76.4084 mo
152.249 76.4084 li
152.25 76.9381 mo
152.25 75.7737 li
155.533 76.4084 mo
156.38 76.4084 li
156.38 76.9381 mo
156.38 75.7737 li
154.261 75.1379 mo
154.261 66.1339 li
153.733 66.1339 mo
154.897 66.1339 li
154.261 77.5739 mo
154.261 85.2002 li
153.733 85.2002 mo
154.897 85.2002 li
157.228 65.393 mo
156.38 65.393 li
156.38 65.9227 mo
156.38 64.7572 li
159.664 65.393 mo
160.511 65.393 li
160.511 65.9227 mo
160.511 64.7572 li
158.499 64.1214 mo
158.499 54.4827 li
157.863 54.4827 mo
159.028 54.4827 li
158.499 66.5574 mo
158.499 74.9256 li
157.863 74.9256 mo
159.028 74.9256 li
161.464 87.4249 mo
160.511 87.4249 li
160.511 87.9546 mo
160.511 86.7892 li
163.795 87.4249 mo
164.748 87.4249 li
164.748 87.9546 mo
164.748 86.7892 li
162.63 86.1534 mo
162.63 77.9974 li
161.994 77.9974 mo
163.265 77.9974 li
162.63 88.5904 mo
162.63 95.4748 li
161.994 95.4748 mo
163.265 95.4748 li
165.596 92.2968 mo
164.748 92.2968 li
164.748 92.8265 mo
164.748 91.6621 li
168.032 92.2968 mo
168.879 92.2968 li
168.879 92.8265 mo
168.879 91.6621 li
166.761 91.0263 mo
166.761 83.2939 li
166.231 83.2939 mo
167.396 83.2939 li
166.761 93.4623 mo
166.761 100.029 li
166.231 100.029 mo
167.396 100.029 li
169.726 102.042 mo
168.879 102.042 li
168.879 102.678 mo
168.879 101.513 li
172.163 102.042 mo
173.01 102.042 li
173.01 102.678 mo
173.01 101.513 li
170.998 100.877 mo
170.998 93.8869 li
170.362 93.8869 mo
171.528 93.8869 li
170.998 103.313 mo
170.998 108.927 li
170.362 108.927 mo
171.528 108.927 li
173.964 105.749 mo
173.01 105.749 li
173.01 106.385 mo
173.01 105.115 li
176.294 105.749 mo
177.248 105.749 li
177.248 106.385 mo
177.248 105.115 li
175.129 104.479 mo
175.129 97.8056 li
174.493 97.8056 mo
175.765 97.8056 li
175.129 106.915 mo
175.129 112.316 li
174.493 112.316 mo
175.765 112.316 li
@
178.095 114.33 mo
177.248 114.33 li
177.248 114.859 mo
177.248 113.694 li
180.531 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
179.26 113.058 mo
179.26 107.233 li
178.73 107.233 mo
179.896 107.233 li
179.26 115.494 mo
179.26 120.049 li
178.73 120.049 mo
179.896 120.049 li
182.226 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
184.662 114.33 mo
185.51 114.33 li
185.51 114.859 mo
185.51 113.694 li
183.497 113.058 mo
183.497 107.233 li
182.861 107.233 mo
184.026 107.233 li
183.497 115.494 mo
183.497 120.049 li
182.861 120.049 mo
184.026 120.049 li
186.463 116.766 mo
185.509 116.766 li
185.51 117.402 mo
185.51 116.13 li
188.793 116.766 mo
189.746 116.766 li
189.746 117.402 mo
189.746 116.13 li
187.627 115.494 mo
187.627 109.987 li
186.992 109.987 mo
188.263 109.987 li
187.627 117.931 mo
187.627 122.167 li
186.992 122.167 mo
188.263 122.167 li
190.594 111.893 mo
189.746 111.893 li
189.746 112.422 mo
189.746 111.258 li
193.03 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
191.758 110.622 mo
191.758 104.585 li
191.229 104.585 mo
192.394 104.585 li
191.758 113.058 mo
191.758 117.825 li
191.229 117.825 mo
192.394 117.825 li
194.725 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
197.161 111.893 mo
198.008 111.893 li
198.008 112.422 mo
198.008 111.258 li
195.995 110.622 mo
195.995 104.585 li
195.36 104.585 mo
196.525 104.585 li
195.995 113.058 mo
195.995 117.825 li
195.36 117.825 mo
196.525 117.825 li
198.856 117.931 mo
198.008 117.931 li
198.008 118.566 mo
198.008 117.402 li
201.292 117.931 mo
202.139 117.931 li
202.139 118.566 mo
202.139 117.402 li
200.126 116.766 mo
200.126 111.363 li
199.491 111.363 mo
200.762 111.363 li
200.126 119.202 mo
200.126 123.227 li
199.491 123.227 mo
200.762 123.227 li
203.092 128.947 mo
202.139 128.947 li
202.139 129.582 mo
202.139 128.417 li
205.529 128.947 mo
206.376 128.947 li
206.376 129.582 mo
206.376 128.417 li
204.258 127.781 mo
204.258 123.756 li
203.622 123.756 mo
204.893 123.756 li
204.258 130.217 mo
204.258 132.76 li
203.622 132.76 mo
204.893 132.76 li
207.223 116.766 mo
206.376 116.766 li
206.376 117.402 mo
206.376 116.13 li
209.66 116.766 mo
210.507 116.766 li
210.507 117.402 mo
210.507 116.13 li
208.389 115.494 mo
208.389 109.987 li
207.859 109.987 mo
209.024 109.987 li
208.389 117.931 mo
208.389 122.167 li
207.859 122.167 mo
209.024 122.167 li
@
211.354 131.489 mo
210.507 131.489 li
210.507 132.018 mo
210.507 130.853 li
213.791 131.489 mo
214.638 131.489 li
214.638 132.018 mo
214.638 130.853 li
212.626 130.217 mo
212.626 126.616 li
211.99 126.616 mo
213.155 126.616 li
212.626 132.654 mo
212.626 134.879 li
211.99 134.879 mo
213.155 134.879 li
215.591 127.781 mo
214.638 127.781 li
214.638 128.417 mo
214.638 127.145 li
217.921 127.781 mo
218.875 127.781 li
218.875 128.417 mo
218.875 127.145 li
216.757 126.511 mo
216.757 122.38 li
216.121 122.38 mo
217.392 122.38 li
216.757 128.947 mo
216.757 131.807 li
216.121 131.807 mo
217.392 131.807 li
219.722 125.345 mo
218.874 125.345 li
218.875 125.875 mo
218.875 124.71 li
222.158 125.345 mo
223.007 125.345 li
223.007 125.875 mo
223.007 124.71 li
220.888 124.075 mo
220.888 119.519 li
220.358 119.519 mo
221.523 119.519 li
220.888 126.511 mo
220.888 129.689 li
220.358 129.689 mo
221.523 129.689 li
223.854 135.09 mo
223.007 135.09 li
223.007 135.726 mo
223.007 134.561 li
226.289 135.09 mo
227.138 135.09 li
227.138 135.726 mo
227.138 134.561 li
225.124 133.926 mo
225.124 130.959 li
224.489 130.959 mo
225.654 130.959 li
225.124 136.362 mo
225.124 137.738 li
224.489 137.738 mo
225.654 137.738 li
@
226.396 135.09 mo
226.396 134.388 225.826 133.819 225.124 133.819 cv
224.422 133.819 223.853 134.388 223.853 135.09 cv
223.853 135.792 224.422 136.362 225.124 136.362 cv
225.826 136.362 226.396 135.792 226.396 135.09 cv
ef
222.158 125.345 mo
222.158 124.643 221.59 124.075 220.888 124.075 cv
220.186 124.075 219.616 124.643 219.616 125.345 cv
219.616 126.047 220.186 126.616 220.888 126.616 cv
221.59 126.616 222.158 126.047 222.158 125.345 cv
ef
218.027 127.781 mo
218.027 127.079 217.459 126.511 216.757 126.511 cv
216.055 126.511 215.485 127.079 215.485 127.781 cv
215.485 128.483 216.055 129.053 216.757 129.053 cv
217.459 129.053 218.027 128.483 218.027 127.781 cv
ef
213.896 131.489 mo
213.896 130.787 213.328 130.217 212.626 130.217 cv
211.924 130.217 211.354 130.787 211.354 131.489 cv
211.354 132.191 211.924 132.76 212.626 132.76 cv
213.328 132.76 213.896 132.191 213.896 131.489 cv
ef
209.66 116.766 mo
209.66 116.064 209.09 115.494 208.389 115.494 cv
207.687 115.494 207.118 116.064 207.118 116.766 cv
207.118 117.468 207.687 118.036 208.389 118.036 cv
209.09 118.036 209.66 117.468 209.66 116.766 cv
ef
205.529 128.947 mo
205.529 128.245 204.96 127.676 204.258 127.676 cv
203.556 127.676 202.987 128.245 202.987 128.947 cv
202.987 129.649 203.556 130.217 204.258 130.217 cv
204.96 130.217 205.529 129.649 205.529 128.947 cv
ef
201.398 117.931 mo
201.398 117.229 200.828 116.66 200.126 116.66 cv
199.424 116.66 198.856 117.229 198.856 117.931 cv
198.856 118.633 199.424 119.202 200.126 119.202 cv
200.828 119.202 201.398 118.633 201.398 117.931 cv
ef
197.267 111.893 mo
197.267 111.191 196.697 110.622 195.995 110.622 cv
195.293 110.622 194.725 111.191 194.725 111.893 cv
194.725 112.595 195.293 113.164 195.995 113.164 cv
196.697 113.164 197.267 112.595 197.267 111.893 cv
ef
193.03 111.893 mo
193.03 111.191 192.46 110.622 191.758 110.622 cv
191.056 110.622 190.488 111.191 190.488 111.893 cv
190.488 112.595 191.056 113.164 191.758 113.164 cv
192.46 113.164 193.03 112.595 193.03 111.893 cv
ef
188.899 116.766 mo
188.899 116.064 188.329 115.494 187.627 115.494 cv
186.925 115.494 186.357 116.064 186.357 116.766 cv
186.357 117.468 186.925 118.036 187.627 118.036 cv
188.329 118.036 188.899 117.468 188.899 116.766 cv
ef
184.768 114.33 mo
184.768 113.628 184.199 113.058 183.497 113.058 cv
182.795 113.058 182.226 113.628 182.226 114.33 cv
182.226 115.032 182.795 115.6 183.497 115.6 cv
184.199 115.6 184.768 115.032 184.768 114.33 cv
ef
180.53 114.33 mo
180.53 113.628 179.962 113.058 179.26 113.058 cv
178.558 113.058 177.988 113.628 177.988 114.33 cv
177.988 115.032 178.558 115.6 179.26 115.6 cv
179.962 115.6 180.53 115.032 180.53 114.33 cv
ef
176.399 105.749 mo
176.399 105.047 175.831 104.479 175.129 104.479 cv
174.427 104.479 173.857 105.047 173.857 105.749 cv
173.857 106.451 174.427 107.021 175.129 107.021 cv
175.831 107.021 176.399 106.451 176.399 105.749 cv
ef
172.269 102.042 mo
172.269 101.341 171.7 100.771 170.998 100.771 cv
170.296 100.771 169.726 101.341 169.726 102.042 cv
169.726 102.744 170.296 103.313 170.998 103.313 cv
171.7 103.313 172.269 102.744 172.269 102.042 cv
ef
168.032 92.2968 mo
168.032 91.5948 167.463 91.0263 166.761 91.0263 cv
166.059 91.0263 165.49 91.5948 165.49 92.2968 cv
165.49 92.9988 166.059 93.5685 166.761 93.5685 cv
167.463 93.5685 168.032 92.9988 168.032 92.2968 cv
ef
163.901 87.4249 mo
163.901 86.7229 163.332 86.1534 162.63 86.1534 cv
161.928 86.1534 161.359 86.7229 161.359 87.4249 cv
161.359 88.1269 161.928 88.6955 162.63 88.6955 cv
163.332 88.6955 163.901 88.1269 163.901 87.4249 cv
ef
159.77 65.393 mo
159.77 64.691 159.201 64.1214 158.499 64.1214 cv
157.796 64.1214 157.228 64.691 157.228 65.393 cv
157.228 66.095 157.796 66.6635 158.499 66.6635 cv
159.201 66.6635 159.77 66.095 159.77 65.393 cv
ef
155.533 76.4084 mo
155.533 75.7065 154.963 75.1379 154.261 75.1379 cv
153.559 75.1379 152.991 75.7065 152.991 76.4084 cv
152.991 77.1104 153.559 77.68 154.261 77.68 cv
154.963 77.68 155.533 77.1104 155.533 76.4084 cv
ef
151.402 60.4139 mo
151.402 59.7119 150.833 59.1434 150.131 59.1434 cv
149.429 59.1434 148.86 59.7119 148.86 60.4139 cv
148.86 61.1159 149.429 61.6855 150.131 61.6855 cv
150.833 61.6855 151.402 61.1159 151.402 60.4139 cv
ef
147.271 40.819 mo
147.271 40.117 146.702 39.5474 146 39.5474 cv
145.298 39.5474 144.729 40.117 144.729 40.819 cv
144.729 41.521 145.298 42.0895 146 42.0895 cv
146.702 42.0895 147.271 41.521 147.271 40.819 cv
ef
143.14 48.233 mo
143.14 47.531 142.57 46.9625 141.868 46.9625 cv
141.166 46.9625 140.598 47.531 140.598 48.233 cv
140.598 48.935 141.166 49.5046 141.868 49.5046 cv
142.57 49.5046 143.14 48.935 143.14 48.233 cv
ef
138.904 66.5574 mo
138.904 65.8554 138.334 65.2869 137.632 65.2869 cv
136.93 65.2869 136.361 65.8554 136.361 66.5574 cv
136.361 67.2594 136.93 67.829 137.632 67.829 cv
138.334 67.829 138.904 67.2594 138.904 66.5574 cv
ef
134.771 82.4469 mo
134.771 81.7449 134.203 81.1753 133.501 81.1753 cv
132.799 81.1753 132.23 81.7449 132.23 82.4469 cv
132.23 83.1489 132.799 83.7174 133.501 83.7174 cv
134.203 83.7174 134.771 83.1489 134.771 82.4469 cv
ef
130.641 81.2814 mo
130.641 80.5794 130.072 80.0098 129.37 80.0098 cv
128.668 80.0098 128.098 80.5794 128.098 81.2814 cv
128.098 81.9834 128.668 82.5519 129.37 82.5519 cv
130.072 82.5519 130.641 81.9834 130.641 81.2814 cv
ef
126.404 105.749 mo
126.404 105.047 125.835 104.479 125.133 104.479 cv
124.431 104.479 123.862 105.047 123.862 105.749 cv
123.862 106.451 124.431 107.021 125.133 107.021 cv
125.835 107.021 126.404 106.451 126.404 105.749 cv
ef
122.273 99.6058 mo
122.273 98.9038 121.704 98.3353 121.002 98.3353 cv
120.3 98.3353 119.731 98.9038 119.731 99.6058 cv
119.731 100.308 120.3 100.877 121.002 100.877 cv
121.704 100.877 122.273 100.308 122.273 99.6058 cv
ef
118.142 92.2968 mo
118.142 91.5948 117.573 91.0263 116.871 91.0263 cv
116.169 91.0263 115.6 91.5948 115.6 92.2968 cv
115.6 92.9988 116.169 93.5685 116.871 93.5685 cv
117.573 93.5685 118.142 92.9988 118.142 92.2968 cv
ef
113.905 88.5904 mo
113.905 87.8884 113.337 87.3188 112.635 87.3188 cv
111.933 87.3188 111.363 87.8884 111.363 88.5904 cv
111.363 89.2924 111.933 89.8609 112.635 89.8609 cv
113.337 89.8609 113.905 89.2924 113.905 88.5904 cv
ef
109.774 81.2814 mo
109.774 80.5794 109.204 80.0098 108.502 80.0098 cv
107.8 80.0098 107.232 80.5794 107.232 81.2814 cv
107.232 81.9834 107.8 82.5519 108.502 82.5519 cv
109.204 82.5519 109.774 81.9834 109.774 81.2814 cv
ef
105.643 92.2968 mo
105.643 91.5948 105.074 91.0263 104.372 91.0263 cv
103.67 91.0263 103.101 91.5948 103.101 92.2968 cv
103.101 92.9988 103.67 93.5685 104.372 93.5685 cv
105.074 93.5685 105.643 92.9988 105.643 92.2968 cv
ef
101.406 89.8609 mo
101.406 89.1589 100.837 88.5904 100.135 88.5904 cv
99.4332 88.5904 98.8647 89.1589 98.8647 89.8609 cv
98.8647 90.5629 99.4332 91.1325 100.135 91.1325 cv
100.837 91.1325 101.406 90.5629 101.406 89.8609 cv
ef
97.2747 88.5904 mo
97.2747 87.8884 96.7062 87.3188 96.0042 87.3188 cv
95.3022 87.3188 94.7326 87.8884 94.7326 88.5904 cv
94.7326 89.2924 95.3022 89.8609 96.0042 89.8609 cv
96.7062 89.8609 97.2747 89.2924 97.2747 88.5904 cv
ef
93.1447 89.8609 mo
93.1447 89.1589 92.5751 88.5904 91.8731 88.5904 cv
91.1711 88.5904 90.6016 89.1589 90.6016 89.8609 cv
90.6016 90.5629 91.1711 91.1325 91.8731 91.1325 cv
92.5751 91.1325 93.1447 90.5629 93.1447 89.8609 cv
ef
89.0137 94.7339 mo
89.0137 94.0319 88.4441 93.4623 87.7421 93.4623 cv
87.0401 93.4623 86.4716 94.0319 86.4716 94.7339 cv
86.4716 95.4359 87.0401 96.0044 87.7421 96.0044 cv
88.4441 96.0044 89.0137 95.4359 89.0137 94.7339 cv
ef
84.7765 82.4469 mo
84.7765 81.7449 84.2069 81.1753 83.5049 81.1753 cv
82.8029 81.1753 82.2344 81.7449 82.2344 82.4469 cv
82.2344 83.1489 82.8029 83.7174 83.5049 83.7174 cv
84.2069 83.7174 84.7765 83.1489 84.7765 82.4469 cv
ef
80.6454 100.877 mo
80.6454 100.175 80.0758 99.6058 79.3738 99.6058 cv
78.6729 99.6058 78.1033 100.175 78.1033 100.877 cv
78.1033 101.579 78.6729 102.148 79.3738 102.148 cv
80.0758 102.148 80.6454 101.579 80.6454 100.877 cv
ef
76.5144 87.4249 mo
76.5144 86.7229 75.9448 86.1534 75.2428 86.1534 cv
74.5408 86.1534 73.9723 86.7229 73.9723 87.4249 cv
73.9723 88.1269 74.5408 88.6955 75.2428 88.6955 cv
75.9448 88.6955 76.5144 88.1269 76.5144 87.4249 cv
ef
72.2772 88.5904 mo
72.2772 87.8884 71.7086 87.3188 71.0067 87.3188 cv
70.3046 87.3188 69.7351 87.8884 69.7351 88.5904 cv
69.7351 89.2924 70.3046 89.8609 71.0067 89.8609 cv
71.7086 89.8609 72.2772 89.2924 72.2772 88.5904 cv
ef
68.1461 93.4623 mo
68.1461 92.7603 67.5776 92.1918 66.8756 92.1918 cv
66.1736 92.1918 65.604 92.7603 65.604 93.4623 cv
65.604 94.1643 66.1736 94.7339 66.8756 94.7339 cv
67.5776 94.7339 68.1461 94.1643 68.1461 93.4623 cv
ef
64.0151 95.8983 mo
64.0151 95.1963 63.4465 94.6277 62.7446 94.6277 cv
62.0426 94.6277 61.473 95.1963 61.473 95.8983 cv
61.473 96.6003 62.0426 97.1698 62.7446 97.1698 cv
63.4465 97.1698 64.0151 96.6003 64.0151 95.8983 cv
ef
59.7789 108.186 mo
59.7789 107.484 59.2094 106.915 58.5074 106.915 cv
57.8054 106.915 57.2358 107.484 57.2358 108.186 cv
57.2358 108.888 57.8054 109.457 58.5074 109.457 cv
59.2094 109.457 59.7789 108.888 59.7789 108.186 cv
ef
55.6479 98.4414 mo
55.6479 97.7394 55.0783 97.1698 54.3763 97.1698 cv
53.6743 97.1698 53.1058 97.7394 53.1058 98.4414 cv
53.1058 99.1434 53.6743 99.7119 54.3763 99.7119 cv
55.0783 99.7119 55.6479 99.1434 55.6479 98.4414 cv
ef
51.5168 117.931 mo
51.5168 117.229 50.9473 116.66 50.2453 116.66 cv
49.5433 116.66 48.9747 117.229 48.9747 117.931 cv
48.9747 118.633 49.5433 119.202 50.2453 119.202 cv
50.9473 119.202 51.5168 118.633 51.5168 117.931 cv
ef
47.2796 122.909 mo
47.2796 122.207 46.7101 121.638 46.0081 121.638 cv
45.3071 121.638 44.7375 122.207 44.7375 122.909 cv
44.7375 123.611 45.3071 124.18 46.0081 124.18 cv
46.7101 124.18 47.2796 123.611 47.2796 122.909 cv
ef
43.1486 133.926 mo
43.1486 133.224 42.579 132.654 41.877 132.654 cv
41.175 132.654 40.6065 133.224 40.6065 133.926 cv
40.6065 134.628 41.175 135.196 41.877 135.196 cv
42.579 135.196 43.1486 134.628 43.1486 133.926 cv
ef
.317369 lw
39.8646 141.234 mo
227.138 141.234 li
@
VIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf180.954 164.219 mo(!)shVIXPCQ+Helvetica*1 [7.54414 0 0 -7.54414 0 0 ]msf177.035 159.452 mo(")shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf135.407 164.219 mo(!#$%&'\(\))[3.71907 3.10507 3.71907 8.68771 6.20903 7.44844 3.10506 0 ]xshVIXPCR+Symbol*1 [11.1653 0 0 -11.1653 0 0 ]msf127.569 164.219 mo(y)shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf118.779 164.219 mo(*\()[5.58264 0 ]xshVIXPCS+Symbol*1 [7.54414 0 0 -7.54414 0 0 ]msf114.541 160.935 mo( )shVIXPCR+Symbol*1 [11.1653 0 0 -11.1653 0 0 ]msf108.502 164.219 mo(p)shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf105.22 164.219 mo($)shVIXPCQ+Helvetica*1 [7.54414 0 0 -7.54414 0 0 ]msf90.7077 166.655 mo(+,-)[6.28345 4.19378 0 ]xshVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf81.916 164.219 mo(.)sh64.757 137.209 mo
64.757 141.234 li
73.1253 139.221 mo
73.1253 141.234 li
81.4925 139.221 mo
81.4925 141.234 li
89.7546 139.221 mo
89.7546 141.234 li
98.1228 139.221 mo
98.1228 141.234 li
106.385 137.209 mo
106.385 141.234 li
114.752 139.221 mo
114.752 141.234 li
123.12 139.221 mo
123.12 141.234 li
131.382 139.221 mo
131.382 141.234 li
139.751 139.221 mo
139.751 141.234 li
148.013 137.209 mo
148.013 141.234 li
156.38 139.221 mo
156.38 141.234 li
164.748 139.221 mo
164.748 141.234 li
173.01 139.221 mo
173.01 141.234 li
181.379 139.221 mo
181.379 141.234 li
189.746 137.209 mo
189.746 141.234 li
64.757 137.209 mo
64.757 141.234 li
56.4949 139.221 mo
56.4949 141.234 li
48.1267 139.221 mo
48.1267 141.234 li
189.746 137.209 mo
189.746 141.234 li
198.008 139.221 mo
198.008 141.234 li
206.376 139.221 mo
206.376 141.234 li
214.638 139.221 mo
214.638 141.234 li
223.007 139.221 mo
223.007 141.234 li
@
VIXPCQ+Helvetica*1 [9.65643 0 0 -9.65643 0 0 ]msf58.0841 150.979 mo(/01/02/03405)[5.36993 2.68546 33.6826 5.36993 2.68546 33.5763 5.36993 2.68546 33.5764 5.36993 2.68546 0 ]xsh39.8646 141.234 mo
39.8646 6.6051 li
@
VIXPCQ+Helvetica*1 [0 -7.54414 -7.54414 0 0 0 ]msf8.93581 25.9897 mo(")shVIXPCQ+Helvetica*1 [0 -11.1653 -11.1653 0 0 0 ]msf13.8081 125.345 mo(67&89:#\(#505;#%&'\(\))[-7.44734 -5.58264 -6.2079 -6.20791 -3.10395 -5.58265 -3.10619 -3.10395 -3.10618 -6.20791 -3.10395 -6.2079 -6.20791 -3.10618 -8.6866 -6.20792 -7.44733 -3.10394 0 ]ysh45.4795 141.234 mo
39.8646 141.234 li
42.619 135.09 mo
39.8646 135.09 li
42.619 128.947 mo
39.8646 128.947 li
42.619 122.909 mo
39.8646 122.909 li
45.4795 116.766 mo
39.8646 116.766 li
42.619 110.622 mo
39.8646 110.622 li
42.619 104.479 mo
39.8646 104.479 li
42.619 98.4414 mo
39.8646 98.4414 li
45.4795 92.2968 mo
39.8646 92.2968 li
42.619 86.1534 mo
39.8646 86.1534 li
42.619 80.0098 mo
39.8646 80.0098 li
42.619 73.8674 mo
39.8646 73.8674 li
45.4795 67.829 mo
39.8646 67.829 li
42.619 61.6855 mo
39.8646 61.6855 li
42.619 55.542 mo
39.8646 55.542 li
42.619 49.3985 mo
39.8646 49.3985 li
45.4795 43.3611 mo
39.8646 43.3611 li
42.619 37.2176 mo
39.8646 37.2176 li
42.619 31.0741 mo
39.8646 31.0741 li
42.619 24.9305 mo
39.8646 24.9305 li
45.4795 18.787 mo
39.8646 18.787 li
45.4795 18.787 mo
39.8646 18.787 li
42.619 12.7486 mo
39.8646 12.7486 li
42.619 6.6051 mo
39.8646 6.6051 li
@
VIXPCQ+Helvetica*1 [9.65643 0 0 -9.65643 0 0 ]msf32.133 144.624 mo(5)sh26.7312 120.154 mo("5)[5.36704 0 ]xsh26.7312 95.687 mo(45)[5.36704 0 ]xsh26.7312 71.3249 mo(<5)[5.36704 0 ]xsh26.7312 46.8564 mo(25)[5.36704 0 ]xsh21.6471 22.388 mo(;55)[5.36704 5.36704 0 ]xsh.953158 lw
[2.1186 1.27158 .423509 1.27158 ] 0 dsh
39.8646 124.71 mo
43.9956 124.71 li
43.9956 119.202 li
48.1267 119.202 li
48.1267 111.999 li
52.2577 111.999 li
52.2577 108.715 li
56.4949 108.715 li
56.4949 103.843 li
60.626 103.843 li
60.626 96.0044 li
64.757 96.0044 li
64.757 93.1449 li
68.9942 93.1449 li
68.9942 93.6746 li
73.1253 93.6746 li
73.1253 95.687 li
77.2553 95.687 li
77.2553 92.6153 li
81.4925 92.6153 li
81.4925 93.5685 li
85.6235 93.5685 li
85.6235 96.4279 li
89.7546 96.4279 li
89.7546 90.2855 li
93.9918 90.2855 li
93.9918 94.6277 li
98.1228 94.6277 li
98.1228 92.6153 li
102.254 92.6153 li
102.254 95.2635 li
106.385 95.2635 li
106.385 93.1449 li
110.621 93.1449 li
110.621 96.0044 li
114.752 96.0044 li
114.752 95.4748 li
118.884 95.4748 li
118.884 95.687 li
123.12 95.687 li
123.12 97.0637 li
127.251 97.0637 li
127.251 98.3353 li
131.382 98.3353 li
131.382 100.771 li
135.62 100.771 li
135.62 98.97 li
139.751 98.97 li
139.751 98.123 li
143.882 98.123 li
143.882 100.665 li
148.013 100.665 li
148.013 98.97 li
152.25 98.97 li
152.25 104.16 li
156.38 104.16 li
156.38 103.207 li
160.511 103.207 li
160.511 106.068 li
164.748 106.068 li
164.748 105.22 li
168.879 105.22 li
168.879 109.987 li
173.01 109.987 li
173.01 104.585 li
177.248 104.585 li
177.248 109.88 li
181.379 109.88 li
181.379 111.575 li
185.509 111.575 li
185.509 112.211 li
189.746 112.211 li
189.746 116.766 li
193.877 116.766 li
193.877 116.447 li
198.008 116.447 li
198.008 114.859 li
202.139 114.859 li
202.139 120.261 li
206.376 120.261 li
206.376 118.249 li
210.507 118.249 li
210.507 123.227 li
214.638 123.227 li
214.638 127.781 li
218.874 127.781 li
218.874 127.887 li
223.007 127.887 li
223.007 135.09 li
227.138 135.09 li
0 .985 1 .001 cmyk
@
39.8646 141.234 mo
39.8646 140.387 li
43.9956 140.387 li
43.9956 139.645 li
48.1267 139.645 li
48.1267 138.374 li
52.2577 138.374 li
52.2577 138.798 li
56.4949 138.798 li
56.4949 139.962 li
60.6259 139.962 li
60.6259 138.374 li
64.757 138.374 li
64.757 139.645 li
68.9942 139.645 li
68.9942 137.951 li
73.1252 137.951 li
73.1252 138.798 li
77.2553 138.798 li
77.2553 136.785 li
81.4924 136.785 li
81.4924 137.103 li
85.6235 137.103 li
85.6235 138.798 li
89.7545 138.798 li
89.7545 133.926 li
93.9917 133.926 li
93.9917 136.785 li
102.254 136.785 li
102.254 136.362 li
106.385 136.362 li
106.385 135.514 li
118.884 135.514 li
118.884 133.926 li
123.12 133.926 li
123.12 134.243 li
127.251 134.243 li
127.251 135.937 li
131.382 135.937 li
131.382 137.526 li
135.62 137.526 li
135.62 135.937 li
139.751 135.937 li
139.751 135.514 li
143.882 135.514 li
143.882 135.937 li
148.013 135.937 li
148.013 133.078 li
152.25 133.078 li
152.25 136.785 li
160.511 136.785 li
160.511 137.103 li
164.748 137.103 li
164.748 134.667 li
168.879 134.667 li
168.879 137.526 li
173.01 137.526 li
173.01 135.09 li
177.247 135.09 li
177.247 135.937 li
181.379 135.937 li
181.379 137.526 li
185.508 137.526 li
185.508 137.103 li
189.746 137.103 li
189.746 138.374 li
193.877 138.374 li
193.877 136.785 li
198.008 136.785 li
198.008 135.09 li
202.139 135.09 li
202.139 139.645 li
206.376 139.645 li
206.376 135.937 li
210.507 135.937 li
210.507 136.785 li
214.638 136.785 li
214.638 137.951 li
218.874 137.951 li
218.874 137.526 li
223.006 137.526 li
223.006 137.951 li
227.138 137.951 li
227.138 141.234 li
.584 0 1 0 cmyk
ef
.317369 lw
[] 0 dsh
39.8646 140.387 mo
43.9956 140.387 li
43.9956 139.645 li
48.1267 139.645 li
48.1267 138.374 li
52.2577 138.374 li
52.2577 138.798 li
56.4949 138.798 li
56.4949 139.962 li
60.626 139.962 li
60.626 138.374 li
64.757 138.374 li
64.757 139.645 li
68.9942 139.645 li
68.9942 137.951 li
73.1253 137.951 li
73.1253 138.798 li
77.2553 138.798 li
77.2553 136.785 li
81.4925 136.785 li
81.4925 137.103 li
85.6235 137.103 li
85.6235 138.798 li
89.7546 138.798 li
89.7546 133.926 li
93.9918 133.926 li
93.9918 136.785 li
102.254 136.785 li
102.254 136.362 li
106.385 136.362 li
106.385 135.514 li
118.884 135.514 li
118.884 133.926 li
123.12 133.926 li
123.12 134.243 li
127.251 134.243 li
127.251 135.937 li
131.382 135.937 li
131.382 137.526 li
135.62 137.526 li
135.62 135.937 li
139.751 135.937 li
139.751 135.514 li
143.882 135.514 li
143.882 135.937 li
148.013 135.937 li
148.013 133.078 li
152.25 133.078 li
152.25 136.785 li
160.511 136.785 li
160.511 137.103 li
164.748 137.103 li
164.748 134.667 li
168.879 134.667 li
168.879 137.526 li
173.01 137.526 li
173.01 135.09 li
177.248 135.09 li
177.248 135.937 li
181.379 135.937 li
181.379 137.526 li
185.509 137.526 li
185.509 137.103 li
189.746 137.103 li
189.746 138.374 li
193.877 138.374 li
193.877 136.785 li
198.008 136.785 li
198.008 135.09 li
202.139 135.09 li
202.139 139.645 li
206.376 139.645 li
206.376 135.937 li
210.507 135.937 li
210.507 136.785 li
214.638 136.785 li
214.638 137.951 li
218.874 137.951 li
218.874 137.526 li
223.007 137.526 li
223.007 137.951 li
227.138 137.951 li
39.8646 141.234 mo
227.138 141.234 li
41.877 133.926 mo
39.8646 133.926 li
39.8646 134.454 mo
39.8646 133.289 li
41.877 133.926 mo
43.9956 133.926 li
43.9956 134.454 mo
43.9956 133.289 li
41.877 133.926 mo
41.877 129.476 li
41.2423 129.476 mo
42.5128 129.476 li
41.877 133.926 mo
41.877 136.785 li
41.2423 136.785 mo
42.5128 136.785 li
46.0081 122.909 mo
43.9956 122.909 li
43.9956 123.439 mo
43.9956 122.274 li
46.0081 122.909 mo
48.1267 122.909 li
48.1267 123.439 mo
48.1267 122.274 li
46.0081 122.909 mo
46.0081 116.766 li
45.4795 116.766 mo
46.6439 116.766 li
46.0081 122.909 mo
46.0081 127.57 li
45.4795 127.57 mo
46.6439 127.57 li
50.2453 117.931 mo
48.1267 117.931 li
48.1267 118.566 mo
48.1267 117.402 li
50.2453 117.931 mo
52.2577 117.931 li
52.2577 118.566 mo
52.2577 117.402 li
50.2453 117.931 mo
50.2453 111.363 li
49.6095 111.363 mo
50.7749 111.363 li
1 /0 /CSD get_res sepcs
1 sep
@
50.2453 117.931 mo
50.2453 123.227 li
49.6095 123.227 mo
50.7749 123.227 li
54.3763 98.4414 mo
52.2577 98.4414 li
52.2577 98.97 mo
52.2577 97.8056 li
54.3763 98.4414 mo
56.4949 98.4414 li
56.4949 98.97 mo
56.4949 97.8056 li
54.3763 98.4414 mo
54.3763 89.8609 li
53.7405 89.8609 mo
55.0121 89.8609 li
54.3763 98.4414 mo
54.3763 105.643 li
53.7405 105.643 mo
55.0121 105.643 li
58.5074 108.186 mo
56.4949 108.186 li
56.4949 108.821 mo
56.4949 107.551 li
58.5074 108.186 mo
60.626 108.186 li
60.626 108.821 mo
60.626 107.551 li
58.5074 108.186 mo
58.5074 100.56 li
57.9777 100.56 mo
59.1432 100.56 li
58.5074 108.186 mo
58.5074 114.541 li
57.9777 114.541 mo
59.1432 114.541 li
62.7446 95.8983 mo
60.626 95.8983 li
60.626 96.5341 mo
60.626 95.3686 li
62.7446 95.8983 mo
64.757 95.8983 li
64.757 96.5341 mo
64.757 95.3686 li
62.7446 95.8983 mo
62.7446 87.2137 li
62.1088 87.2137 mo
63.2742 87.2137 li
62.7446 95.8983 mo
62.7446 103.313 li
62.1088 103.313 mo
63.2742 103.313 li
66.8756 93.4623 mo
64.757 93.4623 li
64.757 94.0981 mo
64.757 92.9326 li
66.8756 93.4623 mo
68.9942 93.4623 li
68.9942 94.0981 mo
68.9942 92.9326 li
66.8756 93.4623 mo
66.8756 84.5655 li
66.2398 84.5655 mo
67.5104 84.5655 li
66.8756 93.4623 mo
66.8756 101.089 li
66.2398 101.089 mo
67.5104 101.089 li
71.0067 88.5904 mo
68.9942 88.5904 li
68.9942 89.2251 mo
68.9942 87.9546 li
71.0067 88.5904 mo
73.1253 88.5904 li
73.1253 89.2251 mo
73.1253 87.9546 li
71.0067 88.5904 mo
71.0067 79.269 li
70.477 79.269 mo
71.6414 79.269 li
71.0067 88.5904 mo
71.0067 96.6402 li
70.477 96.6402 mo
71.6414 96.6402 li
75.2428 87.4249 mo
73.1253 87.4249 li
73.1253 87.9546 mo
73.1253 86.7892 li
75.2428 87.4249 mo
77.2553 87.4249 li
77.2553 87.9546 mo
77.2553 86.7892 li
75.2428 87.4249 mo
75.2428 77.9974 li
74.6081 77.9974 mo
75.7735 77.9974 li
75.2428 87.4249 mo
75.2428 95.4748 li
74.6081 95.4748 mo
75.7735 95.4748 li
79.3739 100.877 mo
77.2553 100.877 li
77.2553 101.407 mo
77.2553 100.242 li
79.3739 100.877 mo
81.4925 100.877 li
81.4925 101.407 mo
81.4925 100.242 li
79.3739 100.877 mo
79.3739 92.5091 li
78.7391 92.5091 mo
80.0097 92.5091 li
79.3739 100.877 mo
79.3739 107.868 li
78.7391 107.868 mo
80.0097 107.868 li
83.5049 82.4469 mo
81.4925 82.4469 li
81.4925 83.0816 mo
81.4925 81.9172 li
83.5049 82.4469 mo
85.6235 82.4469 li
85.6235 83.0816 mo
85.6235 81.9172 li
83.5049 82.4469 mo
83.5049 72.702 li
82.9753 72.702 mo
84.1407 72.702 li
@
83.5049 82.4469 mo
83.5049 90.9202 li
82.9753 90.9202 mo
84.1407 90.9202 li
87.7421 94.7339 mo
85.6235 94.7339 li
85.6235 95.3686 mo
85.6235 94.0981 li
87.7421 94.7339 mo
89.7546 94.7339 li
89.7546 95.3686 mo
89.7546 94.0981 li
87.7421 94.7339 mo
87.7421 85.836 li
87.1063 85.836 mo
88.2718 85.836 li
87.7421 94.7339 mo
87.7421 102.254 li
87.1063 102.254 mo
88.2718 102.254 li
91.8732 89.8609 mo
89.7546 89.8609 li
89.7546 90.3905 mo
89.7546 89.2251 li
91.8732 89.8609 mo
93.9918 89.8609 li
93.9918 90.3905 mo
93.9918 89.2251 li
91.8732 89.8609 mo
91.8732 80.6456 li
91.2374 80.6456 mo
92.509 80.6456 li
91.8732 89.8609 mo
91.8732 97.6995 li
91.2374 97.6995 mo
92.509 97.6995 li
96.0042 88.5904 mo
93.9918 88.5904 li
93.9918 89.2251 mo
93.9918 87.9546 li
96.0042 88.5904 mo
98.1228 88.5904 li
98.1228 89.2251 mo
98.1228 87.9546 li
96.0042 88.5904 mo
96.0042 79.269 li
95.3684 79.269 mo
96.64 79.269 li
96.0042 88.5904 mo
96.0042 96.6402 li
95.3684 96.6402 mo
96.64 96.6402 li
100.135 89.8609 mo
98.1228 89.8609 li
98.1228 90.3905 mo
98.1228 89.2251 li
100.135 89.8609 mo
102.254 89.8609 li
102.254 90.3905 mo
102.254 89.2251 li
100.135 89.8609 mo
100.135 80.6456 li
99.6056 80.6456 mo
100.771 80.6456 li
100.135 89.8609 mo
100.135 97.6995 li
99.6056 97.6995 mo
100.771 97.6995 li
104.372 92.2968 mo
102.254 92.2968 li
102.254 92.8265 mo
102.254 91.6621 li
104.372 92.2968 mo
106.385 92.2968 li
106.385 92.8265 mo
106.385 91.6621 li
104.372 92.2968 mo
104.372 83.2939 li
103.737 83.2939 mo
104.902 83.2939 li
104.372 92.2968 mo
104.372 100.029 li
103.737 100.029 mo
104.902 100.029 li
108.502 81.2814 mo
106.385 81.2814 li
106.385 81.8111 mo
106.385 80.6456 li
108.502 81.2814 mo
110.621 81.2814 li
110.621 81.8111 mo
110.621 80.6456 li
108.502 81.2814 mo
108.502 71.4304 li
107.868 71.4304 mo
109.139 71.4304 li
108.502 81.2814 mo
108.502 89.7548 li
107.868 89.7548 mo
109.139 89.7548 li
112.635 88.5904 mo
110.621 88.5904 li
110.621 89.2251 mo
110.621 87.9546 li
112.635 88.5904 mo
114.752 88.5904 li
114.752 89.2251 mo
114.752 87.9546 li
112.635 88.5904 mo
112.635 79.269 li
112.105 79.269 mo
113.269 79.269 li
112.635 88.5904 mo
112.635 96.6402 li
112.105 96.6402 mo
113.269 96.6402 li
116.871 92.2968 mo
114.752 92.2968 li
114.752 92.8265 mo
114.752 91.6621 li
116.871 92.2968 mo
118.884 92.2968 li
118.884 92.8265 mo
118.884 91.6621 li
116.871 92.2968 mo
116.871 83.2939 li
116.236 83.2939 mo
117.4 83.2939 li
@
116.871 92.2968 mo
116.871 100.029 li
116.236 100.029 mo
117.4 100.029 li
121.002 99.6058 mo
118.884 99.6058 li
118.884 100.242 mo
118.884 98.97 li
121.002 99.6058 mo
123.12 99.6058 li
123.12 100.242 mo
123.12 98.97 li
121.002 99.6058 mo
121.002 91.2386 li
120.367 91.2386 mo
121.638 91.2386 li
121.002 99.6058 mo
121.002 106.702 li
120.367 106.702 mo
121.638 106.702 li
125.133 105.749 mo
123.12 105.749 li
123.12 106.385 mo
123.12 105.115 li
125.133 105.749 mo
127.251 105.749 li
127.251 106.385 mo
127.251 105.115 li
125.133 105.749 mo
125.133 97.8056 li
124.603 97.8056 mo
125.769 97.8056 li
125.133 105.749 mo
125.133 112.316 li
124.603 112.316 mo
125.769 112.316 li
129.37 81.2814 mo
127.251 81.2814 li
127.251 81.8111 mo
127.251 80.6456 li
129.37 81.2814 mo
131.382 81.2814 li
131.382 81.8111 mo
131.382 80.6456 li
129.37 81.2814 mo
129.37 71.4304 li
128.734 71.4304 mo
129.9 71.4304 li
129.37 81.2814 mo
129.37 89.7548 li
128.734 89.7548 mo
129.9 89.7548 li
133.501 82.4469 mo
131.382 82.4469 li
131.382 83.0816 mo
131.382 81.9172 li
133.501 82.4469 mo
135.62 82.4469 li
135.62 83.0816 mo
135.62 81.9172 li
133.501 82.4469 mo
133.501 72.702 li
132.865 72.702 mo
134.137 72.702 li
133.501 82.4469 mo
133.501 90.9202 li
132.865 90.9202 mo
134.137 90.9202 li
137.632 66.5574 mo
135.62 66.5574 li
135.62 67.1942 mo
135.62 65.9227 li
137.632 66.5574 mo
139.751 66.5574 li
139.751 67.1942 mo
139.751 65.9227 li
137.632 66.5574 mo
137.632 55.7542 li
137.102 55.7542 mo
138.268 55.7542 li
137.632 66.5574 mo
137.632 76.0911 li
137.102 76.0911 mo
138.268 76.0911 li
141.868 48.233 mo
139.751 48.233 li
139.751 48.7627 mo
139.751 47.5983 li
141.868 48.233 mo
143.882 48.233 li
143.882 48.7627 mo
143.882 47.5983 li
141.868 48.233 mo
141.868 36.2644 li
141.234 36.2644 mo
142.399 36.2644 li
@
141.868 48.233 mo
141.868 58.826 li
141.234 58.826 mo
142.399 58.826 li
146 40.819 mo
143.882 40.819 li
143.882 41.4548 mo
143.882 40.2893 li
146 40.819 mo
148.013 40.819 li
148.013 41.4548 mo
148.013 40.2893 li
146 40.819 mo
146 28.532 li
145.365 28.532 mo
146.635 28.532 li
146 40.819 mo
146 51.9406 li
145.365 51.9406 mo
146.635 51.9406 li
150.131 60.4139 mo
148.013 60.4139 li
148.013 61.0497 mo
148.013 59.8842 li
150.131 60.4139 mo
152.25 60.4139 li
152.25 61.0497 mo
152.25 59.8842 li
150.131 60.4139 mo
150.131 49.1862 li
149.496 49.1862 mo
150.766 49.1862 li
150.131 60.4139 mo
150.131 70.3711 li
149.496 70.3711 mo
150.766 70.3711 li
154.261 76.4084 mo
152.25 76.4084 li
152.25 76.9381 mo
152.25 75.7737 li
154.261 76.4084 mo
156.38 76.4084 li
156.38 76.9381 mo
156.38 75.7737 li
154.261 76.4084 mo
154.261 66.1339 li
153.733 66.1339 mo
154.897 66.1339 li
154.261 76.4084 mo
154.261 85.2002 li
153.733 85.2002 mo
154.897 85.2002 li
158.499 65.393 mo
156.38 65.393 li
156.38 65.9227 mo
156.38 64.7572 li
158.499 65.393 mo
160.511 65.393 li
160.511 65.9227 mo
160.511 64.7572 li
158.499 65.393 mo
158.499 54.4827 li
157.863 54.4827 mo
159.028 54.4827 li
158.499 65.393 mo
158.499 74.9256 li
157.863 74.9256 mo
159.028 74.9256 li
162.63 87.4249 mo
160.511 87.4249 li
160.511 87.9546 mo
160.511 86.7892 li
162.63 87.4249 mo
164.748 87.4249 li
164.748 87.9546 mo
164.748 86.7892 li
162.63 87.4249 mo
162.63 77.9974 li
161.994 77.9974 mo
163.265 77.9974 li
162.63 87.4249 mo
162.63 95.4748 li
161.994 95.4748 mo
163.265 95.4748 li
166.761 92.2968 mo
164.748 92.2968 li
164.748 92.8265 mo
164.748 91.6621 li
166.761 92.2968 mo
168.879 92.2968 li
168.879 92.8265 mo
168.879 91.6621 li
166.761 92.2968 mo
166.761 83.2939 li
166.231 83.2939 mo
167.396 83.2939 li
166.761 92.2968 mo
166.761 100.029 li
166.231 100.029 mo
167.396 100.029 li
170.998 102.042 mo
168.879 102.042 li
168.879 102.678 mo
168.879 101.513 li
170.998 102.042 mo
173.01 102.042 li
173.01 102.678 mo
173.01 101.513 li
170.998 102.042 mo
170.998 93.8869 li
170.362 93.8869 mo
171.528 93.8869 li
170.998 102.042 mo
170.998 108.927 li
170.362 108.927 mo
171.528 108.927 li
175.129 105.749 mo
173.01 105.749 li
173.01 106.385 mo
173.01 105.115 li
175.129 105.749 mo
177.248 105.749 li
177.248 106.385 mo
177.248 105.115 li
175.129 105.749 mo
175.129 97.8056 li
174.493 97.8056 mo
175.765 97.8056 li
@
175.129 105.749 mo
175.129 112.316 li
174.493 112.316 mo
175.765 112.316 li
179.26 114.33 mo
177.248 114.33 li
177.248 114.859 mo
177.248 113.694 li
179.26 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
179.26 114.33 mo
179.26 107.233 li
178.73 107.233 mo
179.896 107.233 li
179.26 114.33 mo
179.26 120.049 li
178.73 120.049 mo
179.896 120.049 li
183.497 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
183.497 114.33 mo
185.509 114.33 li
185.51 114.859 mo
185.51 113.694 li
183.497 114.33 mo
183.497 107.233 li
182.861 107.233 mo
184.026 107.233 li
183.497 114.33 mo
183.497 120.049 li
182.861 120.049 mo
184.026 120.049 li
187.627 116.766 mo
185.509 116.766 li
185.51 117.402 mo
185.51 116.13 li
187.627 116.766 mo
189.746 116.766 li
189.746 117.402 mo
189.746 116.13 li
187.627 116.766 mo
187.627 109.987 li
186.992 109.987 mo
188.263 109.987 li
187.627 116.766 mo
187.627 122.167 li
186.992 122.167 mo
188.263 122.167 li
191.758 111.893 mo
189.746 111.893 li
189.746 112.422 mo
189.746 111.258 li
191.758 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
191.758 111.893 mo
191.758 104.585 li
191.229 104.585 mo
192.394 104.585 li
191.758 111.893 mo
191.758 117.825 li
191.229 117.825 mo
192.394 117.825 li
195.995 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
195.995 111.893 mo
198.008 111.893 li
198.008 112.422 mo
198.008 111.258 li
195.995 111.893 mo
195.995 104.585 li
195.36 104.585 mo
196.525 104.585 li
195.995 111.893 mo
195.995 117.825 li
195.36 117.825 mo
196.525 117.825 li
200.126 117.931 mo
198.008 117.931 li
198.008 118.566 mo
198.008 117.402 li
200.126 117.931 mo
202.139 117.931 li
202.139 118.566 mo
202.139 117.402 li
200.126 117.931 mo
200.126 111.363 li
199.491 111.363 mo
200.762 111.363 li
200.126 117.931 mo
200.126 123.227 li
199.491 123.227 mo
200.762 123.227 li
204.258 128.947 mo
202.139 128.947 li
202.139 129.582 mo
202.139 128.417 li
204.258 128.947 mo
206.376 128.947 li
206.376 129.582 mo
206.376 128.417 li
204.258 128.947 mo
204.258 123.756 li
203.622 123.756 mo
204.893 123.756 li
204.258 128.947 mo
204.258 132.76 li
203.622 132.76 mo
204.893 132.76 li
208.389 116.766 mo
206.376 116.766 li
206.376 117.402 mo
206.376 116.13 li
208.389 116.766 mo
210.507 116.766 li
210.507 117.402 mo
210.507 116.13 li
208.389 116.766 mo
208.389 109.987 li
207.859 109.987 mo
209.024 109.987 li
@
208.389 116.766 mo
208.389 122.167 li
207.859 122.167 mo
209.024 122.167 li
212.626 131.489 mo
210.507 131.489 li
210.507 132.018 mo
210.507 130.853 li
212.626 131.489 mo
214.638 131.489 li
214.638 132.018 mo
214.638 130.853 li
212.626 131.489 mo
212.626 126.616 li
211.99 126.616 mo
213.155 126.616 li
212.626 131.489 mo
212.626 134.879 li
211.99 134.879 mo
213.155 134.879 li
216.757 127.781 mo
214.638 127.781 li
214.638 128.417 mo
214.638 127.145 li
216.757 127.781 mo
218.875 127.781 li
218.875 128.417 mo
218.875 127.145 li
216.757 127.781 mo
216.757 122.38 li
216.121 122.38 mo
217.392 122.38 li
216.757 127.781 mo
216.757 131.807 li
216.121 131.807 mo
217.392 131.807 li
220.888 125.345 mo
218.875 125.345 li
218.875 125.875 mo
218.875 124.71 li
220.888 125.345 mo
223.007 125.345 li
223.007 125.875 mo
223.007 124.71 li
220.888 125.345 mo
220.888 119.519 li
220.358 119.519 mo
221.523 119.519 li
220.888 125.345 mo
220.888 129.689 li
220.358 129.689 mo
221.523 129.689 li
225.124 135.09 mo
223.007 135.09 li
223.007 135.726 mo
223.007 134.561 li
225.124 135.09 mo
227.138 135.09 li
227.138 135.726 mo
227.138 134.561 li
225.124 135.09 mo
225.124 130.959 li
224.489 130.959 mo
225.654 130.959 li
225.124 135.09 mo
225.124 137.738 li
224.489 137.738 mo
225.654 137.738 li
@
226.396 135.09 mo
226.396 134.388 225.826 133.819 225.124 133.819 cv
224.422 133.819 223.853 134.388 223.853 135.09 cv
223.853 135.792 224.422 136.362 225.124 136.362 cv
225.826 136.362 226.396 135.792 226.396 135.09 cv
ef
222.158 125.345 mo
222.158 124.643 221.59 124.075 220.888 124.075 cv
220.186 124.075 219.616 124.643 219.616 125.345 cv
219.616 126.047 220.186 126.616 220.888 126.616 cv
221.59 126.616 222.158 126.047 222.158 125.345 cv
ef
218.027 127.781 mo
218.027 127.079 217.459 126.511 216.757 126.511 cv
216.055 126.511 215.485 127.079 215.485 127.781 cv
215.485 128.483 216.055 129.053 216.757 129.053 cv
217.459 129.053 218.027 128.483 218.027 127.781 cv
ef
213.896 131.489 mo
213.896 130.787 213.328 130.217 212.626 130.217 cv
211.924 130.217 211.354 130.787 211.354 131.489 cv
211.354 132.191 211.924 132.76 212.626 132.76 cv
213.328 132.76 213.896 132.191 213.896 131.489 cv
ef
209.66 116.766 mo
209.66 116.064 209.09 115.494 208.389 115.494 cv
207.687 115.494 207.118 116.064 207.118 116.766 cv
207.118 117.468 207.687 118.036 208.389 118.036 cv
209.09 118.036 209.66 117.468 209.66 116.766 cv
ef
205.529 128.947 mo
205.529 128.245 204.96 127.676 204.258 127.676 cv
203.556 127.676 202.987 128.245 202.987 128.947 cv
202.987 129.649 203.556 130.217 204.258 130.217 cv
204.96 130.217 205.529 129.649 205.529 128.947 cv
ef
201.398 117.931 mo
201.398 117.229 200.828 116.66 200.126 116.66 cv
199.424 116.66 198.856 117.229 198.856 117.931 cv
198.856 118.633 199.424 119.202 200.126 119.202 cv
200.828 119.202 201.398 118.633 201.398 117.931 cv
ef
197.267 111.893 mo
197.267 111.191 196.697 110.622 195.995 110.622 cv
195.293 110.622 194.725 111.191 194.725 111.893 cv
194.725 112.595 195.293 113.164 195.995 113.164 cv
196.697 113.164 197.267 112.595 197.267 111.893 cv
ef
193.03 111.893 mo
193.03 111.191 192.46 110.622 191.758 110.622 cv
191.056 110.622 190.488 111.191 190.488 111.893 cv
190.488 112.595 191.056 113.164 191.758 113.164 cv
192.46 113.164 193.03 112.595 193.03 111.893 cv
ef
188.899 116.766 mo
188.899 116.064 188.329 115.494 187.627 115.494 cv
186.925 115.494 186.357 116.064 186.357 116.766 cv
186.357 117.468 186.925 118.036 187.627 118.036 cv
188.329 118.036 188.899 117.468 188.899 116.766 cv
ef
184.768 114.33 mo
184.768 113.628 184.199 113.058 183.497 113.058 cv
182.795 113.058 182.226 113.628 182.226 114.33 cv
182.226 115.032 182.795 115.6 183.497 115.6 cv
184.199 115.6 184.768 115.032 184.768 114.33 cv
ef
180.53 114.33 mo
180.53 113.628 179.962 113.058 179.26 113.058 cv
178.558 113.058 177.988 113.628 177.988 114.33 cv
177.988 115.032 178.558 115.6 179.26 115.6 cv
179.962 115.6 180.53 115.032 180.53 114.33 cv
ef
176.399 105.749 mo
176.399 105.047 175.831 104.479 175.129 104.479 cv
174.427 104.479 173.857 105.047 173.857 105.749 cv
173.857 106.451 174.427 107.021 175.129 107.021 cv
175.831 107.021 176.399 106.451 176.399 105.749 cv
ef
172.269 102.042 mo
172.269 101.341 171.7 100.771 170.998 100.771 cv
170.296 100.771 169.726 101.341 169.726 102.042 cv
169.726 102.744 170.296 103.313 170.998 103.313 cv
171.7 103.313 172.269 102.744 172.269 102.042 cv
ef
168.032 92.2968 mo
168.032 91.5948 167.463 91.0263 166.761 91.0263 cv
166.059 91.0263 165.49 91.5948 165.49 92.2968 cv
165.49 92.9988 166.059 93.5685 166.761 93.5685 cv
167.463 93.5685 168.032 92.9988 168.032 92.2968 cv
ef
163.901 87.4249 mo
163.901 86.7229 163.332 86.1534 162.63 86.1534 cv
161.928 86.1534 161.359 86.7229 161.359 87.4249 cv
161.359 88.1269 161.928 88.6955 162.63 88.6955 cv
163.332 88.6955 163.901 88.1269 163.901 87.4249 cv
ef
159.77 65.393 mo
159.77 64.691 159.201 64.1214 158.499 64.1214 cv
157.796 64.1214 157.228 64.691 157.228 65.393 cv
157.228 66.095 157.796 66.6635 158.499 66.6635 cv
159.201 66.6635 159.77 66.095 159.77 65.393 cv
ef
155.533 76.4084 mo
155.533 75.7065 154.963 75.1379 154.261 75.1379 cv
153.559 75.1379 152.991 75.7065 152.991 76.4084 cv
152.991 77.1104 153.559 77.68 154.261 77.68 cv
154.963 77.68 155.533 77.1104 155.533 76.4084 cv
ef
151.402 60.4139 mo
151.402 59.7119 150.833 59.1434 150.131 59.1434 cv
149.429 59.1434 148.86 59.7119 148.86 60.4139 cv
148.86 61.1159 149.429 61.6855 150.131 61.6855 cv
150.833 61.6855 151.402 61.1159 151.402 60.4139 cv
ef
147.271 40.819 mo
147.271 40.117 146.702 39.5474 146 39.5474 cv
145.298 39.5474 144.729 40.117 144.729 40.819 cv
144.729 41.521 145.298 42.0895 146 42.0895 cv
146.702 42.0895 147.271 41.521 147.271 40.819 cv
ef
143.14 48.233 mo
143.14 47.531 142.57 46.9625 141.868 46.9625 cv
141.166 46.9625 140.598 47.531 140.598 48.233 cv
140.598 48.935 141.166 49.5046 141.868 49.5046 cv
142.57 49.5046 143.14 48.935 143.14 48.233 cv
ef
138.904 66.5574 mo
138.904 65.8554 138.334 65.2869 137.632 65.2869 cv
136.93 65.2869 136.361 65.8554 136.361 66.5574 cv
136.361 67.2594 136.93 67.829 137.632 67.829 cv
138.334 67.829 138.904 67.2594 138.904 66.5574 cv
ef
134.771 82.4469 mo
134.771 81.7449 134.203 81.1753 133.501 81.1753 cv
132.799 81.1753 132.23 81.7449 132.23 82.4469 cv
132.23 83.1489 132.799 83.7174 133.501 83.7174 cv
134.203 83.7174 134.771 83.1489 134.771 82.4469 cv
ef
130.641 81.2814 mo
130.641 80.5794 130.072 80.0098 129.37 80.0098 cv
128.668 80.0098 128.098 80.5794 128.098 81.2814 cv
128.098 81.9834 128.668 82.5519 129.37 82.5519 cv
130.072 82.5519 130.641 81.9834 130.641 81.2814 cv
ef
126.404 105.749 mo
126.404 105.047 125.835 104.479 125.133 104.479 cv
124.431 104.479 123.862 105.047 123.862 105.749 cv
123.862 106.451 124.431 107.021 125.133 107.021 cv
125.835 107.021 126.404 106.451 126.404 105.749 cv
ef
122.273 99.6058 mo
122.273 98.9038 121.704 98.3353 121.002 98.3353 cv
120.3 98.3353 119.731 98.9038 119.731 99.6058 cv
119.731 100.308 120.3 100.877 121.002 100.877 cv
121.704 100.877 122.273 100.308 122.273 99.6058 cv
ef
118.142 92.2968 mo
118.142 91.5948 117.573 91.0263 116.871 91.0263 cv
116.169 91.0263 115.6 91.5948 115.6 92.2968 cv
115.6 92.9988 116.169 93.5685 116.871 93.5685 cv
117.573 93.5685 118.142 92.9988 118.142 92.2968 cv
ef
113.905 88.5904 mo
113.905 87.8884 113.337 87.3188 112.635 87.3188 cv
111.933 87.3188 111.363 87.8884 111.363 88.5904 cv
111.363 89.2924 111.933 89.8609 112.635 89.8609 cv
113.337 89.8609 113.905 89.2924 113.905 88.5904 cv
ef
109.774 81.2814 mo
109.774 80.5794 109.204 80.0098 108.502 80.0098 cv
107.8 80.0098 107.232 80.5794 107.232 81.2814 cv
107.232 81.9834 107.8 82.5519 108.502 82.5519 cv
109.204 82.5519 109.774 81.9834 109.774 81.2814 cv
ef
105.643 92.2968 mo
105.643 91.5948 105.074 91.0263 104.372 91.0263 cv
103.67 91.0263 103.101 91.5948 103.101 92.2968 cv
103.101 92.9988 103.67 93.5685 104.372 93.5685 cv
105.074 93.5685 105.643 92.9988 105.643 92.2968 cv
ef
101.406 89.8609 mo
101.406 89.1589 100.837 88.5904 100.135 88.5904 cv
99.4332 88.5904 98.8647 89.1589 98.8647 89.8609 cv
98.8647 90.5629 99.4332 91.1325 100.135 91.1325 cv
100.837 91.1325 101.406 90.5629 101.406 89.8609 cv
ef
97.2747 88.5904 mo
97.2747 87.8884 96.7062 87.3188 96.0042 87.3188 cv
95.3022 87.3188 94.7326 87.8884 94.7326 88.5904 cv
94.7326 89.2924 95.3022 89.8609 96.0042 89.8609 cv
96.7062 89.8609 97.2747 89.2924 97.2747 88.5904 cv
ef
93.1447 89.8609 mo
93.1447 89.1589 92.5751 88.5904 91.8731 88.5904 cv
91.1711 88.5904 90.6016 89.1589 90.6016 89.8609 cv
90.6016 90.5629 91.1711 91.1325 91.8731 91.1325 cv
92.5751 91.1325 93.1447 90.5629 93.1447 89.8609 cv
ef
89.0137 94.7339 mo
89.0137 94.0319 88.4441 93.4623 87.7421 93.4623 cv
87.0401 93.4623 86.4716 94.0319 86.4716 94.7339 cv
86.4716 95.4359 87.0401 96.0044 87.7421 96.0044 cv
88.4441 96.0044 89.0137 95.4359 89.0137 94.7339 cv
ef
84.7765 82.4469 mo
84.7765 81.7449 84.2069 81.1753 83.5049 81.1753 cv
82.8029 81.1753 82.2344 81.7449 82.2344 82.4469 cv
82.2344 83.1489 82.8029 83.7174 83.5049 83.7174 cv
84.2069 83.7174 84.7765 83.1489 84.7765 82.4469 cv
ef
80.6454 100.877 mo
80.6454 100.175 80.0758 99.6058 79.3738 99.6058 cv
78.6729 99.6058 78.1033 100.175 78.1033 100.877 cv
78.1033 101.579 78.6729 102.148 79.3738 102.148 cv
80.0758 102.148 80.6454 101.579 80.6454 100.877 cv
ef
76.5144 87.4249 mo
76.5144 86.7229 75.9448 86.1534 75.2428 86.1534 cv
74.5408 86.1534 73.9723 86.7229 73.9723 87.4249 cv
73.9723 88.1269 74.5408 88.6955 75.2428 88.6955 cv
75.9448 88.6955 76.5144 88.1269 76.5144 87.4249 cv
ef
72.2772 88.5904 mo
72.2772 87.8884 71.7086 87.3188 71.0067 87.3188 cv
70.3046 87.3188 69.7351 87.8884 69.7351 88.5904 cv
69.7351 89.2924 70.3046 89.8609 71.0067 89.8609 cv
71.7086 89.8609 72.2772 89.2924 72.2772 88.5904 cv
ef
68.1461 93.4623 mo
68.1461 92.7603 67.5776 92.1918 66.8756 92.1918 cv
66.1736 92.1918 65.604 92.7603 65.604 93.4623 cv
65.604 94.1643 66.1736 94.7339 66.8756 94.7339 cv
67.5776 94.7339 68.1461 94.1643 68.1461 93.4623 cv
ef
64.0151 95.8983 mo
64.0151 95.1963 63.4465 94.6277 62.7446 94.6277 cv
62.0426 94.6277 61.473 95.1963 61.473 95.8983 cv
61.473 96.6003 62.0426 97.1698 62.7446 97.1698 cv
63.4465 97.1698 64.0151 96.6003 64.0151 95.8983 cv
ef
59.7789 108.186 mo
59.7789 107.484 59.2094 106.915 58.5074 106.915 cv
57.8054 106.915 57.2358 107.484 57.2358 108.186 cv
57.2358 108.888 57.8054 109.457 58.5074 109.457 cv
59.2094 109.457 59.7789 108.888 59.7789 108.186 cv
ef
55.6479 98.4414 mo
55.6479 97.7394 55.0783 97.1698 54.3763 97.1698 cv
53.6743 97.1698 53.1058 97.7394 53.1058 98.4414 cv
53.1058 99.1434 53.6743 99.7119 54.3763 99.7119 cv
55.0783 99.7119 55.6479 99.1434 55.6479 98.4414 cv
ef
51.5168 117.931 mo
51.5168 117.229 50.9473 116.66 50.2453 116.66 cv
49.5433 116.66 48.9747 117.229 48.9747 117.931 cv
48.9747 118.633 49.5433 119.202 50.2453 119.202 cv
50.9473 119.202 51.5168 118.633 51.5168 117.931 cv
ef
47.2796 122.909 mo
47.2796 122.207 46.7101 121.638 46.0081 121.638 cv
45.3071 121.638 44.7375 122.207 44.7375 122.909 cv
44.7375 123.611 45.3071 124.18 46.0081 124.18 cv
46.7101 124.18 47.2796 123.611 47.2796 122.909 cv
ef
43.1486 133.926 mo
43.1486 133.224 42.579 132.654 41.877 132.654 cv
41.175 132.654 40.6065 133.224 40.6065 133.926 cv
40.6065 134.628 41.175 135.196 41.877 135.196 cv
42.579 135.196 43.1486 134.628 43.1486 133.926 cv
ef
.635789 lw
39.8646 139.434 mo
cp
39.8646 139.434 mo
40.8177 136.043 li
41.877 132.865 li
42.9363 129.9 li
43.9956 127.253 li
46.0081 122.486 li
48.1267 118.355 li
50.2453 114.753 li
52.2577 111.575 li
54.3763 108.821 li
56.4949 106.279 li
58.5074 104.16 li
60.626 102.254 li
62.7446 100.454 li
64.757 98.97 li
68.9942 96.4279 li
73.1253 94.4155 li
77.2553 92.7214 li
81.4925 91.556 li
85.6235 90.6028 li
89.7546 89.8609 li
93.9918 89.3312 li
98.1228 89.0139 li
102.254 88.6955 li
106.385 88.4842 li
110.621 88.2719 li
114.752 87.8484 li
118.884 87.2137 li
123.12 86.0482 li
125.133 85.2002 li
127.251 84.0358 li
129.37 82.4469 li
131.382 80.3282 li
132.442 78.9506 li
133.501 77.4677 li
134.56 75.7737 li
135.62 73.7613 li
136.573 71.5365 li
137.632 69.1006 li
138.691 66.3462 li
139.751 63.3806 li
141.868 57.2371 li
142.822 54.1653 li
143.882 51.5171 li
144.941 49.2923 li
145.47 48.4453 li
146 47.8095 li
146.53 47.4921 li
147.06 47.2799 li
147.588 47.386 li
148.013 47.8095 li
148.541 48.4453 li
149.072 49.2923 li
149.602 50.4578 li
150.131 51.7293 li
151.19 54.9062 li
152.25 58.5076 li
154.261 66.3462 li
155.321 70.266 li
156.38 73.9725 li
157.439 77.3626 li
158.499 80.5406 li
159.558 83.4 li
160.511 86.0482 li
161.57 88.4842 li
162.63 90.6028 li
164.748 94.2042 li
166.761 97.276 li
168.879 99.8181 li
170.998 101.937 li
173.01 103.843 li
177.248 107.127 li
181.379 109.88 li
185.509 112.422 li
189.746 114.647 li
193.877 116.871 li
198.008 118.99 li
202.139 121.003 li
206.376 123.121 li
210.507 125.134 li
214.638 127.147 li
218.874 129.159 li
223.007 131.171 li
227.138 133.289 li
0 .985 1 .001 cmyk
@
.953158 lw
[1.27158 1.27158 ] 0 dsh
39.8646 140.068 mo
cp
39.8646 140.068 mo
40.8177 136.573 li
41.877 133.395 li
42.9363 130.536 li
43.9956 127.887 li
45.0549 125.345 li
46.0081 123.121 li
47.0674 121.003 li
48.1267 118.99 li
49.186 117.083 li
50.2453 115.388 li
51.3046 113.8 li
52.2577 112.316 li
54.3763 109.563 li
56.4949 107.127 li
58.5074 104.902 li
60.626 103.101 li
62.7446 101.407 li
64.757 99.9232 li
66.8756 98.5465 li
68.9942 97.3821 li
71.0067 96.4279 li
73.1253 95.4748 li
75.2428 94.7339 li
77.2553 93.9919 li
81.4925 92.9326 li
85.6235 92.1918 li
89.7546 91.6621 li
93.9918 91.4498 li
98.1228 91.4498 li
102.254 91.556 li
106.385 91.8734 li
110.621 92.2968 li
114.752 92.9326 li
118.884 93.6746 li
123.12 94.4155 li
127.251 95.3686 li
131.382 96.4279 li
135.62 97.4872 li
143.882 99.8181 li
148.013 101.195 li
152.25 102.466 li
156.38 103.949 li
160.511 105.326 li
164.748 106.809 li
173.01 109.987 li
177.248 111.575 li
181.379 113.27 li
185.509 114.965 li
189.746 116.766 li
193.877 118.461 li
202.139 122.061 li
206.376 123.969 li
210.507 125.875 li
214.638 127.676 li
218.874 129.689 li
223.007 131.595 li
227.138 133.501 li
.918 .756 0 0 cmyk
@
.635789 lw
[] 0 dsh
40.7126 133.926 mo
39.8646 133.926 li
39.8646 134.454 mo
39.8646 133.289 li
43.1486 133.926 mo
43.9956 133.926 li
43.9956 134.454 mo
43.9956 133.289 li
41.877 132.654 mo
41.877 129.476 li
41.2423 129.476 mo
42.5128 129.476 li
41.877 135.09 mo
41.877 136.785 li
41.2423 136.785 mo
42.5128 136.785 li
44.8437 122.909 mo
43.9956 122.909 li
43.9956 123.439 mo
43.9956 122.274 li
47.2797 122.909 mo
48.1267 122.909 li
48.1267 123.439 mo
48.1267 122.274 li
46.0081 121.638 mo
46.0081 116.766 li
45.4795 116.766 mo
46.6439 116.766 li
46.0081 124.075 mo
46.0081 127.57 li
45.4795 127.57 mo
46.6439 127.57 li
48.9748 117.931 mo
48.1267 117.931 li
48.1267 118.566 mo
48.1267 117.402 li
51.4107 117.931 mo
52.2577 117.931 li
52.2577 118.566 mo
52.2577 117.402 li
50.2453 116.766 mo
50.2453 111.363 li
49.6095 111.363 mo
50.7749 111.363 li
50.2453 119.202 mo
50.2453 123.227 li
49.6095 123.227 mo
50.7749 123.227 li
53.2109 98.4414 mo
52.2577 98.4414 li
52.2577 98.97 mo
52.2577 97.8056 li
55.5418 98.4414 mo
56.4949 98.4414 li
56.4949 98.97 mo
56.4949 97.8056 li
54.3763 97.1698 mo
54.3763 89.8609 li
53.7405 89.8609 mo
55.0121 89.8609 li
54.3763 99.6058 mo
54.3763 105.643 li
53.7405 105.643 mo
55.0121 105.643 li
57.3419 108.186 mo
56.4949 108.186 li
56.4949 108.821 mo
56.4949 107.551 li
59.779 108.186 mo
60.626 108.186 li
60.626 108.821 mo
60.626 107.551 li
58.5074 107.021 mo
58.5074 100.56 li
57.9777 100.56 mo
59.1432 100.56 li
58.5074 109.351 mo
58.5074 114.541 li
57.9777 114.541 mo
59.1432 114.541 li
61.473 95.8983 mo
60.626 95.8983 li
60.626 96.5341 mo
60.626 95.3686 li
63.909 95.8983 mo
64.757 95.8983 li
64.757 96.5341 mo
64.757 95.3686 li
62.7446 94.7339 mo
62.7446 87.2137 li
62.1088 87.2137 mo
63.2742 87.2137 li
62.7446 97.1698 mo
62.7446 103.313 li
62.1088 103.313 mo
63.2742 103.313 li
65.7102 93.4623 mo
64.757 93.4623 li
64.757 94.0981 mo
64.757 92.9326 li
68.04 93.4623 mo
68.9942 93.4623 li
68.9942 94.0981 mo
68.9942 92.9326 li
66.8756 92.2968 mo
66.8756 84.5655 li
66.2398 84.5655 mo
67.5104 84.5655 li
66.8756 94.7339 mo
66.8756 101.089 li
66.2398 101.089 mo
67.5104 101.089 li
69.8412 88.5904 mo
68.9942 88.5904 li
68.9942 89.2251 mo
68.9942 87.9546 li
72.2772 88.5904 mo
73.1253 88.5904 li
73.1253 89.2251 mo
73.1253 87.9546 li
71.0067 87.4249 mo
71.0067 79.269 li
70.477 79.269 mo
71.6414 79.269 li
71.0067 89.8609 mo
71.0067 96.6402 li
70.477 96.6402 mo
71.6414 96.6402 li
1 /0 /CSD get_res sepcs
1 sep
@
73.9723 87.4249 mo
73.1253 87.4249 li
73.1253 87.9546 mo
73.1253 86.7892 li
76.4083 87.4249 mo
77.2553 87.4249 li
77.2553 87.9546 mo
77.2553 86.7892 li
75.2428 86.1534 mo
75.2428 77.9974 li
74.6081 77.9974 mo
75.7735 77.9974 li
75.2428 88.5904 mo
75.2428 95.4748 li
74.6081 95.4748 mo
75.7735 95.4748 li
78.2095 100.877 mo
77.2553 100.877 li
77.2553 101.407 mo
77.2553 100.242 li
80.5393 100.877 mo
81.4925 100.877 li
81.4925 101.407 mo
81.4925 100.242 li
79.3739 99.6058 mo
79.3739 92.5091 li
78.7391 92.5091 mo
80.0097 92.5091 li
79.3739 102.042 mo
79.3739 107.868 li
78.7391 107.868 mo
80.0097 107.868 li
82.3406 82.4469 mo
81.4925 82.4469 li
81.4925 83.0816 mo
81.4925 81.9172 li
84.7765 82.4469 mo
85.6235 82.4469 li
85.6235 83.0816 mo
85.6235 81.9172 li
83.5049 81.2814 mo
83.5049 72.702 li
82.9753 72.702 mo
84.1407 72.702 li
83.5049 83.7174 mo
83.5049 90.9202 li
82.9753 90.9202 mo
84.1407 90.9202 li
86.4716 94.7339 mo
85.6235 94.7339 li
85.6235 95.3686 mo
85.6235 94.0981 li
88.9076 94.7339 mo
89.7546 94.7339 li
89.7546 95.3686 mo
89.7546 94.0981 li
87.7421 93.4623 mo
87.7421 85.836 li
87.1063 85.836 mo
88.2718 85.836 li
87.7421 95.8983 mo
87.7421 102.254 li
87.1063 102.254 mo
88.2718 102.254 li
90.6016 89.8609 mo
89.7546 89.8609 li
89.7546 90.3905 mo
89.7546 89.2251 li
93.0386 89.8609 mo
93.9918 89.8609 li
93.9918 90.3905 mo
93.9918 89.2251 li
91.8732 88.5904 mo
91.8732 80.6456 li
91.2374 80.6456 mo
92.509 80.6456 li
91.8732 91.0263 mo
91.8732 97.6995 li
91.2374 97.6995 mo
92.509 97.6995 li
94.8388 88.5904 mo
93.9918 88.5904 li
93.9918 89.2251 mo
93.9918 87.9546 li
97.2748 88.5904 mo
98.1228 88.5904 li
98.1228 89.2251 mo
98.1228 87.9546 li
96.0042 87.4249 mo
96.0042 79.269 li
95.3684 79.269 mo
96.64 79.269 li
96.0042 89.8609 mo
96.0042 96.6402 li
95.3684 96.6402 mo
96.64 96.6402 li
98.9698 89.8609 mo
98.1228 89.8609 li
98.1228 90.3905 mo
98.1228 89.2251 li
101.406 89.8609 mo
102.254 89.8609 li
102.254 90.3905 mo
102.254 89.2251 li
100.135 88.5904 mo
100.135 80.6456 li
99.6056 80.6456 mo
100.771 80.6456 li
100.135 91.0263 mo
100.135 97.6995 li
99.6056 97.6995 mo
100.771 97.6995 li
103.101 92.2968 mo
102.254 92.2968 li
102.254 92.8265 mo
102.254 91.6621 li
105.538 92.2968 mo
106.385 92.2968 li
106.385 92.8265 mo
106.385 91.6621 li
104.372 91.0263 mo
104.372 83.2939 li
103.737 83.2939 mo
104.902 83.2939 li
104.372 93.4623 mo
104.372 100.029 li
103.737 100.029 mo
104.902 100.029 li
@
107.338 81.2814 mo
106.385 81.2814 li
106.385 81.8111 mo
106.385 80.6456 li
109.668 81.2814 mo
110.621 81.2814 li
110.621 81.8111 mo
110.621 80.6456 li
108.502 80.0098 mo
108.502 71.4304 li
107.868 71.4304 mo
109.139 71.4304 li
108.502 82.4469 mo
108.502 89.7548 li
107.868 89.7548 mo
109.139 89.7548 li
111.469 88.5904 mo
110.621 88.5904 li
110.621 89.2251 mo
110.621 87.9546 li
113.905 88.5904 mo
114.752 88.5904 li
114.752 89.2251 mo
114.752 87.9546 li
112.635 87.4249 mo
112.635 79.269 li
112.105 79.269 mo
113.269 79.269 li
112.635 89.8609 mo
112.635 96.6402 li
112.105 96.6402 mo
113.269 96.6402 li
115.6 92.2968 mo
114.752 92.2968 li
114.752 92.8265 mo
114.752 91.6621 li
118.036 92.2968 mo
118.884 92.2968 li
118.884 92.8265 mo
118.884 91.6621 li
116.871 91.0263 mo
116.871 83.2939 li
116.236 83.2939 mo
117.4 83.2939 li
116.871 93.4623 mo
116.871 100.029 li
116.236 100.029 mo
117.4 100.029 li
119.837 99.6058 mo
118.884 99.6058 li
118.884 100.242 mo
118.884 98.97 li
122.167 99.6058 mo
123.12 99.6058 li
123.12 100.242 mo
123.12 98.97 li
121.002 98.4414 mo
121.002 91.2386 li
120.367 91.2386 mo
121.638 91.2386 li
121.002 100.771 mo
121.002 106.702 li
120.367 106.702 mo
121.638 106.702 li
123.967 105.749 mo
123.12 105.749 li
123.12 106.385 mo
123.12 105.115 li
126.404 105.749 mo
127.251 105.749 li
127.251 106.385 mo
127.251 105.115 li
125.133 104.479 mo
125.133 97.8056 li
124.603 97.8056 mo
125.769 97.8056 li
125.133 106.915 mo
125.133 112.316 li
124.603 112.316 mo
125.769 112.316 li
128.098 81.2814 mo
127.251 81.2814 li
127.251 81.8111 mo
127.251 80.6456 li
130.535 81.2814 mo
131.382 81.2814 li
131.382 81.8111 mo
131.382 80.6456 li
129.37 80.0098 mo
129.37 71.4304 li
128.734 71.4304 mo
129.9 71.4304 li
129.37 82.4469 mo
129.37 89.7548 li
128.734 89.7548 mo
129.9 89.7548 li
132.336 82.4469 mo
131.382 82.4469 li
131.382 83.0816 mo
131.382 81.9172 li
134.667 82.4469 mo
135.62 82.4469 li
135.62 83.0816 mo
135.62 81.9172 li
133.501 81.2814 mo
133.501 72.702 li
132.865 72.702 mo
134.137 72.702 li
133.501 83.7174 mo
133.501 90.9202 li
132.865 90.9202 mo
134.137 90.9202 li
136.467 66.5574 mo
135.62 66.5574 li
135.62 67.1942 mo
135.62 65.9227 li
138.904 66.5574 mo
139.751 66.5574 li
139.751 67.1942 mo
139.751 65.9227 li
137.632 65.393 mo
137.632 55.7542 li
137.102 55.7542 mo
138.268 55.7542 li
137.632 67.829 mo
137.632 76.0911 li
137.102 76.0911 mo
138.268 76.0911 li
@
140.598 48.233 mo
139.751 48.233 li
139.751 48.7627 mo
139.751 47.5983 li
143.034 48.233 mo
143.882 48.233 li
143.882 48.7627 mo
143.882 47.5983 li
141.868 46.9625 mo
141.868 36.2644 li
141.234 36.2644 mo
142.399 36.2644 li
141.868 49.3985 mo
141.868 58.826 li
141.234 58.826 mo
142.399 58.826 li
@
144.729 40.819 mo
143.882 40.819 li
143.882 41.4548 mo
143.882 40.2893 li
147.165 40.819 mo
148.013 40.819 li
148.013 41.4548 mo
148.013 40.2893 li
146 39.6536 mo
146 28.532 li
145.365 28.532 mo
146.635 28.532 li
146 42.0895 mo
146 51.9406 li
145.365 51.9406 mo
146.635 51.9406 li
148.966 60.4139 mo
148.013 60.4139 li
148.013 61.0497 mo
148.013 59.8842 li
151.402 60.4139 mo
152.25 60.4139 li
152.25 61.0497 mo
152.25 59.8842 li
150.131 59.2495 mo
150.131 49.1862 li
149.496 49.1862 mo
150.766 49.1862 li
150.131 61.6855 mo
150.131 70.3711 li
149.496 70.3711 mo
150.766 70.3711 li
153.097 76.4084 mo
152.249 76.4084 li
152.25 76.9381 mo
152.25 75.7737 li
155.533 76.4084 mo
156.38 76.4084 li
156.38 76.9381 mo
156.38 75.7737 li
154.261 75.1379 mo
154.261 66.1339 li
153.733 66.1339 mo
154.897 66.1339 li
154.261 77.5739 mo
154.261 85.2002 li
153.733 85.2002 mo
154.897 85.2002 li
157.228 65.393 mo
156.38 65.393 li
156.38 65.9227 mo
156.38 64.7572 li
159.664 65.393 mo
160.511 65.393 li
160.511 65.9227 mo
160.511 64.7572 li
158.499 64.1214 mo
158.499 54.4827 li
157.863 54.4827 mo
159.028 54.4827 li
158.499 66.5574 mo
158.499 74.9256 li
157.863 74.9256 mo
159.028 74.9256 li
161.464 87.4249 mo
160.511 87.4249 li
160.511 87.9546 mo
160.511 86.7892 li
163.795 87.4249 mo
164.748 87.4249 li
164.748 87.9546 mo
164.748 86.7892 li
162.63 86.1534 mo
162.63 77.9974 li
161.994 77.9974 mo
163.265 77.9974 li
162.63 88.5904 mo
162.63 95.4748 li
161.994 95.4748 mo
163.265 95.4748 li
165.596 92.2968 mo
164.748 92.2968 li
164.748 92.8265 mo
164.748 91.6621 li
168.032 92.2968 mo
168.879 92.2968 li
168.879 92.8265 mo
168.879 91.6621 li
166.761 91.0263 mo
166.761 83.2939 li
166.231 83.2939 mo
167.396 83.2939 li
166.761 93.4623 mo
166.761 100.029 li
166.231 100.029 mo
167.396 100.029 li
169.726 102.042 mo
168.879 102.042 li
168.879 102.678 mo
168.879 101.513 li
172.163 102.042 mo
173.01 102.042 li
173.01 102.678 mo
173.01 101.513 li
170.998 100.877 mo
170.998 93.8869 li
170.362 93.8869 mo
171.528 93.8869 li
170.998 103.313 mo
170.998 108.927 li
170.362 108.927 mo
171.528 108.927 li
173.964 105.749 mo
173.01 105.749 li
173.01 106.385 mo
173.01 105.115 li
176.294 105.749 mo
177.248 105.749 li
177.248 106.385 mo
177.248 105.115 li
175.129 104.479 mo
175.129 97.8056 li
174.493 97.8056 mo
175.765 97.8056 li
175.129 106.915 mo
175.129 112.316 li
174.493 112.316 mo
175.765 112.316 li
@
178.095 114.33 mo
177.248 114.33 li
177.248 114.859 mo
177.248 113.694 li
180.531 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
179.26 113.058 mo
179.26 107.233 li
178.73 107.233 mo
179.896 107.233 li
179.26 115.494 mo
179.26 120.049 li
178.73 120.049 mo
179.896 120.049 li
182.226 114.33 mo
181.379 114.33 li
181.379 114.859 mo
181.379 113.694 li
184.662 114.33 mo
185.51 114.33 li
185.51 114.859 mo
185.51 113.694 li
183.497 113.058 mo
183.497 107.233 li
182.861 107.233 mo
184.026 107.233 li
183.497 115.494 mo
183.497 120.049 li
182.861 120.049 mo
184.026 120.049 li
186.463 116.766 mo
185.509 116.766 li
185.51 117.402 mo
185.51 116.13 li
188.793 116.766 mo
189.746 116.766 li
189.746 117.402 mo
189.746 116.13 li
187.627 115.494 mo
187.627 109.987 li
186.992 109.987 mo
188.263 109.987 li
187.627 117.931 mo
187.627 122.167 li
186.992 122.167 mo
188.263 122.167 li
190.594 111.893 mo
189.746 111.893 li
189.746 112.422 mo
189.746 111.258 li
193.03 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
191.758 110.622 mo
191.758 104.585 li
191.229 104.585 mo
192.394 104.585 li
191.758 113.058 mo
191.758 117.825 li
191.229 117.825 mo
192.394 117.825 li
194.725 111.893 mo
193.877 111.893 li
193.877 112.422 mo
193.877 111.258 li
197.161 111.893 mo
198.008 111.893 li
198.008 112.422 mo
198.008 111.258 li
195.995 110.622 mo
195.995 104.585 li
195.36 104.585 mo
196.525 104.585 li
195.995 113.058 mo
195.995 117.825 li
195.36 117.825 mo
196.525 117.825 li
198.856 117.931 mo
198.008 117.931 li
198.008 118.566 mo
198.008 117.402 li
201.292 117.931 mo
202.139 117.931 li
202.139 118.566 mo
202.139 117.402 li
200.126 116.766 mo
200.126 111.363 li
199.491 111.363 mo
200.762 111.363 li
200.126 119.202 mo
200.126 123.227 li
199.491 123.227 mo
200.762 123.227 li
203.092 128.947 mo
202.139 128.947 li
202.139 129.582 mo
202.139 128.417 li
205.529 128.947 mo
206.376 128.947 li
206.376 129.582 mo
206.376 128.417 li
204.258 127.781 mo
204.258 123.756 li
203.622 123.756 mo
204.893 123.756 li
204.258 130.217 mo
204.258 132.76 li
203.622 132.76 mo
204.893 132.76 li
207.223 116.766 mo
206.376 116.766 li
206.376 117.402 mo
206.376 116.13 li
209.66 116.766 mo
210.507 116.766 li
210.507 117.402 mo
210.507 116.13 li
208.389 115.494 mo
208.389 109.987 li
207.859 109.987 mo
209.024 109.987 li
208.389 117.931 mo
208.389 122.167 li
207.859 122.167 mo
209.024 122.167 li
@
211.354 131.489 mo
210.507 131.489 li
210.507 132.018 mo
210.507 130.853 li
213.791 131.489 mo
214.638 131.489 li
214.638 132.018 mo
214.638 130.853 li
212.626 130.217 mo
212.626 126.616 li
211.99 126.616 mo
213.155 126.616 li
212.626 132.654 mo
212.626 134.879 li
211.99 134.879 mo
213.155 134.879 li
215.591 127.781 mo
214.638 127.781 li
214.638 128.417 mo
214.638 127.145 li
217.921 127.781 mo
218.875 127.781 li
218.875 128.417 mo
218.875 127.145 li
216.757 126.511 mo
216.757 122.38 li
216.121 122.38 mo
217.392 122.38 li
216.757 128.947 mo
216.757 131.807 li
216.121 131.807 mo
217.392 131.807 li
219.722 125.345 mo
218.874 125.345 li
218.875 125.875 mo
218.875 124.71 li
222.158 125.345 mo
223.007 125.345 li
223.007 125.875 mo
223.007 124.71 li
220.888 124.075 mo
220.888 119.519 li
220.358 119.519 mo
221.523 119.519 li
220.888 126.511 mo
220.888 129.689 li
220.358 129.689 mo
221.523 129.689 li
223.854 135.09 mo
223.007 135.09 li
223.007 135.726 mo
223.007 134.561 li
226.289 135.09 mo
227.138 135.09 li
227.138 135.726 mo
227.138 134.561 li
225.124 133.926 mo
225.124 130.959 li
224.489 130.959 mo
225.654 130.959 li
225.124 136.362 mo
225.124 137.738 li
224.489 137.738 mo
225.654 137.738 li
@
226.396 135.09 mo
226.396 134.388 225.826 133.819 225.124 133.819 cv
224.422 133.819 223.853 134.388 223.853 135.09 cv
223.853 135.792 224.422 136.362 225.124 136.362 cv
225.826 136.362 226.396 135.792 226.396 135.09 cv
ef
222.158 125.345 mo
222.158 124.643 221.59 124.075 220.888 124.075 cv
220.186 124.075 219.616 124.643 219.616 125.345 cv
219.616 126.047 220.186 126.616 220.888 126.616 cv
221.59 126.616 222.158 126.047 222.158 125.345 cv
ef
218.027 127.781 mo
218.027 127.079 217.459 126.511 216.757 126.511 cv
216.055 126.511 215.485 127.079 215.485 127.781 cv
215.485 128.483 216.055 129.053 216.757 129.053 cv
217.459 129.053 218.027 128.483 218.027 127.781 cv
ef
213.896 131.489 mo
213.896 130.787 213.328 130.217 212.626 130.217 cv
211.924 130.217 211.354 130.787 211.354 131.489 cv
211.354 132.191 211.924 132.76 212.626 132.76 cv
213.328 132.76 213.896 132.191 213.896 131.489 cv
ef
209.66 116.766 mo
209.66 116.064 209.09 115.494 208.389 115.494 cv
207.687 115.494 207.118 116.064 207.118 116.766 cv
207.118 117.468 207.687 118.036 208.389 118.036 cv
209.09 118.036 209.66 117.468 209.66 116.766 cv
ef
205.529 128.947 mo
205.529 128.245 204.96 127.676 204.258 127.676 cv
203.556 127.676 202.987 128.245 202.987 128.947 cv
202.987 129.649 203.556 130.217 204.258 130.217 cv
204.96 130.217 205.529 129.649 205.529 128.947 cv
ef
201.398 117.931 mo
201.398 117.229 200.828 116.66 200.126 116.66 cv
199.424 116.66 198.856 117.229 198.856 117.931 cv
198.856 118.633 199.424 119.202 200.126 119.202 cv
200.828 119.202 201.398 118.633 201.398 117.931 cv
ef
197.267 111.893 mo
197.267 111.191 196.697 110.622 195.995 110.622 cv
195.293 110.622 194.725 111.191 194.725 111.893 cv
194.725 112.595 195.293 113.164 195.995 113.164 cv
196.697 113.164 197.267 112.595 197.267 111.893 cv
ef
193.03 111.893 mo
193.03 111.191 192.46 110.622 191.758 110.622 cv
191.056 110.622 190.488 111.191 190.488 111.893 cv
190.488 112.595 191.056 113.164 191.758 113.164 cv
192.46 113.164 193.03 112.595 193.03 111.893 cv
ef
188.899 116.766 mo
188.899 116.064 188.329 115.494 187.627 115.494 cv
186.925 115.494 186.357 116.064 186.357 116.766 cv
186.357 117.468 186.925 118.036 187.627 118.036 cv
188.329 118.036 188.899 117.468 188.899 116.766 cv
ef
184.768 114.33 mo
184.768 113.628 184.199 113.058 183.497 113.058 cv
182.795 113.058 182.226 113.628 182.226 114.33 cv
182.226 115.032 182.795 115.6 183.497 115.6 cv
184.199 115.6 184.768 115.032 184.768 114.33 cv
ef
180.53 114.33 mo
180.53 113.628 179.962 113.058 179.26 113.058 cv
178.558 113.058 177.988 113.628 177.988 114.33 cv
177.988 115.032 178.558 115.6 179.26 115.6 cv
179.962 115.6 180.53 115.032 180.53 114.33 cv
ef
176.399 105.749 mo
176.399 105.047 175.831 104.479 175.129 104.479 cv
174.427 104.479 173.857 105.047 173.857 105.749 cv
173.857 106.451 174.427 107.021 175.129 107.021 cv
175.831 107.021 176.399 106.451 176.399 105.749 cv
ef
172.269 102.042 mo
172.269 101.341 171.7 100.771 170.998 100.771 cv
170.296 100.771 169.726 101.341 169.726 102.042 cv
169.726 102.744 170.296 103.313 170.998 103.313 cv
171.7 103.313 172.269 102.744 172.269 102.042 cv
ef
168.032 92.2968 mo
168.032 91.5948 167.463 91.0263 166.761 91.0263 cv
166.059 91.0263 165.49 91.5948 165.49 92.2968 cv
165.49 92.9988 166.059 93.5685 166.761 93.5685 cv
167.463 93.5685 168.032 92.9988 168.032 92.2968 cv
ef
163.901 87.4249 mo
163.901 86.7229 163.332 86.1534 162.63 86.1534 cv
161.928 86.1534 161.359 86.7229 161.359 87.4249 cv
161.359 88.1269 161.928 88.6955 162.63 88.6955 cv
163.332 88.6955 163.901 88.1269 163.901 87.4249 cv
ef
159.77 65.393 mo
159.77 64.691 159.201 64.1214 158.499 64.1214 cv
157.796 64.1214 157.228 64.691 157.228 65.393 cv
157.228 66.095 157.796 66.6635 158.499 66.6635 cv
159.201 66.6635 159.77 66.095 159.77 65.393 cv
ef
155.533 76.4084 mo
155.533 75.7065 154.963 75.1379 154.261 75.1379 cv
153.559 75.1379 152.991 75.7065 152.991 76.4084 cv
152.991 77.1104 153.559 77.68 154.261 77.68 cv
154.963 77.68 155.533 77.1104 155.533 76.4084 cv
ef
151.402 60.4139 mo
151.402 59.7119 150.833 59.1434 150.131 59.1434 cv
149.429 59.1434 148.86 59.7119 148.86 60.4139 cv
148.86 61.1159 149.429 61.6855 150.131 61.6855 cv
150.833 61.6855 151.402 61.1159 151.402 60.4139 cv
ef
147.271 40.819 mo
147.271 40.117 146.702 39.5474 146 39.5474 cv
145.298 39.5474 144.729 40.117 144.729 40.819 cv
144.729 41.521 145.298 42.0895 146 42.0895 cv
146.702 42.0895 147.271 41.521 147.271 40.819 cv
ef
143.14 48.233 mo
143.14 47.531 142.57 46.9625 141.868 46.9625 cv
141.166 46.9625 140.598 47.531 140.598 48.233 cv
140.598 48.935 141.166 49.5046 141.868 49.5046 cv
142.57 49.5046 143.14 48.935 143.14 48.233 cv
ef
138.904 66.5574 mo
138.904 65.8554 138.334 65.2869 137.632 65.2869 cv
136.93 65.2869 136.361 65.8554 136.361 66.5574 cv
136.361 67.2594 136.93 67.829 137.632 67.829 cv
138.334 67.829 138.904 67.2594 138.904 66.5574 cv
ef
134.771 82.4469 mo
134.771 81.7449 134.203 81.1753 133.501 81.1753 cv
132.799 81.1753 132.23 81.7449 132.23 82.4469 cv
132.23 83.1489 132.799 83.7174 133.501 83.7174 cv
134.203 83.7174 134.771 83.1489 134.771 82.4469 cv
ef
130.641 81.2814 mo
130.641 80.5794 130.072 80.0098 129.37 80.0098 cv
128.668 80.0098 128.098 80.5794 128.098 81.2814 cv
128.098 81.9834 128.668 82.5519 129.37 82.5519 cv
130.072 82.5519 130.641 81.9834 130.641 81.2814 cv
ef
126.404 105.749 mo
126.404 105.047 125.835 104.479 125.133 104.479 cv
124.431 104.479 123.862 105.047 123.862 105.749 cv
123.862 106.451 124.431 107.021 125.133 107.021 cv
125.835 107.021 126.404 106.451 126.404 105.749 cv
ef
122.273 99.6058 mo
122.273 98.9038 121.704 98.3353 121.002 98.3353 cv
120.3 98.3353 119.731 98.9038 119.731 99.6058 cv
119.731 100.308 120.3 100.877 121.002 100.877 cv
121.704 100.877 122.273 100.308 122.273 99.6058 cv
ef
118.142 92.2968 mo
118.142 91.5948 117.573 91.0263 116.871 91.0263 cv
116.169 91.0263 115.6 91.5948 115.6 92.2968 cv
115.6 92.9988 116.169 93.5685 116.871 93.5685 cv
117.573 93.5685 118.142 92.9988 118.142 92.2968 cv
ef
113.905 88.5904 mo
113.905 87.8884 113.337 87.3188 112.635 87.3188 cv
111.933 87.3188 111.363 87.8884 111.363 88.5904 cv
111.363 89.2924 111.933 89.8609 112.635 89.8609 cv
113.337 89.8609 113.905 89.2924 113.905 88.5904 cv
ef
109.774 81.2814 mo
109.774 80.5794 109.204 80.0098 108.502 80.0098 cv
107.8 80.0098 107.232 80.5794 107.232 81.2814 cv
107.232 81.9834 107.8 82.5519 108.502 82.5519 cv
109.204 82.5519 109.774 81.9834 109.774 81.2814 cv
ef
105.643 92.2968 mo
105.643 91.5948 105.074 91.0263 104.372 91.0263 cv
103.67 91.0263 103.101 91.5948 103.101 92.2968 cv
103.101 92.9988 103.67 93.5685 104.372 93.5685 cv
105.074 93.5685 105.643 92.9988 105.643 92.2968 cv
ef
101.406 89.8609 mo
101.406 89.1589 100.837 88.5904 100.135 88.5904 cv
99.4332 88.5904 98.8647 89.1589 98.8647 89.8609 cv
98.8647 90.5629 99.4332 91.1325 100.135 91.1325 cv
100.837 91.1325 101.406 90.5629 101.406 89.8609 cv
ef
97.2747 88.5904 mo
97.2747 87.8884 96.7062 87.3188 96.0042 87.3188 cv
95.3022 87.3188 94.7326 87.8884 94.7326 88.5904 cv
94.7326 89.2924 95.3022 89.8609 96.0042 89.8609 cv
96.7062 89.8609 97.2747 89.2924 97.2747 88.5904 cv
ef
93.1447 89.8609 mo
93.1447 89.1589 92.5751 88.5904 91.8731 88.5904 cv
91.1711 88.5904 90.6016 89.1589 90.6016 89.8609 cv
90.6016 90.5629 91.1711 91.1325 91.8731 91.1325 cv
92.5751 91.1325 93.1447 90.5629 93.1447 89.8609 cv
ef
89.0137 94.7339 mo
89.0137 94.0319 88.4441 93.4623 87.7421 93.4623 cv
87.0401 93.4623 86.4716 94.0319 86.4716 94.7339 cv
86.4716 95.4359 87.0401 96.0044 87.7421 96.0044 cv
88.4441 96.0044 89.0137 95.4359 89.0137 94.7339 cv
ef
84.7765 82.4469 mo
84.7765 81.7449 84.2069 81.1753 83.5049 81.1753 cv
82.8029 81.1753 82.2344 81.7449 82.2344 82.4469 cv
82.2344 83.1489 82.8029 83.7174 83.5049 83.7174 cv
84.2069 83.7174 84.7765 83.1489 84.7765 82.4469 cv
ef
80.6454 100.877 mo
80.6454 100.175 80.0758 99.6058 79.3738 99.6058 cv
78.6729 99.6058 78.1033 100.175 78.1033 100.877 cv
78.1033 101.579 78.6729 102.148 79.3738 102.148 cv
80.0758 102.148 80.6454 101.579 80.6454 100.877 cv
ef
76.5144 87.4249 mo
76.5144 86.7229 75.9448 86.1534 75.2428 86.1534 cv
74.5408 86.1534 73.9723 86.7229 73.9723 87.4249 cv
73.9723 88.1269 74.5408 88.6955 75.2428 88.6955 cv
75.9448 88.6955 76.5144 88.1269 76.5144 87.4249 cv
ef
72.2772 88.5904 mo
72.2772 87.8884 71.7086 87.3188 71.0067 87.3188 cv
70.3046 87.3188 69.7351 87.8884 69.7351 88.5904 cv
69.7351 89.2924 70.3046 89.8609 71.0067 89.8609 cv
71.7086 89.8609 72.2772 89.2924 72.2772 88.5904 cv
ef
68.1461 93.4623 mo
68.1461 92.7603 67.5776 92.1918 66.8756 92.1918 cv
66.1736 92.1918 65.604 92.7603 65.604 93.4623 cv
65.604 94.1643 66.1736 94.7339 66.8756 94.7339 cv
67.5776 94.7339 68.1461 94.1643 68.1461 93.4623 cv
ef
64.0151 95.8983 mo
64.0151 95.1963 63.4465 94.6277 62.7446 94.6277 cv
62.0426 94.6277 61.473 95.1963 61.473 95.8983 cv
61.473 96.6003 62.0426 97.1698 62.7446 97.1698 cv
63.4465 97.1698 64.0151 96.6003 64.0151 95.8983 cv
ef
59.7789 108.186 mo
59.7789 107.484 59.2094 106.915 58.5074 106.915 cv
57.8054 106.915 57.2358 107.484 57.2358 108.186 cv
57.2358 108.888 57.8054 109.457 58.5074 109.457 cv
59.2094 109.457 59.7789 108.888 59.7789 108.186 cv
ef
55.6479 98.4414 mo
55.6479 97.7394 55.0783 97.1698 54.3763 97.1698 cv
53.6743 97.1698 53.1058 97.7394 53.1058 98.4414 cv
53.1058 99.1434 53.6743 99.7119 54.3763 99.7119 cv
55.0783 99.7119 55.6479 99.1434 55.6479 98.4414 cv
ef
51.5168 117.931 mo
51.5168 117.229 50.9473 116.66 50.2453 116.66 cv
49.5433 116.66 48.9747 117.229 48.9747 117.931 cv
48.9747 118.633 49.5433 119.202 50.2453 119.202 cv
50.9473 119.202 51.5168 118.633 51.5168 117.931 cv
ef
47.2796 122.909 mo
47.2796 122.207 46.7101 121.638 46.0081 121.638 cv
45.3071 121.638 44.7375 122.207 44.7375 122.909 cv
44.7375 123.611 45.3071 124.18 46.0081 124.18 cv
46.7101 124.18 47.2796 123.611 47.2796 122.909 cv
ef
43.1486 133.926 mo
43.1486 133.224 42.579 132.654 41.877 132.654 cv
41.175 132.654 40.6065 133.224 40.6065 133.926 cv
40.6065 134.628 41.175 135.196 41.877 135.196 cv
42.579 135.196 43.1486 134.628 43.1486 133.926 cv
ef
.317369 lw
39.8646 141.234 mo
227.138 141.234 li
@
VIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf180.954 164.219 mo(!)shVIXPCQ+Helvetica*1 [7.54414 0 0 -7.54414 0 0 ]msf177.035 159.452 mo(")shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf135.407 164.219 mo(!#$%&'\(\))[3.71907 3.10507 3.71907 8.68771 6.20903 7.44844 3.10506 0 ]xshVIXPCR+Symbol*1 [11.1653 0 0 -11.1653 0 0 ]msf127.569 164.219 mo(y)shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf118.779 164.219 mo(*\()[5.58264 0 ]xshVIXPCS+Symbol*1 [7.54414 0 0 -7.54414 0 0 ]msf114.541 160.935 mo( )shVIXPCR+Symbol*1 [11.1653 0 0 -11.1653 0 0 ]msf108.502 164.219 mo(p)shVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf105.22 164.219 mo($)shVIXPCQ+Helvetica*1 [7.54414 0 0 -7.54414 0 0 ]msf90.7077 166.655 mo(+,-)[6.28345 4.19378 0 ]xshVIXPCQ+Helvetica*1 [11.1653 0 0 -11.1653 0 0 ]msf81.916 164.219 mo(.)sh64.757 137.209 mo
64.757 141.234 li
73.1253 139.221 mo
73.1253 141.234 li
81.4925 139.221 mo
81.4925 141.234 li
89.7546 139.221 mo
89.7546 141.234 li
98.1228 139.221 mo
98.1228 141.234 li
106.385 137.209 mo
106.385 141.234 li
114.752 139.221 mo
114.752 141.234 li
123.12 139.221 mo
123.12 141.234 li
131.382 139.221 mo
131.382 141.234 li
139.751 139.221 mo
139.751 141.234 li
148.013 137.209 mo
148.013 141.234 li
156.38 139.221 mo
156.38 141.234 li
164.748 139.221 mo
164.748 141.234 li
173.01 139.221 mo
173.01 141.234 li
181.379 139.221 mo
181.379 141.234 li
189.746 137.209 mo
189.746 141.234 li
64.757 137.209 mo
64.757 141.234 li
56.4949 139.221 mo
56.4949 141.234 li
48.1267 139.221 mo
48.1267 141.234 li
189.746 137.209 mo
189.746 141.234 li
198.008 139.221 mo
198.008 141.234 li
206.376 139.221 mo
206.376 141.234 li
214.638 139.221 mo
214.638 141.234 li
223.007 139.221 mo
223.007 141.234 li
@
VIXPCQ+Helvetica*1 [9.65643 0 0 -9.65643 0 0 ]msf58.0841 150.979 mo(/01/02/03405)[5.36993 2.68546 33.6826 5.36993 2.68546 33.5763 5.36993 2.68546 33.5764 5.36993 2.68546 0 ]xsh39.8646 141.234 mo
39.8646 6.6051 li
@
VIXPCQ+Helvetica*1 [0 -7.54414 -7.54414 0 0 0 ]msf8.93581 25.9897 mo(")shVIXPCQ+Helvetica*1 [0 -11.1653 -11.1653 0 0 0 ]msf13.8081 125.345 mo(67&89:#\(#505;#%&'\(\))[-7.44734 -5.58264 -6.2079 -6.20791 -3.10395 -5.58265 -3.10619 -3.10395 -3.10618 -6.20791 -3.10395 -6.2079 -6.20791 -3.10618 -8.6866 -6.20792 -7.44733 -3.10394 0 ]ysh45.4795 141.234 mo
39.8646 141.234 li
42.619 135.09 mo
39.8646 135.09 li
42.619 128.947 mo
39.8646 128.947 li
42.619 122.909 mo
39.8646 122.909 li
45.4795 116.766 mo
39.8646 116.766 li
42.619 110.622 mo
39.8646 110.622 li
42.619 104.479 mo
39.8646 104.479 li
42.619 98.4414 mo
39.8646 98.4414 li
45.4795 92.2968 mo
39.8646 92.2968 li
42.619 86.1534 mo
39.8646 86.1534 li
42.619 80.0098 mo
39.8646 80.0098 li
42.619 73.8674 mo
39.8646 73.8674 li
45.4795 67.829 mo
39.8646 67.829 li
42.619 61.6855 mo
39.8646 61.6855 li
42.619 55.542 mo
39.8646 55.542 li
42.619 49.3985 mo
39.8646 49.3985 li
45.4795 43.3611 mo
39.8646 43.3611 li
42.619 37.2176 mo
39.8646 37.2176 li
42.619 31.0741 mo
39.8646 31.0741 li
42.619 24.9305 mo
39.8646 24.9305 li
45.4795 18.787 mo
39.8646 18.787 li
45.4795 18.787 mo
39.8646 18.787 li
42.619 12.7486 mo
39.8646 12.7486 li
42.619 6.6051 mo
39.8646 6.6051 li
@
VIXPCQ+Helvetica*1 [9.65643 0 0 -9.65643 0 0 ]msf32.133 144.624 mo(5)sh26.7312 120.154 mo("5)[5.36704 0 ]xsh26.7312 95.687 mo(45)[5.36704 0 ]xsh26.7312 71.3249 mo(<5)[5.36704 0 ]xsh26.7312 46.8564 mo(25)[5.36704 0 ]xsh21.6471 22.388 mo(;55)[5.36704 5.36704 0 ]xsh167.079 8.3002 mo
224.808 8.3002 li
224.808 42.8314 li
167.079 42.8314 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g17 <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 61 /g17 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 /g11 /g17 194{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [6.03527 0 0 -6.03527 0 0 ]msf181.272 16.35 mo(=,9,)[4.35686 3.35501 1.6772 0 ]xsh.635789 lw
169.303 14.1263 mo
179.366 14.1263 li
174.281 17.5155 mo
174.281 10.6311 li
@
175.552 14.1263 mo
175.552 13.4243 174.983 12.8548 174.281 12.8548 cv
173.579 12.8548 173.01 13.4243 173.01 14.1263 cv
173.01 14.8284 173.579 15.3969 174.281 15.3969 cv
174.983 15.3969 175.552 14.8284 175.552 14.1263 cv
ef
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g25 <1C60D8A8C9B7D8BE7B6CE17BCB3B2D4B0FB3E6AF9E6DDADD178189522CE1F006> |-/g39 <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/g36 <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/g32 <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/g34 <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 62 /g25 putdup 63 /g39 putdup 64 /g36 putdup 65 /g32 putdup 66 /g34 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 /g11 /g17 /g25 /g39 /g36 /g32 /g34 189{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [6.03527 0 0 -6.03527 0 0 ]msf181.272 27.79 mo(>?9,@#AB9)[3.6869 3.355 1.67719 3.35501 1.33925 1.67719 1.6772 1.33923 0 ]xsh169.303 25.5653 mo
179.366 25.5653 li
0 .985 1 .001 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g15 <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/g35 <1C60D8A8C9B7A73D847F857A1BFD24ACB75840E5C7CBB8AB7BE870135525EBD6DBF4EAE3173F6ABCE16E75318AB6C78B406BDB> |-/g33 <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-/g40 <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/g43 <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-/g30 <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 67 /g15 putdup 68 /g35 putdup 69 /g33 putdup 70 /g40 putdup 71 /g43 putdup 72 /g30 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 /g11 /g17 /g25 /g39 /g36 /g32 /g34 /g15 /g35 /g33 /g40 /g43 /g30 183{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [6.03527 0 0 -6.03527 0 0 ]msf181.272 38.7004 mo(C,\)DEF?G8H#AB9)[4.02496 3.355 3.01704 3.01703 3.355 2.00911 3.355 3.355 3.35501 3.35501 1.67719 1.6772 1.33923 0 ]xsh.953158 lw
[1.27158 1.27158 ] 0 dsh
169.303 37.1115 mo
179.366 37.1115 li
.918 .756 0 0 cmyk
@
167.079 42.8314 mo
224.808 42.8314 li
224.808 66.982 li
167.079 66.982 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g23 <1C60D8A8C9B64EDFE336D280AD0769103D1650D4946BC89E21A88DEC51613F3C79BEE823BD11DE4DA6DB5B89497F0D2976B3DEFC67AF28487C3BB530BC49F1D09A090BACE6D7137C10758B70768799060F36DCE81F308AA18889AF5053DE> |-/g20 <1C60D8A8C9B6079F4F4E07EFC7C894BAD912B65087B319FD4C6D4407FA6BDEE59584D043C3070AE38B> |-/g24 <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/g16 <1C60D8A8C9B6079F6D8209747A86332E73924F1B07F271169856A53C915771D7C530ADE68D8CA49F0A6B3478F9E8176949771F40D91B68E1A88C72CE81CC0A91B3CFB642960E7EB2127A1637D49961A11F5DD40622F39379CDAB7E5B349DF832E4955008C5E3208AB258B012A237635179513D820ACF76E0A17ED392C351599687E8E7D0> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 73 /g23 putdup 74 /g20 putdup 75 /g24 putdup 76 /g16 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 /g11 /g17 /g25 /g39 /g36 /g32 /g34 /g15 /g35 /g33 /g40 /g43 /g30 /g23 /g20 /g24 /g16 179{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [5.73356 0 0 -5.73356 0 0 ]msf181.272 50.7751 mo(IJKI#.L)[3.82433 4.13963 3.82431 3.82433 1.59509 4.776 0 ]xsh[2.1186 1.27158 .423509 1.27158 ] 0 dsh
169.303 48.8688 mo
179.366 48.8688 li
0 .985 1 .001 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GYRQMX+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCQ+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g28 <1C60D8A8C9B7EF3218D573119DA1C11A6AE733DE74B449EE28E952049DF20D24986476D6D2EEF32C9EA9D0ACD1DB597DCDAFEA016C8786CCA065DDF1EE5907C8756872FC8DF20AB863D540CF67DD1EF324B2790688B9E765FC9F6CEBC3C128AB52D1A4FF3B9BAF04627D17E8573C64B9FC053FD7156FF73E6BCD82B1A402A01ECDBBEC20265AC1F5281625> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCQ+Helvetica /Encoding getdup 77 /g28 putpop%ADOEndSubsetFont
/VIXPCQ+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g31 /g26 /g5 /g29 /g21 /g37 /g27 /g45 /g22 /g9 /g4 /g12 /g13 /g14 /g10 /g6 /g18 /g44 /g38 /g42 /g41 /g7 /g11 /g17 /g25 /g39 /g36 /g32 /g34 /g15 /g35 /g33 /g40 /g43 /g30 /g23 /g20 /g24 /g16 /g28 178{/.notdef}rp]VIXPCQ+Helvetica nfVIXPCQ+Helvetica*1 [5.73356 0 0 -5.73356 0 0 ]msf181.272 62.8509 mo(KBH&M,8H)[3.82317 1.27171 3.18671 3.18672 3.18669 3.18672 3.18669 0 ]xsh169.303 56.7064 mo
179.366 56.7064 li
179.366 65.1807 li
169.303 65.1807 li
cp
.584 0 1 0 cmyk
f
.317369 lw
[] 0 dsh
169.303 56.7074 mo
179.366 56.7074 li
169.303 65.1807 mo
179.366 65.1807 li
179.366 65.1807 mo
179.366 56.7074 li
169.303 65.1807 mo
169.303 56.7074 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
-21.8838 198.048 mo
265.882 198.048 li
265.882 385.156 li
-21.8838 385.156 li
cp
clp
gsave
-21.8838 385.155 mo
265.882 385.155 li
265.882 198.048 li
-21.8838 198.048 li
cp
clp
-4.15717 199.134 mo
243.638 199.134 li
243.638 377.222 li
-4.15717 377.222 li
cp
0 0 0 0 cmyk
f
38.0154 208.093 mo
231.181 208.093 li
231.181 346.958 li
38.0154 346.958 li
cp
f
38.0154 346.958 mo
38.4536 346.521 li
38.4536 208.53 li
230.745 208.53 li
231.182 208.093 li
38.0154 208.093 li
38.0154 346.958 li
ef
38.0154 346.958 mo
38.4536 346.521 li
230.745 346.521 li
230.745 208.53 li
231.182 208.093 li
231.182 346.958 li
38.0154 346.958 li
ef
38.0154 346.958 mo
231.181 346.958 li
231.181 208.093 li
38.0154 208.093 li
cp
38.0154 346.958 mo
231.182 346.958 li
38.0154 346.958 mo
231.182 346.958 li
1 /0 /CSD get_res sepcs
1 sep
.277 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
%ADOBeginSubsetFont: AIWBAA+Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /AIWBAA+Helvetica def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 33 /g3 putdup 34 /g8 putdup 35 /g1 putdup 36 /g2 putdup 37 /g19 putdup 38 /g26 putdup 39 /g22 putdup 40 /g5 putdup 41 /g24 putdup 42 /g20 putdup 43 /g30 putdup 44 /g23 putdup 45 /g38 putdup 46 /g21 putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings15 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/g3 <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/g8 <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/g1 <1C60D8A8C9B854D00D> |-/g2 <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/g19 <1C60D8A8C9B6FF86FAE761919412E75DCB56A17E0B647886E974BE0CD2DDC55247C89172C0F24B317CED95A1845F91927547B6F787BE4A81523EC6B90B7AF23F6F8A8BDDC51D0AA285D7E086AD8E028BD7D16A89F17742D556071D7D56166C6C8A71E0DFC3DA3B4DBE27EC4E6BE207A1EAF47A71BE409951D1C5060119CDD071AF7E9076F56846B6D62E52B2CB6390635FC230> |-/g26 <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/g22 <1C60D8A8C9B64EDFA60949676B75C625C6948873966B83A549B84A6BD5D6EE9C83058CE085EB61> |-/g5 <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/g24 <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/g20 <1C60D8A8C9B7A73DB6FA483A9791C1A03FDD99DE37EC702CFAA41FFB6235ABBC533B771F9FC9FF7FE3EF943DDF6A0978C6221B723344AE5D5FF65442A5B18CBDAF7665324680F19176D0D766874FD5E0E907> |-/g30 <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/g23 <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/g38 <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-/g21 <1C60D8A8C9B6B41C9910B30BE12408A0CCE83CFCBF71D6A0AFED0B0C7E6B8742F00BF38074693AE67B7536DF8025FC27BB7165EE6A43D7B9497E065E42F0EE8DA1C58C8863D1E0F8290CD2A3925749EE5F186B> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCT+Helvetica /AIWBAA+Helvetica findfont ct_VMDictPut/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 209{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf181.361 370.668 mo(!)shVIXPCT+Helvetica*1 [7.78153 0 0 -7.78154 0 0 ]msf177.319 365.751 mo(")shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf134.382 370.668 mo(!#$%&'\(\))[3.83614 3.20277 3.83612 8.96114 6.40443 7.68286 3.20279 0 ]xsh%ADOBeginSubsetFont: RWERMX+Symbol Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /RWERMX+Symbol def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (Symbol) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999998 0 0 0.000999998 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 112 /pi putdup 121 /psi putdef/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/pi <1C60D8A8C9B7967678F2ED2478535EB7B50DECCE78F28089B307456EDB9089371383F74718798FCF22D6D686185B9074732F57B819259A4E99DD8D356BD55E81236AB1C67A050E41981869DEEA9296AE9124988026D74E5E4B51B2F69057FA95946C8B081DF5096D1A21ACAE3DDF26EB12D2423765790F7377340145B5A19A613EEE3DA5D67DE190CE253AC7061757FE656DCAC0FAC8E090EBE75E963E5EADC51139339E48BC7859A965> |-/psi <1C60D8A8C9B6232B60CC295600FD0E895E3215A2016BDDF6F682D50A2A7103E46C09816CE9D16C068165579B09F2D6EF8CFF06DF24FF361CFD0502FA832C968069C61BACF661F555512321BD01A3245630BF8C2945315C8AE8FF210EA2AA7D5D6CFC874B1F133C8B905508E3ED43022B7325ECE021285DCE0D102625220D52ED0F8B0D77EB6D76DACC6D85EC2965E20CC13A05390F384BC1C20361CB25E4EF10E2833A5460732D5D1ACD5C0A48C5C0A45EBCC3CA1E37FF630C83CFC5D5B36C8D96D938490759C937155EB82A6C7DDAF2FA8F5B> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCU+Symbol /RWERMX+Symbol findfont ct_VMDictPut/VIXPCU+Symbol*1 [112{/.notdef}rp /pi 8{/.notdef}rp /psi 134{/.notdef}rp]VIXPCU+Symbol nfVIXPCU+Symbol*1 [11.5167 0 0 -11.5167 0 0 ]msf126.296 370.668 mo(y)shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf117.229 370.668 mo(*\()[5.75833 0 ]xshVIXPCU+Symbol*1 [11.5167 0 0 -11.5167 0 0 ]msf111 370.668 mo(p)shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf107.613 370.668 mo($)shVIXPCT+Helvetica*1 [7.78153 0 0 -7.78154 0 0 ]msf92.645 373.181 mo(+,-)[6.48118 4.32575 0 ]xshVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf83.5765 370.668 mo(.)sh63.2547 342.806 mo
63.2547 346.958 li
69.5915 344.882 mo
69.5915 346.958 li
75.9283 344.882 mo
75.9283 346.958 li
82.2651 344.882 mo
82.2651 346.958 li
88.6018 344.882 mo
88.6018 346.958 li
94.9386 342.806 mo
94.9386 346.958 li
101.275 344.882 mo
101.275 346.958 li
107.612 344.882 mo
107.612 346.958 li
113.95 344.882 mo
113.95 346.958 li
120.287 344.882 mo
120.287 346.958 li
126.624 342.806 mo
126.624 346.958 li
132.96 344.882 mo
132.96 346.958 li
139.297 344.882 mo
139.297 346.958 li
145.634 344.882 mo
145.634 346.958 li
151.971 344.882 mo
151.971 346.958 li
158.308 342.806 mo
158.308 346.958 li
164.644 344.882 mo
164.644 346.958 li
170.982 344.882 mo
170.982 346.958 li
177.318 344.882 mo
177.318 346.958 li
183.656 344.882 mo
183.656 346.958 li
189.993 342.806 mo
189.993 346.958 li
196.329 344.882 mo
196.329 346.958 li
202.666 344.882 mo
202.666 346.958 li
209.003 344.882 mo
209.003 346.958 li
215.34 344.882 mo
215.34 346.958 li
221.677 342.806 mo
221.677 346.958 li
63.2547 342.806 mo
63.2547 346.958 li
56.9179 344.882 mo
56.9179 346.958 li
50.5812 344.882 mo
50.5812 346.958 li
44.3533 344.882 mo
44.3533 346.958 li
38.0154 344.882 mo
38.0154 346.958 li
221.677 342.806 mo
221.677 346.958 li
228.013 344.882 mo
228.013 346.958 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
%ADOBeginSubsetFont: AIWBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g9 <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/g4 <1C60D8A8C9B854D0E3687C43D46768E11610> |-/g13 <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-/g14 <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-/g15 <1C60D8A8C9B7EF326B464DF43714564059769E71FFFC685FC18F48C77D53AC88FCBBC12F494C4F63EED0BC4E888DFF584BE7D2D816586B9A4264CD850BFF6D2740D48815051A0D66B2C6D52B7F71CA6A6822ACB78F611F031D0F31B29F8F7C82DE8795DAD0A78F20A0C158D57307DA2BB022E8173A55705FD29D68A57A980A4A8A50AA38F194766F67D892E4FFF95162BD634B3243B2EC97981B62535F84C02C407EE586AAFD00BF4926CA361322725073A4D1FB7F2047C32550A5DE15> |-/g10 <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/g7 <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCT+Helvetica /Encoding getdup 47 /g9 putdup 48 /g4 putdup 49 /g13 putdup 50 /g14 putdup 51 /g15 putdup 52 /g10 putdup 53 /g7 putpop%ADOEndSubsetFont
/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 /g9 /g4 /g13 /g14 /g15 /g10 /g7 202{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [9.96038 0 0 -9.96039 0 0 ]msf56.2624 357.01 mo(/01/02/03440540")[5.53896 2.76998 23.378 5.53897 2.76998 23.4876 5.53899 2.76997 27.4219 28.0793 5.53896 2.76999 22.8302 5.53897 2.76996 0 ]xsh38.0154 346.958 mo
38.0154 208.093 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
%ADOBeginSubsetFont: AIWBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g17 <1C60D8A8C9B64EDFE336C703EA12FABA68C9F5D15F1A9B67653505BC29F8D56A4237858E054C3198877A> |-/g37 <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-/g31 <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/g35 <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/g34 <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/g6 <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCT+Helvetica /Encoding getdup 54 /g17 putdup 55 /g37 putdup 56 /g31 putdup 57 /g35 putdup 58 /g34 putdup 59 /g6 putpop%ADOEndSubsetFont
/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 /g9 /g4 /g13 /g14 /g15 /g10 /g7 /g17 /g37 /g31 /g35 /g34 /g6 196{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [0 -7.78154 -7.78153 0 0 0 ]msf6.11406 228.087 mo(")shVIXPCT+Helvetica*1 [0 -11.5167 -11.5167 0 0 0 ]msf11.1397 330.57 mo(67&89:#\(#;0;"#%&'\(\))[-7.68173 -5.75833 -6.40329 -6.40329 -3.20163 -5.75836 -3.20395 -3.20163 -3.20395 -6.40329 -3.20163 -6.40326 -6.40329 -3.20395 -8.95998 -6.40329 -7.68172 -3.20164 0 ]ysh43.8062 346.958 mo
38.0154 346.958 li
40.8563 343.134 mo
38.0154 343.134 li
40.8563 339.42 mo
38.0154 339.42 li
40.8563 335.596 mo
38.0154 335.596 li
40.8563 331.772 mo
38.0154 331.772 li
43.8062 328.057 mo
38.0154 328.057 li
40.8563 324.233 mo
38.0154 324.233 li
40.8563 320.409 mo
38.0154 320.409 li
40.8563 316.694 mo
38.0154 316.694 li
40.8563 312.87 mo
38.0154 312.87 li
43.8062 309.045 mo
38.0154 309.045 li
40.8563 305.332 mo
38.0154 305.332 li
40.8563 301.507 mo
38.0154 301.507 li
40.8563 297.683 mo
38.0154 297.683 li
40.8563 293.969 mo
38.0154 293.969 li
43.8062 290.144 mo
38.0154 290.144 li
40.8563 286.32 mo
38.0154 286.32 li
40.8563 282.605 mo
38.0154 282.605 li
40.8563 278.783 mo
38.0154 278.783 li
40.8563 274.958 mo
38.0154 274.958 li
43.8062 271.244 mo
38.0154 271.244 li
40.8563 267.419 mo
38.0154 267.419 li
40.8563 263.595 mo
38.0154 263.595 li
40.8563 259.88 mo
38.0154 259.88 li
40.8563 256.056 mo
38.0154 256.056 li
43.8062 252.232 mo
38.0154 252.232 li
40.8563 248.517 mo
38.0154 248.517 li
40.8563 244.694 mo
38.0154 244.694 li
40.8563 240.979 mo
38.0154 240.979 li
40.8563 237.155 mo
38.0154 237.155 li
43.8062 233.331 mo
38.0154 233.331 li
40.8563 229.616 mo
38.0154 229.616 li
40.8563 225.792 mo
38.0154 225.792 li
40.8563 221.968 mo
38.0154 221.968 li
40.8563 218.253 mo
38.0154 218.253 li
43.8062 214.429 mo
38.0154 214.429 li
43.8062 214.429 mo
38.0154 214.429 li
40.8563 210.606 mo
38.0154 210.606 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
%ADOBeginSubsetFont: AIWBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g11 <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-/g12 <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCT+Helvetica /Encoding getdup 60 /g11 putdup 61 /g12 putpop%ADOEndSubsetFont
/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 /g9 /g4 /g13 /g14 /g15 /g10 /g7 /g17 /g37 /g31 /g35 /g34 /g6 /g11 /g12 194{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [9.96038 0 0 -9.96039 0 0 ]msf30.0413 350.454 mo(;)sh24.4694 331.444 mo(5;)[5.53598 0 ]xsh24.4694 312.76 mo(";)[5.53598 0 ]xsh24.4694 293.749 mo(/;)[5.53598 0 ]xsh24.4694 274.848 mo(4;)[5.53598 0 ]xsh24.4694 255.836 mo(<;)[5.53598 0 ]xsh24.4694 236.825 mo(=;)[5.53598 0 ]xsh24.4694 217.814 mo(1;)[5.53598 0 ]xsh41.1844 335.596 mo
38.0154 335.596 li
38.0154 336.251 mo
38.0154 334.94 li
41.1844 335.596 mo
44.3533 335.596 li
44.3533 336.251 mo
44.3533 334.94 li
41.1844 335.596 mo
41.1844 328.822 li
40.5295 328.822 mo
41.8404 328.822 li
41.1844 335.596 mo
41.1844 340.074 li
40.5295 340.074 mo
41.8404 340.074 li
47.6313 318.551 mo
44.3533 318.551 li
44.3533 319.207 mo
44.3533 317.896 li
47.6313 318.551 mo
50.7991 318.551 li
50.7991 319.207 mo
50.7991 317.896 li
47.6313 318.551 mo
47.6313 309.156 li
46.9752 309.156 mo
48.2861 309.156 li
47.6313 318.551 mo
47.6313 325.762 li
46.9752 325.762 mo
48.2861 325.762 li
54.077 305.332 mo
50.7991 305.332 li
50.7991 305.878 mo
50.7991 304.676 li
54.077 305.332 mo
57.2448 305.332 li
57.2448 305.878 mo
57.2448 304.676 li
54.077 305.332 mo
54.077 294.405 li
53.4209 294.405 mo
54.7319 294.405 li
54.077 305.332 mo
54.077 314.072 li
53.4209 314.072 mo
54.7319 314.072 li
60.5227 318.551 mo
57.2448 318.551 li
57.2448 319.207 mo
57.2448 317.896 li
60.5227 318.551 mo
63.6917 318.551 li
63.6917 319.207 mo
63.6917 317.896 li
60.5227 318.551 mo
60.5227 309.156 li
59.8678 309.156 mo
61.1788 309.156 li
60.5227 318.551 mo
60.5227 325.762 li
59.8678 325.762 mo
61.1788 325.762 li
66.9696 309.045 mo
63.6917 309.045 li
63.6917 309.701 mo
63.6917 308.499 li
66.9696 309.045 mo
70.1374 309.045 li
70.1374 309.701 mo
70.1374 308.499 li
66.9696 309.045 mo
66.9696 298.557 li
66.3136 298.557 mo
67.6245 298.557 li
66.9696 309.045 mo
66.9696 317.459 li
66.3136 317.459 mo
67.6245 317.459 li
73.4154 305.332 mo
70.1374 305.332 li
70.1374 305.878 mo
70.1374 304.676 li
73.4154 305.332 mo
76.5832 305.332 li
76.5832 305.878 mo
76.5832 304.676 li
73.4154 305.332 mo
73.4154 294.405 li
72.7593 294.405 mo
73.9613 294.405 li
73.4154 305.332 mo
73.4154 314.072 li
72.7593 314.072 mo
73.9613 314.072 li
79.8611 284.463 mo
76.5832 284.463 li
76.5832 285.118 mo
76.5832 283.807 li
79.8611 284.463 mo
83.0301 284.463 li
83.0301 285.118 mo
83.0301 283.807 li
79.8611 284.463 mo
79.8611 271.571 li
79.2062 271.571 mo
80.4082 271.571 li
79.8611 284.463 mo
79.8611 295.28 li
79.2062 295.28 mo
80.4082 295.28 li
86.308 297.683 mo
83.0301 297.683 li
83.0301 298.339 mo
83.0301 297.137 li
86.308 297.683 mo
89.4758 297.683 li
89.4758 298.339 mo
89.4758 297.137 li
86.308 297.683 mo
86.308 286.102 li
85.6519 286.102 mo
86.8539 286.102 li
86.308 297.683 mo
86.308 307.298 li
85.6519 307.298 mo
86.8539 307.298 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
92.7537 282.605 mo
89.4758 282.605 li
89.4758 283.152 mo
89.4758 281.95 li
92.7537 282.605 mo
95.9215 282.605 li
95.9215 283.152 mo
95.9215 281.95 li
92.7537 282.605 mo
92.7537 269.495 li
92.0988 269.495 mo
93.2996 269.495 li
92.7537 282.605 mo
92.7537 293.532 li
92.0988 293.532 mo
93.2996 293.532 li
99.1994 274.958 mo
95.9215 274.958 li
95.9215 275.614 mo
95.9215 274.412 li
99.1994 274.958 mo
102.368 274.958 li
102.368 275.614 mo
102.368 274.412 li
99.1994 274.958 mo
99.1994 261.301 li
98.5446 261.301 mo
99.7466 261.301 li
99.1994 274.958 mo
99.1994 286.648 li
98.5446 286.648 mo
99.7466 286.648 li
105.646 284.463 mo
102.368 284.463 li
102.368 285.118 mo
102.368 283.807 li
105.646 284.463 mo
108.814 284.463 li
108.814 285.118 mo
108.814 283.807 li
105.646 284.463 mo
105.646 271.571 li
104.99 271.571 mo
106.192 271.571 li
105.646 284.463 mo
105.646 295.28 li
104.99 295.28 mo
106.192 295.28 li
112.092 271.244 mo
108.814 271.244 li
108.814 271.79 mo
108.814 270.588 li
112.092 271.244 mo
115.261 271.244 li
115.261 271.79 mo
115.261 270.588 li
112.092 271.244 mo
112.092 257.258 li
111.437 257.258 mo
112.638 257.258 li
112.092 271.244 mo
112.092 283.152 li
111.437 283.152 mo
112.638 283.152 li
118.539 231.474 mo
115.261 231.474 li
115.261 232.129 mo
115.261 230.818 li
118.539 231.474 mo
121.707 231.474 li
121.707 232.129 mo
121.707 230.818 li
118.539 231.474 mo
118.539 214.647 li
117.883 214.647 mo
119.085 214.647 li
118.539 231.474 mo
118.539 246.224 li
117.883 246.224 mo
119.085 246.224 li
124.876 240.979 mo
121.707 240.979 li
121.707 241.526 mo
121.707 240.324 li
124.876 240.979 mo
128.152 240.979 li
128.152 241.526 mo
128.152 240.324 li
124.876 240.979 mo
124.876 224.809 li
124.329 224.809 mo
125.531 224.809 li
124.876 240.979 mo
124.876 255.073 li
124.329 255.073 mo
125.531 255.073 li
131.321 246.552 mo
128.152 246.552 li
128.152 247.206 mo
128.152 246.004 li
131.321 246.552 mo
134.599 246.552 li
134.599 247.206 mo
134.599 246.004 li
131.321 246.552 mo
131.321 230.818 li
130.776 230.818 mo
131.978 230.818 li
131.321 246.552 mo
131.321 260.317 li
130.776 260.317 mo
131.978 260.317 li
137.767 278.783 mo
134.599 278.783 li
134.599 279.437 mo
134.599 278.127 li
137.767 278.783 mo
141.045 278.783 li
141.045 279.437 mo
141.045 278.127 li
137.767 278.783 mo
137.767 265.453 li
137.221 265.453 mo
138.423 265.453 li
137.767 278.783 mo
137.767 290.144 li
137.221 290.144 mo
138.423 290.144 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
144.214 286.32 mo
141.045 286.32 li
141.045 286.976 mo
141.045 285.774 li
144.214 286.32 mo
147.491 286.32 li
147.491 286.976 mo
147.491 285.774 li
144.214 286.32 mo
144.214 273.647 li
143.667 273.647 mo
144.869 273.647 li
144.214 286.32 mo
144.214 297.028 li
143.667 297.028 mo
144.869 297.028 li
150.66 299.65 mo
147.491 299.65 li
147.491 300.196 mo
147.491 298.994 li
150.66 299.65 mo
153.938 299.65 li
153.938 300.196 mo
153.938 298.994 li
150.66 299.65 mo
150.66 288.178 li
150.114 288.178 mo
151.316 288.178 li
150.66 299.65 mo
150.66 309.045 li
150.114 309.045 mo
151.316 309.045 li
157.106 292.002 mo
153.938 292.002 li
153.938 292.657 mo
153.938 291.455 li
157.106 292.002 mo
160.383 292.002 li
160.383 292.657 mo
160.383 291.455 li
157.106 292.002 mo
157.106 279.874 li
156.56 279.874 mo
157.762 279.874 li
157.106 292.002 mo
157.106 302.163 li
156.56 302.163 mo
157.762 302.163 li
163.552 307.189 mo
160.383 307.189 li
160.383 307.845 mo
160.383 306.534 li
163.552 307.189 mo
166.829 307.189 li
166.829 307.845 mo
166.829 306.534 li
163.552 307.189 mo
163.552 296.482 li
163.007 296.482 mo
164.207 296.482 li
163.552 307.189 mo
163.552 315.82 li
163.007 315.82 mo
164.207 315.82 li
169.998 309.045 mo
166.829 309.045 li
166.829 309.701 mo
166.829 308.499 li
169.998 309.045 mo
173.276 309.045 li
173.276 309.701 mo
173.276 308.499 li
169.998 309.045 mo
169.998 298.557 li
169.452 298.557 mo
170.654 298.557 li
169.998 309.045 mo
169.998 317.459 li
169.452 317.459 mo
170.654 317.459 li
176.445 322.375 mo
173.276 322.375 li
173.276 322.922 mo
173.276 321.72 li
176.445 322.375 mo
179.722 322.375 li
179.722 322.922 mo
179.722 321.72 li
176.445 322.375 mo
176.445 313.416 li
175.789 313.416 mo
177.1 313.416 li
176.445 322.375 mo
176.445 329.04 li
175.789 329.04 mo
177.1 329.04 li
182.891 329.914 mo
179.722 329.914 li
179.722 330.57 mo
179.722 329.259 li
182.891 329.914 mo
186.169 329.914 li
186.169 330.57 mo
186.169 329.259 li
182.891 329.914 mo
182.891 322.157 li
182.235 322.157 mo
183.546 322.157 li
182.891 329.914 mo
182.891 335.487 li
182.235 335.487 mo
183.546 335.487 li
189.337 337.453 mo
186.169 337.453 li
186.169 338.109 mo
186.169 336.907 li
189.337 337.453 mo
192.615 337.453 li
192.615 338.109 mo
192.615 336.907 li
189.337 337.453 mo
189.337 331.116 li
188.682 331.116 mo
189.993 331.116 li
189.337 337.453 mo
189.337 341.604 li
188.682 341.604 mo
189.993 341.604 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
195.783 331.772 mo
192.615 331.772 li
192.615 332.427 mo
192.615 331.225 li
195.783 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
195.783 331.772 mo
195.783 324.342 li
195.127 324.342 mo
196.438 324.342 li
195.783 331.772 mo
195.783 337.016 li
195.127 337.016 mo
196.438 337.016 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
202.229 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
202.229 331.772 mo
205.397 331.772 li
205.397 332.427 mo
205.397 331.225 li
202.229 331.772 mo
202.229 324.342 li
201.573 324.342 mo
202.885 324.342 li
202.229 331.772 mo
202.229 337.016 li
201.573 337.016 mo
202.885 337.016 li
208.675 337.453 mo
205.397 337.453 li
205.397 338.109 mo
205.397 336.907 li
208.675 337.453 mo
211.844 337.453 li
211.844 338.109 mo
211.844 336.907 li
208.675 337.453 mo
208.675 331.116 li
208.02 331.116 mo
209.331 331.116 li
208.675 337.453 mo
208.675 341.604 li
208.02 341.604 mo
209.331 341.604 li
215.122 345.1 mo
211.844 345.1 li
211.844 345.647 mo
211.844 344.445 li
215.122 345.1 mo
218.29 345.1 li
218.29 345.647 mo
218.29 344.445 li
215.122 345.1 mo
215.122 340.731 li
214.466 340.731 mo
215.777 340.731 li
215.122 345.1 mo
215.122 346.63 li
214.466 346.63 mo
215.777 346.63 li
221.568 343.134 mo
218.29 343.134 li
218.29 343.789 mo
218.29 342.589 li
221.568 343.134 mo
224.735 343.134 li
224.735 343.789 mo
224.735 342.589 li
221.568 343.134 mo
221.568 338.218 li
220.913 338.218 mo
222.224 338.218 li
221.568 343.134 mo
221.568 345.647 li
220.913 345.647 mo
222.224 345.647 li
228.013 345.1 mo
224.735 345.1 li
224.735 345.647 mo
224.735 344.445 li
228.013 345.1 mo
231.182 345.1 li
231.182 345.647 mo
231.182 344.445 li
228.013 345.1 mo
228.013 340.731 li
227.358 340.731 mo
228.669 340.731 li
228.013 345.1 mo
228.013 346.63 li
227.358 346.63 mo
228.669 346.63 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
229.324 345.1 mo
229.324 344.377 228.738 343.789 228.013 343.789 cv
227.29 343.789 226.702 344.377 226.702 345.1 cv
226.702 345.825 227.29 346.411 228.013 346.411 cv
228.738 346.411 229.324 345.825 229.324 345.1 cv
ef
222.879 343.135 mo
222.879 342.411 222.291 341.824 221.568 341.824 cv
220.844 341.824 220.257 342.411 220.257 343.135 cv
220.257 343.858 220.844 344.445 221.568 344.445 cv
222.291 344.445 222.879 343.858 222.879 343.135 cv
ef
216.433 345.1 mo
216.433 344.377 215.845 343.789 215.122 343.789 cv
214.397 343.789 213.811 344.377 213.811 345.1 cv
213.811 345.825 214.397 346.411 215.122 346.411 cv
215.845 346.411 216.433 345.825 216.433 345.1 cv
ef
209.986 337.453 mo
209.986 336.729 209.4 336.142 208.675 336.142 cv
207.951 336.142 207.364 336.729 207.364 337.453 cv
207.364 338.177 207.951 338.764 208.675 338.764 cv
209.4 338.764 209.986 338.177 209.986 337.453 cv
ef
203.54 331.772 mo
203.54 331.047 202.953 330.461 202.229 330.461 cv
201.506 330.461 200.918 331.047 200.918 331.772 cv
200.918 332.495 201.506 333.083 202.229 333.083 cv
202.953 333.083 203.54 332.495 203.54 331.772 cv
ef
197.095 331.772 mo
197.095 331.047 196.507 330.461 195.784 330.461 cv
195.059 330.461 194.473 331.047 194.473 331.772 cv
194.473 332.495 195.059 333.083 195.784 333.083 cv
196.507 333.083 197.095 332.495 197.095 331.772 cv
ef
190.648 337.453 mo
190.648 336.729 190.061 336.142 189.337 336.142 cv
188.613 336.142 188.026 336.729 188.026 337.453 cv
188.026 338.177 188.613 338.764 189.337 338.764 cv
190.061 338.764 190.648 338.177 190.648 337.453 cv
ef
184.202 329.914 mo
184.202 329.19 183.615 328.603 182.891 328.603 cv
182.167 328.603 181.58 329.19 181.58 329.914 cv
181.58 330.639 182.167 331.225 182.891 331.225 cv
183.615 331.225 184.202 330.639 184.202 329.914 cv
ef
177.756 322.375 mo
177.756 321.652 177.169 321.064 176.445 321.064 cv
175.72 321.064 175.134 321.652 175.134 322.375 cv
175.134 323.1 175.72 323.686 176.445 323.686 cv
177.169 323.686 177.756 323.1 177.756 322.375 cv
ef
171.309 309.046 mo
171.309 308.322 170.723 307.734 169.998 307.734 cv
169.275 307.734 168.687 308.322 168.687 309.046 cv
168.687 309.77 169.275 310.358 169.998 310.358 cv
170.723 310.358 171.309 309.77 171.309 309.046 cv
ef
164.863 307.189 mo
164.863 306.465 164.276 305.878 163.553 305.878 cv
162.829 305.878 162.242 306.465 162.242 307.189 cv
162.242 307.912 162.829 308.499 163.553 308.499 cv
164.276 308.499 164.863 307.912 164.863 307.189 cv
ef
158.418 292.002 mo
158.418 291.277 157.83 290.691 157.106 290.691 cv
156.382 290.691 155.795 291.277 155.795 292.002 cv
155.795 292.726 156.382 293.313 157.106 293.313 cv
157.83 293.313 158.418 292.726 158.418 292.002 cv
ef
151.971 299.65 mo
151.971 298.926 151.383 298.339 150.66 298.339 cv
149.936 298.339 149.349 298.926 149.349 299.65 cv
149.349 300.373 149.936 300.961 150.66 300.961 cv
151.383 300.961 151.971 300.373 151.971 299.65 cv
ef
145.525 286.32 mo
145.525 285.597 144.938 285.009 144.214 285.009 cv
143.489 285.009 142.903 285.597 142.903 286.32 cv
142.903 287.044 143.489 287.632 144.214 287.632 cv
144.938 287.632 145.525 287.044 145.525 286.32 cv
ef
139.078 278.783 mo
139.078 278.058 138.492 277.47 137.767 277.47 cv
137.044 277.47 136.456 278.058 136.456 278.783 cv
136.456 279.506 137.044 280.094 137.767 280.094 cv
138.492 280.094 139.078 279.506 139.078 278.783 cv
ef
132.632 246.552 mo
132.632 245.827 132.045 245.24 131.322 245.24 cv
130.598 245.24 130.011 245.827 130.011 246.552 cv
130.011 247.275 130.598 247.863 131.322 247.863 cv
132.045 247.863 132.632 247.275 132.632 246.552 cv
ef
126.187 240.979 mo
126.187 240.255 125.599 239.668 124.876 239.668 cv
124.151 239.668 123.564 240.255 123.564 240.979 cv
123.564 241.703 124.151 242.29 124.876 242.29 cv
125.599 242.29 126.187 241.703 126.187 240.979 cv
ef
119.85 231.474 mo
119.85 230.749 119.263 230.163 118.539 230.163 cv
117.814 230.163 117.227 230.749 117.227 231.474 cv
117.227 232.198 117.814 232.785 118.539 232.785 cv
119.263 232.785 119.85 232.198 119.85 231.474 cv
ef
113.403 271.244 mo
113.403 270.519 112.816 269.932 112.092 269.932 cv
111.369 269.932 110.781 270.519 110.781 271.244 cv
110.781 271.967 111.369 272.555 112.092 272.555 cv
112.816 272.555 113.403 271.967 113.403 271.244 cv
ef
106.957 284.463 mo
106.957 283.739 106.37 283.152 105.646 283.152 cv
104.922 283.152 104.336 283.739 104.336 284.463 cv
104.336 285.187 104.922 285.774 105.646 285.774 cv
106.37 285.774 106.957 285.187 106.957 284.463 cv
ef
100.51 274.958 mo
100.51 274.234 99.9242 273.647 99.1995 273.647 cv
98.4759 273.647 97.8885 274.234 97.8885 274.958 cv
97.8885 275.682 98.4759 276.268 99.1995 276.268 cv
99.9242 276.268 100.51 275.682 100.51 274.958 cv
ef
94.0647 282.605 mo
94.0647 281.882 93.4773 281.294 92.7537 281.294 cv
92.0302 281.294 91.4428 281.882 91.4428 282.605 cv
91.4428 283.33 92.0302 283.916 92.7537 283.916 cv
93.4773 283.916 94.0647 283.33 94.0647 282.605 cv
ef
87.619 297.683 mo
87.619 296.959 87.0316 296.372 86.308 296.372 cv
85.5833 296.372 84.9971 296.959 84.9971 297.683 cv
84.9971 298.408 85.5833 298.994 86.308 298.994 cv
87.0316 298.994 87.619 298.408 87.619 297.683 cv
ef
81.172 284.463 mo
81.172 283.739 80.5859 283.152 79.8611 283.152 cv
79.1376 283.152 78.5502 283.739 78.5502 284.463 cv
78.5502 285.187 79.1376 285.774 79.8611 285.774 cv
80.5859 285.774 81.172 285.187 81.172 284.463 cv
ef
74.7263 305.332 mo
74.7263 304.607 74.1389 304.021 73.4154 304.021 cv
72.6918 304.021 72.1044 304.607 72.1044 305.332 cv
72.1044 306.055 72.6918 306.643 73.4154 306.643 cv
74.1389 306.643 74.7263 306.055 74.7263 305.332 cv
ef
68.2806 309.046 mo
68.2806 308.322 67.6932 307.734 66.9697 307.734 cv
66.2449 307.734 65.6587 308.322 65.6587 309.046 cv
65.6587 309.77 66.2449 310.358 66.9697 310.358 cv
67.6932 310.358 68.2806 309.77 68.2806 309.046 cv
ef
61.8337 318.551 mo
61.8337 317.828 61.2475 317.24 60.5227 317.24 cv
59.7992 317.24 59.2118 317.828 59.2118 318.551 cv
59.2118 319.276 59.7992 319.862 60.5227 319.862 cv
61.2475 319.862 61.8337 319.276 61.8337 318.551 cv
ef
55.3879 305.332 mo
55.3879 304.607 54.8006 304.021 54.077 304.021 cv
53.3535 304.021 52.7661 304.607 52.7661 305.332 cv
52.7661 306.055 53.3535 306.643 54.077 306.643 cv
54.8006 306.643 55.3879 306.055 55.3879 305.332 cv
ef
48.9422 318.551 mo
48.9422 317.828 48.3548 317.24 47.6313 317.24 cv
46.9065 317.24 46.3192 317.828 46.3192 318.551 cv
46.3192 319.276 46.9065 319.862 47.6313 319.862 cv
48.3548 319.862 48.9422 319.276 48.9422 318.551 cv
ef
42.4953 335.596 mo
42.4953 334.872 41.9091 334.284 41.1844 334.284 cv
40.4608 334.284 39.8734 334.872 39.8734 335.596 cv
39.8734 336.319 40.4608 336.907 41.1844 336.907 cv
41.9091 336.907 42.4953 336.319 42.4953 335.596 cv
ef
38.0154 341.604 mo
cp
38.0154 341.604 mo
41.1844 335.814 li
44.3533 330.461 li
47.6313 325.434 li
50.7991 320.736 li
54.077 316.475 li
57.2448 312.434 li
60.5227 308.719 li
63.6917 305.332 li
66.9696 302.272 li
70.1374 299.432 li
73.4154 296.809 li
76.5832 294.515 li
83.0301 290.363 li
89.4758 286.866 li
95.9215 283.261 li
99.1994 281.185 li
102.368 278.672 li
104.007 277.034 li
105.646 275.286 li
107.175 273.101 li
108.814 270.478 li
110.453 267.419 li
112.092 263.814 li
113.622 259.553 li
115.261 254.854 li
118.539 244.257 li
120.068 239.231 li
120.942 237.046 li
121.707 235.188 li
122.472 233.768 li
123.346 232.894 li
124.111 232.566 li
124.876 232.894 li
125.75 233.768 li
126.514 235.188 li
127.389 237.155 li
128.152 239.559 li
128.918 242.181 li
129.791 245.13 li
131.321 251.358 li
132.96 257.586 li
134.599 263.595 li
136.238 269.058 li
137.767 273.866 li
139.406 278.235 li
141.045 282.059 li
142.684 285.337 li
144.214 288.287 li
145.853 291.019 li
147.491 293.422 li
150.66 297.574 li
153.938 301.18 li
157.106 304.458 li
160.383 307.408 li
166.829 312.87 li
173.276 317.895 li
179.722 322.594 li
186.169 326.964 li
192.615 331.007 li
199.06 334.612 li
205.397 337.89 li
211.844 340.731 li
218.29 342.915 li
224.735 344.554 li
231.182 345.428 li
0 .985 1 .001 cmyk
.554 lw
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
38.0154 342.261 mo
cp
38.0154 342.261 mo
41.1844 336.579 li
44.3533 331.225 li
47.6313 326.309 li
50.7991 321.72 li
54.077 317.459 li
57.2448 313.525 li
60.5227 310.03 li
63.6917 306.752 li
66.9696 303.802 li
70.1374 301.289 li
73.4154 298.885 li
76.5832 296.919 li
79.8611 295.171 li
83.0301 293.641 li
86.308 292.439 li
89.4758 291.455 li
92.7537 290.691 li
95.9215 290.144 li
99.1994 289.817 li
102.368 289.707 li
105.646 289.817 li
108.814 290.144 li
112.092 290.582 li
115.261 291.237 li
118.539 292.111 li
121.707 292.985 li
124.876 294.078 li
128.152 295.389 li
134.599 298.121 li
141.045 301.398 li
147.491 304.895 li
153.938 308.719 li
160.383 312.76 li
166.829 316.803 li
173.276 320.955 li
179.722 324.998 li
186.169 328.931 li
192.615 332.646 li
199.06 336.033 li
205.397 339.092 li
208.675 340.511 li
211.844 341.713 li
215.122 342.806 li
218.29 343.789 li
221.568 344.663 li
224.735 345.319 li
228.013 345.865 li
231.182 346.193 li
.918 .756 0 0 cmyk
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
39.9824 335.596 mo
38.0154 335.596 li
38.0154 336.251 mo
38.0154 334.94 li
42.3863 335.596 mo
44.3533 335.596 li
44.3533 336.251 mo
44.3533 334.94 li
41.1844 334.394 mo
41.1844 328.822 li
40.5295 328.822 mo
41.8404 328.822 li
41.1844 336.798 mo
41.1844 340.074 li
40.5295 340.074 mo
41.8404 340.074 li
46.4293 318.551 mo
44.3533 318.551 li
44.3533 319.207 mo
44.3533 317.896 li
48.8321 318.551 mo
50.7991 318.551 li
50.7991 319.207 mo
50.7991 317.896 li
47.6313 317.349 mo
47.6313 309.156 li
46.9752 309.156 mo
48.2861 309.156 li
47.6313 319.753 mo
47.6313 325.762 li
46.9752 325.762 mo
48.2861 325.762 li
52.875 305.332 mo
50.7991 305.332 li
50.7991 305.878 mo
50.7991 304.676 li
55.279 305.332 mo
57.2448 305.332 li
57.2448 305.878 mo
57.2448 304.676 li
54.077 304.021 mo
54.077 294.405 li
53.4209 294.405 mo
54.7319 294.405 li
54.077 306.534 mo
54.077 314.072 li
53.4209 314.072 mo
54.7319 314.072 li
59.2118 318.551 mo
57.2448 318.551 li
57.2448 319.207 mo
57.2448 317.896 li
61.7247 318.551 mo
63.6917 318.551 li
63.6917 319.207 mo
63.6917 317.896 li
60.5227 317.349 mo
60.5227 309.156 li
59.8678 309.156 mo
61.1788 309.156 li
60.5227 319.753 mo
60.5227 325.762 li
59.8678 325.762 mo
61.1788 325.762 li
65.6587 309.045 mo
63.6917 309.045 li
63.6917 309.701 mo
63.6917 308.499 li
68.1704 309.045 mo
70.1374 309.045 li
70.1374 309.701 mo
70.1374 308.499 li
66.9696 307.845 mo
66.9696 298.557 li
66.3136 298.557 mo
67.6245 298.557 li
66.9696 310.358 mo
66.9696 317.459 li
66.3136 317.459 mo
67.6245 317.459 li
72.1044 305.332 mo
70.1374 305.332 li
70.1374 305.878 mo
70.1374 304.676 li
74.6174 305.332 mo
76.5832 305.332 li
76.5832 305.878 mo
76.5832 304.676 li
73.4154 304.021 mo
73.4154 294.405 li
72.7593 294.405 mo
73.9613 294.405 li
73.4154 306.534 mo
73.4154 314.072 li
72.7593 314.072 mo
73.9613 314.072 li
78.5502 284.463 mo
76.5832 284.463 li
76.5832 285.118 mo
76.5832 283.807 li
81.0631 284.463 mo
83.0301 284.463 li
83.0301 285.118 mo
83.0301 283.807 li
79.8611 283.261 mo
79.8611 271.571 li
79.2062 271.571 mo
80.4082 271.571 li
79.8611 285.665 mo
79.8611 295.28 li
79.2062 295.28 mo
80.4082 295.28 li
84.9971 297.683 mo
83.0301 297.683 li
83.0301 298.339 mo
83.0301 297.137 li
87.51 297.683 mo
89.4758 297.683 li
89.4758 298.339 mo
89.4758 297.137 li
86.308 296.482 mo
86.308 286.102 li
85.6519 286.102 mo
86.8539 286.102 li
86.308 298.994 mo
86.308 307.298 li
85.6519 307.298 mo
86.8539 307.298 li
1 /0 /CSD get_res sepcs
1 sep
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
91.4428 282.605 mo
89.4758 282.605 li
89.4758 283.152 mo
89.4758 281.95 li
93.9557 282.605 mo
95.9215 282.605 li
95.9215 283.152 mo
95.9215 281.95 li
92.7537 281.294 mo
92.7537 269.495 li
92.0988 269.495 mo
93.2996 269.495 li
92.7537 283.807 mo
92.7537 293.532 li
92.0988 293.532 mo
93.2996 293.532 li
97.8885 274.958 mo
95.9215 274.958 li
95.9215 275.614 mo
95.9215 274.412 li
100.401 274.958 mo
102.368 274.958 li
102.368 275.614 mo
102.368 274.412 li
99.1994 273.756 mo
99.1994 261.301 li
98.5446 261.301 mo
99.7466 261.301 li
99.1994 276.268 mo
99.1994 286.648 li
98.5446 286.648 mo
99.7466 286.648 li
104.335 284.463 mo
102.368 284.463 li
102.368 285.118 mo
102.368 283.807 li
106.848 284.463 mo
108.814 284.463 li
108.814 285.118 mo
108.814 283.807 li
105.646 283.261 mo
105.646 271.571 li
104.99 271.571 mo
106.192 271.571 li
105.646 285.665 mo
105.646 295.28 li
104.99 295.28 mo
106.192 295.28 li
110.781 271.244 mo
108.814 271.244 li
108.814 271.79 mo
108.814 270.588 li
113.294 271.244 mo
115.261 271.244 li
115.261 271.79 mo
115.261 270.588 li
112.092 269.932 mo
112.092 257.258 li
111.437 257.258 mo
112.638 257.258 li
112.092 272.445 mo
112.092 283.152 li
111.437 283.152 mo
112.638 283.152 li
117.227 231.474 mo
115.261 231.474 li
115.261 232.129 mo
115.261 230.818 li
119.74 231.474 mo
121.707 231.474 li
121.707 232.129 mo
121.707 230.818 li
118.539 230.163 mo
118.539 214.647 li
117.883 214.647 mo
119.085 214.647 li
118.539 232.676 mo
118.539 246.224 li
117.883 246.224 mo
119.085 246.224 li
123.674 240.979 mo
121.707 240.979 li
121.707 241.526 mo
121.707 240.324 li
126.187 240.979 mo
128.152 240.979 li
128.152 241.526 mo
128.152 240.324 li
124.876 239.668 mo
124.876 224.809 li
124.329 224.809 mo
125.531 224.809 li
124.876 242.181 mo
124.876 255.073 li
124.329 255.073 mo
125.531 255.073 li
130.119 246.552 mo
128.152 246.552 li
128.152 247.206 mo
128.152 246.004 li
132.632 246.552 mo
134.599 246.552 li
134.599 247.206 mo
134.599 246.004 li
131.321 245.348 mo
131.321 230.818 li
130.776 230.818 mo
131.978 230.818 li
131.321 247.863 mo
131.321 260.317 li
130.776 260.317 mo
131.978 260.317 li
136.566 278.783 mo
134.599 278.783 li
134.599 279.437 mo
134.599 278.127 li
139.078 278.783 mo
141.045 278.783 li
141.045 279.437 mo
141.045 278.127 li
137.767 277.581 mo
137.767 265.453 li
137.221 265.453 mo
138.423 265.453 li
137.767 279.983 mo
137.767 290.144 li
137.221 290.144 mo
138.423 290.144 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
143.012 286.32 mo
141.045 286.32 li
141.045 286.976 mo
141.045 285.774 li
145.525 286.32 mo
147.491 286.32 li
147.491 286.976 mo
147.491 285.774 li
144.214 285.118 mo
144.214 273.647 li
143.667 273.647 mo
144.869 273.647 li
144.214 287.632 mo
144.214 297.028 li
143.667 297.028 mo
144.869 297.028 li
149.458 299.65 mo
147.491 299.65 li
147.491 300.196 mo
147.491 298.994 li
151.971 299.65 mo
153.938 299.65 li
153.938 300.196 mo
153.938 298.994 li
150.66 298.339 mo
150.66 288.178 li
150.114 288.178 mo
151.316 288.178 li
150.66 300.852 mo
150.66 309.045 li
150.114 309.045 mo
151.316 309.045 li
155.905 292.002 mo
153.938 292.002 li
153.938 292.657 mo
153.938 291.455 li
158.418 292.002 mo
160.383 292.002 li
160.383 292.657 mo
160.383 291.455 li
157.106 290.8 mo
157.106 279.874 li
156.56 279.874 mo
157.762 279.874 li
157.106 293.313 mo
157.106 302.163 li
156.56 302.163 mo
157.762 302.163 li
162.35 307.189 mo
160.383 307.189 li
160.383 307.845 mo
160.383 306.534 li
164.863 307.189 mo
166.829 307.189 li
166.829 307.845 mo
166.829 306.534 li
163.552 305.987 mo
163.552 296.482 li
163.007 296.482 mo
164.207 296.482 li
163.552 308.391 mo
163.552 315.82 li
163.007 315.82 mo
164.207 315.82 li
168.796 309.045 mo
166.829 309.045 li
166.829 309.701 mo
166.829 308.499 li
171.309 309.045 mo
173.276 309.045 li
173.276 309.701 mo
173.276 308.499 li
169.998 307.845 mo
169.998 298.557 li
169.452 298.557 mo
170.654 298.557 li
169.998 310.358 mo
169.998 317.459 li
169.452 317.459 mo
170.654 317.459 li
175.243 322.375 mo
173.276 322.375 li
173.276 322.922 mo
173.276 321.72 li
177.756 322.375 mo
179.722 322.375 li
179.722 322.922 mo
179.722 321.72 li
176.445 321.064 mo
176.445 313.416 li
175.789 313.416 mo
177.1 313.416 li
176.445 323.577 mo
176.445 329.04 li
175.789 329.04 mo
177.1 329.04 li
181.689 329.914 mo
179.722 329.914 li
179.722 330.57 mo
179.722 329.259 li
184.202 329.914 mo
186.169 329.914 li
186.169 330.57 mo
186.169 329.259 li
182.891 328.712 mo
182.891 322.157 li
182.235 322.157 mo
183.546 322.157 li
182.891 331.116 mo
182.891 335.487 li
182.235 335.487 mo
183.546 335.487 li
188.135 337.453 mo
186.169 337.453 li
186.169 338.109 mo
186.169 336.907 li
190.539 337.453 mo
192.615 337.453 li
192.615 338.109 mo
192.615 336.907 li
189.337 336.251 mo
189.337 331.116 li
188.682 331.116 mo
189.993 331.116 li
189.337 338.764 mo
189.337 341.604 li
188.682 341.604 mo
189.993 341.604 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
194.581 331.772 mo
192.615 331.772 li
192.615 332.427 mo
192.615 331.225 li
196.984 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
195.783 330.57 mo
195.783 324.342 li
195.127 324.342 mo
196.438 324.342 li
195.783 333.083 mo
195.783 337.016 li
195.127 337.016 mo
196.438 337.016 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
201.027 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
203.431 331.772 mo
205.397 331.772 li
205.397 332.427 mo
205.397 331.225 li
202.229 330.57 mo
202.229 324.342 li
201.573 324.342 mo
202.885 324.342 li
202.229 333.083 mo
202.229 337.016 li
201.573 337.016 mo
202.885 337.016 li
207.474 337.453 mo
205.397 337.453 li
205.397 338.109 mo
205.397 336.907 li
209.877 337.453 mo
211.844 337.453 li
211.844 338.109 mo
211.844 336.907 li
208.675 336.251 mo
208.675 331.116 li
208.02 331.116 mo
209.331 331.116 li
208.675 338.764 mo
208.675 341.604 li
208.02 341.604 mo
209.331 341.604 li
213.92 345.1 mo
211.844 345.1 li
211.844 345.647 mo
211.844 344.445 li
216.324 345.1 mo
218.29 345.1 li
218.29 345.647 mo
218.29 344.445 li
215.122 343.789 mo
215.122 340.731 li
214.466 340.731 mo
215.777 340.731 li
215.122 346.302 mo
215.122 346.63 li
214.466 346.63 mo
215.777 346.63 li
220.257 343.134 mo
218.29 343.134 li
218.29 343.789 mo
218.29 342.589 li
222.77 343.134 mo
224.735 343.134 li
224.735 343.789 mo
224.735 342.589 li
221.568 341.932 mo
221.568 338.218 li
220.913 338.218 mo
222.224 338.218 li
221.568 344.445 mo
221.568 345.647 li
220.913 345.647 mo
222.224 345.647 li
226.702 345.1 mo
224.735 345.1 li
224.735 345.647 mo
224.735 344.445 li
229.215 345.1 mo
231.182 345.1 li
231.182 345.647 mo
231.182 344.445 li
228.013 343.789 mo
228.013 340.731 li
227.358 340.731 mo
228.669 340.731 li
228.013 346.302 mo
228.013 346.63 li
227.358 346.63 mo
228.669 346.63 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
229.324 345.1 mo
229.324 344.377 228.738 343.789 228.013 343.789 cv
227.29 343.789 226.702 344.377 226.702 345.1 cv
226.702 345.825 227.29 346.411 228.013 346.411 cv
228.738 346.411 229.324 345.825 229.324 345.1 cv
ef
222.879 343.135 mo
222.879 342.411 222.291 341.824 221.568 341.824 cv
220.844 341.824 220.257 342.411 220.257 343.135 cv
220.257 343.858 220.844 344.445 221.568 344.445 cv
222.291 344.445 222.879 343.858 222.879 343.135 cv
ef
216.433 345.1 mo
216.433 344.377 215.845 343.789 215.122 343.789 cv
214.397 343.789 213.811 344.377 213.811 345.1 cv
213.811 345.825 214.397 346.411 215.122 346.411 cv
215.845 346.411 216.433 345.825 216.433 345.1 cv
ef
209.986 337.453 mo
209.986 336.729 209.4 336.142 208.675 336.142 cv
207.951 336.142 207.364 336.729 207.364 337.453 cv
207.364 338.177 207.951 338.764 208.675 338.764 cv
209.4 338.764 209.986 338.177 209.986 337.453 cv
ef
203.54 331.772 mo
203.54 331.047 202.953 330.461 202.229 330.461 cv
201.506 330.461 200.918 331.047 200.918 331.772 cv
200.918 332.495 201.506 333.083 202.229 333.083 cv
202.953 333.083 203.54 332.495 203.54 331.772 cv
ef
197.095 331.772 mo
197.095 331.047 196.507 330.461 195.784 330.461 cv
195.059 330.461 194.473 331.047 194.473 331.772 cv
194.473 332.495 195.059 333.083 195.784 333.083 cv
196.507 333.083 197.095 332.495 197.095 331.772 cv
ef
190.648 337.453 mo
190.648 336.729 190.061 336.142 189.337 336.142 cv
188.613 336.142 188.026 336.729 188.026 337.453 cv
188.026 338.177 188.613 338.764 189.337 338.764 cv
190.061 338.764 190.648 338.177 190.648 337.453 cv
ef
184.202 329.914 mo
184.202 329.19 183.615 328.603 182.891 328.603 cv
182.167 328.603 181.58 329.19 181.58 329.914 cv
181.58 330.639 182.167 331.225 182.891 331.225 cv
183.615 331.225 184.202 330.639 184.202 329.914 cv
ef
177.756 322.375 mo
177.756 321.652 177.169 321.064 176.445 321.064 cv
175.72 321.064 175.134 321.652 175.134 322.375 cv
175.134 323.1 175.72 323.686 176.445 323.686 cv
177.169 323.686 177.756 323.1 177.756 322.375 cv
ef
171.309 309.046 mo
171.309 308.322 170.723 307.734 169.998 307.734 cv
169.275 307.734 168.687 308.322 168.687 309.046 cv
168.687 309.77 169.275 310.358 169.998 310.358 cv
170.723 310.358 171.309 309.77 171.309 309.046 cv
ef
164.863 307.189 mo
164.863 306.465 164.276 305.878 163.553 305.878 cv
162.829 305.878 162.242 306.465 162.242 307.189 cv
162.242 307.912 162.829 308.499 163.553 308.499 cv
164.276 308.499 164.863 307.912 164.863 307.189 cv
ef
158.418 292.002 mo
158.418 291.277 157.83 290.691 157.106 290.691 cv
156.382 290.691 155.795 291.277 155.795 292.002 cv
155.795 292.726 156.382 293.313 157.106 293.313 cv
157.83 293.313 158.418 292.726 158.418 292.002 cv
ef
151.971 299.65 mo
151.971 298.926 151.383 298.339 150.66 298.339 cv
149.936 298.339 149.349 298.926 149.349 299.65 cv
149.349 300.373 149.936 300.961 150.66 300.961 cv
151.383 300.961 151.971 300.373 151.971 299.65 cv
ef
145.525 286.32 mo
145.525 285.597 144.938 285.009 144.214 285.009 cv
143.489 285.009 142.903 285.597 142.903 286.32 cv
142.903 287.044 143.489 287.632 144.214 287.632 cv
144.938 287.632 145.525 287.044 145.525 286.32 cv
ef
139.078 278.783 mo
139.078 278.058 138.492 277.47 137.767 277.47 cv
137.044 277.47 136.456 278.058 136.456 278.783 cv
136.456 279.506 137.044 280.094 137.767 280.094 cv
138.492 280.094 139.078 279.506 139.078 278.783 cv
ef
132.632 246.552 mo
132.632 245.827 132.045 245.24 131.322 245.24 cv
130.598 245.24 130.011 245.827 130.011 246.552 cv
130.011 247.275 130.598 247.863 131.322 247.863 cv
132.045 247.863 132.632 247.275 132.632 246.552 cv
ef
126.187 240.979 mo
126.187 240.255 125.599 239.668 124.876 239.668 cv
124.151 239.668 123.564 240.255 123.564 240.979 cv
123.564 241.703 124.151 242.29 124.876 242.29 cv
125.599 242.29 126.187 241.703 126.187 240.979 cv
ef
119.85 231.474 mo
119.85 230.749 119.263 230.163 118.539 230.163 cv
117.814 230.163 117.227 230.749 117.227 231.474 cv
117.227 232.198 117.814 232.785 118.539 232.785 cv
119.263 232.785 119.85 232.198 119.85 231.474 cv
ef
113.403 271.244 mo
113.403 270.519 112.816 269.932 112.092 269.932 cv
111.369 269.932 110.781 270.519 110.781 271.244 cv
110.781 271.967 111.369 272.555 112.092 272.555 cv
112.816 272.555 113.403 271.967 113.403 271.244 cv
ef
106.957 284.463 mo
106.957 283.739 106.37 283.152 105.646 283.152 cv
104.922 283.152 104.336 283.739 104.336 284.463 cv
104.336 285.187 104.922 285.774 105.646 285.774 cv
106.37 285.774 106.957 285.187 106.957 284.463 cv
ef
100.51 274.958 mo
100.51 274.234 99.9242 273.647 99.1995 273.647 cv
98.4759 273.647 97.8885 274.234 97.8885 274.958 cv
97.8885 275.682 98.4759 276.268 99.1995 276.268 cv
99.9242 276.268 100.51 275.682 100.51 274.958 cv
ef
94.0647 282.605 mo
94.0647 281.882 93.4773 281.294 92.7537 281.294 cv
92.0302 281.294 91.4428 281.882 91.4428 282.605 cv
91.4428 283.33 92.0302 283.916 92.7537 283.916 cv
93.4773 283.916 94.0647 283.33 94.0647 282.605 cv
ef
87.619 297.683 mo
87.619 296.959 87.0316 296.372 86.308 296.372 cv
85.5833 296.372 84.9971 296.959 84.9971 297.683 cv
84.9971 298.408 85.5833 298.994 86.308 298.994 cv
87.0316 298.994 87.619 298.408 87.619 297.683 cv
ef
81.172 284.463 mo
81.172 283.739 80.5859 283.152 79.8611 283.152 cv
79.1376 283.152 78.5502 283.739 78.5502 284.463 cv
78.5502 285.187 79.1376 285.774 79.8611 285.774 cv
80.5859 285.774 81.172 285.187 81.172 284.463 cv
ef
74.7263 305.332 mo
74.7263 304.607 74.1389 304.021 73.4154 304.021 cv
72.6918 304.021 72.1044 304.607 72.1044 305.332 cv
72.1044 306.055 72.6918 306.643 73.4154 306.643 cv
74.1389 306.643 74.7263 306.055 74.7263 305.332 cv
ef
68.2806 309.046 mo
68.2806 308.322 67.6932 307.734 66.9697 307.734 cv
66.2449 307.734 65.6587 308.322 65.6587 309.046 cv
65.6587 309.77 66.2449 310.358 66.9697 310.358 cv
67.6932 310.358 68.2806 309.77 68.2806 309.046 cv
ef
61.8337 318.551 mo
61.8337 317.828 61.2475 317.24 60.5227 317.24 cv
59.7992 317.24 59.2118 317.828 59.2118 318.551 cv
59.2118 319.276 59.7992 319.862 60.5227 319.862 cv
61.2475 319.862 61.8337 319.276 61.8337 318.551 cv
ef
55.3879 305.332 mo
55.3879 304.607 54.8006 304.021 54.077 304.021 cv
53.3535 304.021 52.7661 304.607 52.7661 305.332 cv
52.7661 306.055 53.3535 306.643 54.077 306.643 cv
54.8006 306.643 55.3879 306.055 55.3879 305.332 cv
ef
48.9422 318.551 mo
48.9422 317.828 48.3548 317.24 47.6313 317.24 cv
46.9065 317.24 46.3192 317.828 46.3192 318.551 cv
46.3192 319.276 46.9065 319.862 47.6313 319.862 cv
48.3548 319.862 48.9422 319.276 48.9422 318.551 cv
ef
42.4953 335.596 mo
42.4953 334.872 41.9091 334.284 41.1844 334.284 cv
40.4608 334.284 39.8734 334.872 39.8734 335.596 cv
39.8734 336.319 40.4608 336.907 41.1844 336.907 cv
41.9091 336.907 42.4953 336.319 42.4953 335.596 cv
ef
38.0154 346.958 mo
231.182 346.958 li
.277 lw
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf181.361 370.668 mo(!)shVIXPCT+Helvetica*1 [7.78153 0 0 -7.78154 0 0 ]msf177.319 365.751 mo(")shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf134.382 370.668 mo(!#$%&'\(\))[3.83614 3.20277 3.83612 8.96114 6.40443 7.68286 3.20279 0 ]xshVIXPCU+Symbol*1 [11.5167 0 0 -11.5167 0 0 ]msf126.296 370.668 mo(y)shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf117.229 370.668 mo(*\()[5.75833 0 ]xshVIXPCU+Symbol*1 [11.5167 0 0 -11.5167 0 0 ]msf111 370.668 mo(p)shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf107.613 370.668 mo($)shVIXPCT+Helvetica*1 [7.78153 0 0 -7.78154 0 0 ]msf92.645 373.181 mo(+,-)[6.48118 4.32575 0 ]xshVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf83.5765 370.668 mo(.)sh63.2547 342.806 mo
63.2547 346.958 li
69.5915 344.882 mo
69.5915 346.958 li
75.9283 344.882 mo
75.9283 346.958 li
82.2651 344.882 mo
82.2651 346.958 li
88.6018 344.882 mo
88.6018 346.958 li
94.9386 342.806 mo
94.9386 346.958 li
101.275 344.882 mo
101.275 346.958 li
107.612 344.882 mo
107.612 346.958 li
113.95 344.882 mo
113.95 346.958 li
120.287 344.882 mo
120.287 346.958 li
126.624 342.806 mo
126.624 346.958 li
132.96 344.882 mo
132.96 346.958 li
139.297 344.882 mo
139.297 346.958 li
145.634 344.882 mo
145.634 346.958 li
151.971 344.882 mo
151.971 346.958 li
158.308 342.806 mo
158.308 346.958 li
164.644 344.882 mo
164.644 346.958 li
170.982 344.882 mo
170.982 346.958 li
177.318 344.882 mo
177.318 346.958 li
183.656 344.882 mo
183.656 346.958 li
189.993 342.806 mo
189.993 346.958 li
196.329 344.882 mo
196.329 346.958 li
202.666 344.882 mo
202.666 346.958 li
209.003 344.882 mo
209.003 346.958 li
215.34 344.882 mo
215.34 346.958 li
221.677 342.806 mo
221.677 346.958 li
63.2547 342.806 mo
63.2547 346.958 li
56.9179 344.882 mo
56.9179 346.958 li
50.5812 344.882 mo
50.5812 346.958 li
44.3533 344.882 mo
44.3533 346.958 li
38.0154 344.882 mo
38.0154 346.958 li
221.677 342.806 mo
221.677 346.958 li
228.013 344.882 mo
228.013 346.958 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [9.96038 0 0 -9.96039 0 0 ]msf56.2624 357.01 mo(/01/02/03440540")[5.53896 2.76998 23.378 5.53897 2.76998 23.4876 5.53899 2.76997 27.4219 28.0793 5.53896 2.76999 22.8302 5.53897 2.76996 0 ]xsh38.0154 346.958 mo
38.0154 208.093 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [0 -7.78154 -7.78153 0 0 0 ]msf6.11406 228.087 mo(")shVIXPCT+Helvetica*1 [0 -11.5167 -11.5167 0 0 0 ]msf11.1397 330.57 mo(67&89:#\(#;0;"#%&'\(\))[-7.68173 -5.75833 -6.40329 -6.40329 -3.20163 -5.75836 -3.20395 -3.20163 -3.20395 -6.40329 -3.20163 -6.40326 -6.40329 -3.20395 -8.95998 -6.40329 -7.68172 -3.20164 0 ]ysh43.8062 346.958 mo
38.0154 346.958 li
40.8563 343.134 mo
38.0154 343.134 li
40.8563 339.42 mo
38.0154 339.42 li
40.8563 335.596 mo
38.0154 335.596 li
40.8563 331.772 mo
38.0154 331.772 li
43.8062 328.057 mo
38.0154 328.057 li
40.8563 324.233 mo
38.0154 324.233 li
40.8563 320.409 mo
38.0154 320.409 li
40.8563 316.694 mo
38.0154 316.694 li
40.8563 312.87 mo
38.0154 312.87 li
43.8062 309.045 mo
38.0154 309.045 li
40.8563 305.332 mo
38.0154 305.332 li
40.8563 301.507 mo
38.0154 301.507 li
40.8563 297.683 mo
38.0154 297.683 li
40.8563 293.969 mo
38.0154 293.969 li
43.8062 290.144 mo
38.0154 290.144 li
40.8563 286.32 mo
38.0154 286.32 li
40.8563 282.605 mo
38.0154 282.605 li
40.8563 278.783 mo
38.0154 278.783 li
40.8563 274.958 mo
38.0154 274.958 li
43.8062 271.244 mo
38.0154 271.244 li
40.8563 267.419 mo
38.0154 267.419 li
40.8563 263.595 mo
38.0154 263.595 li
40.8563 259.88 mo
38.0154 259.88 li
40.8563 256.056 mo
38.0154 256.056 li
43.8062 252.232 mo
38.0154 252.232 li
40.8563 248.517 mo
38.0154 248.517 li
40.8563 244.694 mo
38.0154 244.694 li
40.8563 240.979 mo
38.0154 240.979 li
40.8563 237.155 mo
38.0154 237.155 li
43.8062 233.331 mo
38.0154 233.331 li
40.8563 229.616 mo
38.0154 229.616 li
40.8563 225.792 mo
38.0154 225.792 li
40.8563 221.968 mo
38.0154 221.968 li
40.8563 218.253 mo
38.0154 218.253 li
43.8062 214.429 mo
38.0154 214.429 li
43.8062 214.429 mo
38.0154 214.429 li
40.8563 210.606 mo
38.0154 210.606 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [9.96038 0 0 -9.96039 0 0 ]msf30.0413 350.454 mo(;)sh24.4694 331.444 mo(5;)[5.53598 0 ]xsh24.4694 312.76 mo(";)[5.53598 0 ]xsh24.4694 293.749 mo(/;)[5.53598 0 ]xsh24.4694 274.848 mo(4;)[5.53598 0 ]xsh24.4694 255.836 mo(<;)[5.53598 0 ]xsh24.4694 236.825 mo(=;)[5.53598 0 ]xsh24.4694 217.814 mo(1;)[5.53598 0 ]xsh38.0154 346.958 mo
38.0154 343.789 li
44.3533 343.789 li
44.3533 344.445 li
57.2448 344.445 li
57.2448 342.589 li
63.6917 342.589 li
63.6917 343.135 li
70.1375 343.135 li
70.1375 338.109 li
76.5832 338.109 li
76.5832 339.966 li
83.0301 339.966 li
83.0301 334.94 li
89.4758 334.94 li
89.4758 330.57 li
95.9215 330.57 li
95.9215 337.453 li
108.814 337.453 li
108.814 333.083 li
115.261 333.083 li
115.261 329.914 li
121.707 329.914 li
121.707 331.225 li
128.153 331.225 li
128.153 334.284 li
134.6 334.284 li
134.6 331.772 li
141.045 331.772 li
141.045 332.427 li
147.491 332.427 li
147.491 329.259 li
153.938 329.259 li
153.938 335.596 li
160.384 335.596 li
160.384 343.135 li
166.829 343.135 li
166.829 339.966 li
173.276 339.966 li
173.276 338.109 li
179.722 338.109 li
179.722 341.276 li
186.169 341.276 li
186.169 339.966 li
192.615 339.966 li
192.615 338.764 li
199.06 338.764 li
199.06 340.622 li
205.397 340.622 li
205.397 341.933 li
211.844 341.933 li
211.844 339.966 li
218.29 339.966 li
218.29 344.445 li
224.736 344.445 li
224.736 343.135 li
231.182 343.135 li
231.182 346.958 li
.584 0 1 0 cmyk
ef
38.0154 343.789 mo
44.3533 343.789 li
44.3533 344.445 li
57.2448 344.445 li
57.2448 342.589 li
63.6917 342.589 li
63.6917 343.134 li
70.1374 343.134 li
70.1374 338.109 li
76.5832 338.109 li
76.5832 339.966 li
83.0301 339.966 li
83.0301 334.94 li
89.4758 334.94 li
89.4758 330.57 li
95.9215 330.57 li
95.9215 337.453 li
108.814 337.453 li
108.814 333.083 li
115.261 333.083 li
115.261 329.914 li
121.707 329.914 li
121.707 331.225 li
128.152 331.225 li
128.152 334.285 li
134.599 334.285 li
134.599 331.772 li
141.045 331.772 li
141.045 332.427 li
147.491 332.427 li
147.491 329.259 li
153.938 329.259 li
153.938 335.596 li
160.383 335.596 li
160.383 343.134 li
166.829 343.134 li
166.829 339.966 li
173.276 339.966 li
173.276 338.109 li
179.722 338.109 li
179.722 341.276 li
186.169 341.276 li
186.169 339.966 li
192.615 339.966 li
192.615 338.764 li
199.06 338.764 li
199.06 340.622 li
205.397 340.622 li
205.397 341.932 li
211.844 341.932 li
211.844 339.966 li
218.29 339.966 li
218.29 344.445 li
224.735 344.445 li
224.735 343.134 li
231.182 343.134 li
1 /0 /CSD get_res sepcs
1 sep
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
38.0154 339.529 mo
44.3533 339.529 li
44.3533 334.831 li
50.7991 334.831 li
50.7991 325.434 li
57.2448 325.434 li
57.2448 315.82 li
63.6917 315.82 li
63.6917 306.206 li
70.1374 306.206 li
70.1374 297.574 li
76.5832 297.574 li
76.5832 296.263 li
83.0301 296.263 li
83.0301 289.271 li
89.4758 289.271 li
89.4758 285.118 li
95.9215 285.118 li
95.9215 291.455 li
102.368 291.455 li
102.368 294.187 li
108.814 294.187 li
108.814 292.111 li
115.261 292.111 li
115.261 289.38 li
121.707 289.38 li
121.707 293.969 li
128.152 293.969 li
128.152 299.322 li
134.599 299.322 li
134.599 298.011 li
141.045 298.011 li
141.045 301.507 li
147.491 301.507 li
147.491 303.146 li
153.938 303.146 li
153.938 312.214 li
160.383 312.214 li
160.383 321.829 li
166.829 321.829 li
166.829 321.72 li
173.276 321.72 li
173.276 323.796 li
179.722 323.796 li
179.722 330.679 li
186.169 330.679 li
186.169 330.351 li
192.615 330.351 li
192.615 332.864 li
199.06 332.864 li
199.06 336.47 li
205.397 336.47 li
205.397 338.327 li
211.844 338.327 li
211.844 338 li
218.29 338 li
218.29 343.134 li
224.735 343.134 li
224.735 342.15 li
231.182 342.15 li
0 .985 1 .001 cmyk
.83 lw
[1.107 1.107 ] 0 dsh
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
38.0154 346.958 mo
231.182 346.958 li
41.1844 335.596 mo
38.0154 335.596 li
38.0154 336.251 mo
38.0154 334.94 li
41.1844 335.596 mo
44.3533 335.596 li
44.3533 336.251 mo
44.3533 334.94 li
41.1844 335.596 mo
41.1844 328.822 li
40.5295 328.822 mo
41.8404 328.822 li
41.1844 335.596 mo
41.1844 340.074 li
40.5295 340.074 mo
41.8404 340.074 li
47.6313 318.551 mo
44.3533 318.551 li
44.3533 319.207 mo
44.3533 317.896 li
47.6313 318.551 mo
50.7991 318.551 li
50.7991 319.207 mo
50.7991 317.896 li
47.6313 318.551 mo
47.6313 309.156 li
46.9752 309.156 mo
48.2861 309.156 li
47.6313 318.551 mo
47.6313 325.762 li
46.9752 325.762 mo
48.2861 325.762 li
54.077 305.332 mo
50.7991 305.332 li
50.7991 305.878 mo
50.7991 304.676 li
54.077 305.332 mo
57.2448 305.332 li
57.2448 305.878 mo
57.2448 304.676 li
54.077 305.332 mo
54.077 294.405 li
53.4209 294.405 mo
54.7319 294.405 li
54.077 305.332 mo
54.077 314.072 li
53.4209 314.072 mo
54.7319 314.072 li
60.5227 318.551 mo
57.2448 318.551 li
57.2448 319.207 mo
57.2448 317.896 li
60.5227 318.551 mo
63.6917 318.551 li
63.6917 319.207 mo
63.6917 317.896 li
60.5227 318.551 mo
60.5227 309.156 li
59.8678 309.156 mo
61.1788 309.156 li
60.5227 318.551 mo
60.5227 325.762 li
59.8678 325.762 mo
61.1788 325.762 li
66.9696 309.045 mo
63.6917 309.045 li
63.6917 309.701 mo
63.6917 308.499 li
66.9696 309.045 mo
70.1374 309.045 li
70.1374 309.701 mo
70.1374 308.499 li
66.9696 309.045 mo
66.9696 298.557 li
66.3136 298.557 mo
67.6245 298.557 li
66.9696 309.045 mo
66.9696 317.459 li
66.3136 317.459 mo
67.6245 317.459 li
73.4154 305.332 mo
70.1374 305.332 li
70.1374 305.878 mo
70.1374 304.676 li
73.4154 305.332 mo
76.5832 305.332 li
76.5832 305.878 mo
76.5832 304.676 li
73.4154 305.332 mo
73.4154 294.405 li
72.7593 294.405 mo
73.9613 294.405 li
73.4154 305.332 mo
73.4154 314.072 li
72.7593 314.072 mo
73.9613 314.072 li
79.8611 284.463 mo
76.5832 284.463 li
76.5832 285.118 mo
76.5832 283.807 li
79.8611 284.463 mo
83.0301 284.463 li
83.0301 285.118 mo
83.0301 283.807 li
79.8611 284.463 mo
79.8611 271.571 li
79.2062 271.571 mo
80.4082 271.571 li
79.8611 284.463 mo
79.8611 295.28 li
79.2062 295.28 mo
80.4082 295.28 li
86.308 297.683 mo
83.0301 297.683 li
83.0301 298.339 mo
83.0301 297.137 li
86.308 297.683 mo
89.4758 297.683 li
89.4758 298.339 mo
89.4758 297.137 li
86.308 297.683 mo
86.308 286.102 li
85.6519 286.102 mo
86.8539 286.102 li
86.308 297.683 mo
86.308 307.298 li
1 /0 /CSD get_res sepcs
1 sep
.277 lw
[] 0 dsh
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
85.6519 307.298 mo
86.8539 307.298 li
92.7537 282.605 mo
89.4758 282.605 li
89.4758 283.152 mo
89.4758 281.95 li
92.7537 282.605 mo
95.9215 282.605 li
95.9215 283.152 mo
95.9215 281.95 li
92.7537 282.605 mo
92.7537 269.495 li
92.0988 269.495 mo
93.2996 269.495 li
92.7537 282.605 mo
92.7537 293.532 li
92.0988 293.532 mo
93.2996 293.532 li
99.1994 274.958 mo
95.9215 274.958 li
95.9215 275.614 mo
95.9215 274.412 li
99.1994 274.958 mo
102.368 274.958 li
102.368 275.614 mo
102.368 274.412 li
99.1994 274.958 mo
99.1994 261.301 li
98.5446 261.301 mo
99.7466 261.301 li
99.1994 274.958 mo
99.1994 286.648 li
98.5446 286.648 mo
99.7466 286.648 li
105.646 284.463 mo
102.368 284.463 li
102.368 285.118 mo
102.368 283.807 li
105.646 284.463 mo
108.814 284.463 li
108.814 285.118 mo
108.814 283.807 li
105.646 284.463 mo
105.646 271.571 li
104.99 271.571 mo
106.192 271.571 li
105.646 284.463 mo
105.646 295.28 li
104.99 295.28 mo
106.192 295.28 li
112.092 271.244 mo
108.814 271.244 li
108.814 271.79 mo
108.814 270.588 li
112.092 271.244 mo
115.261 271.244 li
115.261 271.79 mo
115.261 270.588 li
112.092 271.244 mo
112.092 257.258 li
111.437 257.258 mo
112.638 257.258 li
112.092 271.244 mo
112.092 283.152 li
111.437 283.152 mo
112.638 283.152 li
118.539 231.474 mo
115.261 231.474 li
115.261 232.129 mo
115.261 230.818 li
118.539 231.474 mo
121.707 231.474 li
121.707 232.129 mo
121.707 230.818 li
118.539 231.474 mo
118.539 214.647 li
117.883 214.647 mo
119.085 214.647 li
118.539 231.474 mo
118.539 246.224 li
117.883 246.224 mo
119.085 246.224 li
124.876 240.979 mo
121.707 240.979 li
121.707 241.526 mo
121.707 240.324 li
124.876 240.979 mo
128.152 240.979 li
128.152 241.526 mo
128.152 240.324 li
124.876 240.979 mo
124.876 224.809 li
124.329 224.809 mo
125.531 224.809 li
124.876 240.979 mo
124.876 255.073 li
124.329 255.073 mo
125.531 255.073 li
131.321 246.552 mo
128.152 246.552 li
128.152 247.206 mo
128.152 246.004 li
131.321 246.552 mo
134.599 246.552 li
134.599 247.206 mo
134.599 246.004 li
131.321 246.552 mo
131.321 230.818 li
130.776 230.818 mo
131.978 230.818 li
131.321 246.552 mo
131.321 260.317 li
130.776 260.317 mo
131.978 260.317 li
137.767 278.783 mo
134.599 278.783 li
134.599 279.437 mo
134.599 278.127 li
137.767 278.783 mo
141.045 278.783 li
141.045 279.437 mo
141.045 278.127 li
137.767 278.783 mo
137.767 265.453 li
137.221 265.453 mo
138.423 265.453 li
137.767 278.783 mo
137.767 290.144 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
137.221 290.144 mo
138.423 290.144 li
144.214 286.32 mo
141.045 286.32 li
141.045 286.976 mo
141.045 285.774 li
144.214 286.32 mo
147.491 286.32 li
147.491 286.976 mo
147.491 285.774 li
144.214 286.32 mo
144.214 273.647 li
143.667 273.647 mo
144.869 273.647 li
144.214 286.32 mo
144.214 297.028 li
143.667 297.028 mo
144.869 297.028 li
150.66 299.65 mo
147.491 299.65 li
147.491 300.196 mo
147.491 298.994 li
150.66 299.65 mo
153.938 299.65 li
153.938 300.196 mo
153.938 298.994 li
150.66 299.65 mo
150.66 288.178 li
150.114 288.178 mo
151.316 288.178 li
150.66 299.65 mo
150.66 309.045 li
150.114 309.045 mo
151.316 309.045 li
157.106 292.002 mo
153.938 292.002 li
153.938 292.657 mo
153.938 291.455 li
157.106 292.002 mo
160.383 292.002 li
160.383 292.657 mo
160.383 291.455 li
157.106 292.002 mo
157.106 279.874 li
156.56 279.874 mo
157.762 279.874 li
157.106 292.002 mo
157.106 302.163 li
156.56 302.163 mo
157.762 302.163 li
163.552 307.189 mo
160.383 307.189 li
160.383 307.845 mo
160.383 306.534 li
163.552 307.189 mo
166.829 307.189 li
166.829 307.845 mo
166.829 306.534 li
163.552 307.189 mo
163.552 296.482 li
163.007 296.482 mo
164.207 296.482 li
163.552 307.189 mo
163.552 315.82 li
163.007 315.82 mo
164.207 315.82 li
169.998 309.045 mo
166.829 309.045 li
166.829 309.701 mo
166.829 308.499 li
169.998 309.045 mo
173.276 309.045 li
173.276 309.701 mo
173.276 308.499 li
169.998 309.045 mo
169.998 298.557 li
169.452 298.557 mo
170.654 298.557 li
169.998 309.045 mo
169.998 317.459 li
169.452 317.459 mo
170.654 317.459 li
176.445 322.375 mo
173.276 322.375 li
173.276 322.922 mo
173.276 321.72 li
176.445 322.375 mo
179.722 322.375 li
179.722 322.922 mo
179.722 321.72 li
176.445 322.375 mo
176.445 313.416 li
175.789 313.416 mo
177.1 313.416 li
176.445 322.375 mo
176.445 329.04 li
175.789 329.04 mo
177.1 329.04 li
182.891 329.914 mo
179.722 329.914 li
179.722 330.57 mo
179.722 329.259 li
182.891 329.914 mo
186.169 329.914 li
186.169 330.57 mo
186.169 329.259 li
182.891 329.914 mo
182.891 322.157 li
182.235 322.157 mo
183.546 322.157 li
182.891 329.914 mo
182.891 335.487 li
182.235 335.487 mo
183.546 335.487 li
189.337 337.453 mo
186.169 337.453 li
186.169 338.109 mo
186.169 336.907 li
189.337 337.453 mo
192.615 337.453 li
192.615 338.109 mo
192.615 336.907 li
189.337 337.453 mo
189.337 331.116 li
188.682 331.116 mo
189.993 331.116 li
189.337 337.453 mo
189.337 341.604 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
188.682 341.604 mo
189.993 341.604 li
195.783 331.772 mo
192.615 331.772 li
192.615 332.427 mo
192.615 331.225 li
195.783 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
195.783 331.772 mo
195.783 324.342 li
195.127 324.342 mo
196.438 324.342 li
195.783 331.772 mo
195.783 337.016 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
195.127 337.016 mo
196.438 337.016 li
202.229 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
202.229 331.772 mo
205.397 331.772 li
205.397 332.427 mo
205.397 331.225 li
202.229 331.772 mo
202.229 324.342 li
201.573 324.342 mo
202.885 324.342 li
202.229 331.772 mo
202.229 337.016 li
201.573 337.016 mo
202.885 337.016 li
208.675 337.453 mo
205.397 337.453 li
205.397 338.109 mo
205.397 336.907 li
208.675 337.453 mo
211.844 337.453 li
211.844 338.109 mo
211.844 336.907 li
208.675 337.453 mo
208.675 331.116 li
208.02 331.116 mo
209.331 331.116 li
208.675 337.453 mo
208.675 341.604 li
208.02 341.604 mo
209.331 341.604 li
215.122 345.1 mo
211.844 345.1 li
211.844 345.647 mo
211.844 344.445 li
215.122 345.1 mo
218.29 345.1 li
218.29 345.647 mo
218.29 344.445 li
215.122 345.1 mo
215.122 340.731 li
214.466 340.731 mo
215.777 340.731 li
215.122 345.1 mo
215.122 346.63 li
214.466 346.63 mo
215.777 346.63 li
221.568 343.134 mo
218.29 343.134 li
218.29 343.789 mo
218.29 342.589 li
221.568 343.134 mo
224.735 343.134 li
224.735 343.789 mo
224.735 342.589 li
221.568 343.134 mo
221.568 338.218 li
220.913 338.218 mo
222.224 338.218 li
221.568 343.134 mo
221.568 345.647 li
220.913 345.647 mo
222.224 345.647 li
228.013 345.1 mo
224.735 345.1 li
224.735 345.647 mo
224.735 344.445 li
228.013 345.1 mo
231.182 345.1 li
231.182 345.647 mo
231.182 344.445 li
228.013 345.1 mo
228.013 340.731 li
227.358 340.731 mo
228.669 340.731 li
228.013 345.1 mo
228.013 346.63 li
227.358 346.63 mo
228.669 346.63 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
229.324 345.1 mo
229.324 344.377 228.738 343.789 228.013 343.789 cv
227.29 343.789 226.702 344.377 226.702 345.1 cv
226.702 345.825 227.29 346.411 228.013 346.411 cv
228.738 346.411 229.324 345.825 229.324 345.1 cv
ef
222.879 343.135 mo
222.879 342.411 222.291 341.824 221.568 341.824 cv
220.844 341.824 220.257 342.411 220.257 343.135 cv
220.257 343.858 220.844 344.445 221.568 344.445 cv
222.291 344.445 222.879 343.858 222.879 343.135 cv
ef
216.433 345.1 mo
216.433 344.377 215.845 343.789 215.122 343.789 cv
214.397 343.789 213.811 344.377 213.811 345.1 cv
213.811 345.825 214.397 346.411 215.122 346.411 cv
215.845 346.411 216.433 345.825 216.433 345.1 cv
ef
209.986 337.453 mo
209.986 336.729 209.4 336.142 208.675 336.142 cv
207.951 336.142 207.364 336.729 207.364 337.453 cv
207.364 338.177 207.951 338.764 208.675 338.764 cv
209.4 338.764 209.986 338.177 209.986 337.453 cv
ef
203.54 331.772 mo
203.54 331.047 202.953 330.461 202.229 330.461 cv
201.506 330.461 200.918 331.047 200.918 331.772 cv
200.918 332.495 201.506 333.083 202.229 333.083 cv
202.953 333.083 203.54 332.495 203.54 331.772 cv
ef
197.095 331.772 mo
197.095 331.047 196.507 330.461 195.784 330.461 cv
195.059 330.461 194.473 331.047 194.473 331.772 cv
194.473 332.495 195.059 333.083 195.784 333.083 cv
196.507 333.083 197.095 332.495 197.095 331.772 cv
ef
190.648 337.453 mo
190.648 336.729 190.061 336.142 189.337 336.142 cv
188.613 336.142 188.026 336.729 188.026 337.453 cv
188.026 338.177 188.613 338.764 189.337 338.764 cv
190.061 338.764 190.648 338.177 190.648 337.453 cv
ef
184.202 329.914 mo
184.202 329.19 183.615 328.603 182.891 328.603 cv
182.167 328.603 181.58 329.19 181.58 329.914 cv
181.58 330.639 182.167 331.225 182.891 331.225 cv
183.615 331.225 184.202 330.639 184.202 329.914 cv
ef
177.756 322.375 mo
177.756 321.652 177.169 321.064 176.445 321.064 cv
175.72 321.064 175.134 321.652 175.134 322.375 cv
175.134 323.1 175.72 323.686 176.445 323.686 cv
177.169 323.686 177.756 323.1 177.756 322.375 cv
ef
171.309 309.046 mo
171.309 308.322 170.723 307.734 169.998 307.734 cv
169.275 307.734 168.687 308.322 168.687 309.046 cv
168.687 309.77 169.275 310.358 169.998 310.358 cv
170.723 310.358 171.309 309.77 171.309 309.046 cv
ef
164.863 307.189 mo
164.863 306.465 164.276 305.878 163.553 305.878 cv
162.829 305.878 162.242 306.465 162.242 307.189 cv
162.242 307.912 162.829 308.499 163.553 308.499 cv
164.276 308.499 164.863 307.912 164.863 307.189 cv
ef
158.418 292.002 mo
158.418 291.277 157.83 290.691 157.106 290.691 cv
156.382 290.691 155.795 291.277 155.795 292.002 cv
155.795 292.726 156.382 293.313 157.106 293.313 cv
157.83 293.313 158.418 292.726 158.418 292.002 cv
ef
151.971 299.65 mo
151.971 298.926 151.383 298.339 150.66 298.339 cv
149.936 298.339 149.349 298.926 149.349 299.65 cv
149.349 300.373 149.936 300.961 150.66 300.961 cv
151.383 300.961 151.971 300.373 151.971 299.65 cv
ef
145.525 286.32 mo
145.525 285.597 144.938 285.009 144.214 285.009 cv
143.489 285.009 142.903 285.597 142.903 286.32 cv
142.903 287.044 143.489 287.632 144.214 287.632 cv
144.938 287.632 145.525 287.044 145.525 286.32 cv
ef
139.078 278.783 mo
139.078 278.058 138.492 277.47 137.767 277.47 cv
137.044 277.47 136.456 278.058 136.456 278.783 cv
136.456 279.506 137.044 280.094 137.767 280.094 cv
138.492 280.094 139.078 279.506 139.078 278.783 cv
ef
132.632 246.552 mo
132.632 245.827 132.045 245.24 131.322 245.24 cv
130.598 245.24 130.011 245.827 130.011 246.552 cv
130.011 247.275 130.598 247.863 131.322 247.863 cv
132.045 247.863 132.632 247.275 132.632 246.552 cv
ef
126.187 240.979 mo
126.187 240.255 125.599 239.668 124.876 239.668 cv
124.151 239.668 123.564 240.255 123.564 240.979 cv
123.564 241.703 124.151 242.29 124.876 242.29 cv
125.599 242.29 126.187 241.703 126.187 240.979 cv
ef
119.85 231.474 mo
119.85 230.749 119.263 230.163 118.539 230.163 cv
117.814 230.163 117.227 230.749 117.227 231.474 cv
117.227 232.198 117.814 232.785 118.539 232.785 cv
119.263 232.785 119.85 232.198 119.85 231.474 cv
ef
113.403 271.244 mo
113.403 270.519 112.816 269.932 112.092 269.932 cv
111.369 269.932 110.781 270.519 110.781 271.244 cv
110.781 271.967 111.369 272.555 112.092 272.555 cv
112.816 272.555 113.403 271.967 113.403 271.244 cv
ef
106.957 284.463 mo
106.957 283.739 106.37 283.152 105.646 283.152 cv
104.922 283.152 104.336 283.739 104.336 284.463 cv
104.336 285.187 104.922 285.774 105.646 285.774 cv
106.37 285.774 106.957 285.187 106.957 284.463 cv
ef
100.51 274.958 mo
100.51 274.234 99.9242 273.647 99.1995 273.647 cv
98.4759 273.647 97.8885 274.234 97.8885 274.958 cv
97.8885 275.682 98.4759 276.268 99.1995 276.268 cv
99.9242 276.268 100.51 275.682 100.51 274.958 cv
ef
94.0647 282.605 mo
94.0647 281.882 93.4773 281.294 92.7537 281.294 cv
92.0302 281.294 91.4428 281.882 91.4428 282.605 cv
91.4428 283.33 92.0302 283.916 92.7537 283.916 cv
93.4773 283.916 94.0647 283.33 94.0647 282.605 cv
ef
87.619 297.683 mo
87.619 296.959 87.0316 296.372 86.308 296.372 cv
85.5833 296.372 84.9971 296.959 84.9971 297.683 cv
84.9971 298.408 85.5833 298.994 86.308 298.994 cv
87.0316 298.994 87.619 298.408 87.619 297.683 cv
ef
81.172 284.463 mo
81.172 283.739 80.5859 283.152 79.8611 283.152 cv
79.1376 283.152 78.5502 283.739 78.5502 284.463 cv
78.5502 285.187 79.1376 285.774 79.8611 285.774 cv
80.5859 285.774 81.172 285.187 81.172 284.463 cv
ef
74.7263 305.332 mo
74.7263 304.607 74.1389 304.021 73.4154 304.021 cv
72.6918 304.021 72.1044 304.607 72.1044 305.332 cv
72.1044 306.055 72.6918 306.643 73.4154 306.643 cv
74.1389 306.643 74.7263 306.055 74.7263 305.332 cv
ef
68.2806 309.046 mo
68.2806 308.322 67.6932 307.734 66.9697 307.734 cv
66.2449 307.734 65.6587 308.322 65.6587 309.046 cv
65.6587 309.77 66.2449 310.358 66.9697 310.358 cv
67.6932 310.358 68.2806 309.77 68.2806 309.046 cv
ef
61.8337 318.551 mo
61.8337 317.828 61.2475 317.24 60.5227 317.24 cv
59.7992 317.24 59.2118 317.828 59.2118 318.551 cv
59.2118 319.276 59.7992 319.862 60.5227 319.862 cv
61.2475 319.862 61.8337 319.276 61.8337 318.551 cv
ef
55.3879 305.332 mo
55.3879 304.607 54.8006 304.021 54.077 304.021 cv
53.3535 304.021 52.7661 304.607 52.7661 305.332 cv
52.7661 306.055 53.3535 306.643 54.077 306.643 cv
54.8006 306.643 55.3879 306.055 55.3879 305.332 cv
ef
48.9422 318.551 mo
48.9422 317.828 48.3548 317.24 47.6313 317.24 cv
46.9065 317.24 46.3192 317.828 46.3192 318.551 cv
46.3192 319.276 46.9065 319.862 47.6313 319.862 cv
48.3548 319.862 48.9422 319.276 48.9422 318.551 cv
ef
42.4953 335.596 mo
42.4953 334.872 41.9091 334.284 41.1844 334.284 cv
40.4608 334.284 39.8734 334.872 39.8734 335.596 cv
39.8734 336.319 40.4608 336.907 41.1844 336.907 cv
41.9091 336.907 42.4953 336.319 42.4953 335.596 cv
ef
38.0154 341.604 mo
cp
38.0154 341.604 mo
41.1844 335.814 li
44.3533 330.461 li
47.6313 325.434 li
50.7991 320.736 li
54.077 316.475 li
57.2448 312.434 li
60.5227 308.719 li
63.6917 305.332 li
66.9696 302.272 li
70.1374 299.432 li
73.4154 296.809 li
76.5832 294.515 li
83.0301 290.363 li
89.4758 286.866 li
95.9215 283.261 li
99.1994 281.185 li
102.368 278.672 li
104.007 277.034 li
105.646 275.286 li
107.175 273.101 li
108.814 270.478 li
110.453 267.419 li
112.092 263.814 li
113.622 259.553 li
115.261 254.854 li
118.539 244.257 li
120.068 239.231 li
120.942 237.046 li
121.707 235.188 li
122.472 233.768 li
123.346 232.894 li
124.111 232.566 li
124.876 232.894 li
125.75 233.768 li
126.514 235.188 li
127.389 237.155 li
128.152 239.559 li
128.918 242.181 li
129.791 245.13 li
131.321 251.358 li
132.96 257.586 li
134.599 263.595 li
136.238 269.058 li
137.767 273.866 li
139.406 278.235 li
141.045 282.059 li
142.684 285.337 li
144.214 288.287 li
145.853 291.019 li
147.491 293.422 li
150.66 297.574 li
153.938 301.18 li
157.106 304.458 li
160.383 307.408 li
166.829 312.87 li
173.276 317.895 li
179.722 322.594 li
186.169 326.964 li
192.615 331.007 li
199.06 334.612 li
205.397 337.89 li
211.844 340.731 li
218.29 342.915 li
224.735 344.554 li
231.182 345.428 li
0 .985 1 .001 cmyk
.554 lw
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
38.0154 342.261 mo
cp
38.0154 342.261 mo
41.1844 336.579 li
44.3533 331.225 li
47.6313 326.309 li
50.7991 321.72 li
54.077 317.459 li
57.2448 313.525 li
60.5227 310.03 li
63.6917 306.752 li
66.9696 303.802 li
70.1374 301.289 li
73.4154 298.885 li
76.5832 296.919 li
79.8611 295.171 li
83.0301 293.641 li
86.308 292.439 li
89.4758 291.455 li
92.7537 290.691 li
95.9215 290.144 li
99.1994 289.817 li
102.368 289.707 li
105.646 289.817 li
108.814 290.144 li
112.092 290.582 li
115.261 291.237 li
118.539 292.111 li
121.707 292.985 li
124.876 294.078 li
128.152 295.389 li
134.599 298.121 li
141.045 301.398 li
147.491 304.895 li
153.938 308.719 li
160.383 312.76 li
166.829 316.803 li
173.276 320.955 li
179.722 324.998 li
186.169 328.931 li
192.615 332.646 li
199.06 336.033 li
205.397 339.092 li
208.675 340.511 li
211.844 341.713 li
215.122 342.806 li
218.29 343.789 li
221.568 344.663 li
224.735 345.319 li
228.013 345.865 li
231.182 346.193 li
.918 .756 0 0 cmyk
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
39.9824 335.596 mo
38.0154 335.596 li
38.0154 336.251 mo
38.0154 334.94 li
42.3863 335.596 mo
44.3533 335.596 li
44.3533 336.251 mo
44.3533 334.94 li
41.1844 334.394 mo
41.1844 328.822 li
40.5295 328.822 mo
41.8404 328.822 li
41.1844 336.798 mo
41.1844 340.074 li
40.5295 340.074 mo
41.8404 340.074 li
46.4293 318.551 mo
44.3533 318.551 li
44.3533 319.207 mo
44.3533 317.896 li
48.8321 318.551 mo
50.7991 318.551 li
50.7991 319.207 mo
50.7991 317.896 li
47.6313 317.349 mo
47.6313 309.156 li
46.9752 309.156 mo
48.2861 309.156 li
47.6313 319.753 mo
47.6313 325.762 li
46.9752 325.762 mo
48.2861 325.762 li
52.875 305.332 mo
50.7991 305.332 li
50.7991 305.878 mo
50.7991 304.676 li
55.279 305.332 mo
57.2448 305.332 li
57.2448 305.878 mo
57.2448 304.676 li
54.077 304.021 mo
54.077 294.405 li
53.4209 294.405 mo
54.7319 294.405 li
54.077 306.534 mo
54.077 314.072 li
53.4209 314.072 mo
54.7319 314.072 li
59.2118 318.551 mo
57.2448 318.551 li
57.2448 319.207 mo
57.2448 317.896 li
61.7247 318.551 mo
63.6917 318.551 li
63.6917 319.207 mo
63.6917 317.896 li
60.5227 317.349 mo
60.5227 309.156 li
59.8678 309.156 mo
61.1788 309.156 li
60.5227 319.753 mo
60.5227 325.762 li
59.8678 325.762 mo
61.1788 325.762 li
65.6587 309.045 mo
63.6917 309.045 li
63.6917 309.701 mo
63.6917 308.499 li
68.1704 309.045 mo
70.1374 309.045 li
70.1374 309.701 mo
70.1374 308.499 li
66.9696 307.845 mo
66.9696 298.557 li
66.3136 298.557 mo
67.6245 298.557 li
66.9696 310.358 mo
66.9696 317.459 li
66.3136 317.459 mo
67.6245 317.459 li
72.1044 305.332 mo
70.1374 305.332 li
70.1374 305.878 mo
70.1374 304.676 li
74.6174 305.332 mo
76.5832 305.332 li
76.5832 305.878 mo
76.5832 304.676 li
73.4154 304.021 mo
73.4154 294.405 li
72.7593 294.405 mo
73.9613 294.405 li
73.4154 306.534 mo
73.4154 314.072 li
72.7593 314.072 mo
73.9613 314.072 li
78.5502 284.463 mo
76.5832 284.463 li
76.5832 285.118 mo
76.5832 283.807 li
81.0631 284.463 mo
83.0301 284.463 li
83.0301 285.118 mo
83.0301 283.807 li
79.8611 283.261 mo
79.8611 271.571 li
79.2062 271.571 mo
80.4082 271.571 li
79.8611 285.665 mo
79.8611 295.28 li
79.2062 295.28 mo
80.4082 295.28 li
84.9971 297.683 mo
83.0301 297.683 li
83.0301 298.339 mo
83.0301 297.137 li
87.51 297.683 mo
89.4758 297.683 li
89.4758 298.339 mo
89.4758 297.137 li
86.308 296.482 mo
86.308 286.102 li
85.6519 286.102 mo
86.8539 286.102 li
86.308 298.994 mo
86.308 307.298 li
85.6519 307.298 mo
86.8539 307.298 li
1 /0 /CSD get_res sepcs
1 sep
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
91.4428 282.605 mo
89.4758 282.605 li
89.4758 283.152 mo
89.4758 281.95 li
93.9557 282.605 mo
95.9215 282.605 li
95.9215 283.152 mo
95.9215 281.95 li
92.7537 281.294 mo
92.7537 269.495 li
92.0988 269.495 mo
93.2996 269.495 li
92.7537 283.807 mo
92.7537 293.532 li
92.0988 293.532 mo
93.2996 293.532 li
97.8885 274.958 mo
95.9215 274.958 li
95.9215 275.614 mo
95.9215 274.412 li
100.401 274.958 mo
102.368 274.958 li
102.368 275.614 mo
102.368 274.412 li
99.1994 273.756 mo
99.1994 261.301 li
98.5446 261.301 mo
99.7466 261.301 li
99.1994 276.268 mo
99.1994 286.648 li
98.5446 286.648 mo
99.7466 286.648 li
104.335 284.463 mo
102.368 284.463 li
102.368 285.118 mo
102.368 283.807 li
106.848 284.463 mo
108.814 284.463 li
108.814 285.118 mo
108.814 283.807 li
105.646 283.261 mo
105.646 271.571 li
104.99 271.571 mo
106.192 271.571 li
105.646 285.665 mo
105.646 295.28 li
104.99 295.28 mo
106.192 295.28 li
110.781 271.244 mo
108.814 271.244 li
108.814 271.79 mo
108.814 270.588 li
113.294 271.244 mo
115.261 271.244 li
115.261 271.79 mo
115.261 270.588 li
112.092 269.932 mo
112.092 257.258 li
111.437 257.258 mo
112.638 257.258 li
112.092 272.445 mo
112.092 283.152 li
111.437 283.152 mo
112.638 283.152 li
117.227 231.474 mo
115.261 231.474 li
115.261 232.129 mo
115.261 230.818 li
119.74 231.474 mo
121.707 231.474 li
121.707 232.129 mo
121.707 230.818 li
118.539 230.163 mo
118.539 214.647 li
117.883 214.647 mo
119.085 214.647 li
118.539 232.676 mo
118.539 246.224 li
117.883 246.224 mo
119.085 246.224 li
123.674 240.979 mo
121.707 240.979 li
121.707 241.526 mo
121.707 240.324 li
126.187 240.979 mo
128.152 240.979 li
128.152 241.526 mo
128.152 240.324 li
124.876 239.668 mo
124.876 224.809 li
124.329 224.809 mo
125.531 224.809 li
124.876 242.181 mo
124.876 255.073 li
124.329 255.073 mo
125.531 255.073 li
130.119 246.552 mo
128.152 246.552 li
128.152 247.206 mo
128.152 246.004 li
132.632 246.552 mo
134.599 246.552 li
134.599 247.206 mo
134.599 246.004 li
131.321 245.348 mo
131.321 230.818 li
130.776 230.818 mo
131.978 230.818 li
131.321 247.863 mo
131.321 260.317 li
130.776 260.317 mo
131.978 260.317 li
136.566 278.783 mo
134.599 278.783 li
134.599 279.437 mo
134.599 278.127 li
139.078 278.783 mo
141.045 278.783 li
141.045 279.437 mo
141.045 278.127 li
137.767 277.581 mo
137.767 265.453 li
137.221 265.453 mo
138.423 265.453 li
137.767 279.983 mo
137.767 290.144 li
137.221 290.144 mo
138.423 290.144 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
143.012 286.32 mo
141.045 286.32 li
141.045 286.976 mo
141.045 285.774 li
145.525 286.32 mo
147.491 286.32 li
147.491 286.976 mo
147.491 285.774 li
144.214 285.118 mo
144.214 273.647 li
143.667 273.647 mo
144.869 273.647 li
144.214 287.632 mo
144.214 297.028 li
143.667 297.028 mo
144.869 297.028 li
149.458 299.65 mo
147.491 299.65 li
147.491 300.196 mo
147.491 298.994 li
151.971 299.65 mo
153.938 299.65 li
153.938 300.196 mo
153.938 298.994 li
150.66 298.339 mo
150.66 288.178 li
150.114 288.178 mo
151.316 288.178 li
150.66 300.852 mo
150.66 309.045 li
150.114 309.045 mo
151.316 309.045 li
155.905 292.002 mo
153.938 292.002 li
153.938 292.657 mo
153.938 291.455 li
158.418 292.002 mo
160.383 292.002 li
160.383 292.657 mo
160.383 291.455 li
157.106 290.8 mo
157.106 279.874 li
156.56 279.874 mo
157.762 279.874 li
157.106 293.313 mo
157.106 302.163 li
156.56 302.163 mo
157.762 302.163 li
162.35 307.189 mo
160.383 307.189 li
160.383 307.845 mo
160.383 306.534 li
164.863 307.189 mo
166.829 307.189 li
166.829 307.845 mo
166.829 306.534 li
163.552 305.987 mo
163.552 296.482 li
163.007 296.482 mo
164.207 296.482 li
163.552 308.391 mo
163.552 315.82 li
163.007 315.82 mo
164.207 315.82 li
168.796 309.045 mo
166.829 309.045 li
166.829 309.701 mo
166.829 308.499 li
171.309 309.045 mo
173.276 309.045 li
173.276 309.701 mo
173.276 308.499 li
169.998 307.845 mo
169.998 298.557 li
169.452 298.557 mo
170.654 298.557 li
169.998 310.358 mo
169.998 317.459 li
169.452 317.459 mo
170.654 317.459 li
175.243 322.375 mo
173.276 322.375 li
173.276 322.922 mo
173.276 321.72 li
177.756 322.375 mo
179.722 322.375 li
179.722 322.922 mo
179.722 321.72 li
176.445 321.064 mo
176.445 313.416 li
175.789 313.416 mo
177.1 313.416 li
176.445 323.577 mo
176.445 329.04 li
175.789 329.04 mo
177.1 329.04 li
181.689 329.914 mo
179.722 329.914 li
179.722 330.57 mo
179.722 329.259 li
184.202 329.914 mo
186.169 329.914 li
186.169 330.57 mo
186.169 329.259 li
182.891 328.712 mo
182.891 322.157 li
182.235 322.157 mo
183.546 322.157 li
182.891 331.116 mo
182.891 335.487 li
182.235 335.487 mo
183.546 335.487 li
188.135 337.453 mo
186.169 337.453 li
186.169 338.109 mo
186.169 336.907 li
190.539 337.453 mo
192.615 337.453 li
192.615 338.109 mo
192.615 336.907 li
189.337 336.251 mo
189.337 331.116 li
188.682 331.116 mo
189.993 331.116 li
189.337 338.764 mo
189.337 341.604 li
188.682 341.604 mo
189.993 341.604 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
194.581 331.772 mo
192.615 331.772 li
192.615 332.427 mo
192.615 331.225 li
196.984 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
195.783 330.57 mo
195.783 324.342 li
195.127 324.342 mo
196.438 324.342 li
195.783 333.083 mo
195.783 337.016 li
195.127 337.016 mo
196.438 337.016 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
201.027 331.772 mo
199.06 331.772 li
199.061 332.427 mo
199.061 331.225 li
203.431 331.772 mo
205.397 331.772 li
205.397 332.427 mo
205.397 331.225 li
202.229 330.57 mo
202.229 324.342 li
201.573 324.342 mo
202.885 324.342 li
202.229 333.083 mo
202.229 337.016 li
201.573 337.016 mo
202.885 337.016 li
207.474 337.453 mo
205.397 337.453 li
205.397 338.109 mo
205.397 336.907 li
209.877 337.453 mo
211.844 337.453 li
211.844 338.109 mo
211.844 336.907 li
208.675 336.251 mo
208.675 331.116 li
208.02 331.116 mo
209.331 331.116 li
208.675 338.764 mo
208.675 341.604 li
208.02 341.604 mo
209.331 341.604 li
213.92 345.1 mo
211.844 345.1 li
211.844 345.647 mo
211.844 344.445 li
216.324 345.1 mo
218.29 345.1 li
218.29 345.647 mo
218.29 344.445 li
215.122 343.789 mo
215.122 340.731 li
214.466 340.731 mo
215.777 340.731 li
215.122 346.302 mo
215.122 346.63 li
214.466 346.63 mo
215.777 346.63 li
220.257 343.134 mo
218.29 343.134 li
218.29 343.789 mo
218.29 342.589 li
222.77 343.134 mo
224.735 343.134 li
224.735 343.789 mo
224.735 342.589 li
221.568 341.932 mo
221.568 338.218 li
220.913 338.218 mo
222.224 338.218 li
221.568 344.445 mo
221.568 345.647 li
220.913 345.647 mo
222.224 345.647 li
226.702 345.1 mo
224.735 345.1 li
224.735 345.647 mo
224.735 344.445 li
229.215 345.1 mo
231.182 345.1 li
231.182 345.647 mo
231.182 344.445 li
228.013 343.789 mo
228.013 340.731 li
227.358 340.731 mo
228.669 340.731 li
228.013 346.302 mo
228.013 346.63 li
227.358 346.63 mo
228.669 346.63 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
229.324 345.1 mo
229.324 344.377 228.738 343.789 228.013 343.789 cv
227.29 343.789 226.702 344.377 226.702 345.1 cv
226.702 345.825 227.29 346.411 228.013 346.411 cv
228.738 346.411 229.324 345.825 229.324 345.1 cv
ef
222.879 343.135 mo
222.879 342.411 222.291 341.824 221.568 341.824 cv
220.844 341.824 220.257 342.411 220.257 343.135 cv
220.257 343.858 220.844 344.445 221.568 344.445 cv
222.291 344.445 222.879 343.858 222.879 343.135 cv
ef
216.433 345.1 mo
216.433 344.377 215.845 343.789 215.122 343.789 cv
214.397 343.789 213.811 344.377 213.811 345.1 cv
213.811 345.825 214.397 346.411 215.122 346.411 cv
215.845 346.411 216.433 345.825 216.433 345.1 cv
ef
209.986 337.453 mo
209.986 336.729 209.4 336.142 208.675 336.142 cv
207.951 336.142 207.364 336.729 207.364 337.453 cv
207.364 338.177 207.951 338.764 208.675 338.764 cv
209.4 338.764 209.986 338.177 209.986 337.453 cv
ef
203.54 331.772 mo
203.54 331.047 202.953 330.461 202.229 330.461 cv
201.506 330.461 200.918 331.047 200.918 331.772 cv
200.918 332.495 201.506 333.083 202.229 333.083 cv
202.953 333.083 203.54 332.495 203.54 331.772 cv
ef
197.095 331.772 mo
197.095 331.047 196.507 330.461 195.784 330.461 cv
195.059 330.461 194.473 331.047 194.473 331.772 cv
194.473 332.495 195.059 333.083 195.784 333.083 cv
196.507 333.083 197.095 332.495 197.095 331.772 cv
ef
190.648 337.453 mo
190.648 336.729 190.061 336.142 189.337 336.142 cv
188.613 336.142 188.026 336.729 188.026 337.453 cv
188.026 338.177 188.613 338.764 189.337 338.764 cv
190.061 338.764 190.648 338.177 190.648 337.453 cv
ef
184.202 329.914 mo
184.202 329.19 183.615 328.603 182.891 328.603 cv
182.167 328.603 181.58 329.19 181.58 329.914 cv
181.58 330.639 182.167 331.225 182.891 331.225 cv
183.615 331.225 184.202 330.639 184.202 329.914 cv
ef
177.756 322.375 mo
177.756 321.652 177.169 321.064 176.445 321.064 cv
175.72 321.064 175.134 321.652 175.134 322.375 cv
175.134 323.1 175.72 323.686 176.445 323.686 cv
177.169 323.686 177.756 323.1 177.756 322.375 cv
ef
171.309 309.046 mo
171.309 308.322 170.723 307.734 169.998 307.734 cv
169.275 307.734 168.687 308.322 168.687 309.046 cv
168.687 309.77 169.275 310.358 169.998 310.358 cv
170.723 310.358 171.309 309.77 171.309 309.046 cv
ef
164.863 307.189 mo
164.863 306.465 164.276 305.878 163.553 305.878 cv
162.829 305.878 162.242 306.465 162.242 307.189 cv
162.242 307.912 162.829 308.499 163.553 308.499 cv
164.276 308.499 164.863 307.912 164.863 307.189 cv
ef
158.418 292.002 mo
158.418 291.277 157.83 290.691 157.106 290.691 cv
156.382 290.691 155.795 291.277 155.795 292.002 cv
155.795 292.726 156.382 293.313 157.106 293.313 cv
157.83 293.313 158.418 292.726 158.418 292.002 cv
ef
151.971 299.65 mo
151.971 298.926 151.383 298.339 150.66 298.339 cv
149.936 298.339 149.349 298.926 149.349 299.65 cv
149.349 300.373 149.936 300.961 150.66 300.961 cv
151.383 300.961 151.971 300.373 151.971 299.65 cv
ef
145.525 286.32 mo
145.525 285.597 144.938 285.009 144.214 285.009 cv
143.489 285.009 142.903 285.597 142.903 286.32 cv
142.903 287.044 143.489 287.632 144.214 287.632 cv
144.938 287.632 145.525 287.044 145.525 286.32 cv
ef
139.078 278.783 mo
139.078 278.058 138.492 277.47 137.767 277.47 cv
137.044 277.47 136.456 278.058 136.456 278.783 cv
136.456 279.506 137.044 280.094 137.767 280.094 cv
138.492 280.094 139.078 279.506 139.078 278.783 cv
ef
132.632 246.552 mo
132.632 245.827 132.045 245.24 131.322 245.24 cv
130.598 245.24 130.011 245.827 130.011 246.552 cv
130.011 247.275 130.598 247.863 131.322 247.863 cv
132.045 247.863 132.632 247.275 132.632 246.552 cv
ef
126.187 240.979 mo
126.187 240.255 125.599 239.668 124.876 239.668 cv
124.151 239.668 123.564 240.255 123.564 240.979 cv
123.564 241.703 124.151 242.29 124.876 242.29 cv
125.599 242.29 126.187 241.703 126.187 240.979 cv
ef
119.85 231.474 mo
119.85 230.749 119.263 230.163 118.539 230.163 cv
117.814 230.163 117.227 230.749 117.227 231.474 cv
117.227 232.198 117.814 232.785 118.539 232.785 cv
119.263 232.785 119.85 232.198 119.85 231.474 cv
ef
113.403 271.244 mo
113.403 270.519 112.816 269.932 112.092 269.932 cv
111.369 269.932 110.781 270.519 110.781 271.244 cv
110.781 271.967 111.369 272.555 112.092 272.555 cv
112.816 272.555 113.403 271.967 113.403 271.244 cv
ef
106.957 284.463 mo
106.957 283.739 106.37 283.152 105.646 283.152 cv
104.922 283.152 104.336 283.739 104.336 284.463 cv
104.336 285.187 104.922 285.774 105.646 285.774 cv
106.37 285.774 106.957 285.187 106.957 284.463 cv
ef
100.51 274.958 mo
100.51 274.234 99.9242 273.647 99.1995 273.647 cv
98.4759 273.647 97.8885 274.234 97.8885 274.958 cv
97.8885 275.682 98.4759 276.268 99.1995 276.268 cv
99.9242 276.268 100.51 275.682 100.51 274.958 cv
ef
94.0647 282.605 mo
94.0647 281.882 93.4773 281.294 92.7537 281.294 cv
92.0302 281.294 91.4428 281.882 91.4428 282.605 cv
91.4428 283.33 92.0302 283.916 92.7537 283.916 cv
93.4773 283.916 94.0647 283.33 94.0647 282.605 cv
ef
87.619 297.683 mo
87.619 296.959 87.0316 296.372 86.308 296.372 cv
85.5833 296.372 84.9971 296.959 84.9971 297.683 cv
84.9971 298.408 85.5833 298.994 86.308 298.994 cv
87.0316 298.994 87.619 298.408 87.619 297.683 cv
ef
81.172 284.463 mo
81.172 283.739 80.5859 283.152 79.8611 283.152 cv
79.1376 283.152 78.5502 283.739 78.5502 284.463 cv
78.5502 285.187 79.1376 285.774 79.8611 285.774 cv
80.5859 285.774 81.172 285.187 81.172 284.463 cv
ef
74.7263 305.332 mo
74.7263 304.607 74.1389 304.021 73.4154 304.021 cv
72.6918 304.021 72.1044 304.607 72.1044 305.332 cv
72.1044 306.055 72.6918 306.643 73.4154 306.643 cv
74.1389 306.643 74.7263 306.055 74.7263 305.332 cv
ef
68.2806 309.046 mo
68.2806 308.322 67.6932 307.734 66.9697 307.734 cv
66.2449 307.734 65.6587 308.322 65.6587 309.046 cv
65.6587 309.77 66.2449 310.358 66.9697 310.358 cv
67.6932 310.358 68.2806 309.77 68.2806 309.046 cv
ef
61.8337 318.551 mo
61.8337 317.828 61.2475 317.24 60.5227 317.24 cv
59.7992 317.24 59.2118 317.828 59.2118 318.551 cv
59.2118 319.276 59.7992 319.862 60.5227 319.862 cv
61.2475 319.862 61.8337 319.276 61.8337 318.551 cv
ef
55.3879 305.332 mo
55.3879 304.607 54.8006 304.021 54.077 304.021 cv
53.3535 304.021 52.7661 304.607 52.7661 305.332 cv
52.7661 306.055 53.3535 306.643 54.077 306.643 cv
54.8006 306.643 55.3879 306.055 55.3879 305.332 cv
ef
48.9422 318.551 mo
48.9422 317.828 48.3548 317.24 47.6313 317.24 cv
46.9065 317.24 46.3192 317.828 46.3192 318.551 cv
46.3192 319.276 46.9065 319.862 47.6313 319.862 cv
48.3548 319.862 48.9422 319.276 48.9422 318.551 cv
ef
42.4953 335.596 mo
42.4953 334.872 41.9091 334.284 41.1844 334.284 cv
40.4608 334.284 39.8734 334.872 39.8734 335.596 cv
39.8734 336.319 40.4608 336.907 41.1844 336.907 cv
41.9091 336.907 42.4953 336.319 42.4953 335.596 cv
ef
38.0154 346.958 mo
231.182 346.958 li
.277 lw
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf181.361 370.668 mo(!)shVIXPCT+Helvetica*1 [7.78153 0 0 -7.78154 0 0 ]msf177.319 365.751 mo(")shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf134.382 370.668 mo(!#$%&'\(\))[3.83614 3.20277 3.83612 8.96114 6.40443 7.68286 3.20279 0 ]xshVIXPCU+Symbol*1 [11.5167 0 0 -11.5167 0 0 ]msf126.296 370.668 mo(y)shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf117.229 370.668 mo(*\()[5.75833 0 ]xshVIXPCU+Symbol*1 [11.5167 0 0 -11.5167 0 0 ]msf111 370.668 mo(p)shVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf107.613 370.668 mo($)shVIXPCT+Helvetica*1 [7.78153 0 0 -7.78154 0 0 ]msf92.645 373.181 mo(+,-)[6.48118 4.32575 0 ]xshVIXPCT+Helvetica*1 [11.5167 0 0 -11.5167 0 0 ]msf83.5765 370.668 mo(.)sh63.2547 342.806 mo
63.2547 346.958 li
69.5915 344.882 mo
69.5915 346.958 li
75.9283 344.882 mo
75.9283 346.958 li
82.2651 344.882 mo
82.2651 346.958 li
88.6018 344.882 mo
88.6018 346.958 li
94.9386 342.806 mo
94.9386 346.958 li
101.275 344.882 mo
101.275 346.958 li
107.612 344.882 mo
107.612 346.958 li
113.95 344.882 mo
113.95 346.958 li
120.287 344.882 mo
120.287 346.958 li
126.624 342.806 mo
126.624 346.958 li
132.96 344.882 mo
132.96 346.958 li
139.297 344.882 mo
139.297 346.958 li
145.634 344.882 mo
145.634 346.958 li
151.971 344.882 mo
151.971 346.958 li
158.308 342.806 mo
158.308 346.958 li
164.644 344.882 mo
164.644 346.958 li
170.982 344.882 mo
170.982 346.958 li
177.318 344.882 mo
177.318 346.958 li
183.656 344.882 mo
183.656 346.958 li
189.993 342.806 mo
189.993 346.958 li
196.329 344.882 mo
196.329 346.958 li
202.666 344.882 mo
202.666 346.958 li
209.003 344.882 mo
209.003 346.958 li
215.34 344.882 mo
215.34 346.958 li
221.677 342.806 mo
221.677 346.958 li
63.2547 342.806 mo
63.2547 346.958 li
56.9179 344.882 mo
56.9179 346.958 li
50.5812 344.882 mo
50.5812 346.958 li
44.3533 344.882 mo
44.3533 346.958 li
38.0154 344.882 mo
38.0154 346.958 li
221.677 342.806 mo
221.677 346.958 li
228.013 344.882 mo
228.013 346.958 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [9.96038 0 0 -9.96039 0 0 ]msf56.2624 357.01 mo(/01/02/03440540")[5.53896 2.76998 23.378 5.53897 2.76998 23.4876 5.53899 2.76997 27.4219 28.0793 5.53896 2.76999 22.8302 5.53897 2.76996 0 ]xsh38.0154 346.958 mo
38.0154 208.093 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [0 -7.78154 -7.78153 0 0 0 ]msf6.11406 228.087 mo(")shVIXPCT+Helvetica*1 [0 -11.5167 -11.5167 0 0 0 ]msf11.1397 330.57 mo(67&89:#\(#;0;"#%&'\(\))[-7.68173 -5.75833 -6.40329 -6.40329 -3.20163 -5.75836 -3.20395 -3.20163 -3.20395 -6.40329 -3.20163 -6.40326 -6.40329 -3.20395 -8.95998 -6.40329 -7.68172 -3.20164 0 ]ysh43.8062 346.958 mo
38.0154 346.958 li
40.8563 343.134 mo
38.0154 343.134 li
40.8563 339.42 mo
38.0154 339.42 li
40.8563 335.596 mo
38.0154 335.596 li
40.8563 331.772 mo
38.0154 331.772 li
43.8062 328.057 mo
38.0154 328.057 li
40.8563 324.233 mo
38.0154 324.233 li
40.8563 320.409 mo
38.0154 320.409 li
40.8563 316.694 mo
38.0154 316.694 li
40.8563 312.87 mo
38.0154 312.87 li
43.8062 309.045 mo
38.0154 309.045 li
40.8563 305.332 mo
38.0154 305.332 li
40.8563 301.507 mo
38.0154 301.507 li
40.8563 297.683 mo
38.0154 297.683 li
40.8563 293.969 mo
38.0154 293.969 li
43.8062 290.144 mo
38.0154 290.144 li
40.8563 286.32 mo
38.0154 286.32 li
40.8563 282.605 mo
38.0154 282.605 li
40.8563 278.783 mo
38.0154 278.783 li
40.8563 274.958 mo
38.0154 274.958 li
43.8062 271.244 mo
38.0154 271.244 li
40.8563 267.419 mo
38.0154 267.419 li
40.8563 263.595 mo
38.0154 263.595 li
40.8563 259.88 mo
38.0154 259.88 li
40.8563 256.056 mo
38.0154 256.056 li
43.8062 252.232 mo
38.0154 252.232 li
40.8563 248.517 mo
38.0154 248.517 li
40.8563 244.694 mo
38.0154 244.694 li
40.8563 240.979 mo
38.0154 240.979 li
40.8563 237.155 mo
38.0154 237.155 li
43.8062 233.331 mo
38.0154 233.331 li
40.8563 229.616 mo
38.0154 229.616 li
40.8563 225.792 mo
38.0154 225.792 li
40.8563 221.968 mo
38.0154 221.968 li
40.8563 218.253 mo
38.0154 218.253 li
43.8062 214.429 mo
38.0154 214.429 li
43.8062 214.429 mo
38.0154 214.429 li
40.8563 210.606 mo
38.0154 210.606 li
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
VIXPCT+Helvetica*1 [9.96038 0 0 -9.96039 0 0 ]msf30.0413 350.454 mo(;)sh24.4694 331.444 mo(5;)[5.53598 0 ]xsh24.4694 312.76 mo(";)[5.53598 0 ]xsh24.4694 293.749 mo(/;)[5.53598 0 ]xsh24.4694 274.848 mo(4;)[5.53598 0 ]xsh24.4694 255.836 mo(<;)[5.53598 0 ]xsh24.4694 236.825 mo(=;)[5.53598 0 ]xsh24.4694 217.814 mo(1;)[5.53598 0 ]xsh169.234 216.943 mo
218.837 216.943 li
218.837 252.56 li
169.234 252.56 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AIWBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g25 <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCT+Helvetica /Encoding getdup 62 /g25 putpop%ADOEndSubsetFont
/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 /g9 /g4 /g13 /g14 /g15 /g10 /g7 /g17 /g37 /g31 /g35 /g34 /g6 /g11 /g12 /g25 193{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [6.22522 0 0 -6.22523 0 0 ]msf181.689 225.355 mo(>,9,)[3.4606 3.4606 1.73 0 ]xsh171.091 222.951 mo
179.832 222.951 li
175.461 226.448 mo
175.461 219.346 li
.554 lw
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
176.772 222.951 mo
176.772 222.228 176.185 221.64 175.461 221.64 cv
174.738 221.64 174.15 222.228 174.15 222.951 cv
174.15 223.676 174.738 224.262 175.461 224.262 cv
176.185 224.262 176.772 223.676 176.772 222.951 cv
ef
%ADOBeginSubsetFont: AIWBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g18 <1C60D8A8C9B7D8BE0123FD0A136BA0F480FD4287FFCF97986718886432AF2C7EB6A3F35B> |-/g28 <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCT+Helvetica /Encoding getdup 63 /g18 putdup 64 /g28 putpop%ADOEndSubsetFont
/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 /g9 /g4 /g13 /g14 /g15 /g10 /g7 /g17 /g37 /g31 /g35 /g34 /g6 /g11 /g12 /g25 /g18 /g28 191{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [6.22522 0 0 -6.22523 0 0 ]msf181.689 237.155 mo(?@9)[3.80293 1.38139 0 ]xsh171.091 234.751 mo
179.832 234.751 li
0 .985 1 .001 cmyk
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AIWBAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCT+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g16 <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/g29 <1C60D8A8C9B7A73D847F857A1BFD24ACB75840E5C7CBB8AB7BE870135525EBD6DBF4EAE3173F6ABCE16E75318AB6C78B406BDB> |-/g27 <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-/g33 <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/g32 <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/g36 <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCT+Helvetica /Encoding getdup 65 /g16 putdup 66 /g29 putdup 67 /g27 putdup 68 /g33 putdup 69 /g32 putdup 70 /g36 putpop%ADOEndSubsetFont
/VIXPCT+Helvetica*1 [33{/.notdef}rp /g3 /g8 /g1 /g2 /g19 /g26 /g22 /g5 /g24 /g20 /g30 /g23 /g38 /g21 /g9 /g4 /g13 /g14 /g15 /g10 /g7 /g17 /g37 /g31 /g35 /g34 /g6 /g11 /g12 /g25 /g18 /g28 /g16 /g29 /g27 /g33 /g32 /g36 185{/.notdef}rp]VIXPCT+Helvetica nfVIXPCT+Helvetica*1 [6.22522 0 0 -6.22523 0 0 ]msf181.689 248.408 mo(A,\)BCDEF8>)[4.15166 3.4606 3.11198 3.112 3.46059 2.07233 3.4606 3.4606 3.46062 0 ]xsh171.091 246.661 mo
179.832 246.661 li
.918 .756 0 0 cmyk
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
169.234 252.56 mo
218.837 252.56 li
218.837 265.016 li
169.234 265.016 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WQDQMX+Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /WQDQMX+Helvetica-Bold def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 33 /g5 putdup 34 /g3 putdup 35 /g6 putdup 36 /g1 putdup 37 /g4 putdup 38 /g2 putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/g5 <1C60D8A8C9B64EDFFB17421827B34F490AD3F7DCEB896982B80C975C3B24ABC9E3BA94702EA7A9A2D1C57D5ECFF1E5B2ADB8BECBF2CCCABA4765441A2C884484366D66E34409E5D381DF4C299795B345D7840F61F2BAAEA7914CCFBF78A13A5B6BB49CDF> |-/g3 <1C60D8A8C9B6079F62DF5DCE91F4BDC34B1BD83B75605F2DD2714FE1CE7BAEBE63BFCF420A2FD3B9E37153E04FD2> |-/g6 <1C60D8A8C9B64EDFB7523A7CB42EDAFEB7A57D7E602730D163703AB2E3742CE0B6B5031548F45E27EFEFB540FE387F8D57A682608C79329F4A9151F797C0BCE8B604F7FE451B11641163326012E74FF90725FC4946BE08E582C7990A27F05BF122930EF15C33C6A81641E7FDAB6583B2FA7DF36B61736BAEC2A282E5FA64D01E02E9F2034809BFCF9FB16CEAD631B349973A1734AC0C894FE2F2A758604EB0CD036EAE9087D8FFE9EBB3F6918A69E2C9D04BA54611686354B12441475A72B74E> |-/g1 <1C60D8A8C9B854D00D> |-/g4 <1C60D8A8C9B6B41CB4F0B3BEE1A6CAEFC0BF482EC1CC7D2F0198309C9F0FDCD50F606DDBD44D23F589330B462EBB855D5C7D5E33D1AB31D947D9B1D0155EEAFD60545ACDB4485F1DD800CF449A8552776F4F18221C> |-/g2 <1C60D8A8C9B6079F2D195D2F475FB0496F57CAED376D8723354DEC9F1B1DE5681520D221B2480D1D8BDCDE504128C39D7EB2E84513BAC1DE0FB32782218FDC6E9C50EDB3243AB03AB27341C2AB66BCC7BEF1938A37561E60AF9AC58E646150BF50A2A4F9C83CE1E9DB03C86EEE00383C4EF0503E9E481C5C2D47FEADCC38BAEC2FF5C5F148176C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCV+Helvetica-Bold /WQDQMX+Helvetica-Bold findfont ct_VMDictPut/VIXPCV+Helvetica-Bold*1 [33{/.notdef}rp /g5 /g3 /g6 /g1 /g4 /g2 217{/.notdef}rp]VIXPCV+Helvetica-Bold nfVIXPCV+Helvetica-Bold*1 [5.91401 0 0 -5.91401 0 0 ]msf181.689 260.864 mo(!"#!$%&)[3.9447 4.26991 3.94469 3.94467 1.64528 4.92635 0 ]xsh171.091 258.788 mo
179.832 258.788 li
0 .985 1 .001 cmyk
.83 lw
[1.107 1.107 ] 0 dsh
gsave
[1.18422 0 0 -1.18422 -21.8838 385.156 ]ct
@
grestore newpath
grestore
grestore
gsave
294.232 366.601 mo
535.232 366.601 li
535.232 -.399078 li
294.232 -.399078 li
cp
clp
294.292 .0198975 mo
301.229 .0198975 li
301.229 175.845 li
294.292 175.845 li
cp
0 0 0 0 cmyk
f
294.292 176.49 mo
301.229 176.49 li
301.229 366.601 li
294.292 366.601 li
cp
f
294.292 .0198975 mo
535.306 .0198975 li
535.306 175.845 li
294.292 175.845 li
cp
f
grestore
gsave
294.232 -.398987 mo
535.232 -.398987 li
535.232 366.601 li
294.232 366.601 li
cp
clp
gsave
294.232 366.601 mo
535.232 366.601 li
535.232 -.399078 li
294.232 -.399078 li
cp
clp
331.685 8.76489 mo
523.253 8.76489 li
523.253 146.41 li
331.685 146.41 li
cp
0 0 0 0 cmyk
f
.362 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
331.685 146.41 mo
523.253 146.41 li
523.253 8.76495 li
331.685 8.76495 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
331.685 8.76489 mo
523.253 8.76489 li
523.253 146.41 li
331.685 146.41 li
cp
0 0 0 0 cmyk
f
331.685 146.41 mo
523.253 146.41 li
523.253 8.76495 li
331.685 8.76495 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
331.685 146.41 mo
335.907 146.41 li
335.907 140.499 li
340.009 140.499 li
340.009 134.588 li
344.231 134.588 li
344.231 128.918 li
348.333 128.918 li
348.333 123.248 li
352.555 123.248 li
352.555 117.096 li
356.656 117.096 li
356.656 111.667 li
360.879 111.667 li
360.879 105.997 li
364.98 105.997 li
364.98 104.067 li
369.202 104.067 li
369.202 103.946 li
373.304 103.946 li
373.304 104.429 li
377.526 104.429 li
377.526 103.826 li
381.628 103.826 li
381.628 104.55 li
385.85 104.55 li
385.85 104.067 li
389.952 104.067 li
389.952 104.188 li
394.174 104.188 li
394.174 105.636 li
398.275 105.636 li
398.275 105.394 li
402.497 105.394 li
402.497 106.359 li
406.599 106.359 li
406.599 105.756 li
410.821 105.756 li
410.821 106.359 li
414.923 106.359 li
414.923 107.445 li
419.145 107.445 li
419.145 106.721 li
423.247 106.721 li
423.247 107.204 li
427.469 107.204 li
427.469 106.721 li
431.57 106.721 li
431.57 105.877 li
435.793 105.877 li
435.793 102.499 li
439.894 102.499 li
439.894 97.0699 li
444.117 97.0699 li
444.117 91.1589 li
448.218 91.1589 li
448.218 76.8039 li
452.44 76.8039 li
452.44 66.5499 li
456.542 66.5499 li
456.542 78.855 li
460.764 78.855 li
460.764 97.4319 li
464.866 97.4319 li
464.866 107.566 li
469.088 107.566 li
469.088 114.08 li
473.19 114.08 li
473.19 118.061 li
477.412 118.061 li
477.412 120.956 li
481.513 120.956 li
481.513 122.766 li
485.736 122.766 li
485.736 125.299 li
489.837 125.299 li
489.837 127.832 li
494.059 127.832 li
494.059 131.089 li
498.282 131.089 li
498.282 133.02 li
502.383 133.02 li
502.383 136.397 li
506.606 136.397 li
506.606 139.172 li
510.707 139.172 li
510.707 145.324 li
514.929 145.324 li
514.929 146.41 li
523.253 146.41 li
gsave
grestore
/2140036696.0 
<<
/ID /2140036696.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 100 100 ] 
/XStep 100 
/YStep 100 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
100 0 li
100 100 li
0 100 li
cp
clp
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
0 0 mo
100 100 li
false sop
0 .985 1 .001 cmyk
@
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/2140036696.0 /Pattern get_res
[.029 0 0 -.029 412.229 181.615 ]make_pattern set_pattern
ef
2 vmreclaim
.724 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
331.685 146.41 mo
335.907 146.41 li
335.907 140.499 li
340.009 140.499 li
340.009 134.588 li
344.231 134.588 li
344.231 128.918 li
348.333 128.918 li
348.333 123.248 li
352.555 123.248 li
352.555 117.096 li
356.656 117.096 li
356.656 111.667 li
360.879 111.667 li
360.879 105.997 li
364.98 105.997 li
364.98 104.067 li
369.202 104.067 li
369.202 103.946 li
373.304 103.946 li
373.304 104.429 li
377.526 104.429 li
377.526 103.826 li
381.628 103.826 li
381.628 104.55 li
385.85 104.55 li
385.85 104.067 li
389.952 104.067 li
389.952 104.188 li
394.174 104.188 li
394.174 105.636 li
398.275 105.636 li
398.275 105.394 li
402.497 105.394 li
402.497 106.359 li
406.599 106.359 li
406.599 105.756 li
410.821 105.756 li
410.821 106.359 li
414.923 106.359 li
414.923 107.445 li
419.145 107.445 li
419.145 106.721 li
423.247 106.721 li
423.247 107.204 li
427.469 107.204 li
427.469 106.721 li
431.57 106.721 li
431.57 105.877 li
435.793 105.877 li
435.793 102.499 li
439.894 102.499 li
439.894 97.0699 li
444.117 97.0699 li
444.117 91.159 li
448.218 91.159 li
448.218 76.804 li
452.44 76.804 li
452.44 66.55 li
456.542 66.55 li
456.542 78.8549 li
460.764 78.8549 li
460.764 97.4319 li
464.866 97.4319 li
464.866 107.566 li
469.088 107.566 li
469.088 114.08 li
473.19 114.08 li
473.19 118.061 li
477.412 118.061 li
477.412 120.956 li
481.513 120.956 li
481.513 122.766 li
485.736 122.766 li
485.736 125.299 li
489.837 125.299 li
489.837 127.832 li
494.059 127.832 li
494.059 131.089 li
498.282 131.089 li
498.282 133.02 li
502.383 133.02 li
502.383 136.397 li
506.606 136.397 li
506.606 139.172 li
510.707 139.172 li
510.707 145.324 li
514.929 145.324 li
514.929 146.41 li
523.253 146.41 li
false sop
0 .985 1 .001 cmyk
@
.362 lw
331.685 146.41 mo
523.253 146.41 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: PRJAAA+Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /PRJAAA+Helvetica-Bold def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 33 /g3 putdup 34 /g1 putdup 35 /g2 putdup 36 /g21 putdup 37 /g28 putdup 38 /g24 putdup 39 /g20 putdup 40 /g5 putdup 41 /g31 putdup 42 /g26 putdup 43 /g38 putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings12 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/g3 <1C60D8A8C9B81F2C3AB1B16A6E1AE2073D977B7DEBBB7FD67C209E382B3E164F2FC748C9013310E801B9D60E1F62C24C1118E395F6F8936B4B0F2F517CCC3E0AD7B20618CE73D7A005611C9C9D80414388> |-/g1 <1C60D8A8C9B854D00D> |-/g2 <1C60D8A8C9B81F2C7BD2BD0C8975FCB12435C58353E5EBCFA21DB397D62CB612300B01D60ED9C917464CC5A4B102EB999C73EE5C09997C12F62929C8DD08D3014414F633462F7585ABFDA80591095453> |-/g21 <1C60D8A8C9B6B41CB4F0B3BEE1A6CAEFC0BF482EC1CC7D2F0198309C9F0FDCD50F606DDBD44D23F589330B462EBB855D5C7D5E33D1AB31D947D9B1D0155EEAFD60545ACDB4485F1DD800CF449A8552776F4F18221C> |-/g28 <1C60D8A8C9B7EF322BA45AA2EF7BD5EAECAF85AF93C215781DFD7DA13F94BB4115BE9214BE159174D684F62C2005A0180C6808F64A08B396F763189FED746BF18ED4EE6E66DDE691142C37E3D614F8DB7B75C14A9F846CCAD13261BA0F086A233499153D3DE84AE55E921B6458DA81ABE3A274371E0DC1724FB71E09D7A2DF5E64CCD5B0577B8A6829193E633FA6CD7C2838A9AF9E8E0D8892F0FE> |-/g24 <1C60D8A8C9B64EDFF43DD2870D4682FBC1495FA58F995AA6853533009263A3BA3DBE0094FFB6E8> |-/g20 <1C60D8A8C9B7EF327DC3B2E926FBC2E182F565BB3EDA41D409232B44196DB5917BFAD2D9D78B113E752346D321CB0B88E61F971C481817E317651CF864C1EA55F140C9AD81D2C001B4C2821321004C4AAF12FB> |-/g5 <1C60D8A8C9B854D056DA9ACF2FD9295DCFA9EA350C95A3> |-/g31 <1C60D8A8C9B59F85E943960B6A65D4B2F64B00C4B40B01286B3C82A10C6D1643B6A00AAC5CFCADA0EB991D1B3C664CF57001567C470EB0A43C79983E64AF4489B4B8E24F9EB06CFA28C8A0DDAEC44973CEA217F66CD0544CCE81161D4DA90D120427AEEF311B7B6686C094A1EA98C9E023CB840F428D192A02E1BEFA91A3E9DEE66822BD73369C214366BBF71EE6DC3CA70AD870D354E56D5200282EC9239529FEDB45FDE6E3295FB077AA1EF603> |-/g26 <1C60D8A8C9B7EF322BE880EA00DBE3D8876C5FB7647BA8CCC58F470AD954361B3D91651144567349F627F201CF4B889415AEB7207EF345F45727C83FD2AD41468A288BFAB1F1F8FCB791EF1AEC76E7D581984F9D9441BE677D94FB963C5BC5B27908DAD995ADB6FCD1CBF7C384901475354EB3A245D3307FEAFA4358FCD91A73A9A2D0B4DA6C6FAD93BFAD58639AD4966C9A8F5E818248BC94F832DB718423280F618BE3B1ED95509C1B2FEAFB5A791924A6F1D5665394FA5CC00C95995C34120BDD0AD5EC6C89EEA20ACD877A1340E12A0053EE1F5E0DCED83F6B965D6FD267E8BD205A0A960ED3D04B55781B> |-/g38 <1C60D8A8C9B7EF322B529517FE56C1843BE1A93F6E373C00500B87BE66DB104949CFDAFF6A742E48CB31ACEC02ED038FC930C57F837E549FC2A6> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCW+Helvetica-Bold /PRJAAA+Helvetica-Bold findfont ct_VMDictPut/VIXPCW+Helvetica-Bold*1 [33{/.notdef}rp /g3 /g1 /g2 /g21 /g28 /g24 /g20 /g5 /g31 /g26 /g38 212{/.notdef}rp]VIXPCW+Helvetica-Bold nfVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf495.844 162.442 mo(!"#$%&!)[2.74658 2.29465 2.74658 6.8707 4.58597 5.50165 0 ]xsh%ADOBeginSubsetFont: SLIQMX+Symbol Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /SLIQMX+Symbol def/FontInfo 8 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (Symbol) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999998 0 0 0.000999998 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 112 /pi putdup 121 /psi putdef/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 -0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/pi <1C60D8A8C9B7967678F2ED2478535EB7B50DECCE78F28089B307456EDB9089371383F74718798FCF22D6D686185B9074732F57B819259A4E99DD8D356BD55E81236AB1C67A050E41981869DEEA9296AE9124988026D74E5E4B51B2F69057FA95946C8B081DF5096D1A21ACAE3DDF26EB12D2423765790F7377340145B5A19A613EEE3DA5D67DE190CE253AC7061757FE656DCAC0FAC8E090EBE75E963E5EADC51139339E48BC7859A965> |-/psi <1C60D8A8C9B6232B60CC295600FD0E895E3215A2016BDDF6F682D50A2A7103E46C09816CE9D16C068165579B09F2D6EF8CFF06DF24FF361CFD0502FA832C968069C61BACF661F555512321BD01A3245630BF8C2945315C8AE8FF210EA2AA7D5D6CFC874B1F133C8B905508E3ED43022B7325ECE021285DCE0D102625220D52ED0F8B0D77EB6D76DACC6D85EC2965E20CC13A05390F384BC1C20361CB25E4EF10E2833A5460732D5D1ACD5C0A48C5C0A45EBCC3CA1E37FF630C83CFC5D5B36C8D96D938490759C937155EB82A6C7DDAF2FA8F5B> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCX+Symbol /SLIQMX+Symbol findfont ct_VMDictPut/VIXPCX+Symbol*1 [112{/.notdef}rp /pi 8{/.notdef}rp /psi 134{/.notdef}rp]VIXPCX+Symbol nfVIXPCX+Symbol*1 [8.2482 0 0 -8.2482 0 0 ]msf490.001 162.442 mo(y)shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf482.784 162.442 mo('\()[4.58435 0 ]xshVIXPCS+Symbol*1 [5.4988 0 0 -5.4988 0 0 ]msf479.691 160.036 mo( )shVIXPCX+Symbol*1 [8.2482 0 0 -8.2482 0 0 ]msf475.222 162.442 mo(p)shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf472.473 162.442 mo(#)shVIXPCW+Helvetica-Bold*1 [5.4988 0 0 -5.4988 0 0 ]msf461.476 164.504 mo(\)*+)[4.88739 3.05621 0 ]xshVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf454.946 162.442 mo($)sh335.907 142.188 mo
335.907 146.41 li
356.656 144.239 mo
356.656 146.41 li
377.526 142.188 mo
377.526 146.41 li
398.275 144.239 mo
398.275 146.41 li
419.145 142.188 mo
419.145 146.41 li
439.894 144.239 mo
439.894 146.41 li
460.764 142.188 mo
460.764 146.41 li
481.513 144.239 mo
481.513 146.41 li
502.383 142.188 mo
502.383 146.41 li
335.907 142.188 mo
335.907 146.41 li
502.383 142.188 mo
502.383 146.41 li
523.253 144.239 mo
523.253 146.41 li
@
%ADOBeginSubsetFont: PRJAAA+Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCW+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g9 <1C60D8A8C9B7EF32790C706536FBCA9C687925B5B4FABEAE8BCA355BB7699EF0BBCAC5C720443DFEFD9517FCDB50227CAFA0B1BC8F5E2929D293FEBB0161863644456D93391015F11449FA039DFAEC2384374865B87BF91FF1CFF670A564C56D6D1EEBFAE73674973DD3BE019962E88EDB48CCA67FCF8581CC9EAE0E2F69925E89066A1C3B75B27F486AF616C10125A5819DB8FAD5C4AF5E892C99FCCF11DC858ED73AA0FBD994A969E551DDFC4F0355DD1EA3C793861596E5EEC9C0BCAD653A2E950B0984FC4218B2> |-/g12 <1C60D8A8C9B7EF322B2AB5D95C092AC08A8FA9E6E90178425FC3023EE163FBBB0C4C23FAA1FD09C5CEBA2F8D16ED252A3A02C5A9D31F62C237401C5C07EE67EC5DDFF48A10AD9FB3B421FB28A61B27F156A6CD99204B9AAC03A17B0DC84614FBCDC18A74279B9F91788ADFAF60E6A18F89ED91E9DC2E1FD10B5B4A3B3B50CD504D58870E7E8A3324489CF0DB6914BC36B4989986C84D5E1B8E6B608AE46198B2E0DFEC8FC08B3B6D14A96B0A8B4F3BF1D1DB361FDD8493AD69465BFF88E8A92E17EECC370E34F11E16B1D5> |-/g6 <1C60D8A8C9B7EF322B577C35405FE980B30B5532DD3CBB7365584877E20F92311A1F459466CF34AF5F89F0C196C16D374E3F6BD544BCC9EF33D0D39AEB12EEF06FCF64E0DF163253C52FB4744A6220E7FE064A251B513CDA6F2589D7EC47093F246ECE2926DF73BEECF3FE22CB5A0FF5193F54C1CA84442D2DE0C58BC520CD55B948ABE5D90ABBC6> |-/g13 <1C60D8A8C9B7EF3224D3B68E16848DA6BF95CF05B11E6E5E7BB2F4DB72B1E6DAA983591B4D28CD8B15B45BBDB5D2D64DB3DF4052C21B62E89751F5A17EA96548C12C07D5F35719BAAD> |-/g14 <1C60D8A8C9B7EF322B2AB5CD890512D8A10A7C4FB1C086884A69B70173978AD3C12843C137F3C47191620122957B7A32D499659E4C31E367A4294986D3B62768212441E0CEB52811614B3AB9062CC55788B1C2779E5D72F6D2C5A649695E3BCB6CCAFF0AA42B338C2A5596057308BCB9FF257BA3AD30DE2BE751B5EBB65C8BF3389C5B040120DC0396C4E8743590D947CC6ED22B8F55D1755A4AA115A08DE5016C71DC0DA5F0C4653A8DA414F90B8381B09435E555142A22533E31A4304C5453743FE79BB912DFAC58F6B5719EC7020C9A2E9ECA99A2998DB2EF6A544B2B2ECBAA465C8BBDE0D0CEB4265974487DA3D9F09A62D8771678960B96> |-/g15 <1C60D8A8C9B7EF327539A3D42427A4725B7E2038858231CB84C4BC163B54B06DD6E289EB6A99742F71588BB6498210F55D2FAE1288936169B6DB467F069F3333928E9A8FEB50177A98BB38927EEB88EF4EBF8717C7C6F3B1D0ACBD8F93F9209C55737D1D7CEAE1EBED17766C6B8A3F4B763901CE69A20A8DD2FB6A298375D815AA6D67D27F2EB4606A090519D100902EEB756F998DC79AD8B5322B59DA41CA7B3569C9BC401482AEE8DBD447208BFE4887DA58ABD87C64843677F7A8E394544E6993> |-/g10 <1C60D8A8C9B7EF3224EF149A8BB3D55CB4D1E753B4BE9B0F75750CC3D6B5EF82A0B915415A5BE8C395D349B6571A5FFB6CBD0209C0E6715BAED2FD> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCW+Helvetica-Bold /Encoding getdup 44 /g9 putdup 45 /g12 putdup 46 /g6 putdup 47 /g13 putdup 48 /g14 putdup 49 /g15 putdup 50 /g10 putpop%ADOEndSubsetFont
/VIXPCW+Helvetica-Bold*1 [33{/.notdef}rp /g3 /g1 /g2 /g21 /g28 /g24 /g20 /g5 /g31 /g26 /g38 /g9 /g12 /g6 /g13 /g14 /g15 /g10 205{/.notdef}rp]VIXPCW+Helvetica-Bold nfVIXPCW+Helvetica-Bold*1 [7.2172 0 0 -7.2172 0 0 ]msf327.786 153.506 mo(,-..,/..,0..,1..2...)[4.01132 4.01132 4.01129 29.5458 4.01132 4.01132 4.01132 29.5458 4.01132 4.01132 4.01132 29.5458 4.01129 4.01132 4.01132 29.8922 4.01129 4.01132 4.01132 0 ]xsh331.685 146.41 mo
331.685 8.76584 li
@
%ADOBeginSubsetFont: PRJAAA+Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCW+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g17 <1C60D8A8C9B6079F2D195D2F475FB0496F57CAED376D8723354DEC9F1B1DE5681520D221B2480D1D8BDCDE504128C39D7EB2E84513BAC1DE0FB32782218FDC6E9C50EDB3243AB03AB27341C2AB66BCC7BEF1938A37561E60AF9AC58E646150BF50A2A4F9C83CE1E9DB03C86EEE00383C4EF0503E9E481C5C2D47FEADCC38BAEC2FF5C5F148176C> |-/g33 <1C60D8A8C9B7D8BE16E0CC961AEF519BE656EC753A8172FD3365F902B7C752134E0D6062F2934F0088DB7D58C66CCBA57D3D7D362C8679BD71F98F68353DF00A6FE4BC9DC38D8621ADC978F735588AE608451BBF7B1F36DE1ABDB4D743E861A8CEED1A56243288AD7237419D7149DAF8582921DC7F71072F99464BF4B424500A0E0A81AC> |-/g37 <1C60D8A8C9B7D8BE298ED182A3F33DCB7BE539E6C3399DF0FB84931D328A058718BA576345AB2E09C6F45BA11DD49FF63E46039F6DCA1460946638F085A9C4202F8E676A0955411ED6C0E7E9A212C6F8002DEB99D3B9D78F19BAB4F5709645F4B6BE5E366BC1C978> |-/g32 <1C60D8A8C9B7D8BE16D8563F2A820135798DB83DD6B1FB4BEEDD6BE48B5FE588992ED2D6619960E60863C9F44AA1F533124F0383142FF7EEADB4AF1E517ED95B69DCD15F12872381FB9701963D2E25CAEBA64306BF64AB37AA8CAB3DCB77> |-/g36 <1C60D8A8C9B81F2C1282009E5D95CE7F7F46B3356102279C4BC0F18BE99679A2FBE0B24A5C5CDAE5CD8FAEB44771EF6D329849A78B1C197090EDEDC41A5628E7A0D30EBF1C775B98D05B427C008446AE8ADA9F57D4B8> |-/g35 <1C60D8A8C9B7EF3276785A356AF9DD9181F27C4252E9DACE79B7DB0370DCA0F85F2A56C0E905F3608D53B08547BCFA1E15664D76297FA3EA82E19324C21C3817083D0B133768886E32780B3693CC1A54C69A839D656ADAACCF3EF0C2DED6AEA97A43D9D5150EF29F02BAE794D0AAD927DFAE8C63D2C80CFCA65FDAAC0B332AC718C253D1D2EC2E3CF8D5C07F36B7AE5922387582C705BE031EB76063A112BF895DE22DA9D9C7170534EB3741A864E522B78EF0730F66150AFF> |-/g7 <1C60D8A8C9B7EF322B95725327D721A78FE0D59AD4E04529F324F6D510C193519C49DD51CFCFDC3D3422114B050140740B4A8D8EC36935C401> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCW+Helvetica-Bold /Encoding getdup 51 /g17 putdup 52 /g33 putdup 53 /g37 putdup 54 /g32 putdup 55 /g36 putdup 56 /g35 putdup 57 /g7 putpop%ADOEndSubsetFont
/VIXPCW+Helvetica-Bold*1 [33{/.notdef}rp /g3 /g1 /g2 /g21 /g28 /g24 /g20 /g5 /g31 /g26 /g38 /g9 /g12 /g6 /g13 /g14 /g15 /g10 /g17 /g33 /g37 /g32 /g36 /g35 /g7 198{/.notdef}rp]VIXPCW+Helvetica-Bold nfVIXPCW+Helvetica-Bold*1 [0 -8.2482 -8.2482 0 0 0 ]msf315.07 67.5869 mo(345678\(9."$%&)[-5.9552 -5.03958 -5.03958 -5.03961 -2.74658 -4.586 -2.293 -4.586 -4.586 -2.29465 -6.87067 -4.586 0 ]ysh337.475 146.41 mo
331.685 146.41 li
334.58 142.912 mo
331.685 142.912 li
334.58 139.534 mo
331.685 139.534 li
334.58 136.036 mo
331.685 136.036 li
334.58 132.537 mo
331.685 132.537 li
337.475 129.159 mo
331.685 129.159 li
334.58 125.661 mo
331.685 125.661 li
334.58 122.283 mo
331.685 122.283 li
334.58 118.785 mo
331.685 118.785 li
334.58 115.407 mo
331.685 115.407 li
337.475 111.909 mo
331.685 111.909 li
334.58 108.531 mo
331.685 108.531 li
334.58 105.032 mo
331.685 105.032 li
334.58 101.655 mo
331.685 101.655 li
334.58 98.1559 mo
331.685 98.1559 li
337.475 94.779 mo
331.685 94.779 li
334.58 91.2799 mo
331.685 91.2799 li
334.58 87.9019 mo
331.685 87.9019 li
334.58 84.404 mo
331.685 84.404 li
334.58 81.0259 mo
331.685 81.0259 li
337.475 77.5269 mo
331.685 77.5269 li
334.58 74.15 mo
331.685 74.15 li
334.58 70.6509 mo
331.685 70.6509 li
334.58 67.2729 mo
331.685 67.2729 li
334.58 63.775 mo
331.685 63.775 li
337.475 60.3969 mo
331.685 60.3969 li
334.58 56.899 mo
331.685 56.899 li
334.58 53.521 mo
331.685 53.521 li
334.58 50.0229 mo
331.685 50.0229 li
334.58 46.645 mo
331.685 46.645 li
337.475 43.146 mo
331.685 43.146 li
334.58 39.769 mo
331.685 39.769 li
334.58 36.27 mo
331.685 36.27 li
334.58 32.7719 mo
331.685 32.7719 li
334.58 29.394 mo
331.685 29.394 li
337.475 25.896 mo
331.685 25.896 li
334.58 22.5179 mo
331.685 22.5179 li
334.58 19.0199 mo
331.685 19.0199 li
334.58 15.6419 mo
331.685 15.6419 li
334.58 12.1429 mo
331.685 12.1429 li
337.475 8.76584 mo
331.685 8.76584 li
@
%ADOBeginSubsetFont: PRJAAA+Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCW+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g11 <1C60D8A8C9B7EF32790C4FC69B8EA03928B61DADD8C50455CADEDF2418F37ED7700010EC15E8729B91D0A526987ADE89E8469D7D8CAA664EA35C444CC2C41A138F4672A2E049E340988B0B97FDC000AAB722CB843AEB7DABD107932C6A3D6E96209A476C436D7435AD6B45A24CEBCDC325E3714D025498B63C46C1A037B8BFFCCC088A3E515E9AA976E8420A3F77B60825356C> |-/g8 <1C60D8A8C9B7EF327699F8160463A580389BACE06A766B94145BA5F31A52EBA0EB50E1A1CD8E486A58F822D4B46CDC27CA76DF32A08949B875442C8B06AAE41CBCCDFBA550DF17554B399BC63F2FE83591D5C5DB6C4413F303C830E73979E139FD9340FB4F9C32763288200A85F5A3FBC52B118C5018F7AA2DDEAC297CE153B0347CAB3BCC1DCB69786FFD> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCW+Helvetica-Bold /Encoding getdup 58 /g11 putdup 59 /g8 putpop%ADOEndSubsetFont
/VIXPCW+Helvetica-Bold*1 [33{/.notdef}rp /g3 /g1 /g2 /g21 /g28 /g24 /g20 /g5 /g31 /g26 /g38 /g9 /g12 /g6 /g13 /g14 /g15 /g10 /g17 /g33 /g37 /g32 /g36 /g35 /g7 /g11 /g8 196{/.notdef}rp]VIXPCW+Helvetica-Bold nfVIXPCW+Helvetica-Bold*1 [7.2172 0 0 -7.2172 0 0 ]msf326.411 149.038 mo(.)sh326.067 131.854 mo(:)sh322.287 114.67 mo(9.)[4.01132 0 ]xsh322.287 97.4862 mo(9:)[4.01132 0 ]xsh322.287 80.302 mo(;.)[4.01132 0 ]xsh322.287 62.7743 mo(;:)[4.01132 0 ]xsh322.287 45.5902 mo(,.)[4.01132 0 ]xsh322.287 28.406 mo(,:)[4.01132 0 ]xsh322.287 11.2219 mo(2.)[4.01132 0 ]xsh331.685 146.41 mo
331.685 145.686 li
335.907 145.686 li
335.907 140.74 li
340.009 140.74 li
340.009 134.829 li
344.231 134.829 li
344.231 129.159 li
348.333 129.159 li
348.333 123.489 li
352.555 123.489 li
352.555 117.458 li
356.656 117.458 li
356.656 112.029 li
360.879 112.029 li
360.879 106.359 li
364.98 106.359 li
364.98 104.55 li
369.202 104.55 li
369.202 104.309 li
373.304 104.309 li
373.304 104.912 li
377.526 104.912 li
377.526 104.429 li
381.628 104.429 li
381.628 105.273 li
385.85 105.273 li
385.85 104.791 li
389.952 104.791 li
389.952 105.032 li
394.174 105.032 li
394.174 106.601 li
398.275 106.601 li
398.275 106.48 li
402.497 106.48 li
402.497 107.686 li
406.599 107.686 li
406.599 107.324 li
410.821 107.324 li
410.821 108.169 li
414.923 108.169 li
414.923 109.737 li
419.145 109.737 li
419.145 109.616 li
423.247 109.616 li
423.247 110.823 li
427.469 110.823 li
427.469 111.667 li
431.57 111.667 li
431.57 112.632 li
435.793 112.632 li
435.793 112.753 li
439.894 112.753 li
439.894 113.356 li
444.117 113.356 li
444.117 114.321 li
448.218 114.321 li
448.218 116.493 li
452.44 116.493 li
452.44 116.734 li
456.542 116.734 li
456.542 117.096 li
460.764 117.096 li
460.764 119.509 li
464.866 119.509 li
464.866 120.353 li
469.088 120.353 li
469.088 122.042 li
473.19 122.042 li
473.19 123.489 li
477.412 123.489 li
477.412 124.816 li
481.513 124.816 li
481.513 125.782 li
485.736 125.782 li
485.736 127.47 li
489.837 127.47 li
489.837 129.642 li
494.059 129.642 li
494.059 132.537 li
498.282 132.537 li
498.282 134.226 li
502.383 134.226 li
502.383 137.363 li
506.606 137.363 li
506.606 140.137 li
510.707 140.137 li
510.707 146.048 li
514.929 146.048 li
514.929 146.41 li
523.253 146.41 li
.076 0 1 0 cmyk
ef
.724 lw
[1.448 1.448 ] 0 dsh
333.736 145.686 mo
337.958 140.74 li
342.059 134.829 li
346.282 129.159 li
350.383 123.489 li
354.606 117.458 li
358.707 112.029 li
362.929 106.359 li
367.031 104.55 li
371.253 104.309 li
375.355 104.912 li
379.577 104.429 li
383.799 105.273 li
387.901 104.791 li
392.123 105.032 li
396.225 106.6 li
400.447 106.48 li
404.548 107.686 li
408.77 107.324 li
412.872 108.169 li
417.094 109.737 li
421.196 109.616 li
425.418 110.823 li
429.52 111.667 li
433.742 112.632 li
437.843 112.753 li
442.066 113.356 li
446.167 114.321 li
450.39 116.493 li
454.491 116.734 li
458.713 117.096 li
462.815 119.509 li
467.037 120.353 li
471.139 122.042 li
475.361 123.489 li
479.463 124.816 li
483.685 125.782 li
487.786 127.47 li
492.009 129.642 li
496.11 132.537 li
500.333 134.226 li
504.434 137.363 li
508.656 140.137 li
512.758 146.048 li
516.98 146.41 li
521.082 146.41 li
.918 .756 0 0 cmyk
@
[] 0 dsh
342.059 131.331 mo
342.059 123.61 li
342.059 120.956 mo
342.059 113.115 li
341.456 131.331 mo
342.783 131.331 li
341.456 113.115 mo
342.783 113.115 li
1 /0 /CSD get_res sepcs
1 sep
@
343.447 122.283 mo
343.447 121.517 342.825 120.896 342.059 120.896 cv
341.293 120.896 340.672 121.517 340.672 122.283 cv
340.672 123.049 341.293 123.67 342.059 123.67 cv
342.825 123.67 343.447 123.049 343.447 122.283 cv
ef
346.282 136.88 mo
346.282 130.486 li
346.282 127.832 mo
346.282 121.439 li
345.558 136.88 mo
347.006 136.88 li
345.558 121.439 mo
347.006 121.439 li
@
347.669 129.159 mo
347.669 128.393 347.048 127.772 346.282 127.772 cv
345.516 127.772 344.894 128.393 344.894 129.159 cv
344.894 129.925 345.516 130.546 346.282 130.546 cv
347.048 130.546 347.669 129.925 347.669 129.159 cv
ef
350.383 134.105 mo
350.383 127.109 li
350.383 124.334 mo
350.383 117.337 li
349.78 134.105 mo
351.107 134.105 li
349.78 117.337 mo
351.107 117.337 li
@
351.77 125.661 mo
351.77 124.895 351.149 124.273 350.383 124.273 cv
349.617 124.273 348.996 124.895 348.996 125.661 cv
348.996 126.427 349.617 127.048 350.383 127.048 cv
351.149 127.048 351.77 126.427 351.77 125.661 cv
ef
354.606 119.87 mo
354.606 109.858 li
354.606 107.083 mo
354.606 97.0699 li
353.882 119.87 mo
355.329 119.87 li
353.882 97.0699 mo
355.329 97.0699 li
@
355.993 108.531 mo
355.993 107.765 355.372 107.143 354.606 107.143 cv
353.84 107.143 353.218 107.765 353.218 108.531 cv
353.218 109.297 353.84 109.918 354.606 109.918 cv
355.372 109.918 355.993 109.297 355.993 108.531 cv
ef
358.707 131.331 mo
358.707 123.61 li
358.707 120.956 mo
358.707 113.115 li
358.104 131.331 mo
359.431 131.331 li
358.104 113.115 mo
359.431 113.115 li
@
360.094 122.283 mo
360.094 121.517 359.473 120.896 358.707 120.896 cv
357.941 120.896 357.32 121.517 357.32 122.283 cv
357.32 123.049 357.941 123.67 358.707 123.67 cv
359.473 123.67 360.094 123.049 360.094 122.283 cv
ef
362.929 114.08 mo
362.929 102.982 li
362.929 100.207 mo
362.929 89.2289 li
362.206 114.08 mo
363.653 114.08 li
362.206 89.2289 mo
363.653 89.2289 li
@
364.317 101.655 mo
364.317 100.889 363.695 100.267 362.929 100.267 cv
362.163 100.267 361.542 100.889 361.542 101.655 cv
361.542 102.421 362.163 103.042 362.929 103.042 cv
363.695 103.042 364.317 102.421 364.317 101.655 cv
ef
367.031 111.064 mo
367.031 99.6039 li
367.031 96.8289 mo
367.031 85.369 li
366.428 111.064 mo
367.755 111.064 li
366.428 85.369 mo
367.755 85.369 li
@
368.418 98.1559 mo
368.418 97.39 367.797 96.769 367.031 96.769 cv
366.265 96.769 365.643 97.39 365.643 98.1559 cv
365.643 98.9219 366.265 99.5429 367.031 99.5429 cv
367.797 99.5429 368.418 98.9219 368.418 98.1559 cv
ef
371.253 122.886 mo
371.253 113.356 li
371.253 110.582 mo
371.253 101.052 li
370.529 122.886 mo
371.977 122.886 li
370.529 101.051 mo
371.977 101.051 li
@
372.64 111.909 mo
372.64 111.143 372.019 110.521 371.253 110.521 cv
370.487 110.521 369.866 111.143 369.866 111.909 cv
369.866 112.675 370.487 113.296 371.253 113.296 cv
372.019 113.296 372.64 112.675 372.64 111.909 cv
ef
375.355 122.886 mo
375.355 113.356 li
375.355 110.582 mo
375.355 101.052 li
374.752 122.886 mo
376.079 122.886 li
374.752 101.051 mo
376.079 101.051 li
@
376.742 111.909 mo
376.742 111.143 376.121 110.521 375.355 110.521 cv
374.589 110.521 373.967 111.143 373.967 111.909 cv
373.967 112.675 374.589 113.296 375.355 113.296 cv
376.121 113.296 376.742 112.675 376.742 111.909 cv
ef
379.577 119.87 mo
379.577 109.858 li
379.577 107.083 mo
379.577 97.0699 li
378.853 119.87 mo
380.301 119.87 li
378.853 97.0699 mo
380.301 97.0699 li
@
380.964 108.531 mo
380.964 107.765 380.343 107.143 379.577 107.143 cv
378.811 107.143 378.19 107.765 378.19 108.531 cv
378.19 109.297 378.811 109.918 379.577 109.918 cv
380.343 109.918 380.964 109.297 380.964 108.531 cv
ef
383.799 95.985 mo
383.799 82.353 li
383.799 79.5789 mo
383.799 65.946 li
383.075 95.985 mo
384.402 95.985 li
383.075 65.946 mo
384.402 65.946 li
@
385.186 81.0259 mo
385.186 80.2599 384.565 79.6389 383.799 79.6389 cv
383.033 79.6389 382.412 80.2599 382.412 81.0259 cv
382.412 81.7919 383.033 82.4129 383.799 82.4129 cv
384.565 82.4129 385.186 81.7919 385.186 81.0259 cv
ef
387.901 128.556 mo
387.901 120.232 li
387.901 117.458 mo
387.901 109.134 li
387.177 128.556 mo
388.625 128.556 li
387.177 109.134 mo
388.625 109.134 li
@
389.288 118.785 mo
389.288 118.019 388.667 117.397 387.901 117.397 cv
387.135 117.397 386.513 118.019 386.513 118.785 cv
386.513 119.551 387.135 120.172 387.901 120.172 cv
388.667 120.172 389.288 119.551 389.288 118.785 cv
ef
392.123 119.87 mo
392.123 109.858 li
392.123 107.083 mo
392.123 97.0699 li
391.399 119.87 mo
392.726 119.87 li
391.399 97.0699 mo
392.726 97.0699 li
@
393.51 108.531 mo
393.51 107.765 392.889 107.143 392.123 107.143 cv
391.357 107.143 390.736 107.765 390.736 108.531 cv
390.736 109.297 391.357 109.918 392.123 109.918 cv
392.889 109.918 393.51 109.297 393.51 108.531 cv
ef
396.225 122.886 mo
396.225 113.356 li
396.225 110.582 mo
396.225 101.052 li
395.501 122.886 mo
396.949 122.886 li
395.501 101.051 mo
396.949 101.051 li
@
397.612 111.909 mo
397.612 111.143 396.991 110.521 396.225 110.521 cv
395.459 110.521 394.837 111.143 394.837 111.909 cv
394.837 112.675 395.459 113.296 396.225 113.296 cv
396.991 113.296 397.612 112.675 397.612 111.909 cv
ef
400.447 105.032 mo
400.447 92.728 li
400.447 89.9529 mo
400.447 77.528 li
399.723 105.032 mo
401.05 105.032 li
399.723 77.5269 mo
401.05 77.5269 li
@
401.834 91.2799 mo
401.834 90.5139 401.213 89.8929 400.447 89.8929 cv
399.681 89.8929 399.059 90.5139 399.059 91.2799 cv
399.059 92.0459 399.681 92.6669 400.447 92.6669 cv
401.213 92.6669 401.834 92.0459 401.834 91.2799 cv
ef
404.549 114.08 mo
404.549 102.982 li
404.549 100.207 mo
404.549 89.2289 li
403.825 114.08 mo
405.272 114.08 li
403.825 89.2289 mo
405.272 89.2289 li
@
405.936 101.655 mo
405.936 100.889 405.315 100.267 404.549 100.267 cv
403.783 100.267 403.161 100.889 403.161 101.655 cv
403.161 102.421 403.783 103.042 404.549 103.042 cv
405.315 103.042 405.936 102.421 405.936 101.655 cv
ef
408.77 108.048 mo
408.77 96.1049 li
408.77 93.331 mo
408.77 81.3879 li
408.047 108.048 mo
409.374 108.048 li
408.047 81.3879 mo
409.374 81.3879 li
@
410.158 94.7789 mo
410.158 94.0129 409.536 93.391 408.77 93.391 cv
408.004 93.391 407.383 94.0129 407.383 94.7789 cv
407.383 95.545 408.004 96.1659 408.77 96.1659 cv
409.536 96.1659 410.158 95.545 410.158 94.7789 cv
ef
412.872 119.87 mo
412.872 109.858 li
412.872 107.083 mo
412.872 97.0699 li
412.149 119.87 mo
413.596 119.87 li
412.149 97.0699 mo
413.596 97.0699 li
@
414.259 108.531 mo
414.259 107.765 413.638 107.143 412.872 107.143 cv
412.106 107.143 411.485 107.765 411.485 108.531 cv
411.485 109.297 412.106 109.918 412.872 109.918 cv
413.638 109.918 414.259 109.297 414.259 108.531 cv
ef
417.094 119.87 mo
417.094 109.858 li
417.094 107.083 mo
417.094 97.0699 li
416.37 119.87 mo
417.697 119.87 li
416.37 97.0699 mo
417.697 97.0699 li
@
418.482 108.531 mo
418.482 107.765 417.86 107.143 417.094 107.143 cv
416.328 107.143 415.707 107.765 415.707 108.531 cv
415.707 109.297 416.328 109.918 417.094 109.918 cv
417.86 109.918 418.482 109.297 418.482 108.531 cv
ef
421.196 122.886 mo
421.196 113.356 li
421.196 110.582 mo
421.196 101.052 li
420.472 122.886 mo
421.92 122.886 li
420.472 101.051 mo
421.92 101.051 li
@
422.583 111.909 mo
422.583 111.143 421.962 110.521 421.196 110.521 cv
420.43 110.521 419.809 111.143 419.809 111.909 cv
419.809 112.675 420.43 113.296 421.196 113.296 cv
421.962 113.296 422.583 112.675 422.583 111.909 cv
ef
425.418 128.556 mo
425.418 120.232 li
425.418 117.458 mo
425.418 109.134 li
424.694 128.556 mo
426.021 128.556 li
424.694 109.134 mo
426.021 109.134 li
@
426.806 118.785 mo
426.806 118.019 426.184 117.397 425.418 117.397 cv
424.652 117.397 424.031 118.019 424.031 118.785 cv
424.031 119.551 424.652 120.172 425.418 120.172 cv
426.184 120.172 426.806 119.551 426.806 118.785 cv
ef
429.52 114.08 mo
429.52 102.982 li
429.52 100.207 mo
429.52 89.2289 li
428.796 114.08 mo
430.243 114.08 li
428.796 89.2289 mo
430.243 89.2289 li
@
430.907 101.655 mo
430.907 100.889 430.286 100.267 429.52 100.267 cv
428.754 100.267 428.133 100.889 428.133 101.655 cv
428.133 102.421 428.754 103.042 429.52 103.042 cv
430.286 103.042 430.907 102.421 430.907 101.655 cv
ef
433.742 125.661 mo
433.742 116.734 li
433.742 114.08 mo
433.742 105.032 li
433.018 125.661 mo
434.345 125.661 li
433.018 105.032 mo
434.345 105.032 li
@
435.129 115.407 mo
435.129 114.641 434.508 114.02 433.742 114.02 cv
432.976 114.02 432.355 114.641 432.355 115.407 cv
432.355 116.173 432.976 116.794 433.742 116.794 cv
434.508 116.794 435.129 116.173 435.129 115.407 cv
ef
437.843 122.886 mo
437.843 113.356 li
437.843 110.582 mo
437.843 101.052 li
437.12 122.886 mo
438.567 122.886 li
437.12 101.051 mo
438.567 101.051 li
@
439.231 111.909 mo
439.231 111.143 438.609 110.521 437.843 110.521 cv
437.077 110.521 436.456 111.143 436.456 111.909 cv
436.456 112.675 437.077 113.296 437.843 113.296 cv
438.609 113.296 439.231 112.675 439.231 111.909 cv
ef
442.066 122.886 mo
442.066 113.356 li
442.066 110.582 mo
442.066 101.052 li
441.342 122.886 mo
442.669 122.886 li
441.342 101.051 mo
442.669 101.051 li
@
443.453 111.909 mo
443.453 111.143 442.832 110.521 442.066 110.521 cv
441.3 110.521 440.679 111.143 440.679 111.909 cv
440.679 112.675 441.3 113.296 442.066 113.296 cv
442.832 113.296 443.453 112.675 443.453 111.909 cv
ef
446.167 102.016 mo
446.167 89.2289 li
446.167 86.455 mo
446.167 73.667 li
445.443 102.016 mo
446.891 102.016 li
445.443 73.667 mo
446.891 73.667 li
@
447.555 87.9019 mo
447.555 87.1359 446.933 86.515 446.167 86.515 cv
445.401 86.515 444.78 87.1359 444.78 87.9019 cv
444.78 88.6679 445.401 89.2889 446.167 89.2889 cv
446.933 89.2889 447.555 88.6679 447.555 87.9019 cv
ef
450.39 77.5269 mo
450.39 61.7239 li
450.39 58.95 mo
450.39 43.146 li
449.666 77.5269 mo
450.993 77.5269 li
449.666 43.146 mo
450.993 43.146 li
@
451.777 60.3969 mo
451.777 59.631 451.156 59.0099 450.39 59.0099 cv
449.624 59.0099 449.002 59.631 449.002 60.3969 cv
449.002 61.1629 449.624 61.7849 450.39 61.7849 cv
451.156 61.7849 451.777 61.1629 451.777 60.3969 cv
ef
454.491 98.9999 mo
454.491 85.852 li
454.491 83.077 mo
454.491 69.8069 li
453.767 98.9999 mo
455.215 98.9999 li
453.767 69.8069 mo
455.215 69.8069 li
@
455.879 84.4039 mo
455.879 83.6379 455.257 83.0159 454.491 83.0159 cv
453.725 83.0159 453.104 83.6379 453.104 84.4039 cv
453.104 85.17 453.725 85.791 454.491 85.791 cv
455.257 85.791 455.879 85.17 455.879 84.4039 cv
ef
458.713 83.68 mo
458.713 68.5999 li
458.713 65.826 mo
458.713 50.7459 li
457.99 83.68 mo
459.317 83.68 li
457.99 50.7459 mo
459.317 50.7459 li
@
460.101 67.273 mo
460.101 66.5069 459.479 65.8859 458.713 65.8859 cv
457.947 65.8859 457.326 66.5069 457.326 67.273 cv
457.326 68.0389 457.947 68.661 458.713 68.661 cv
459.479 68.661 460.101 68.0389 460.101 67.273 cv
ef
462.815 119.87 mo
462.815 109.858 li
462.815 107.083 mo
462.815 97.0699 li
462.091 119.87 mo
463.539 119.87 li
462.091 97.0699 mo
463.539 97.0699 li
@
464.202 108.531 mo
464.202 107.765 463.581 107.143 462.815 107.143 cv
462.049 107.143 461.428 107.765 461.428 108.531 cv
461.428 109.297 462.049 109.918 462.815 109.918 cv
463.581 109.918 464.202 109.297 464.202 108.531 cv
ef
467.037 114.08 mo
467.037 102.982 li
467.037 100.207 mo
467.037 89.2289 li
466.313 114.08 mo
467.64 114.08 li
466.313 89.2289 mo
467.64 89.2289 li
@
468.425 101.655 mo
468.425 100.889 467.803 100.267 467.037 100.267 cv
466.271 100.267 465.65 100.889 465.65 101.655 cv
465.65 102.421 466.271 103.042 467.037 103.042 cv
467.803 103.042 468.425 102.421 468.425 101.655 cv
ef
471.139 114.08 mo
471.139 102.982 li
471.139 100.207 mo
471.139 89.2289 li
470.536 114.08 mo
471.863 114.08 li
470.536 89.2289 mo
471.863 89.2289 li
@
472.526 101.655 mo
472.526 100.889 471.905 100.267 471.139 100.267 cv
470.373 100.267 469.752 100.889 469.752 101.655 cv
469.752 102.421 470.373 103.042 471.139 103.042 cv
471.905 103.042 472.526 102.421 472.526 101.655 cv
ef
475.361 125.661 mo
475.361 116.734 li
475.361 114.08 mo
475.361 105.032 li
474.637 125.661 mo
475.964 125.661 li
474.637 105.032 mo
475.964 105.032 li
@
476.749 115.407 mo
476.749 114.641 476.127 114.02 475.361 114.02 cv
474.595 114.02 473.974 114.641 473.974 115.407 cv
473.974 116.173 474.595 116.794 475.361 116.794 cv
476.127 116.794 476.749 116.173 476.749 115.407 cv
ef
479.463 136.88 mo
479.463 130.486 li
479.463 127.832 mo
479.463 121.439 li
478.859 136.88 mo
480.186 136.88 li
478.859 121.439 mo
480.186 121.439 li
@
480.85 129.159 mo
480.85 128.393 480.229 127.772 479.463 127.772 cv
478.697 127.772 478.075 128.393 478.075 129.159 cv
478.075 129.925 478.697 130.546 479.463 130.546 cv
480.229 130.546 480.85 129.925 480.85 129.159 cv
ef
483.685 136.88 mo
483.685 130.486 li
483.685 127.832 mo
483.685 121.439 li
482.961 136.88 mo
484.288 136.88 li
482.961 121.439 mo
484.288 121.439 li
@
485.072 129.159 mo
485.072 128.393 484.451 127.772 483.685 127.772 cv
482.919 127.772 482.298 128.393 482.298 129.159 cv
482.298 129.925 482.919 130.546 483.685 130.546 cv
484.451 130.546 485.072 129.925 485.072 129.159 cv
ef
487.786 128.556 mo
487.786 120.232 li
487.786 117.458 mo
487.786 109.134 li
487.183 128.556 mo
488.51 128.556 li
487.183 109.134 mo
488.51 109.134 li
@
489.174 118.785 mo
489.174 118.019 488.552 117.397 487.786 117.397 cv
487.02 117.397 486.399 118.019 486.399 118.785 cv
486.399 119.551 487.02 120.172 487.786 120.172 cv
488.552 120.172 489.174 119.551 489.174 118.785 cv
ef
492.009 139.534 mo
492.009 133.985 li
492.009 131.21 mo
492.009 125.661 li
491.285 139.534 mo
492.612 139.534 li
491.285 125.661 mo
492.612 125.661 li
@
493.396 132.537 mo
493.396 131.771 492.775 131.15 492.009 131.15 cv
491.243 131.15 490.622 131.771 490.622 132.537 cv
490.622 133.303 491.243 133.924 492.009 133.924 cv
492.775 133.924 493.396 133.303 493.396 132.537 cv
ef
496.11 125.661 mo
496.11 116.734 li
496.11 114.08 mo
496.11 105.032 li
495.507 125.661 mo
496.834 125.661 li
495.507 105.032 mo
496.834 105.032 li
@
497.498 115.407 mo
497.498 114.641 496.876 114.02 496.11 114.02 cv
495.344 114.02 494.723 114.641 494.723 115.407 cv
494.723 116.173 495.344 116.794 496.11 116.794 cv
496.876 116.794 497.498 116.173 497.498 115.407 cv
ef
500.333 146.41 mo
500.333 144.239 li
500.333 141.585 mo
500.333 139.534 li
499.609 146.41 mo
500.936 146.41 li
499.609 139.534 mo
500.936 139.534 li
@
501.72 142.912 mo
501.72 142.146 501.099 141.524 500.333 141.524 cv
499.567 141.524 498.945 142.146 498.945 142.912 cv
498.945 143.678 499.567 144.299 500.333 144.299 cv
501.099 144.299 501.72 143.678 501.72 142.912 cv
ef
504.434 141.946 mo
504.434 137.363 li
504.434 134.709 mo
504.434 130.124 li
503.831 141.946 mo
505.158 141.946 li
503.831 130.124 mo
505.158 130.124 li
@
505.822 136.036 mo
505.822 135.27 505.2 134.648 504.434 134.648 cv
503.668 134.648 503.047 135.27 503.047 136.036 cv
503.047 136.802 503.668 137.423 504.434 137.423 cv
505.2 137.423 505.822 136.802 505.822 136.036 cv
ef
508.656 141.946 mo
508.656 137.363 li
508.656 134.709 mo
508.656 130.124 li
507.933 141.946 mo
509.259 141.946 li
507.933 130.124 mo
509.259 130.124 li
@
510.043 136.036 mo
510.043 135.27 509.422 134.648 508.656 134.648 cv
507.89 134.648 507.269 135.27 507.269 136.036 cv
507.269 136.802 507.89 137.423 508.656 137.423 cv
509.422 137.423 510.043 136.802 510.043 136.036 cv
ef
346.282 19.743 mo
346.282 17.6928 li
346.282 14.9179 mo
346.282 12.8669 li
345.558 19.743 mo
347.006 19.743 li
345.558 12.8669 mo
347.006 12.8669 li
@
347.669 16.3659 mo
347.669 15.5999 347.048 14.9789 346.282 14.9789 cv
345.516 14.9789 344.894 15.5999 344.894 16.3659 cv
344.894 17.1319 345.516 17.7529 346.282 17.7529 cv
347.048 17.7529 347.669 17.1319 347.669 16.3659 cv
ef
[1.448 1.448 ] 0 dsh
342.904 26.258 mo
350.383 26.258 li
.918 .756 0 0 cmyk
@
[] 0 dsh
342.904 36.632 mo
350.383 36.632 li
0 .985 1 .001 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PRJAAA+Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCW+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g18 <1C60D8A8C9B6079F6257591F6B821D521B69B6CB5085B89B0B2D88994AB9CDD15D4F9FCC56E5359483D73F9E80C3862440F2941742975E0D24490481790A84E314F741B73E7BF103570B3AFF5C00FB6C4E182890D79F93DE7BEEA23DE0FEC4BBFABEB4108A163786B4B57A> |-/g22 <1C60D8A8C9B64EDFFB17421827B34F490AD3F7DCEB896982B80C975C3B24ABC9E3BA94702EA7A9A2D1C57D5ECFF1E5B2ADB8BECBF2CCCABA4765441A2C884484366D66E34409E5D381DF4C299795B345D7840F61F2BAAEA7914CCFBF78A13A5B6BB49CDF> |-/g29 <1C60D8A8C9B7D8BE16DE7D2CCAC882CBB80CB178347C369D563E16571825BCD460B33CCABFA0F7B274AA5CF07A65EE1EF72867ED85421DC089AC207E67C133947186A79B8A5C81238F06C0DA864BA9120A2DCD3A471A0D9F04FD06E68C51B5CFD9576960343422EA29BE26808C> |-/g23 <1C60D8A8C9B64EDFB7523A7CB42EDAFEB7A57D7E602730D163703AB2E3742CE0B6B5031548F45E27EFEFB540FE387F8D57A682608C79329F4A9151F797C0BCE8B604F7FE451B11641163326012E74FF90725FC4946BE08E582C7990A27F05BF122930EF15C33C6A81641E7FDAB6583B2FA7DF36B61736BAEC2A282E5FA64D01E02E9F2034809BFCF9FB16CEAD631B349973A1734AC0C894FE2F2A758604EB0CD036EAE9087D8FFE9EBB3F6918A69E2C9D04BA54611686354B12441475A72B74E> |-/g34 <1C60D8A8C9B7D8BE19C9920B65BF569755CBC7004398C5F3E07B367F0E7B21E557936DCBD9EF9335D9341C63852CE0C6CD4F49B90122A57276DE63D17D21D54F902070BE3CE79ECEAFFF0AA566ECBAB31BF348C6D8C56B9E07D665CEA291F28872C6AD93B413125AA4075F806569703377C307FA20494A67837D4FC26FAB7DC94721A0B384A23590E20FBFB60312165FBB83> |-/g27 <1C60D8A8C9B7EF3224D14587A8B37D54D8F0D79949CF14C9CC9890F2A6EDAA42FBA7117A612E13E7903C5A9C5F0200507E43E4C5E8B577504A53EA8A3E180CB569C8E885144F7728A2CCF0AEA32AD779FCECF91E377BD59B10FB864AC6580EFC92CA06227EB092EEEA6F0A41DE0D0DA52550ED7973070D2B3954AFC87D3BB2A46D25> |-/g19 <1C60D8A8C9B7D8BE37D60E330A65C8F5FB551AA6EDE9CF058BD3DAAA761A67CE89C3F1C9AB8D06> |-/g30 <1C60D8A8C9B854D0F4508A75B6F712D3D087C02C3CCD57AE7F32B92CA51473D32788CE0DC0B491> |-/g4 <1C60D8A8C9B854D0C9911AF8CFBD2A77C910BC52B0> |-/g16 <1C60D8A8C9B7F374D14A9DF5A5515F723FE7545DF6F55873D3038F415A593225FBBE88990B45> |-/g25 <1C60D8A8C9B7D8BE451C9774E942014BDD97A6EFF32A9C3BE14D8523423B3CE7475E1CBE6A19D4D4A65F1A> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCW+Helvetica-Bold /Encoding getdup 60 /g18 putdup 61 /g22 putdup 62 /g29 putdup 63 /g23 putdup 64 /g34 putdup 65 /g27 putdup 66 /g19 putdup 67 /g30 putdup 68 /g4 putdup 69 /g16 putdup 70 /g25 putpop%ADOEndSubsetFont
/VIXPCW+Helvetica-Bold*1 [33{/.notdef}rp /g3 /g1 /g2 /g21 /g28 /g24 /g20 /g5 /g31 /g26 /g38 /g9 /g12 /g6 /g13 /g14 /g15 /g10 /g17 /g33 /g37 /g32 /g36 /g35 /g7 /g11 /g8 /g18 /g22 /g29 /g23 /g34 /g27 /g19 /g30 /g4 /g16 /g25 185{/.notdef}rp]VIXPCW+Helvetica-Bold nfVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf356.655 18.7859 mo(<*7*)[5.95438 4.58517 2.74576 0 ]xsh356.655 29.0953 mo(=>*8%"?@*A%)[5.50079 5.03876 4.58517 4.58517 4.58517 2.29218 5.50079 5.03876 4.58517 4.58517 0 ]xsh356.655 39.4064 mo(BC7)[5.04126 2.29465 0 ]xsh481.066 20.504 mo(2D-"$%&)[4.58517 2.29218 4.58517 2.29214 6.86987 4.58517 0 ]xshVIXPCS+Symbol*1 [8.2482 0 0 -8.2482 0 0 ]msf476.598 20.504 mo( )shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf420.235 20.504 mo(#,1..!!E,002D-)[2.74576 4.58517 4.58517 4.58517 4.58517 2.74576 2.74576 4.81613 4.58517 4.58514 4.58517 4.58517 2.29218 0 ]xshVIXPCW+Helvetica-Bold*1 [5.4988 0 0 -5.4988 0 0 ]msf417.142 24.2844 mo(A)shVIXPCS+Symbol*1 [5.4988 0 0 -5.4988 0 0 ]msf417.142 16.723 mo( )shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf402.364 20.5039 mo($#F)sh.362 lw
331.685 146.41 mo
523.253 146.41 li
335.907 142.188 mo
335.907 146.41 li
344.231 144.239 mo
344.231 146.41 li
352.555 144.239 mo
352.555 146.41 li
360.879 144.239 mo
360.879 146.41 li
369.202 144.239 mo
369.202 146.41 li
377.526 142.188 mo
377.526 146.41 li
385.85 144.239 mo
385.85 146.41 li
394.174 144.239 mo
394.174 146.41 li
402.498 144.239 mo
402.498 146.41 li
410.822 144.239 mo
410.822 146.41 li
419.145 142.188 mo
419.145 146.41 li
427.469 144.239 mo
427.469 146.41 li
435.793 144.239 mo
435.793 146.41 li
444.117 144.239 mo
444.117 146.41 li
452.44 144.239 mo
452.44 146.41 li
460.764 142.188 mo
460.764 146.41 li
469.088 144.239 mo
469.088 146.41 li
477.412 144.239 mo
477.412 146.41 li
485.736 144.239 mo
485.736 146.41 li
494.059 144.239 mo
494.059 146.41 li
502.383 142.188 mo
502.383 146.41 li
335.907 142.188 mo
335.907 146.41 li
502.383 142.188 mo
502.383 146.41 li
510.707 144.239 mo
510.707 146.41 li
519.031 144.239 mo
519.031 146.41 li
@
VIXPCW+Helvetica-Bold*1 [7.2172 0 0 -7.2172 0 0 ]msf327.786 153.506 mo(,-..,/..,0..,1..2...)[4.01132 4.01132 4.01129 29.5458 4.01132 4.01132 4.01132 29.5458 4.01132 4.01132 4.01132 29.5458 4.01129 4.01132 4.01132 29.8922 4.01129 4.01132 4.01132 0 ]xshgrestore
grestore
gsave
294.232 366.601 mo
535.232 366.601 li
535.232 -.399078 li
294.232 -.399078 li
cp
clp
294.292 176.49 mo
535.306 176.49 li
535.306 366.601 li
294.292 366.601 li
cp
0 0 0 0 cmyk
f
grestore
gsave
294.232 366.601 mo
535.232 366.601 li
535.232 -.399078 li
294.232 -.399078 li
cp
clp
331.685 206.045 mo
523.253 206.045 li
523.253 343.69 li
331.685 343.69 li
cp
0 0 0 0 cmyk
f
.362 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
331.685 343.69 mo
523.253 343.69 li
523.253 206.045 li
331.685 206.045 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
331.685 206.045 mo
523.253 206.045 li
523.253 343.69 li
331.685 343.69 li
cp
0 0 0 0 cmyk
f
331.685 343.69 mo
523.253 343.69 li
523.253 206.045 li
331.685 206.045 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
331.685 343.69 mo
335.907 343.69 li
335.907 339.95 li
340.009 339.95 li
340.009 335.728 li
344.231 335.728 li
344.231 330.662 li
348.333 330.662 li
348.333 326.68 li
352.555 326.68 li
352.555 324.147 li
356.656 324.147 li
356.656 318.477 li
360.879 318.477 li
360.879 315.1 li
364.98 315.1 li
364.98 312.084 li
369.202 312.084 li
369.202 312.928 li
373.304 312.928 li
373.304 311.722 li
377.526 311.722 li
377.526 312.928 li
385.85 312.928 li
385.85 313.773 li
389.952 313.773 li
389.952 312.204 li
394.174 312.204 li
394.174 314.376 li
398.275 314.376 li
398.275 314.858 li
402.497 314.858 li
402.497 314.738 li
410.821 314.738 li
410.821 314.617 li
414.923 314.617 li
414.923 315.944 li
419.145 315.944 li
419.145 314.858 li
423.247 314.858 li
423.247 315.703 li
427.469 315.703 li
427.469 315.582 li
431.57 315.582 li
431.57 315.944 li
435.793 315.944 li
435.793 316.186 li
439.894 316.186 li
439.894 313.531 li
444.117 313.531 li
444.117 313.652 li
448.218 313.652 li
448.218 311.601 li
452.44 311.601 li
452.44 304.966 li
456.542 304.966 li
456.542 293.265 li
460.764 293.265 li
460.764 285.665 li
464.866 285.665 li
464.866 291.938 li
469.088 291.938 li
469.088 304.725 li
473.19 304.725 li
473.19 313.531 li
477.412 313.531 li
477.412 319.08 li
481.513 319.08 li
481.513 322.82 li
485.736 322.82 li
485.736 324.992 li
489.837 324.992 li
489.837 326.439 li
494.059 326.439 li
494.059 328.852 li
498.282 328.852 li
498.282 330.782 li
502.383 330.782 li
502.383 331.144 li
506.606 331.144 li
506.606 333.919 li
510.707 333.919 li
510.707 337.296 li
514.929 337.296 li
514.929 343.69 li
523.253 343.69 li
gsave
grestore
/2140036892.0 
<<
/ID /2140036892.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 100 100 ] 
/XStep 100 
/YStep 100 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
100 0 li
100 100 li
0 100 li
cp
clp
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
0 0 mo
100 100 li
false sop
0 .985 1 .001 cmyk
@
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/2140036892.0 /Pattern get_res
[.029 0 0 -.029 412.229 184.934 ]make_pattern set_pattern
ef
2 vmreclaim
.724 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
331.685 343.69 mo
335.907 343.69 li
335.907 339.95 li
340.009 339.95 li
340.009 335.728 li
344.231 335.728 li
344.231 330.662 li
348.333 330.662 li
348.333 326.68 li
352.555 326.68 li
352.555 324.147 li
356.656 324.147 li
356.656 318.477 li
360.879 318.477 li
360.879 315.1 li
364.98 315.1 li
364.98 312.084 li
369.202 312.084 li
369.202 312.928 li
373.304 312.928 li
373.304 311.722 li
377.526 311.722 li
377.526 312.928 li
385.85 312.928 li
385.85 313.773 li
389.952 313.773 li
389.952 312.204 li
394.174 312.204 li
394.174 314.376 li
398.275 314.376 li
398.275 314.858 li
402.497 314.858 li
402.497 314.738 li
410.821 314.738 li
410.821 314.617 li
414.923 314.617 li
414.923 315.944 li
419.145 315.944 li
419.145 314.858 li
423.247 314.858 li
423.247 315.703 li
427.469 315.703 li
427.469 315.582 li
431.57 315.582 li
431.57 315.944 li
435.793 315.944 li
435.793 316.186 li
439.894 316.186 li
439.894 313.531 li
444.117 313.531 li
444.117 313.652 li
448.218 313.652 li
448.218 311.601 li
452.44 311.601 li
452.44 304.966 li
456.542 304.966 li
456.542 293.265 li
460.764 293.265 li
460.764 285.665 li
464.866 285.665 li
464.866 291.938 li
469.088 291.938 li
469.088 304.725 li
473.19 304.725 li
473.19 313.531 li
477.412 313.531 li
477.412 319.08 li
481.513 319.08 li
481.513 322.82 li
485.736 322.82 li
485.736 324.992 li
489.837 324.992 li
489.837 326.439 li
494.059 326.439 li
494.059 328.852 li
498.282 328.852 li
498.282 330.782 li
502.383 330.782 li
502.383 331.144 li
506.606 331.144 li
506.606 333.919 li
510.707 333.919 li
510.707 337.296 li
514.929 337.296 li
514.929 343.69 li
523.253 343.69 li
false sop
0 .985 1 .001 cmyk
@
.362 lw
331.685 343.69 mo
523.253 343.69 li
1 /0 /CSD get_res sepcs
1 sep
@
VIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf495.844 360.065 mo(!"#$%&!)[2.74658 2.29465 2.74658 6.8707 4.58597 5.50159 0 ]xshVIXPCX+Symbol*1 [8.2482 0 0 -8.2482 0 0 ]msf490.001 360.065 mo(y)shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf482.784 360.065 mo('\()[4.58432 0 ]xshVIXPCW+Helvetica-Bold*1 [5.4988 0 0 -5.4988 0 0 ]msf479.691 357.316 mo(.)shVIXPCX+Symbol*1 [8.2482 0 0 -8.2482 0 0 ]msf475.222 360.065 mo(p)shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf465.601 360.065 mo($#)[6.87067 0 ]xsh335.907 339.468 mo
335.907 343.69 li
356.656 341.519 mo
356.656 343.69 li
377.526 339.468 mo
377.526 343.69 li
398.275 341.519 mo
398.275 343.69 li
419.145 339.468 mo
419.145 343.69 li
439.894 341.519 mo
439.894 343.69 li
460.764 339.468 mo
460.764 343.69 li
481.513 341.519 mo
481.513 343.69 li
502.383 339.468 mo
502.383 343.69 li
335.907 339.468 mo
335.907 343.69 li
502.383 339.468 mo
502.383 343.69 li
523.253 341.519 mo
523.253 343.69 li
@
VIXPCW+Helvetica-Bold*1 [7.2172 0 0 -7.2172 0 0 ]msf327.786 350.786 mo(,-..,/..,0..,1..2...)[4.01129 4.01132 4.01132 29.5458 4.01132 4.01132 4.01129 29.5458 4.01132 4.01129 4.01132 29.5458 4.01132 4.01132 4.01129 29.8922 4.01129 4.01132 4.01132 0 ]xsh331.685 343.69 mo
331.685 206.046 li
@
VIXPCW+Helvetica-Bold*1 [0 -8.2482 -8.2482 0 0 0 ]msf315.07 264.867 mo(345678\(9."$%&)[-5.9552 -5.03957 -5.0396 -5.03958 -2.7466 -4.58598 -2.293 -4.586 -4.586 -2.29463 -6.8707 -4.586 0 ]ysh337.475 343.69 mo
331.685 343.69 li
334.58 340.916 mo
331.685 340.916 li
334.58 338.141 mo
331.685 338.141 li
334.58 335.366 mo
331.685 335.366 li
334.58 332.592 mo
331.685 332.592 li
337.475 329.817 mo
331.685 329.817 li
334.58 327.163 mo
331.685 327.163 li
334.58 324.389 mo
331.685 324.389 li
334.58 321.614 mo
331.685 321.614 li
334.58 318.839 mo
331.685 318.839 li
337.475 316.065 mo
331.685 316.065 li
334.58 313.411 mo
331.685 313.411 li
334.58 310.636 mo
331.685 310.636 li
334.58 307.861 mo
331.685 307.861 li
334.58 305.087 mo
331.685 305.087 li
337.475 302.312 mo
331.685 302.312 li
334.58 299.658 mo
331.685 299.658 li
334.58 296.884 mo
331.685 296.884 li
334.58 294.109 mo
331.685 294.109 li
334.58 291.334 mo
331.685 291.334 li
337.475 288.56 mo
331.685 288.56 li
334.58 285.785 mo
331.685 285.785 li
334.58 283.131 mo
331.685 283.131 li
334.58 280.357 mo
331.685 280.357 li
334.58 277.582 mo
331.685 277.582 li
337.475 274.807 mo
331.685 274.807 li
334.58 272.033 mo
331.685 272.033 li
334.58 269.379 mo
331.685 269.379 li
334.58 266.604 mo
331.685 266.604 li
334.58 263.83 mo
331.685 263.83 li
337.475 261.055 mo
331.685 261.055 li
334.58 258.28 mo
331.685 258.28 li
334.58 255.627 mo
331.685 255.627 li
334.58 252.852 mo
331.685 252.852 li
334.58 250.077 mo
331.685 250.077 li
337.475 247.303 mo
331.685 247.303 li
334.58 244.528 mo
331.685 244.528 li
334.58 241.754 mo
331.685 241.754 li
334.58 239.1 mo
331.685 239.1 li
334.58 236.325 mo
331.685 236.325 li
337.475 233.55 mo
331.685 233.55 li
334.58 230.776 mo
331.685 230.776 li
334.58 228.001 mo
331.685 228.001 li
334.58 225.347 mo
331.685 225.347 li
334.58 222.573 mo
331.685 222.573 li
337.475 219.798 mo
331.685 219.798 li
334.58 217.023 mo
331.685 217.023 li
334.58 214.249 mo
331.685 214.249 li
334.58 211.474 mo
331.685 211.474 li
334.58 208.82 mo
331.685 208.82 li
337.475 206.046 mo
331.685 206.046 li
@
VIXPCW+Helvetica-Bold*1 [7.2172 0 0 -7.2172 0 0 ]msf326.411 346.318 mo(.)sh327.098 332.915 mo(9)sh326.411 319.168 mo(;)sh326.411 305.077 mo(,)sh326.067 291.674 mo(2)sh326.067 277.583 mo(:)sh326.411 263.492 mo(-)sh326.411 249.745 mo(/)sh326.411 235.997 mo(0)sh326.411 222.25 mo(1)sh322.287 208.503 mo(9.)[4.01132 0 ]xsh331.685 343.69 mo
331.685 343.087 li
335.907 343.087 li
335.907 340.192 li
340.009 340.192 li
340.009 335.97 li
344.231 335.97 li
344.231 330.782 li
348.333 330.782 li
348.333 326.922 li
352.555 326.922 li
352.555 324.389 li
356.656 324.389 li
356.656 318.719 li
360.879 318.719 li
360.879 315.341 li
364.98 315.341 li
364.98 312.446 li
369.202 312.446 li
369.202 313.29 li
373.304 313.29 li
373.304 311.963 li
377.526 311.963 li
377.526 313.29 li
385.85 313.29 li
385.85 314.255 li
389.952 314.255 li
389.952 312.807 li
394.174 312.807 li
394.174 314.979 li
398.275 314.979 li
398.275 315.462 li
406.599 315.462 li
406.599 315.703 li
414.923 315.703 li
414.923 317.15 li
419.145 317.15 li
419.145 316.306 li
423.247 316.306 li
423.247 317.513 li
427.469 317.513 li
427.469 317.874 li
431.57 317.874 li
431.57 318.719 li
435.793 318.719 li
435.793 319.925 li
439.894 319.925 li
439.894 318.839 li
444.117 318.839 li
444.117 320.046 li
448.218 320.046 li
448.218 321.734 li
452.44 321.734 li
452.44 322.217 li
460.764 322.217 li
460.764 323.544 li
464.866 323.544 li
464.866 324.63 li
469.088 324.63 li
469.088 325.113 li
473.19 325.113 li
473.19 325.354 li
477.412 325.354 li
477.412 326.439 li
481.513 326.439 li
481.513 327.646 li
485.736 327.646 li
485.736 328.37 li
489.837 328.37 li
489.837 328.973 li
494.059 328.973 li
494.059 330.782 li
498.282 330.782 li
498.282 332.35 li
502.383 332.35 li
502.383 332.471 li
506.606 332.471 li
506.606 335.004 li
510.707 335.004 li
510.707 338.262 li
514.929 338.262 li
514.929 342.604 li
519.031 342.604 li
519.031 343.69 li
523.253 343.69 li
.076 0 1 0 cmyk
ef
.724 lw
[1.448 1.448 ] 0 dsh
333.736 343.087 mo
337.958 340.192 li
342.059 335.97 li
346.282 330.782 li
350.383 326.922 li
354.606 324.389 li
358.707 318.719 li
362.929 315.341 li
367.031 312.446 li
371.253 313.29 li
375.355 311.963 li
379.577 313.29 li
383.799 313.29 li
387.901 314.255 li
392.123 312.807 li
396.225 314.979 li
400.447 315.462 li
404.548 315.462 li
408.77 315.703 li
412.872 315.703 li
417.094 317.15 li
421.196 316.306 li
425.418 317.513 li
429.52 317.874 li
433.742 318.719 li
437.843 319.925 li
442.066 318.839 li
446.167 320.046 li
450.39 321.734 li
454.491 322.217 li
458.713 322.217 li
462.815 323.544 li
467.037 324.63 li
471.139 325.113 li
475.361 325.354 li
479.463 326.439 li
483.685 327.646 li
487.786 328.37 li
492.009 328.973 li
496.11 330.782 li
500.333 332.35 li
504.434 332.471 li
508.656 335.004 li
512.758 338.262 li
516.98 342.604 li
521.082 343.69 li
.918 .756 0 0 cmyk
@
[] 0 dsh
342.059 343.69 mo
342.059 331.265 li
342.059 328.49 mo
342.059 316.065 li
341.456 343.69 mo
342.783 343.69 li
341.456 316.065 mo
342.783 316.065 li
1 /0 /CSD get_res sepcs
1 sep
@
343.447 329.817 mo
343.447 329.051 342.825 328.43 342.059 328.43 cv
341.293 328.43 340.672 329.051 340.672 329.817 cv
340.672 330.583 341.293 331.204 342.059 331.204 cv
342.825 331.204 343.447 330.583 343.447 329.817 cv
ef
346.282 326.198 mo
346.282 303.76 li
346.282 300.985 mo
346.282 278.547 li
345.558 326.198 mo
347.006 326.198 li
345.558 278.547 mo
347.006 278.547 li
@
347.669 302.312 mo
347.669 301.546 347.048 300.925 346.282 300.925 cv
345.516 300.925 344.894 301.546 344.894 302.312 cv
344.894 303.078 345.516 303.7 346.282 303.7 cv
347.048 303.7 347.669 303.078 347.669 302.312 cv
ef
350.383 335.607 mo
350.383 317.513 li
350.383 314.738 mo
350.383 296.643 li
349.78 335.607 mo
351.107 335.607 li
349.78 296.643 mo
351.107 296.643 li
@
351.77 316.065 mo
351.77 315.299 351.149 314.677 350.383 314.677 cv
349.617 314.677 348.996 315.299 348.996 316.065 cv
348.996 316.831 349.617 317.452 350.383 317.452 cv
351.149 317.452 351.77 316.831 351.77 316.065 cv
ef
354.606 343.69 mo
354.606 331.265 li
354.606 328.49 mo
354.606 316.065 li
353.882 343.69 mo
355.329 343.69 li
353.882 316.065 mo
355.329 316.065 li
@
355.993 329.817 mo
355.993 329.051 355.372 328.43 354.606 328.43 cv
353.84 328.43 353.218 329.051 353.218 329.817 cv
353.218 330.583 353.84 331.204 354.606 331.204 cv
355.372 331.204 355.993 330.583 355.993 329.817 cv
ef
358.707 326.198 mo
358.707 303.76 li
358.707 300.985 mo
358.707 278.547 li
358.104 326.198 mo
359.431 326.198 li
358.104 278.547 mo
359.431 278.547 li
@
360.094 302.312 mo
360.094 301.546 359.473 300.925 358.707 300.925 cv
357.941 300.925 357.32 301.546 357.32 302.312 cv
357.32 303.078 357.941 303.7 358.707 303.7 cv
359.473 303.7 360.094 303.078 360.094 302.312 cv
ef
362.929 343.69 mo
362.929 331.265 li
362.929 328.49 mo
362.929 316.065 li
362.206 343.69 mo
363.653 343.69 li
362.206 316.065 mo
363.653 316.065 li
@
364.317 329.817 mo
364.317 329.051 363.695 328.43 362.929 328.43 cv
362.163 328.43 361.542 329.051 361.542 329.817 cv
361.542 330.583 362.163 331.204 362.929 331.204 cv
363.695 331.204 364.317 330.583 364.317 329.817 cv
ef
367.031 326.198 mo
367.031 303.76 li
367.031 300.985 mo
367.031 278.547 li
366.428 326.198 mo
367.755 326.198 li
366.428 278.547 mo
367.755 278.547 li
@
368.418 302.312 mo
368.418 301.546 367.797 300.925 367.031 300.925 cv
366.265 300.925 365.643 301.546 365.643 302.312 cv
365.643 303.078 366.265 303.7 367.031 303.7 cv
367.797 303.7 368.418 303.078 368.418 302.312 cv
ef
371.253 326.198 mo
371.253 303.76 li
371.253 300.985 mo
371.253 278.547 li
370.529 326.198 mo
371.977 326.198 li
370.529 278.547 mo
371.977 278.547 li
@
372.64 302.312 mo
372.64 301.546 372.019 300.925 371.253 300.925 cv
370.487 300.925 369.866 301.546 369.866 302.312 cv
369.866 303.078 370.487 303.7 371.253 303.7 cv
372.019 303.7 372.64 303.078 372.64 302.312 cv
ef
375.355 335.607 mo
375.355 317.513 li
375.355 314.738 mo
375.355 296.643 li
374.752 335.607 mo
376.079 335.607 li
374.752 296.643 mo
376.079 296.643 li
@
376.742 316.065 mo
376.742 315.299 376.121 314.677 375.355 314.677 cv
374.589 314.677 373.967 315.299 373.967 316.065 cv
373.967 316.831 374.589 317.452 375.355 317.452 cv
376.121 317.452 376.742 316.831 376.742 316.065 cv
ef
379.577 335.607 mo
379.577 317.513 li
379.577 314.738 mo
379.577 296.643 li
378.853 335.607 mo
380.301 335.607 li
378.853 296.643 mo
380.301 296.643 li
@
380.964 316.065 mo
380.964 315.299 380.343 314.677 379.577 314.677 cv
378.811 314.677 378.19 315.299 378.19 316.065 cv
378.19 316.831 378.811 317.452 379.577 317.452 cv
380.343 317.452 380.964 316.831 380.964 316.065 cv
ef
383.799 335.607 mo
383.799 317.513 li
383.799 314.738 mo
383.799 296.643 li
383.075 335.607 mo
384.402 335.607 li
383.075 296.643 mo
384.402 296.643 li
@
385.186 316.065 mo
385.186 315.299 384.565 314.677 383.799 314.677 cv
383.033 314.677 382.412 315.299 382.412 316.065 cv
382.412 316.831 383.033 317.452 383.799 317.452 cv
384.565 317.452 385.186 316.831 385.186 316.065 cv
ef
387.901 305.57 mo
387.901 276.255 li
387.901 273.48 mo
387.901 244.046 li
387.177 305.57 mo
388.625 305.57 li
387.177 244.046 mo
388.625 244.046 li
@
389.288 274.807 mo
389.288 274.041 388.667 273.42 387.901 273.42 cv
387.135 273.42 386.513 274.041 386.513 274.807 cv
386.513 275.573 387.135 276.195 387.901 276.195 cv
388.667 276.195 389.288 275.573 389.288 274.807 cv
ef
396.225 343.69 mo
396.225 331.265 li
396.225 328.49 mo
396.225 316.065 li
395.501 343.69 mo
396.949 343.69 li
395.501 316.065 mo
396.949 316.065 li
@
397.612 329.817 mo
397.612 329.051 396.991 328.43 396.225 328.43 cv
395.459 328.43 394.837 329.051 394.837 329.817 cv
394.837 330.583 395.459 331.204 396.225 331.204 cv
396.991 331.204 397.612 330.583 397.612 329.817 cv
ef
400.447 335.607 mo
400.447 317.513 li
400.447 314.738 mo
400.447 296.643 li
399.723 335.607 mo
401.05 335.607 li
399.723 296.643 mo
401.05 296.643 li
@
401.834 316.065 mo
401.834 315.299 401.213 314.677 400.447 314.677 cv
399.681 314.677 399.059 315.299 399.059 316.065 cv
399.059 316.831 399.681 317.452 400.447 317.452 cv
401.213 317.452 401.834 316.831 401.834 316.065 cv
ef
404.549 335.607 mo
404.549 317.513 li
404.549 314.738 mo
404.549 296.643 li
403.825 335.607 mo
405.272 335.607 li
403.825 296.643 mo
405.272 296.643 li
@
405.936 316.065 mo
405.936 315.299 405.315 314.677 404.549 314.677 cv
403.783 314.677 403.161 315.299 403.161 316.065 cv
403.161 316.831 403.783 317.452 404.549 317.452 cv
405.315 317.452 405.936 316.831 405.936 316.065 cv
ef
408.77 335.607 mo
408.77 317.513 li
408.77 314.738 mo
408.77 296.643 li
408.047 335.607 mo
409.374 335.607 li
408.047 296.643 mo
409.374 296.643 li
@
410.158 316.065 mo
410.158 315.299 409.536 314.677 408.77 314.677 cv
408.004 314.677 407.383 315.299 407.383 316.065 cv
407.383 316.831 408.004 317.452 408.77 317.452 cv
409.536 317.452 410.158 316.831 410.158 316.065 cv
ef
412.872 335.607 mo
412.872 317.513 li
412.872 314.738 mo
412.872 296.643 li
412.149 335.607 mo
413.596 335.607 li
412.149 296.643 mo
413.596 296.643 li
@
414.259 316.065 mo
414.259 315.299 413.638 314.677 412.872 314.677 cv
412.106 314.677 411.485 315.299 411.485 316.065 cv
411.485 316.831 412.106 317.452 412.872 317.452 cv
413.638 317.452 414.259 316.831 414.259 316.065 cv
ef
417.094 335.607 mo
417.094 317.513 li
417.094 314.738 mo
417.094 296.643 li
416.37 335.607 mo
417.697 335.607 li
416.37 296.643 mo
417.697 296.643 li
@
418.482 316.065 mo
418.482 315.299 417.86 314.677 417.094 314.677 cv
416.328 314.677 415.707 315.299 415.707 316.065 cv
415.707 316.831 416.328 317.452 417.094 317.452 cv
417.86 317.452 418.482 316.831 418.482 316.065 cv
ef
421.196 335.607 mo
421.196 317.513 li
421.196 314.738 mo
421.196 296.643 li
420.472 335.607 mo
421.92 335.607 li
420.472 296.643 mo
421.92 296.643 li
@
422.583 316.065 mo
422.583 315.299 421.962 314.677 421.196 314.677 cv
420.43 314.677 419.809 315.299 419.809 316.065 cv
419.809 316.831 420.43 317.452 421.196 317.452 cv
421.962 317.452 422.583 316.831 422.583 316.065 cv
ef
425.418 343.69 mo
425.418 331.265 li
425.418 328.49 mo
425.418 316.065 li
424.694 343.69 mo
426.021 343.69 li
424.694 316.065 mo
426.021 316.065 li
@
426.806 329.817 mo
426.806 329.051 426.184 328.43 425.418 328.43 cv
424.652 328.43 424.031 329.051 424.031 329.817 cv
424.031 330.583 424.652 331.204 425.418 331.204 cv
426.184 331.204 426.806 330.583 426.806 329.817 cv
ef
429.52 335.607 mo
429.52 317.513 li
429.52 314.738 mo
429.52 296.643 li
428.796 335.607 mo
430.243 335.607 li
428.796 296.643 mo
430.243 296.643 li
@
430.907 316.065 mo
430.907 315.299 430.286 314.677 429.52 314.677 cv
428.754 314.677 428.133 315.299 428.133 316.065 cv
428.133 316.831 428.754 317.452 429.52 317.452 cv
430.286 317.452 430.907 316.831 430.907 316.065 cv
ef
433.742 343.69 mo
433.742 331.265 li
433.742 328.49 mo
433.742 316.065 li
433.018 343.69 mo
434.345 343.69 li
433.018 316.065 mo
434.345 316.065 li
@
435.129 329.817 mo
435.129 329.051 434.508 328.43 433.742 328.43 cv
432.976 328.43 432.355 329.051 432.355 329.817 cv
432.355 330.583 432.976 331.204 433.742 331.204 cv
434.508 331.204 435.129 330.583 435.129 329.817 cv
ef
437.843 326.198 mo
437.843 303.76 li
437.843 300.985 mo
437.843 278.547 li
437.12 326.198 mo
438.567 326.198 li
437.12 278.547 mo
438.567 278.547 li
@
439.231 302.312 mo
439.231 301.546 438.609 300.925 437.843 300.925 cv
437.077 300.925 436.456 301.546 436.456 302.312 cv
436.456 303.078 437.077 303.7 437.843 303.7 cv
438.609 303.7 439.231 303.078 439.231 302.312 cv
ef
442.066 326.198 mo
442.066 303.76 li
442.066 300.985 mo
442.066 278.547 li
441.342 326.198 mo
442.669 326.198 li
441.342 278.547 mo
442.669 278.547 li
@
443.453 302.312 mo
443.453 301.546 442.832 300.925 442.066 300.925 cv
441.3 300.925 440.679 301.546 440.679 302.312 cv
440.679 303.078 441.3 303.7 442.066 303.7 cv
442.832 303.7 443.453 303.078 443.453 302.312 cv
ef
446.167 343.69 mo
446.167 331.265 li
446.167 328.49 mo
446.167 316.065 li
445.443 343.69 mo
446.891 343.69 li
445.443 316.065 mo
446.891 316.065 li
@
447.555 329.817 mo
447.555 329.051 446.933 328.43 446.167 328.43 cv
445.401 328.43 444.78 329.051 444.78 329.817 cv
444.78 330.583 445.401 331.204 446.167 331.204 cv
446.933 331.204 447.555 330.583 447.555 329.817 cv
ef
450.39 305.57 mo
450.39 276.255 li
450.39 273.48 mo
450.39 244.046 li
449.666 305.57 mo
450.993 305.57 li
449.666 244.046 mo
450.993 244.046 li
@
451.777 274.807 mo
451.777 274.041 451.156 273.42 450.39 273.42 cv
449.624 273.42 449.002 274.041 449.002 274.807 cv
449.002 275.573 449.624 276.195 450.39 276.195 cv
451.156 276.195 451.777 275.573 451.777 274.807 cv
ef
454.491 326.198 mo
454.491 303.76 li
454.491 300.985 mo
454.491 278.547 li
453.767 326.198 mo
455.215 326.198 li
453.767 278.547 mo
455.215 278.547 li
@
455.879 302.312 mo
455.879 301.546 455.257 300.925 454.491 300.925 cv
453.725 300.925 453.104 301.546 453.104 302.312 cv
453.104 303.078 453.725 303.7 454.491 303.7 cv
455.257 303.7 455.879 303.078 455.879 302.312 cv
ef
458.713 335.607 mo
458.713 317.513 li
458.713 314.738 mo
458.713 296.643 li
457.99 335.607 mo
459.317 335.607 li
457.99 296.643 mo
459.317 296.643 li
@
460.101 316.065 mo
460.101 315.299 459.479 314.677 458.713 314.677 cv
457.947 314.677 457.326 315.299 457.326 316.065 cv
457.326 316.831 457.947 317.452 458.713 317.452 cv
459.479 317.452 460.101 316.831 460.101 316.065 cv
ef
462.815 305.57 mo
462.815 276.255 li
462.815 273.48 mo
462.815 244.046 li
462.091 305.57 mo
463.539 305.57 li
462.091 244.046 mo
463.539 244.046 li
@
464.202 274.807 mo
464.202 274.041 463.581 273.42 462.815 273.42 cv
462.049 273.42 461.428 274.041 461.428 274.807 cv
461.428 275.573 462.049 276.195 462.815 276.195 cv
463.581 276.195 464.202 275.573 464.202 274.807 cv
ef
467.037 316.065 mo
467.037 290.007 li
467.037 287.233 mo
467.037 261.055 li
466.313 316.065 mo
467.64 316.065 li
466.313 261.055 mo
467.64 261.055 li
@
468.425 288.56 mo
468.425 287.794 467.803 287.173 467.037 287.173 cv
466.271 287.173 465.65 287.794 465.65 288.56 cv
465.65 289.326 466.271 289.947 467.037 289.947 cv
467.803 289.947 468.425 289.326 468.425 288.56 cv
ef
471.139 326.198 mo
471.139 303.76 li
471.139 300.985 mo
471.139 278.547 li
470.536 326.198 mo
471.863 326.198 li
470.536 278.547 mo
471.863 278.547 li
@
472.526 302.312 mo
472.526 301.546 471.905 300.925 471.139 300.925 cv
470.373 300.925 469.752 301.546 469.752 302.312 cv
469.752 303.078 470.373 303.7 471.139 303.7 cv
471.905 303.7 472.526 303.078 472.526 302.312 cv
ef
475.361 335.607 mo
475.361 317.513 li
475.361 314.738 mo
475.361 296.643 li
474.637 335.607 mo
475.964 335.607 li
474.637 296.643 mo
475.964 296.643 li
@
476.749 316.065 mo
476.749 315.299 476.127 314.677 475.361 314.677 cv
474.595 314.677 473.974 315.299 473.974 316.065 cv
473.974 316.831 474.595 317.452 475.361 317.452 cv
476.127 317.452 476.749 316.831 476.749 316.065 cv
ef
479.463 326.198 mo
479.463 303.76 li
479.463 300.985 mo
479.463 278.547 li
478.859 326.198 mo
480.186 326.198 li
478.859 278.547 mo
480.186 278.547 li
@
480.85 302.312 mo
480.85 301.546 480.229 300.925 479.463 300.925 cv
478.697 300.925 478.075 301.546 478.075 302.312 cv
478.075 303.078 478.697 303.7 479.463 303.7 cv
480.229 303.7 480.85 303.078 480.85 302.312 cv
ef
483.685 343.69 mo
483.685 331.265 li
483.685 328.49 mo
483.685 316.065 li
482.961 343.69 mo
484.288 343.69 li
482.961 316.065 mo
484.288 316.065 li
@
485.072 329.817 mo
485.072 329.051 484.451 328.43 483.685 328.43 cv
482.919 328.43 482.298 329.051 482.298 329.817 cv
482.298 330.583 482.919 331.204 483.685 331.204 cv
484.451 331.204 485.072 330.583 485.072 329.817 cv
ef
496.11 335.607 mo
496.11 317.513 li
496.11 314.738 mo
496.11 296.643 li
495.507 335.607 mo
496.834 335.607 li
495.507 296.643 mo
496.834 296.643 li
@
497.498 316.065 mo
497.498 315.299 496.876 314.677 496.11 314.677 cv
495.344 314.677 494.723 315.299 494.723 316.065 cv
494.723 316.831 495.344 317.452 496.11 317.452 cv
496.876 317.452 497.498 316.831 497.498 316.065 cv
ef
346.282 216.3 mo
346.282 214.249 li
346.282 211.595 mo
346.282 209.423 li
345.558 216.3 mo
347.006 216.3 li
345.558 209.423 mo
347.006 209.423 li
@
347.669 212.922 mo
347.669 212.156 347.048 211.534 346.282 211.534 cv
345.516 211.534 344.894 212.156 344.894 212.922 cv
344.894 213.688 345.516 214.309 346.282 214.309 cv
347.048 214.309 347.669 213.688 347.669 212.922 cv
ef
[1.448 1.448 ] 0 dsh
342.904 222.814 mo
350.383 222.814 li
.918 .756 0 0 cmyk
@
[] 0 dsh
342.904 232.827 mo
350.383 232.827 li
0 .985 1 .001 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
VIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf356.655 215.378 mo(<*7*)[5.95438 4.58517 2.74576 0 ]xsh356.655 225.689 mo(=>*8%"?@*A%)[5.50079 5.03876 4.58517 4.58517 4.58517 2.29214 5.50079 5.03876 4.58517 4.58517 0 ]xsh356.655 235.312 mo(BC7)[5.04123 2.29465 0 ]xsh481.409 216.753 mo(99D-"$%&)[4.10019 4.58682 2.41754 4.58682 2.29382 6.87976 4.58679 0 ]xshVIXPCS+Symbol*1 [8.2482 0 0 -8.2482 0 0 ]msf476.942 216.753 mo( )shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf420.235 216.753 mo(#,1..!!E,1.-D:)[2.74576 4.58517 4.58517 4.58517 4.58517 2.74576 2.74576 4.81613 4.58517 4.58517 4.58514 4.58517 2.29218 0 ]xshVIXPCW+Helvetica-Bold*1 [5.4988 0 0 -5.4988 0 0 ]msf417.142 220.533 mo(A)sh417.142 212.628 mo(.)shVIXPCW+Helvetica-Bold*1 [8.2482 0 0 -8.2482 0 0 ]msf402.364 216.753 mo($#F)sh.362 lw
331.685 343.69 mo
523.253 343.69 li
335.907 339.468 mo
335.907 343.69 li
344.231 341.519 mo
344.231 343.69 li
352.555 341.519 mo
352.555 343.69 li
360.879 341.519 mo
360.879 343.69 li
369.202 341.519 mo
369.202 343.69 li
377.526 339.468 mo
377.526 343.69 li
385.85 341.519 mo
385.85 343.69 li
394.174 341.519 mo
394.174 343.69 li
402.498 341.519 mo
402.498 343.69 li
410.822 341.519 mo
410.822 343.69 li
419.145 339.468 mo
419.145 343.69 li
427.469 341.519 mo
427.469 343.69 li
435.793 341.519 mo
435.793 343.69 li
444.117 341.519 mo
444.117 343.69 li
452.44 341.519 mo
452.44 343.69 li
460.764 339.468 mo
460.764 343.69 li
469.088 341.519 mo
469.088 343.69 li
477.412 341.519 mo
477.412 343.69 li
485.736 341.519 mo
485.736 343.69 li
494.059 341.519 mo
494.059 343.69 li
502.383 339.468 mo
502.383 343.69 li
335.907 339.468 mo
335.907 343.69 li
502.383 339.468 mo
502.383 343.69 li
510.707 341.519 mo
510.707 343.69 li
519.031 341.519 mo
519.031 343.69 li
@
VIXPCW+Helvetica-Bold*1 [7.2172 0 0 -7.2172 0 0 ]msf327.786 350.786 mo(,-..,/..,0..,1..2...)[4.01129 4.01132 4.01132 29.5458 4.01132 4.01132 4.01129 29.5458 4.01132 4.01129 4.01132 29.5458 4.01132 4.01132 4.01129 29.8922 4.01129 4.01132 4.01132 0 ]xshgrestore
1 0 0 rgb
%ADOBeginSubsetFont: BLRBAA+ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BLRBAA+ArialMT def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 44 /comma putdup 45 /hyphen putdup 46 /period putdup 47 /slash putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 66 /B putdup 67 /C putdup 69 /E putdup 73 /I putdup 76 /L putdup 79 /O putdup 80 /P putdup 82 /R putdup 83 /S putdup 99 /c putdup 101 /e putdup 104 /h putdup 108 /l putdup 112 /p putdup 120 /x putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings30 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/space <1C60D8A8C9B854D00D> |-/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |-/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |-/comma <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-/hyphen <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-/period <1C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |-/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B546505C954A88> |-/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49372EF96DD9EB13A793559C13CFDFE477> |-/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF193628C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-/B <1C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AAB4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174E0C619907BEEF9FED49CD2B96F29B7B01884> |-/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B66E9361DDE78FC667AB91EF9824> |-/I <1C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |-/L <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AAC8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B5380E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762289BE1> |-/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-/R <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D295257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0B222> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-/x <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFEAD7BE7BD65F1051699CCF4B0> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VIXPCY+ArialMT /BLRBAA+ArialMT findfont ct_VMDictPut/VIXPCY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six 11{/.notdef}rp /B /C /.notdef /E 3{/.notdef}rp /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 15{/.notdef}rp /c /.notdef /e 2{/.notdef}rp /h 3{/.notdef}rp /l 3{/.notdef}rp /p 7{/.notdef}rp /x 135{/.notdef}rp]VIXPCY+ArialMT nfVIXPCY+ArialMT*1 [16 0 0 -16 0 0 ]msf23.6059 -9.14859 mo( BESIII, PRL110,252001\(2013\)  )[4.4448 10.6721 10.6721 10.6721 4.4448 4.44479 4.4448 4.44479 4.4448 10.6721 11.5552 8.89919 7.7104 8.89919 8.89919 4.44479 8.89919 8.89919 8.89919 8.89919 8.89919 8.89919 5.32788 8.89919 8.89919 8.89919 8.89919 5.32788 4.44479 0 ]xsh34.9458 194.969 mo(Belle, PRL110,252002\(2013\) )[10.6721 8.89919 3.5552 3.5552 8.8992 4.44479 4.4448 10.6721 11.5552 8.89919 7.7104 8.89919 8.89919 4.44479 8.8992 8.89919 8.8992 8.89919 8.89919 8.89919 5.32788 8.89919 8.89919 8.89919 8.89919 5.32788 0 ]xsh329.782 -14.8185 mo(hep)[8.89917 8.8992 0 ]xsh356.477 -14.8185 mo(-ex/1304.3036 CLEO-c )[5.32788 8.8992 8 4.44479 8.8992 8.8992 8.8992 8.89917 4.44479 8.8992 8.8992 8.8992 8.89917 4.44479 11.5552 8.8992 10.6721 12.4448 5.32785 8 0 ]xsh0 0 1 rgb
%ADOBeginSubsetFont: BLRBAA+ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCY+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6DEBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435C3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D5BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807E169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD3072425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA27D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E17188994F16> |-/Z <1C60D8A8C9B7D8BE1951B4403D971EFD27DB77B9987BC03A77C417AD83FE6266014D0B857BA90C3E7057EA9160B5F29FD8DF> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/b <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |-/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-/v <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162B37724F74F272B140D258652D102C2EAC46833C73F9> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCY+ArialMT /Encoding getdup 57 /nine putdup 90 /Z putdup 97 /a putdup 98 /b putdup 102 /f putdup 105 /i putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 118 /v putpop%ADOEndSubsetFont
/VIXPCY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 8{/.notdef}rp /B /C /.notdef /E 3{/.notdef}rp /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 6{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /.notdef /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /.notdef /t /.notdef /v /.notdef /x 135{/.notdef}rp]VIXPCY+ArialMT nfVIXPCY+ArialMT*1 [24 0 0 -24 0 0 ]msf40.6157 -52.1779 mo(Obervation)[18.6672 13.3488 13.3488 7.99182 12 13.3488 6.66719 5.33279 13.3488 0 ]xsh158.014 -52.1779 mo( of Z)[6.66719 13.3392 6.66719 6.66721 0 ]xshVIXPCY+ArialMT*1 [16 0 0 -16 0 0 ]msf206.026 -46.1779 mo(c)shVIXPCY+ArialMT*1 [24 0 0 -24 0 0 ]msf214.026 -52.1779 mo(\(3900\) )[7.99182 13.3488 13.3488 13.3488 13.3488 7.99182 0 ]xsh0 .501961 0 rgb
%ADOBeginSubsetFont: BLRBAA+ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.systemdict beginVIXPCY+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Y <1C60D8A8C9B64EDFFB70684E072B8DF628E28D14904BBCFEE7A51F476B6F96EC861657AB39D7A0FFD2C8F278DA1F84C35526773AA865D18FF930CB> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-/k <1C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |-/y <1C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |-systemdict /gcheck known {setglobal} if end {end} ifendVIXPCY+ArialMT /Encoding getdup 89 /Y putdup 100 /d putdup 107 /k putdup 115 /s putdup 117 /u putdup 121 /y putpop%ADOEndSubsetFont
/VIXPCY+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two /three /four /five /six 2{/.notdef}rp /nine 8{/.notdef}rp /B /C /.notdef /E 3{/.notdef}rp /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P /.notdef /R /S 5{/.notdef}rp /Y /Z 6{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i /.notdef /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]VIXPCY+ArialMT nfVIXPCY+ArialMT*1 [18 0 0 -18 0 0 ]msf369.471 389.746 mo(See talks by Yuan and Liu )[12.0061 10.0116 10.0116 5.0004 5.0004 10.0116 3.9996 9 9 5.0004 10.0116 9 4.67639 11.0125 10.0116 10.0116 10.0116 5.00037 10.0116 10.0116 10.0115 5.00043 10.0116 3.99957 10.0116 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 /2 ]]
[/CSD [/0 ]]
[/Pattern [/2140036696.0 /2140036892.0 ]]
] del_res
/VIXPCR+Symbol*1 uf/VIXPCR+Symbol uf/OCGBAA+Symbol uf/VIXPCT+Helvetica*1 uf/VIXPCT+Helvetica uf/AIWBAA+Helvetica uf/VIXPCY+ArialMT*1 uf/VIXPCY+ArialMT uf/BLRBAA+ArialMT uf/VIXPCS+Symbol*1 uf/VIXPCS+Symbol uf/MJFQMX+Symbol uf/VIXPCX+Symbol*1 uf/VIXPCX+Symbol uf/SLIQMX+Symbol uf/VIXPCV+Helvetica-Bold*1 uf/VIXPCV+Helvetica-Bold uf/WQDQMX+Helvetica-Bold uf/VIXPCU+Symbol*1 uf/VIXPCU+Symbol uf/RWERMX+Symbol uf/VIXPCW+Helvetica-Bold*1 uf/VIXPCW+Helvetica-Bold uf/PRJAAA+Helvetica-Bold uf/VIXPCQ+Helvetica*1 uf/VIXPCQ+Helvetica uf/GYRQMX+Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
