%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: ATLAS_c_SMSummary_TotalXsect_rotated_2015_03.pdf
%%Creator: Adobe Acrobat 10.1.16
%%For: paulschaffner
%%CreationDate: 9/2/16, 12:16 PM
%%BoundingBox: 0 0 829 620
%%HiResBoundingBox: 0 0 829 620
%%CropBox: 0 0 829 620
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 950 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GPL Ghostscript 9.10"
   xmp:ModifyDate="2015-03-16T17:18:26Z"
   xmp:CreateDate="2015-03-16T17:18:26Z"
   xmp:CreatorTool="dvips(k) 5.993 Copyright 2013 Radical Eye Software"
   xmpMM:DocumentID="uuid:0180c8af-041d-11f0-0000-190f8b7c5fb6"
   xmpMM:InstanceID="uuid:0180c8af-041d-11f0-0000-190f8b7c5fb6"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">AtlasSM_TotalXsect_rotated.dvi</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -620 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 620 li
829 620 li
829 0 li
cp
clp
.988 .85199 mo
828.388 .85199 li
828.388 619.212 li
.988 619.212 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
gsave
clp
[1 0 0 -1 0 620 ]ct
[827.4 0 0 -618.36 .988 619.148 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
sepimg
%%EndBinary
grestore
np
f
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: MUFAAA+txbex Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /MUFAAA+txbex def/FontInfo 6 dict dup begin/Notice (Version 3.0, GPL) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 82 /integraltext putdef/FontBBox {0 -1261 699 0} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-587 -586 888 893] def/BlueScale 0.199999 def/StdHW [0] def/StdVW [0] def/StemSnapH [0] def/StemSnapV [0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/integraltext <1C60D8A8C9B76D61A63641CB17B90F0DE21B5CF568374356714DDA4D038CB3624FE98ABBBD3112D122440589838054C763961E6D2102CE79A56D106FFA7A9266548BFF9423035313D7ACCD697634336C3E2A3FE4137171DF45B99EC48C4BE99902CC262FF7086922AF6B2DE5A071FC91E530F3A260B0192E05DFA1A9CA3CB00B74E85B13> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVQ+txbex /MUFAAA+txbex findfont ct_VMDictPut/GANIVQ+txbex*1 [82{/.notdef}rp /integraltext 173{/.notdef}rp]GANIVQ+txbex nfGANIVQ+txbex*1 [11.9552 0 0 -11.9552 0 0 ]msf685.72 24 mo(R)sh%ADOBeginSubsetFont: NTEBAA+txbsy Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /NTEBAA+txbsy def/FontInfo 6 dict dup begin/Notice (Version 3.0, GPL) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /minus putdup 76 /L putdef/FontBBox {0 -86 787 689} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-16 -0 444 468 662 677] def/OtherBlues [-209 -203] def/BlueScale 0.0416666 def/StdHW [106] def/StdVW [74] def/StemSnapH [66 106] def/StemSnapV [58 74] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/minus <1C60D8A8C9B659BC9AA7956B60680C370625778B6097D549CF33> |-/L <1C60D8A8C9B6D5A091E428D774D0F17F1893BB36B116F5C7653F2CB30500848CCD759F2942A043FED5B7360DC779387725F1228BED0CBC10BB6F84049531FEBEAB522287274F33A838768FCDBBDD5E6B2A93F4637799762D5F60E34D94A596E37638632C93BB6DE4B9170B88C9CAC745863FC4A2DAA08E22FE7FDE1342425EBFD06FB84A56E4D315720486DD564E565C30C204AB64D5> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVR+txbsy /NTEBAA+txbsy findfont ct_VMDictPut/GANIVR+txbsy*1 [32{/.notdef}rp /minus 43{/.notdef}rp /L 179{/.notdef}rp]GANIVR+txbsy nfGANIVR+txbsy*1 [11.9552 0 0 -11.9552 0 0 ]msf691.72 34.5602 mo(L)sh%ADOBeginSubsetFont: KGFRMX+CMSSBX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /KGFRMX+CMSSBX10 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSSBX10.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdup 91 /bracketleft putdup 93 /bracketright putdup 98 /b putdup 100 /d putdup 102 /f putdup 116 /t putdef/FontBBox {-71 -250 1014 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 458 475 694 716] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [94] def/StdVW [136] def/StemSnapV [136 147] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/one <1C60D8A8C9B795A0CD6BCD21B40205F6F7BA65C738D282953681BF51859DC859EB177150154F0E13E86B5C92A79F1E2BB1E30C10719657DE6A0E40F3D074BE07DBDA4DC7BFCD0099861FED004AA46F2B2C2C3870E8553A9E2F3F4C154B0F4494E5> |-/bracketleft <1C60D8A8C9B8151C25492C623C8571A8E0407F2975826E5E1DBA21A44B65A60C92C15DB1FBAF7D82A44E2D875FF9C3C9801D2472F9064F5AF7878DDCC44627BB3DEE162FA199> |-/bracketright <1C60D8A8C9B8151C25492C623C8571A8F5B7FF3439FE405C1A5B1B706DED69D2CCC7B1EB05209ED002386BF18221889CDF2DB62F8A998E436293F6E825504F44F8E809F47E3B52> |-/b <1C60D8A8C9B7EA3ACC5F84A681003B24F7AD6A847B05D932BCD6078C050BDC443F4A081498F486E0510EB7E529F38A7E8AE31FB3F143E20F6213C656850A12409D5150FDE7ABB418D84A643E50DF3D53959FC0301ACAB0A3E664D8E1F8374C3F64835A26142CA466294D11C0B504C588CF121107D8140B8259> |-/d <1C60D8A8C9B7EA3ACC5F84A681003B24F7AD6AFCB8B6D0A94DE54D7736139F415663E7DF59C6F49E254D542748A68404E627A35A6BB8088DF1C706F876F5E30D3DC586347DE21D214E3923A7C410E16616475DEA4BAE6CC172F9D1A1B3C3E9598403B24D8253EE073F9CE2324ECA2AAF52F87ED614CFA062938C1818E2D1A7> |-/f <1C60D8A8C9B81A14E486F8107B50D0AAB5F1D93A35084C2FB4DA179485427863AB77C86FECEE6BFAF9BFBFB23B64464B6BB05FCA0735244759DC97D8F9400438F10484A7571776B4BF78100CA1EE288CB94BAB833E94F4018B0254DEA35C6F2ACC0F1180D758DC74DC0996EE9E4DDA51E4F5C5D69E813AA310> |-/t <1C60D8A8C9B70721B85BA02CA2F462D02F8BDD0DEECBB73445DD0AEDF52F02DD194D7D2A0E70ED45A3D58F50647037BD9AF8A17F8C8C66C1D153933372A8D7327D6640B2AAACF33E74C1F50F6B2E935040D7E68EB51901A559845994CFB578F61F7B64B73647F642F01EF039AAE93E8DC0930206B9105A46B40B07CBD46E406F97> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVS+CMSSBX10 /KGFRMX+CMSSBX10 findfont ct_VMDictPut/GANIVS+CMSSBX10*1 [49{/.notdef}rp /one 41{/.notdef}rp /bracketleft /.notdef /bracketright 4{/.notdef}rp /b /.notdef /d /.notdef /f 13{/.notdef}rp /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf703.6 34.5602 mo(dt)[6.72009 0 ]xsh685.84 50.7602 mo([fb)[4.08002 3.95996 0 ]xshGANIVR+txbsy*1 [7.97011 0 0 -7.97011 0 0 ]msf700.6 45.4801 mo( )shGANIVS+CMSSBX10*1 [7.97011 0 0 -7.97011 0 0 ]msf706 45.4801 mo(1)shGANIVS+CMSSBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf710.92 50.7602 mo(])sh%ADOBeginSubsetFont: ZCXPMX+NimbusSanL-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ZCXPMX+NimbusSanL-Bold def/FontInfo 6 dict dup begin/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 82 /R putdup 99 /c putdup 101 /e putdup 102 /f putdup 110 /n putdup 114 /r putdef/FontBBox {0 -218 824 741} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-23 -0 540 560 729 749 701 724] def/StdHW [118] def/StdVW [141] def/StemSnapH [118 127] def/StemSnapV [141 151] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/R <1C60D8A8C9B6079F1E495237382C714320959FF258CBD611619EE5282A1F766EFEDBFB74F1D9040FCAF0BDCB8038F01668DCE21018CC6C18A3BE0CE28A2464BC2A3AB9FA35A26E27DA971B39BDD577AC3254CB79370D5F5628ECDA0DDA7FD6CA9FD80CEF6485548553F9E4297C2936F6D6F9B7EEA402DC5637E1DE60894F8CF785C0CEA668832D572F6AD83959D76C686C00E38F9A6211A04EAE> |-/c <1C60D8A8C9B7EF32A81682205E0185D7EB97E2E5ECD5A395E329D1E54A5D66513462925F9DAA8216038BF99396B26814AB397BA5193E5283BD4C35AF474511ACBBE1CD6E85789EFA707ADB00FF855ED46EAEE71647F46A009AA1A7AD012D3076> |-/e <1C60D8A8C9B7EF32A817545464FBEE187E54133CFEF42C8D411B5D84004C6CE6357473E2B643D3CE08AA1A42BBFB1F28CA26E22E411F5A7C8273040C4A44EA0B9D82113808AC26DB28239FB7889E290867F8E4D61BA95992B5E022A054C03BBDF962DFAEF44EDE7EA21EAB727BE1674DADA315303A694B45> |-/f <1C60D8A8C9B81F2C46F7F637C0FA006311955499CB3ED47EEF24CE3E84B8BAC7A8FB48F79D76F001B2EE0293689F1ED57B5881A60B4942D44E75E26A5E76065BCD5C5801731E0E6375AD0485FE3A04> |-/n <1C60D8A8C9B7D8BE6A40C97A4965E728A61F43C388A863F7C9265BDDB200299B4C204B13464A5EEB5283ECE018DF2077143BC157AEA1B5D875CF72F2E8E4CCE622D56646621D7136A9B9C8CC6D01A36141651514FCA84C192E73D55E416E8535CE5A821DA2CFA17AC5804977> |-/r <1C60D8A8C9B7361F7E31A31600503C2913DFBCA1D11AB6732E08F7E830EA3FA2DD20CE89BBBD740C45C51218463C8BCBF681279434661233E865A11EA4D61EC2BE9B800205458E82C518F16869A3C203F3F2B2AE6D74> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVT+NimbusSanL-Bold /ZCXPMX+NimbusSanL-Bold findfont ct_VMDictPut/GANIVT+NimbusSanL-Bold*1 [82{/.notdef}rp /R 16{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]GANIVT+NimbusSanL-Bold nfGANIVT+NimbusSanL-Bold*1 [11.3574 0 0 -11.3574 0 0 ]msf746.44 44.7602 mo(Reference)[8.16003 6.36005 3.71979 6.35999 4.44012 6.35999 6.9599 6.36005 0 ]xsh1.09589 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
10.602 523.904 mo
818.816 523.904 li
0 0 0 .159609 cmyk
@
10.602 492.715 mo
818.816 492.715 li
@
10.602 461.527 mo
818.816 461.527 li
@
10.602 430.339 mo
818.816 430.339 li
@
10.602 399.151 mo
818.816 399.151 li
@
10.602 367.962 mo
818.816 367.962 li
@
10.602 336.774 mo
818.816 336.774 li
@
10.602 305.586 mo
818.816 305.586 li
@
10.602 274.398 mo
818.816 274.398 li
@
10.602 243.21 mo
818.816 243.21 li
@
10.602 212.021 mo
818.816 212.021 li
@
10.602 180.834 mo
818.816 180.834 li
@
10.602 149.645 mo
818.816 149.645 li
@
10.602 118.457 mo
818.816 118.457 li
@
10.602 87.269 mo
818.816 87.269 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/macron <1C60D8A8C9B795A0BE73D3F45D72D9BFB984965AE800F70F66A5FEBF978BEAD2A7164D820A38DB9A0F6559113D8C8E7257EA> |-/Z <1C60D8A8C9B6557A409A161769D55DDA2A456BDEAD005A86B43040F2E98D56FA9A3E6854CC1DAADA24EFD3A164B61E1F0A2BFC8DFECCAA7035C5A7BC9009B386E09B5C4439C567B609B2F2F4920F6030FB4DC401465F6FF5E76F0F18B99E43648FF980109D77> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 22 /macron putdup 90 /Z putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 26{/.notdef}rp /one 40{/.notdef}rp /Z /bracketleft /.notdef /bracketright 4{/.notdef}rp /b /.notdef /d /.notdef /f 13{/.notdef}rp /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf30.5199 543 mo(t)sh36.2801 540.72 mo(\026)sh37.4801 543 mo(tZ)[6.9601 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RDDBAA+NimbusSanL-Regu def/FontInfo 6 dict dup begin/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /a putdup 108 /l putdup 111 /o putdup 116 /t putdef/FontBBox {-8 -218 951 741} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-23 -0 524 544 729 749 686 709] def/StdHW [78] def/StdVW [85] def/StemSnapH [78 83] def/StemSnapV [85 94] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/a <1C60D8A8C9B7EF32A835872312BA38ECCECE8951474DD5CAA68265B2F0077774DC7F3451D7D63DB42834E8CA98DCE699A0CC5B36BF814E3B80B06F4DA27B9116C1B8E7AA28478611C53AA03391989948EEDD0F15B8190B4D553731226D409ACF431AD3866ECE6475825C17AA6F1C12F87CCB78AE7ABA03EEB80FA59FF37AD180E40F2937DB96DD21AA2B595B8A40D0252E3B40464E8A653126A1F793C9CEAFDD358A2DD60445> |-/l <1C60D8A8C9B88C080EFCC82E6E5A8E04CAEF8E2733B507E0DF1A41EB96B5AE45> |-/o <1C60D8A8C9B7EF32A839C1F22A8D6B2DAF8CFACFB466AA2D5F9A52A530B92B386E86983A7B92F57D0543D2A0CFBC471C9D445F48D4D0F14AC0B786F401B0C39487F7DBBD867D06B3D529EBB76A90CB8C93E0AE68E5> |-/t <1C60D8A8C9B854D077BC25D4BFB2E66633FA304F09B33E72790D091A1F7493B73F86D2D59BD8ED1F2C3BD5506D1577F359CAADEFA8A92D90AC960F7618907B9B683BB76BFDF41C37F54548> |-/.notdef <1C60D8A8C9B854D00D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu /RDDBAA+NimbusSanL-Regu findfont ct_VMDictPut/GANIVU+NimbusSanL-Regu*1 [97{/.notdef}rp /a 10{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 139{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 551.88 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh254.863 539.498 mo
254.863 525.128 li
261.589 525.128 li
261.589 553.867 li
254.863 553.867 li
.466438 .391089 .392615 .0311284 cmyk
f
246.995 539.498 mo
246.995 530.925 li
258.806 530.925 li
258.806 548.069 li
246.995 548.069 li
0 .589105 1 0 cmyk
f
247.65 539.498 mo
247.65 530.925 li
258.522 530.925 li
258.522 548.069 li
247.65 548.069 li
.179263 .966278 1 .0934768 cmyk
f
253.791 542.865 mo
257.618 542.865 li
253.791 535.211 li
249.964 542.865 li
253.791 542.865 li
0 0 0 1 cmyk
f
253.791 541.641 mo
255.917 541.641 li
253.791 537.389 li
251.665 541.641 li
253.791 541.641 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
%ADOBeginSubsetFont: FSFAAA+rtxmi Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FSFAAA+rtxmi def/FontInfo 6 dict dup begin/Notice (Version 3.1, GPL) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 27 /sigma putdef/FontBBox {0 -11 656 508} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-13 -11] def/OtherBlues [-208 -206] def/BlueScale 0.363635 def/StdHW [38.9689] def/StdVW [85.6749] def/StemSnapH [28.5179 38.9689] def/StemSnapV [73.2849 85.6749] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/sigma <1C60D8A8C9B65A72DC311B69EF40347F548C89875214AA1AA3920431D06A8D5797E77F95FB11939A5C6894A58A4D19C81CFDBB2CA5A68C771CA3812778B3D36E691E217C24926ECE600538C011B6BFC236C4B208DD052DBF470E9FB1BFB0> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVV+rtxmi /FSFAAA+rtxmi findfont ct_VMDictPut/GANIVV+rtxmi*1 [27{/.notdef}rp /sigma 228{/.notdef}rp]GANIVV+rtxmi nfGANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 535.92 mo(\033)sh%ADOBeginSubsetFont: BJEBAA+CMSS8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BJEBAA+CMSS8 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSS8.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 43 /plus putdup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 53 /five putdup 61 /equal putdef/FontBBox {0 -104 766 687} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 -0 444 459 656 677 694 715] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [66] def/StdVW [87] def/StemSnapH [59 66] def/StemSnapV [87 101] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/plus <1C60D8A8C9B6AF04CDEB25D12C5E26F197F165B1E846B805E270AB730DC8C535451A42F505B0ED2CA83B529FD67AD781784D5719F37A18216D7FBA676CFE90389B3DD18578BC99631B2E3515AEFDAE18B606FB1FA37645C1720541> |-/period <1C60D8A8C9B845C80860AB44A338CC6083B186B062A47301A0A0> |-/zero <1C60D8A8C9B7883CBACD30F67524603123C94ACF1266C6D43609E84B52BFCC315F5FC5AB16BEE83EAA8D8F11D9F3FFAE608CAF190616F90729F2FD97672991410C5F02EFF6708D830348D9ABBD6955CC6575B79C2D9A906112F330CA55075BB6658BBC00E92BC0198A8B76F727EBD19E05A88841223D8A4E1AB5D8335D8ABC8E38940FEFEB0A8E> |-/one <1C60D8A8C9B7883C478FD7F46F74AD01DD5B54699EA0E353C31BD1A212ADADED6E40A7A9FBC51D62BA784D7A55D02BB8B16483754CBF9A880FE2F6BDF42A0714> |-/two <1C60D8A8C9B7883C479D21448351655B078B2EE7FC4AB870B30ABB2ECE71900D713116AA68AA3A8AA75B1A204BBB1D4D6949603848F16137F6446D5C9AD6A8B68CD49177C15689A88768A63F7C85519618040546EC25D12D8433EB30366989796CA8862F98C4EE3C1BD42763DC576D> |-/five <1C60D8A8C9B7883CBACD30F911D8EADBA8A4CA69B0974D719BE478FAD94FAB1CED5FF4BDE6D0C321D01E1F6787459C611C8E163D1A471CCC45A024560EF8D9E7884068AD76612CFF18DD5FD045510003EA333507CB470A02A091449E488A5744150C6698038487> |-/equal <1C60D8A8C9B6AF04192DE4E1E76D9231620E2DCE7EB52B4CE372FD74005AA6CCB894F6759004D82DD042CB6FF493994249EE06DF6AB71C2D78CA0C0CF121C69C1FE080EFBFC9C03B75EDEC3D338DEC> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVW+CMSS8 /BJEBAA+CMSS8 findfont ct_VMDictPut/GANIVW+CMSS8*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five 7{/.notdef}rp /equal 194{/.notdef}rp]GANIVW+CMSS8 nfGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 535.92 mo(=150.0+55.0)[7.68051 3.72004 3.72005 3.72003 2.03999 5.1602 7.32036 3.72003 3.72005 2.03998 0 ]xsh%ADOBeginSubsetFont: NMOBAA+txsy Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /NMOBAA+txsy def/FontInfo 6 dict dup begin/Notice (Version 3.0, GPL) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 6 /plusminus putdup 32 /minus putdef/FontBBox {0 -944 675 677} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-49 -18 678 705] def/OtherBlues [-165 -149] def/BlueScale 0.032258 def/StdHW [52.5629] def/StdVW [52.1209] def/StemSnapH [36.2819 52.5629] def/StemSnapV [52.1209 82.4169] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/plusminus <1C60D8A8C9B67106AE7292C32B943174DC7139723199CC7DE3D83EFDA83CA178360D33A53E481058E59CC8E7C7F4F9B9581EE682553C41826A27BF5B4876E152BC7E7BDD> |-/minus <1C60D8A8C9B67106D2AD1ECA7F79583010D31B5E5E6138BB8D6A> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVX+txsy /NMOBAA+txsy findfont ct_VMDictPut/GANIVX+txsy*1 [6{/.notdef}rp /plusminus 25{/.notdef}rp /minus 223{/.notdef}rp]GANIVX+txsy nfGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf159.28 535.92 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf165.28 535.92 mo(50.0)[3.72003 3.72006 2.03996 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf180.04 535.92 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf185.92 535.92 mo(21.0)[3.72003 3.72006 2.03996 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C34BC1722FEFB37BB58C35B527AE6A09491FA40D7E8E5CDDF40B1FA04CF4C0C7382C2F861C47E3D9F31951A352479B61220DAE3010153555D> |-/parenright <1C60D8A8C9B81F2C34BC1722DDC8F1B2A5255D3125BF196E18CC504ED91C8305BA71730C40B22B521DE97A022B4A559586A56D21ED89F0FFA70036F1C6B28C3F> |-/hyphen <1C60D8A8C9B81F2C3A3F8849A20715A30A1C8E20BA40A715C66C59DFAA60C2> |-/A <1C60D8A8C9B64EDF88209F7A312FACCCCDAD59A2EAB742690040B8D13D5A2C59ADAC34772A84AC971BD62301195DE9BB2EFAEE1F03113D1673CEAA6ED2D8319F> |-/C <1C60D8A8C9B6079FE1CE316282F0E84E7EAE56817E527B1A2FBA7D6E6E3E84761CC128BB54A99A2A93B5D172E1531D29A45A5EC52E28A860DB78AEF5044DD841ADA187A0971E5C6028FECC99F95A89CDEF60FF9739318C6CDCFD940AFB9777EC1EB041B6AC82C7B827BCFC6CB4C10A94B6280806B13F83> |-/E <1C60D8A8C9B64EDF8862D774151335C23345609532E7B253FE8B912EA10CB8B66F63B30176A08FE63396B229631787D90BB84F93352597783ACEA1> |-/H <1C60D8A8C9B6079F1E4952376D4581366636A6F2021940B707EDEA571DC6ABE0FB549193DC07876B02876B570C4E8DB38E1ED598341CFB3C83BAC587F34EA3C7CDE14BFD64909CFC7BE7164548353E044D4BCB4820652C4DB9ECD632E5D535A1AB8C7BE1E194> |-/L <1C60D8A8C9B7EF32574D0487D29C7903F9AE2E8AC57D9630AE9A94B5BC41802BD0101167D0AC> |-/N <1C60D8A8C9B6079F1E49523970A7CE614BC1CB2AC135B49A6B33564AFCCAE69F17C685A8629597666C835EDDD27239AEF884B91696774A2A> |-/O <1C60D8A8C9B6FF86765B1780566DC60977E8F5E0E0E559AD0F2F30B72691EE57D5DBE6F0F93089673747ADDB5A930EEB08C782F7E5ECE280F031DF7B2C88219DAED7660E00D4C7CEAA128F70372A143D1D40AF3FBF099462CCA2816767C1E13E1B42223B7099AF0FC017FC> |-/b <1C60D8A8C9B7EF32A838F0ADA05AA7BE67CAEF0C4A70B10635B01529BB5EE6AEAE58EA247A0F91A593B31240628F951C79A5DD142AB8549C337FD3C4745DB140363A7DBC9CB80661F7ADE45439DC4F828C5BFAE1CF1C6C974E07FCA3E1F6E3B6EB5A4421C5> |-/d <1C60D8A8C9B7EF32A838F0ADA05AA7BE67CAEF6821E2B45DACFBE66781F882286BFB8558FFDC99835F6318B6ABFB469C2D564BB0F5E9BE77FB785FF0A01ACB21DC4B97A4A57F1F7492892F8DC448ACB9AF11A554513DBE4F7C862B67B87DD442F1A03C816B99> |-/e <1C60D8A8C9B7EF32A839C1FD591230A166F277FECE72B730F1E2F317E00493971DEE8E5EAE9387F2DAF20CAA9EDB2AA477FF9EAA4CC21C1650D37B61458B35699A0C598AB28D1BF3FC566A8A3188BB3E7F14D6C575EE74C51E2E8E4E6F5D3491A9F18F05171ED970B25AFE0F35A1> |-/f <1C60D8A8C9B854D08882A1CDE4CC8CF82C721397EF3C1B7F275F9E0F93B73057EE87F13D1A76347F24278F0AAB6C40024DD0CC30E14D035B17B8421125C08D6E5ECF0FD989FD11DB950870FC66> |-/h <1C60D8A8C9B7EF32570F064E709B8926574C03377BA220AE0888CBE55DD78AB956CD4302BB789AA6D333FFAC07825CB3A243F22D03D26FA5A13E87B236A12658D027FD878D62E9E0B2786BB555DABBC7F8CB> |-/r <1C60D8A8C9B81F2C46F7F63704E5ACDCC19B8DCE165977F6AAF76E3029E22FE3CE779FD06B0953DEB844022554A1520A59CA70C9868583B567F3BC27D2161CCF83FEFCB107A9A4CD2BBD2BD86309EE60086B488954FC5EFB5DDDF6DFC361A4431D76AF6F> |-/y <1C60D8A8C9B7A73DB5828E2DB40A4006345BB6B47E4ECD963FC869C2369986F6D079AC4A862814B9396DB438A1862183CED867E3C44BB9307A0DC4ECC06CFABB472C23DE9B2490AEC3A42E4087C795FBC47D05CCB5> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 65 /A putdup 67 /C putdup 69 /E putdup 72 /H putdup 76 /L putdup 78 /N putdup 79 /O putdup 98 /b putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 114 /r putdup 121 /y putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C /.notdef /E 2{/.notdef}rp /H 3{/.notdef}rp /L /.notdef /N /O 17{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf201.04 535.92 mo(fb\(data\))[1.8 5.51993 2.15996 3.72 3.72 1.79999 3.72 0 ]xsh137.08 542.04 mo(HELAC-NLO\(theory\))[4.8 4.44005 3.71999 4.20021 4.8 2.15994 4.8 3.72 6.95984 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh579.413 539.498 mo
579.413 525.128 li
606.633 525.128 li
606.633 553.867 li
579.413 553.867 li
.466438 .391089 .392615 .0311284 cmyk
f
559.685 539.498 mo
559.685 530.925 li
593.892 530.925 li
593.892 548.069 li
559.685 548.069 li
0 .589105 1 0 cmyk
f
560.964 539.498 mo
560.964 530.925 li
592.72 530.925 li
592.72 548.069 li
560.964 548.069 li
.179263 .966278 1 .0934768 cmyk
f
576.086 542.865 mo
579.913 542.865 li
576.086 535.211 li
572.259 542.865 li
576.086 542.865 li
0 0 0 1 cmyk
f
576.086 541.641 mo
578.212 541.641 li
576.086 537.389 li
573.96 541.641 li
576.086 541.641 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D088EEB7F5292ECB0543F68EFE6422AA9D95EF> |-/zero <1C60D8A8C9B7EF32A8358722AA80E7B0A403E0AAC8AF9773710239EE99CFB03C40A2F97D10285CF7561FE54E06EBD6D0440B8D110A5A738867D010936BBC35E300E5FB3C772FA150D2BF1D040E476DEC48E0B601B04FE56E185DA1E8C577426BB5FA04F8E4DB> |-/two <1C60D8A8C9B7EF325772DAA73F3C25ADEBE04C8170362283A6CB490C131F5203D4D9AE5635256B5304F57E15EAB9584977EA6B904C788253513C16D8C63EEA9555B3CDDA75DCCED6AA8BE483002CF48705E755ADDF63C886329965CF0CCC0E68BC87B8223E810A4592D42E707404F5A4F9593B53> |-/three <1C60D8A8C9B7EF32A838F0ACFF5B8449798AA87BFBD53D82B03D3CB3518057514FD9A1F8F21B3AE039400F5467F12744C48D673848B82F0788F59EE719F1EC6F8AD25ABC3F1070D64809594FC2EE6F6A3F6097FBEF7DF6B8E58976995550DA77ACEEFB2D0884A5CA5B72902611A09DA2AE5529EE1EF6102D305D5B77D26CBF63E1168518DB43AEC0EBF32497358C4B2A8BF7DA85CDEC78661D96CDFFC73DA426D2C4> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 46 /period putdup 48 /zero putdup 50 /two putdup 51 /three putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /.notdef /two /three 13{/.notdef}rp /A /.notdef /C /.notdef /E 2{/.notdef}rp /H 3{/.notdef}rp /L /.notdef /N /O 17{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 543.24 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF32570F06410D4703CEEE7210F729C289AB36488A897151E1AAB5D613DEBEA5766F929AE7> |-/four <1C60D8A8C9B7EF32570F0641A4BC6DE40C0670E767A368988E5B8570B4A04A325C9976E0E3BBBF76A1E9F907C1AA5B6CC514F0EBEED16FA6D541D236CDDF5F1B13> |-/eight <1C60D8A8C9B7EF32A838F0A2017E2AF026F171A4DF84CA2B5DC1763EAD8D5327FA792471080770C2A952DE234C82E937FF6F06B8DC5502E517DAD01048EA369C68F50CEB8D4890C190D4826453DB2FA69E9B153A591D9773AB1C666BB48F76AFEB8F668FC7931F530DDE5D77486CB2B0B7372318F615061D1C44AB234077545D8F20A6CDDA9838A386E7F5808C27F1B903689B66846190A97F4EDC899D8819804C87A1A60C2742926387B92B7C79BE2BD01C034498B73C43259C1C79DD75AB76B50C7504CD347A6688CF7CD2B01E823B9BC7E06207809391337DFD> |-/F <1C60D8A8C9B7D8BE6A40C9752DBF6493052E3C73DE0D6A00295E8890CDF81C57C77413034CF0C170DB86143942F39AAF44FD3EC2DA> |-/S <1C60D8A8C9B64EDF77D7EC0546C6DE4C531E1C5BE973B418A5C3A6670C5B61F03E729C4EE49FAAE8566EF7513CABDB7B25985EB5B5918EFD38ADD67173B1E97A3E92F3A138EAC1DA4675B3CA4653A5DB14092F89F79F9AEE2434FC353F36DC89C2C75CDB64472D17DCFFE6B51D66D133C183BCCD261A16E57C765010C97B7BBAC0AD483057F900CCF804A5859EF25F455471A44B955452B199> |-/T <1C60D8A8C9B7D8BE6A40C97BBF661CB0B8222F950E511FEAA4C1C13E5F9478F30E1367384EBB0E379956ACFD> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 49 /one putdup 52 /four putdup 56 /eight putdup 70 /F putdup 83 /S putdup 84 /T putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four 3{/.notdef}rp /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /.notdef /H 3{/.notdef}rp /L /.notdef /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 541.8 mo(ATLAS-CONF-2014-038)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/W <1C60D8A8C9B5300A65D10D39F7E6EABEA3553A1613B5840F85F513199236C2C9F1F3F613BE517AE1AB289D03582DD221D9A087B4261B491844C8B941A84BBC96A82EADD969055FAE3A98117E63D9F8D8E33C0B4AC1A21FCF9AB50219B0A419A526C7EFE5919BF70F838D57BE3F395366F596E671A6E7CC0AF3DCC194D25493DE57986112AB8EF3F8254C44F837B2EC84FA57EE10197DF965FC31D089860588D9E27C092177DB8B474B87B28D9DEB3FF9AA4BA9462BAD5A0CB36D2C726A8905820A> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 87 /W putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 26{/.notdef}rp /one 37{/.notdef}rp /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 4{/.notdef}rp /b /.notdef /d /.notdef /f 13{/.notdef}rp /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf27.1602 511.8 mo(t)sh32.92 509.52 mo(\026)sh34.12 511.8 mo(tW)[6.96011 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 520.8 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh256.637 508.309 mo
256.637 493.94 li
263.406 493.94 li
263.406 522.679 li
256.637 522.679 li
.466438 .391089 .392615 .0311284 cmyk
f
257.554 508.309 mo
257.554 499.737 li
270.054 499.737 li
270.054 516.881 li
257.554 516.881 li
0 .589105 1 0 cmyk
f
258.148 508.309 mo
258.148 499.737 li
269.386 499.737 li
269.386 516.881 li
258.148 516.881 li
.179263 .966278 1 .0934768 cmyk
f
264.29 511.677 mo
268.117 511.677 li
264.29 504.023 li
260.463 511.677 li
264.29 511.677 li
0 0 0 1 cmyk
f
264.29 510.452 mo
266.416 510.452 li
264.29 506.201 li
262.164 510.452 li
264.29 510.452 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 504.72 mo(\033)sh%ADOBeginSubsetFont: BJEBAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVW+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7883CBACD30F9385AD6BBEF69616630964E70D12F5893D6DB4A79055CC5704D8CFF9199256C9D3DB270032D920A92ABC93B684A09DC9AF25C824AC74D31847B9735093856E0CD2AE14CD0880BBCF322A51EE44AC1F55102EC8ADCF72E1082A0866C157B4164946488F815FE47A1819EF7> |-/four <1C60D8A8C9B7883C47E52F83F2DD71F2DE70DF48AB7D09A7B2C247732403D577AC83B8C752E8FEA81FA3E89623E6342034E2A29BE4CE35B9E663B9145B89F8F7547931B84BB349A6F99E> |-/seven <1C60D8A8C9B7883C4DBBEE7651522C203A9CD577A7F44C212AADA26DE79483DB4BA84370C5052AC85CC536E8205353FB4CDCA27D3BCC5CC873EAD63D96B5E2D313D6> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVW+CMSS8 /Encoding getdup 51 /three putdup 52 /four putdup 55 /seven putpop%ADOEndSubsetFont
/GANIVW+CMSS8*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /.notdef /seven 5{/.notdef}rp /equal 194{/.notdef}rp]GANIVW+CMSS8 nfGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 504.72 mo(=300.0+120.0)[7.68051 3.72004 3.72005 3.72003 2.03999 5.1602 7.32036 3.72003 3.72005 3.72005 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf163 504.72 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf169 504.72 mo(100.0+70.0)[3.72003 3.72006 3.72003 2.03998 5.16022 7.32034 3.72003 3.72006 2.03996 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf209.44 504.72 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf215.44 504.72 mo(40.0)[3.72003 3.72002 2.04001 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B6B41CC7813947DCFB46147222166AB889DC19AD6BD83A46B3F370A8F4ADE784AE0808E3EB1A31A9FBB17372267B6A85127E1913AF73CCCC3FBA360F09F44E09> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 77 /M putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four 3{/.notdef}rp /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /.notdef /H 3{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf230.44 504.72 mo(fb\(data\))[1.79999 5.51993 2.15996 3.72 3.72 1.79999 3.72 0 ]xsh137.08 510.84 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh579.327 508.309 mo
579.327 493.94 li
606.719 493.94 li
606.719 522.679 li
579.327 522.679 li
.466438 .391089 .392615 .0311284 cmyk
f
582.361 508.309 mo
582.361 499.737 li
648.591 499.737 li
648.591 516.881 li
582.361 516.881 li
0 .589105 1 0 cmyk
f
584.43 508.309 mo
584.43 499.737 li
643.509 499.737 li
643.509 516.881 li
584.43 516.881 li
.179263 .966278 1 .0934768 cmyk
f
611.284 511.677 mo
615.111 511.677 li
611.284 504.023 li
607.457 511.677 li
611.284 511.677 li
0 0 0 1 cmyk
f
611.284 510.452 mo
613.41 510.452 li
611.284 506.201 li
609.158 510.452 li
611.284 510.452 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 512.04 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 510.6 mo(ATLAS-CONF-2014-038)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B610D94CEA1CF9389C4988503E6EA49CD905927750FF598DBB2A82F12FD5A499A66E6D6E045E20FB965D6BC29B833303D689841A31AFE2137293BE409F46F80A8F75313A8C386470B0AFB4BC8645D9FDA1D2073A0CABA22181063AE4FCE78BE7706AD72CBB4C0686BCA9F1F4AA1E1B5CFF256BCDAAEADA56D1C4FE9873> |-/F <1C60D8A8C9B7D8BE6A7F9432008A985DBAA8A6849A8BC5692DC8487E58A0ED7AE1536390A48F754569FC2BE6EB1003FE4DE7E2FFFEF938DC5446FD4C7B4844B5FE9EC3FA242047D2893523A84C73CDEC84F410D712A1906CCD93C02DC2> |-/H <1C60D8A8C9B6CFDA41B25CDC09927B70506364AAC3B1397C68656DC9C1F073985E0F947BD8678D2426D4854F6EBF483091F0A0779856D7B9733C56CDDF1B53D43E56C875704EF186D812703A48C059ED438E49E0D385F05A0E7B104913CE7497E1DA16C361990C4B> |-/V <1C60D8A8C9B610D94CAB5005B8F6BB1355BABBEE16238EC806F0E968C15640D8162D75691DFA44946373335249FBD0F0142C04D618D87686688DE7CCFE0A838C8FB6EBE93924F1BF2C24346FF60BF81BBF3C66553A7402AF27862210642CD72B9AE72A57647D09C84174> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 66 /B putdup 70 /F putdup 72 /H putdup 86 /V putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 26{/.notdef}rp /one 16{/.notdef}rp /B 3{/.notdef}rp /F /.notdef /H 13{/.notdef}rp /V /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 4{/.notdef}rp /b /.notdef /d /.notdef /f 13{/.notdef}rp /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf26.2 480 mo(H)shGANIVS+CMSSBX10*1 [8.96638 0 0 -8.96638 0 0 ]msf41.5602 480 mo(VBF)[6.60002 6.60002 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 489.6 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh288.968 477.121 mo
288.968 462.752 li
289.74 462.752 li
289.74 491.491 li
288.968 491.491 li
.466438 .391089 .392615 .0311284 cmyk
f
292.088 477.121 mo
292.088 468.549 li
299.318 468.549 li
299.318 485.693 li
292.088 485.693 li
0 .589105 1 0 cmyk
f
295.969 477.121 mo
295.969 468.549 li
295.982 468.549 li
295.982 485.693 li
295.969 485.693 li
.179263 .966278 1 .0934768 cmyk
f
295.975 480.489 mo
299.802 480.489 li
295.975 472.835 li
292.148 480.489 li
295.975 480.489 li
0 0 0 1 cmyk
f
295.975 479.264 mo
298.101 479.264 li
295.975 475.012 li
293.85 479.264 li
295.975 479.264 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 473.52 mo(\033)sh%ADOBeginSubsetFont: BJEBAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVW+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7883CBACD30F679EB43AB3BC2E0FAB555C45F2D69832D8F1322EB199F3902FD6A5A24BAD9F3C713D1EE3D899D4F9ED0DB75A1F416C78BBF8431E7377B9672F77D49F048A9688700E60CDD141910086B803A56A3D95DCAB2C8AC8A724B759E9FA9EA09621ADED4C17D6E6733345768209A842A0D6D2EE2206A24059D83E99522E57142BBC17A0BC49C23> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVW+CMSS8 /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/GANIVW+CMSS8*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven 5{/.notdef}rp /equal 194{/.notdef}rp]GANIVW+CMSS8 nfGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 473.52 mo(=2.43+0.6)[7.68051 3.72004 2.03999 3.72004 5.28021 7.20042 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf151.84 473.52 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf157.84 473.52 mo(0.55)[3.72003 2.03999 3.72003 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/G <1C60D8A8C9B6FF86765B178E785106FCD59EB8376382B9CBCCBB748588C0813CAE03731A28AF650C9E7EF28795313EB291C467EEA72058FEADCC32DE6A4DD840A6F8146FCE30D5BCABF6B812CA08B536CAB29CE0B8E332FACFCEF05B58BF31DC290E18E098E3F2041CC981BC10DF2AD559D10FDB46A94D4DF3DFB1ACC48822B05B> |-/W <1C60D8A8C9B5D6EF3EE48D572F84D3146D37F2D6E3E900BA99AB95BEFC9B3C2D085243F63DEE478B3806B793A34984B1C9D50196ED810B8B70E0ACBAD818784EA4AC7CE6> |-/X <1C60D8A8C9B64EDF88209F74DE48C31923BDB6DC4DD0FDA29BCD573E7DDE69D8D08414F56F7E4B0C2C3D19D07133E6C4860EEF72FB92280AB1A549BB7568025C6525F29A02> |-/p <1C60D8A8C9B7EF3227B21D31137DC869EC372F70CAE6781EA146B2903260E24F701FDF227E072BD95E12FE07374A82CFBFC1FAEC3E9F72B43A7E58F25448F8EC555B4A7B773DEC8BB6D1EEA6615C00E66CA96DF653E47E06C2171CCF584F9DFA9ABD37FD84B3D4F1ECF2A907E500304DE9F828B3D823F40AD41301FBB35844C37D3215D325D86E3D5BDD66C6> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 71 /G putdup 87 /W putdup 88 /X putdup 112 /p putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four 3{/.notdef}rp /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf172.84 473.52 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 479.64 mo(LHC-HXSWG\(theory\))[3.71999 4.8 4.8 2.15996 4.8 4.44003 4.44005 6.24002 6.96016 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh591.435 477.121 mo
591.435 462.752 li
594.61 462.752 li
594.61 491.491 li
591.435 491.491 li
.466438 .391089 .392615 .0311284 cmyk
f
605.325 477.121 mo
605.325 468.549 li
650.961 468.549 li
650.961 485.693 li
605.325 485.693 li
0 .589105 1 0 cmyk
f
627.111 477.121 mo
627.111 468.549 li
627.19 468.549 li
627.19 485.693 li
627.111 485.693 li
.179263 .966278 1 .0934768 cmyk
f
627.15 480.489 mo
630.977 480.489 li
627.15 472.835 li
623.323 480.489 li
627.15 480.489 li
0 0 0 1 cmyk
f
627.15 479.264 mo
629.276 479.264 li
627.15 475.012 li
625.025 479.264 li
627.15 479.264 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 480.96 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF32A838F0ADD872C6F18F8BC0A4E34F48B35143997141C18CFB9408A8718EED7EBBE8F3F21F3798538909C7C94F5BECA096FD038C7E1F0DB769BFC3A0F646A376CB65BD18167F67FF2007B81FBC1CAB702F01F57C4E31F3559988F254DAAC1F1AB8281F76> |-/seven <1C60D8A8C9B7EF32570F064FE6F2197B9A9B4552AA750503D8376C03AD26ABE9FFD8D44E1CF9D49EFA33A19355739672DC870D5B3102> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 53 /five putdup 55 /seven putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 479.4 mo(ATLAS-CONF-2015-007)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf31.6 448.8 mo(ZZ)[11.5199 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 458.4 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh308.916 438.136 mo
308.916 431.563 li
309.941 431.563 li
309.941 444.709 li
308.916 444.709 li
.466438 .391089 .392615 .0311284 cmyk
f
309.396 438.136 mo
309.396 433.85 li
313.167 433.85 li
313.167 442.422 li
309.396 442.422 li
.818479 .642359 0 0 cmyk
f
309.666 438.136 mo
309.666 433.85 li
312.843 433.85 li
312.843 442.422 li
309.666 442.422 li
1 .998535 .0944533 .0983291 cmyk
f
315.023 438.136 mo
315.023 436.101 313.373 434.451 311.338 434.451 cv
309.302 434.451 307.652 436.101 307.652 438.136 cv
307.652 440.171 309.302 441.821 311.338 441.821 cv
313.373 441.821 315.023 440.171 315.023 438.136 cv
0 0 0 1 cmyk
f
313.605 438.136 mo
313.605 436.884 312.59 435.868 311.338 435.868 cv
310.085 435.868 309.07 436.884 309.07 438.136 cv
309.07 439.388 310.085 440.404 311.338 440.404 cv
312.59 440.404 313.605 439.388 313.605 438.136 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 437.16 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 437.16 mo(=6.7)[7.68051 3.72004 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf129.88 437.16 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf135.88 437.16 mo(0.7+0.5)[3.72003 2.03999 5.15996 7.32036 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf165.16 437.16 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf171.16 437.16 mo(0.4)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf182.44 437.16 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 443.28 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh591.119 438.136 mo
591.119 431.563 li
595.35 431.563 li
595.35 444.709 li
591.119 444.709 li
.466438 .391089 .392615 .0311284 cmyk
f
593.063 438.136 mo
593.063 433.85 li
610.69 433.85 li
610.69 442.422 li
593.063 442.422 li
.818479 .642359 0 0 cmyk
f
594.186 438.136 mo
594.186 433.85 li
608.995 433.85 li
608.995 442.422 li
594.186 442.422 li
1 .998535 .0944533 .0983291 cmyk
f
605.276 438.136 mo
605.276 436.101 603.626 434.451 601.591 434.451 cv
599.555 434.451 597.905 436.101 597.905 438.136 cv
597.905 440.171 599.555 441.821 601.591 441.821 cv
603.626 441.821 605.276 440.171 605.276 438.136 cv
0 0 0 1 cmyk
f
603.859 438.136 mo
603.859 436.884 602.843 435.868 601.591 435.868 cv
600.338 435.868 599.323 436.884 599.323 438.136 cv
599.323 439.388 600.338 440.404 601.591 440.404 cv
602.843 440.404 603.859 439.388 603.859 438.136 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF32A838F0A21CA921E71C27D48F1638DA1FDFE10E618A18554D0E9CCCCE216762AE833813112193D1142826B9EAAC4CD611BBB4F9576032E7BB1CEE010488162FD1C301C6B71D8C78F5493178DBE747205064B08C74B8726B52E358A409612C00A37D3B4D941793F359B3E475BDA3BD4B3868DD69F3F07261FF3C441AA69FD4> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 3{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 441.96 mo(4.6)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B854D088EEB7F529386F280D9C87121678FF369865635B5BF594D0E5245872DF2CE7> |-/J <1C60D8A8C9B7A73D3A64F3A0911B22B112D7ACEB391B91096C12A11E71CB15F3901CE029A227F155D72DBE21F7EA1B122CA81A0C6F2B54183285138C643385DF2E19D7B7DF8580D3D25B> |-/P <1C60D8A8C9B64EDF88209F7A97EBCA021BD485E107F2B7F48F28A615216ABC23146CC805D621E6F303BD17890284CBC7F6C7066E0A59D376428DF23A5E8B4FE40F7ADC431E558DFFC35223DE8FA0FB4FCFFB4B5195> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 44 /comma putdup 74 /J putdup 80 /P putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 439.8 mo(JHEP03,128\(2013\))[3.36005 4.79999 4.44006 6.23993 3.71997 3.71997 3.59985 3.71997 3.71997 5.39984 2.15997 3.71997 3.71997 3.72003 3.71997 0 ]xsh312.001 453.73 mo
312.001 447.157 li
313.046 447.157 li
313.046 460.302 li
312.001 460.302 li
.466438 .391089 .392615 .0311284 cmyk
f
310.958 453.73 mo
310.958 449.444 li
313.524 449.444 li
313.524 458.016 li
310.958 458.016 li
0 .589105 1 0 cmyk
f
311.338 453.73 mo
311.338 449.444 li
313.247 449.444 li
313.247 458.016 li
311.338 458.016 li
.179263 .966278 1 .0934768 cmyk
f
312.216 457.097 mo
316.043 457.097 li
312.216 449.444 li
308.389 457.097 li
312.216 457.097 li
0 0 0 1 cmyk
f
312.216 455.873 mo
314.342 455.873 li
312.216 451.621 li
310.09 455.873 li
312.216 455.873 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 452.76 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 452.76 mo(=7.1+0.5)[7.68051 3.72004 2.03999 5.27988 7.32036 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf148.12 452.76 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf154.12 452.76 mo(0.4)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf165.16 452.76 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf171.16 452.76 mo(0.4)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf182.44 452.76 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 458.88 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh591.292 453.73 mo
591.292 447.157 li
595.619 447.157 li
595.619 460.302 li
591.292 460.302 li
.466438 .391089 .392615 .0311284 cmyk
f
587.263 453.73 mo
587.263 449.444 li
597.698 449.444 li
597.698 458.016 li
587.263 458.016 li
0 .589105 1 0 cmyk
f
588.696 453.73 mo
588.696 449.444 li
596.484 449.444 li
596.484 458.016 li
588.696 458.016 li
.179263 .966278 1 .0934768 cmyk
f
592.157 457.097 mo
595.984 457.097 li
592.157 449.444 li
588.331 457.097 li
592.157 457.097 li
0 0 0 1 cmyk
f
592.157 455.873 mo
594.284 455.873 li
592.157 451.621 li
590.032 455.873 li
592.157 455.873 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 457.56 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 456 mo(ATLAS-CONF-2013-020)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf28.4801 417.6 mo(WZ)[17.8799 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 427.2 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh325.08 406.948 mo
325.08 400.375 li
326.885 400.375 li
326.885 413.52 li
325.08 413.52 li
.466438 .391089 .392615 .0311284 cmyk
f
325.758 406.948 mo
325.758 402.662 li
328.439 402.662 li
328.439 411.234 li
325.758 411.234 li
.818479 .642359 0 0 cmyk
f
326.052 406.948 mo
326.052 402.662 li
328.202 402.662 li
328.202 411.234 li
326.052 411.234 li
1 .998535 .0944533 .0983291 cmyk
f
330.811 406.948 mo
330.811 404.913 329.161 403.263 327.125 403.263 cv
325.09 403.263 323.44 404.913 323.44 406.948 cv
323.44 408.983 325.09 410.633 327.125 410.633 cv
329.161 410.633 330.811 408.983 330.811 406.948 cv
0 0 0 1 cmyk
f
329.393 406.948 mo
329.393 405.696 328.378 404.68 327.125 404.68 cv
325.873 404.68 324.858 405.696 324.858 406.948 cv
324.858 408.2 325.873 409.216 327.125 409.216 cv
328.378 409.216 329.393 408.2 329.393 406.948 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 405.96 mo(\033)sh%ADOBeginSubsetFont: BJEBAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVW+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7883CBACD30F9B872676EB842292BDEF11E3B363F736459EBA871FEAABC60F31708CDE2830680E85D3C6A47F799DDF25FBAA7A19E4AF979352C0CE441A0CCBDE9468FC3ACB293E8BB4C55CE94E04E6C1E8B5D71C80B3DDCFF11876F5DB328DFB0F467DAACC4254002EDEFCAC444F81BAB9E75B0EBE587039EA4C20A5B82B67A5386AFA94A60BBE019AC581F44351BBFAAA70C> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVW+CMSS8 /Encoding getdup 57 /nine putpop%ADOEndSubsetFont
/GANIVW+CMSS8*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /.notdef /nine 3{/.notdef}rp /equal 194{/.notdef}rp]GANIVW+CMSS8 nfGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 405.96 mo(=19.0+1.4)[7.68051 3.72004 3.72005 2.03998 5.28021 7.20042 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf151.84 405.96 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf157.84 405.96 mo(1.3)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf168.88 405.96 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf174.88 405.96 mo(1.0)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf186.16 405.96 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.72 1.79999 3.72 0 ]xsh137.08 412.08 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.72 2.39987 3.35999 0 ]xsh589.483 406.948 mo
589.483 400.375 li
596.917 400.375 li
596.917 413.52 li
589.483 413.52 li
.466438 .391089 .392615 .0311284 cmyk
f
592.173 406.948 mo
592.173 402.662 li
604.069 402.662 li
604.069 411.234 li
592.173 411.234 li
.818479 .642359 0 0 cmyk
f
593.377 406.948 mo
593.377 402.662 li
602.935 402.662 li
602.935 411.234 li
593.377 411.234 li
1 .998535 .0944533 .0983291 cmyk
f
601.664 406.948 mo
601.664 404.913 600.014 403.263 597.979 403.263 cv
595.943 403.263 594.293 404.913 594.293 406.948 cv
594.293 408.983 595.943 410.633 597.979 410.633 cv
600.014 410.633 601.664 408.983 601.664 406.948 cv
0 0 0 1 cmyk
f
600.246 406.948 mo
600.246 405.696 599.231 404.68 597.979 404.68 cv
596.726 404.68 595.711 405.696 595.711 406.948 cv
595.711 408.2 596.726 409.216 597.979 409.216 cv
599.231 409.216 600.246 408.2 600.246 406.948 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 410.76 mo(4.6)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 408.6 mo(EPJC72,2173\(2012\))[4.44006 4.44006 3.36005 6.59985 3.71997 3.71997 3.59985 3.71997 3.71997 3.71997 5.40015 2.15997 3.71997 3.72003 3.71997 3.71997 0 ]xsh327.519 422.542 mo
327.519 415.969 li
328.714 415.969 li
328.714 429.114 li
327.519 429.114 li
.466438 .391089 .392615 .0311284 cmyk
f
326.984 422.542 mo
326.984 418.256 li
329.286 418.256 li
329.286 426.828 li
326.984 426.828 li
0 .589105 1 0 cmyk
f
327.596 422.542 mo
327.596 418.256 li
328.714 418.256 li
328.714 426.828 li
327.596 426.828 li
.179263 .966278 1 .0934768 cmyk
f
328.128 425.909 mo
331.955 425.909 li
328.128 418.255 li
324.301 425.909 li
328.128 425.909 li
0 0 0 1 cmyk
f
328.128 424.685 mo
330.254 424.685 li
328.128 420.433 li
326.002 424.685 li
328.128 424.685 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 421.56 mo(\033)sh%ADOBeginSubsetFont: BJEBAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVW+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7883CBACD30F93845E8E4FFD3BA95184399EE9CBBA7FB81F89D5E8AD1DEAE0D53A26968E620DC3450183C92B4C2823915F4D2E75C69972BC62E22481598DC99585CF341106232D18D969461EF9C01C6EAF0AB2B36ECF86B240242EA97C5523F9360209BDF5409B4B025DD36B6929BA7244B2FE22D613F327A9463CFD8A38CEC> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVW+CMSS8 /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/GANIVW+CMSS8*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 194{/.notdef}rp]GANIVW+CMSS8 nfGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 421.56 mo(=20.3+0.8)[7.68051 3.72004 3.72005 2.03998 5.28021 7.20042 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf151.84 421.56 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf157.84 421.56 mo(0.7+1.4)[3.72003 2.03999 5.27989 7.32034 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf187.24 421.56 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf193.24 421.56 mo(1.3)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf204.52 421.56 mo(pb\(data\))[3.72 5.51985 2.15996 3.72 3.72 1.79999 3.72002 0 ]xsh137.08 427.68 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.72 2.39987 3.35999 0 ]xsh590.568 422.542 mo
590.568 415.969 li
595.478 415.969 li
595.478 429.114 li
590.568 429.114 li
.466438 .391089 .392615 .0311284 cmyk
f
588.491 422.542 mo
588.491 418.256 li
597.972 418.256 li
597.972 426.828 li
588.491 426.828 li
0 .589105 1 0 cmyk
f
590.874 422.542 mo
590.874 418.256 li
595.478 418.256 li
595.478 426.828 li
590.874 426.828 li
.179263 .966278 1 .0934768 cmyk
f
593.023 425.909 mo
596.85 425.909 li
593.023 418.255 li
589.196 425.909 li
593.023 425.909 li
0 0 0 1 cmyk
f
593.023 424.685 mo
595.148 424.685 li
593.023 420.433 li
590.897 424.685 li
593.023 424.685 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 426.36 mo(13.0)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 424.8 mo(ATLAS-CONF-2013-021)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B795A0BDB3E7720F019ECAEE369DE588A3BCB46E303C5DA9ED7D89C29395542A6F360F30B27AB8DAAE27C13EAD51313CD8397E65C9D91194FDD0ED3BB0AC57448244ADD11F2E03EFC965CB67B26C81EAF58EC74A4B70BFB02D7849F7264361B3C3680955EF79F1BAF290CDACA25555D829C711B164D7A9C24E6D86F9D21E1EAF3606A88386DCC75470E151BDA348E7089DCADAE9E68545FEA5F3664411908FE2FDE7A680105E78E12063933DC370999ADA467B6251347F7DA35E3915801AED54199C24F7B51956B5E84311E1B77E52DE4FB998120DB6A29B35FD42F34EB68462EAA98769D05DE49E92B45B0810> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 103 /g putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 26{/.notdef}rp /one 16{/.notdef}rp /B 3{/.notdef}rp /F /.notdef /H 13{/.notdef}rp /V /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 4{/.notdef}rp /b /.notdef /d /.notdef /f /g 12{/.notdef}rp /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf27.8801 385.56 mo(H)shGANIVS+CMSSBX10*1 [8.96638 0 0 -8.96638 0 0 ]msf43.2403 385.56 mo(ggF)[4.92003 4.92002 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 396 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh325.618 383.557 mo
325.618 369.187 li
328.785 369.187 li
328.785 397.926 li
325.618 397.926 li
.466438 .391089 .392615 .0311284 cmyk
f
328.202 383.557 mo
328.202 374.985 li
332.891 374.985 li
332.891 392.129 li
328.202 392.129 li
0 .589105 1 0 cmyk
f
330.6 383.557 mo
330.6 374.985 li
330.602 374.985 li
330.602 392.129 li
330.6 392.129 li
.179263 .966278 1 .0934768 cmyk
f
330.601 386.924 mo
334.428 386.924 li
330.601 379.271 li
326.774 386.924 li
330.601 386.924 li
0 0 0 1 cmyk
f
330.601 385.7 mo
332.727 385.7 li
330.601 381.448 li
328.475 385.7 li
330.601 385.7 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 380.04 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 380.04 mo(=23.9+3.9)[7.68051 3.72004 3.72005 2.03998 5.28021 7.20042 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf151.84 380.04 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf157.84 380.04 mo(3.5)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf169.12 380.04 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 386.16 mo(LHC-HXSWG\(theory\))[3.71999 4.8 4.8 2.15996 4.8 4.44003 4.44006 6.24001 6.96016 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh586.533 383.557 mo
586.533 369.187 li
599.513 369.187 li
599.513 397.926 li
586.533 397.926 li
.466438 .391089 .392615 .0311284 cmyk
f
596.917 383.557 mo
596.917 374.985 li
620.929 374.985 li
620.929 392.129 li
596.917 392.129 li
0 .589105 1 0 cmyk
f
608.271 383.557 mo
608.271 374.985 li
608.277 374.985 li
608.277 392.129 li
608.271 392.129 li
.179263 .966278 1 .0934768 cmyk
f
608.274 386.924 mo
612.1 386.924 li
608.274 379.271 li
604.447 386.924 li
608.274 386.924 li
0 0 0 1 cmyk
f
608.274 385.7 mo
610.4 385.7 li
608.274 381.448 li
606.148 385.7 li
608.274 385.7 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 387.36 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 385.8 mo(ATLAS-CONF-2015-007)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf30.7602 355.2 mo(Wt)[17.8799 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 364.8 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh323.136 344.571 mo
323.136 337.999 li
325.262 337.999 li
325.262 351.144 li
323.136 351.144 li
.466438 .391089 .392615 .0311284 cmyk
f
320.089 344.571 mo
320.089 340.286 li
329.111 340.286 li
329.111 348.857 li
320.089 348.857 li
.818479 .642359 0 0 cmyk
f
322.391 344.571 mo
322.391 340.286 li
327.673 340.286 li
327.673 348.857 li
322.391 348.857 li
1 .998535 .0944533 .0983291 cmyk
f
328.947 344.571 mo
328.947 342.536 327.297 340.886 325.262 340.886 cv
323.227 340.886 321.577 342.536 321.577 344.571 cv
321.577 346.607 323.227 348.257 325.262 348.257 cv
327.297 348.257 328.947 346.607 328.947 344.571 cv
0 0 0 1 cmyk
f
327.53 344.571 mo
327.53 343.319 326.514 342.304 325.262 342.304 cv
324.009 342.304 322.994 343.319 322.994 344.571 cv
322.994 345.824 324.009 346.839 325.262 346.839 cv
326.514 346.839 327.53 345.824 327.53 344.571 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 343.56 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 343.56 mo(=16.8)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 343.56 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 343.56 mo(2.9)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf150.52 343.56 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf156.52 343.56 mo(3.9)[3.72003 2.03999 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plus <1C60D8A8C9B7F374FF55710705644BE33420E0A427A4E7B532FC8288ADE03315B755CDE2AA8B86E23A9DE4093EF04A8AB08E98B02527D626> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 43 /plus putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf167.8 343.56 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 349.68 mo(NLO+NLL\(theory\))[4.8 3.71999 5.16002 3.83998 4.8 3.72 5.52016 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh588.657 344.571 mo
588.657 337.999 li
597.388 337.999 li
597.388 351.144 li
588.657 351.144 li
.466438 .391089 .392615 .0311284 cmyk
f
578.102 344.571 mo
578.102 340.286 li
616.674 340.286 li
616.674 348.857 li
578.102 348.857 li
.818479 .642359 0 0 cmyk
f
585.88 344.571 mo
585.88 340.286 li
608.896 340.286 li
608.896 348.857 li
585.88 348.857 li
1 .998535 .0944533 .0983291 cmyk
f
601.073 344.571 mo
601.073 342.536 599.423 340.886 597.388 340.886 cv
595.353 340.886 593.703 342.536 593.703 344.571 cv
593.703 346.607 595.353 348.257 597.388 348.257 cv
599.423 348.257 601.073 346.607 601.073 344.571 cv
0 0 0 1 cmyk
f
599.655 344.571 mo
599.655 343.319 598.64 342.304 597.388 342.304 cv
596.136 342.304 595.12 343.319 595.12 344.571 cv
595.12 345.824 596.136 346.839 597.388 346.839 cv
598.64 346.839 599.655 345.824 599.655 344.571 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 348.36 mo(2.0)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7EF32A838F0A26A8CCBCA19DBCB0BC442F9F313D0A8059DC6DCE2FDC6D47EB8C5AF206894330999A374BBE10DCA1E0BFAAAFEC120379E9D17DC429975E7DE3320F70506C11E30DD7FEB9FB3C327D177D6A40ED6FB573EC6BC20B963EE60B31A54FCDC675714BE814E83C90BB6F5E67933D1BE84005F2BB7C6715737232EDEFA> |-/B <1C60D8A8C9B64EDF8862D7741422B35DDD963797F577F66A64697F7272AAE0B6264ACD14181E5F10E4FB0514D6221FE5FAC758C7522BB31C58F1CFA62FEAB298AC88BCB0ABBC0C7AE7457D34C5849B2B2A97077BAE7F25A07EADAC5FC12790407A6AF84D856082C55B9BBC3CB54627BBA20011301E4CCA064CABD12DD2C3703CD52014EEA9DC5B2F2392CED1F890926BDF04A6C3F612BEA9E943B7AD0869A984C8976A9B268EFF958A411E3CC5326CE6ACCEB18F2EB1B99D9198AD1603C5F4DAD6E642E2D4BA50B6D9D677AF975761BF5F50BDC379E2C127D9> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 57 /nine putdup 66 /B putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A /B /C /.notdef /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 346.2 mo(PLB716,142-159\(2012\))[4.44006 3.71997 6.24011 3.71997 3.71997 3.71997 3.60016 3.72003 3.71991 3.72003 2.15997 3.71997 3.71997 5.40015 2.15997 3.71997 3.71997 3.72003 3.71991 0 ]xsh328.569 360.165 mo
328.569 353.593 li
330.601 353.593 li
330.601 366.738 li
328.569 366.738 li
.466438 .391089 .392615 .0311284 cmyk
f
328.726 360.166 mo
328.726 355.88 li
335.617 355.88 li
335.617 364.452 li
328.726 364.452 li
0 .589105 1 0 cmyk
f
330.914 360.166 mo
330.914 355.88 li
334.044 355.88 li
334.044 364.452 li
330.914 364.452 li
.179263 .966278 1 .0934768 cmyk
f
332.56 363.533 mo
336.387 363.533 li
332.56 355.88 li
328.734 363.533 li
332.56 363.533 li
0 0 0 1 cmyk
f
332.56 362.309 mo
334.686 362.309 li
332.56 358.057 li
330.434 362.309 li
332.56 362.309 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 359.16 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 359.16 mo(=27.2)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 359.16 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 359.16 mo(2.8)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf150.52 359.16 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf156.52 359.16 mo(5.4)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf167.8 359.16 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 365.28 mo(NLO+NLL\(theory\))[4.8 3.71999 5.16002 3.83998 4.8 3.72 5.52016 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh588.851 360.165 mo
588.851 353.593 li
597.195 353.593 li
597.195 366.738 li
588.851 366.738 li
.466438 .391089 .392615 .0311284 cmyk
f
589.455 360.166 mo
589.455 355.88 li
623.292 355.88 li
623.292 364.452 li
589.455 364.452 li
0 .589105 1 0 cmyk
f
598.586 360.166 mo
598.586 355.88 li
614.161 355.88 li
614.161 364.452 li
598.586 364.452 li
.179263 .966278 1 .0934768 cmyk
f
606.373 363.533 mo
610.2 363.533 li
606.373 355.88 li
602.546 363.533 li
606.373 363.533 li
0 0 0 1 cmyk
f
606.373 362.309 mo
608.499 362.309 li
606.373 358.057 li
604.247 362.309 li
606.373 362.309 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 363.96 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 362.52 mo(ATLAS-CONF-2013-100)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf25.2398 324 mo(WW)[17.8799 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 333.6 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh339.426 313.383 mo
339.426 306.811 li
340.78 306.811 li
340.78 319.956 li
339.426 319.956 li
.466438 .391089 .392615 .0311284 cmyk
f
340.866 313.383 mo
340.866 309.097 li
343.695 309.097 li
343.695 317.67 li
340.866 317.67 li
.818479 .642359 0 0 cmyk
f
341.751 313.383 mo
341.751 309.097 li
342.92 309.097 li
342.92 317.67 li
341.751 317.67 li
1 .998535 .0944533 .0983291 cmyk
f
346.032 313.383 mo
346.032 311.348 344.382 309.698 342.347 309.698 cv
340.312 309.698 338.662 311.348 338.662 313.383 cv
338.662 315.418 340.312 317.068 342.347 317.068 cv
344.382 317.068 346.032 315.418 346.032 313.383 cv
0 0 0 1 cmyk
f
344.614 313.383 mo
344.614 312.131 343.599 311.116 342.347 311.116 cv
341.095 311.116 340.079 312.131 340.079 313.383 cv
340.079 314.636 341.095 315.651 342.347 315.651 cv
343.599 315.651 344.614 314.636 344.614 313.383 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 312.36 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 312.36 mo(=51.9)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 312.36 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 312.36 mo(2.0)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf150.52 312.36 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf156.52 312.36 mo(4.4)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf167.8 312.36 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 318.48 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh590.375 313.383 mo
590.375 306.811 li
595.95 306.811 li
595.95 319.956 li
590.375 319.956 li
.466438 .391089 .392615 .0311284 cmyk
f
596.321 313.383 mo
596.321 309.097 li
609.795 309.097 li
609.795 317.67 li
596.321 317.67 li
.818479 .642359 0 0 cmyk
f
600.271 313.383 mo
600.271 309.097 li
605.846 309.097 li
605.846 317.67 li
600.271 317.67 li
1 .998535 .0944533 .0983291 cmyk
f
606.743 313.383 mo
606.743 311.348 605.093 309.698 603.058 309.698 cv
601.023 309.698 599.373 311.348 599.373 313.383 cv
599.373 315.418 601.023 317.068 603.058 317.068 cv
605.093 317.068 606.743 315.418 606.743 313.383 cv
0 0 0 1 cmyk
f
605.326 313.383 mo
605.326 312.131 604.311 311.116 603.058 311.116 cv
601.806 311.116 600.791 312.131 600.791 313.383 cv
600.791 314.636 601.806 315.651 603.058 315.651 cv
604.311 315.651 605.326 314.636 605.326 313.383 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 317.16 mo(4.6)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F1E0B540198B8DDE6757C2310D3AD5E1FDF2BC0C60FD3111145A0C6CE3E2B7407A7378D5CEC81742B166F74521F0055BFBBBC2731E70BFB8F1E64CE6DC937ED1C7E392B> |-/R <1C60D8A8C9B6079F1E495237436797E185D7CF3F7402F2BC3EC3BC90890DED6BF193ABC5D58C1CDBF8C5BAC4CEC14D8152C3F70BEBF42F1A4DCB1232C0CBF2933F87C28643C61B828B883E255ECE3B5A82A9B7EA66C856B32F033FDB9EDABB1A00A832B2A4C896469541AE074B02CFF59FCE1EFFEAB22924B8C1> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 68 /D putdup 82 /R putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 315 mo(PRD87,112001\(2013\))[4.44006 4.79999 6.59985 3.72003 3.71991 3.59985 3.72003 3.71997 3.71997 3.71997 3.71997 5.40002 2.15997 3.71991 3.72003 3.71997 3.71997 0 ]xsh343.498 328.977 mo
343.498 322.405 li
344.967 322.405 li
344.967 335.55 li
343.498 335.55 li
.466438 .391089 .392615 .0311284 cmyk
f
346.068 328.977 mo
346.068 324.691 li
348.327 324.691 li
348.327 333.263 li
346.068 333.263 li
0 .589105 1 0 cmyk
f
346.921 328.977 mo
346.921 324.691 li
347.431 324.691 li
347.431 333.263 li
346.921 333.263 li
.179263 .966278 1 .0934768 cmyk
f
347.178 332.345 mo
351.005 332.345 li
347.178 324.691 li
343.351 332.345 li
347.178 332.345 li
0 0 0 1 cmyk
f
347.178 331.12 mo
349.304 331.12 li
347.178 326.868 li
345.052 331.12 li
347.178 331.12 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 327.96 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 327.96 mo(=71.4)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 327.96 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 327.96 mo(1.2+5.5)[3.72003 2.03999 5.27989 7.32034 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf168.88 327.96 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf174.88 327.96 mo(4.9)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf186.16 327.96 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.72 1.79999 3.72 0 ]xsh137.08 334.08 mo(MCFM\(theory\))[5.51994 4.8 4.07996 7.31989 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh590.157 328.977 mo
590.157 322.405 li
596.207 322.405 li
596.207 335.55 li
590.157 335.55 li
.466438 .391089 .392615 .0311284 cmyk
f
601.148 328.977 mo
601.148 324.691 li
612.477 324.691 li
612.477 333.263 li
601.148 333.263 li
0 .589105 1 0 cmyk
f
605.229 328.977 mo
605.229 324.691 li
607.776 324.691 li
607.776 333.263 li
605.229 333.263 li
.179263 .966278 1 .0934768 cmyk
f
606.502 332.345 mo
610.329 332.345 li
606.502 324.691 li
602.675 332.345 li
606.502 332.345 li
0 0 0 1 cmyk
f
606.502 331.12 mo
608.628 331.12 li
606.502 326.868 li
604.376 331.12 li
606.502 331.12 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 332.76 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 331.32 mo(ATLAS-CONF-2014-033)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf5.68008 292.8 mo(WW)[17.8799 0 ]xshGANIVU+NimbusSanL-Regu*1 [16.3546 0 0 -16.3546 0 0 ]msf41.6801 292.8 mo(+)shGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf51.2801 292.8 mo(WZ)[17.8799 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 302.4 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh344.263 289.992 mo
344.263 275.623 li
345.354 275.623 li
345.354 304.362 li
344.263 304.362 li
.466438 .391089 .392615 .0311284 cmyk
f
341.085 289.992 mo
341.085 281.42 li
350.387 281.42 li
350.387 298.564 li
341.085 298.564 li
.818479 .642359 0 0 cmyk
f
344.794 289.992 mo
344.794 281.42 li
347.923 281.42 li
347.923 298.564 li
344.794 298.564 li
1 .998535 .0944533 .0983291 cmyk
f
350.124 289.992 mo
350.124 287.957 348.474 286.307 346.439 286.307 cv
344.404 286.307 342.754 287.957 342.754 289.992 cv
342.754 292.027 344.404 293.677 346.439 293.677 cv
348.474 293.677 350.124 292.027 350.124 289.992 cv
0 0 0 1 cmyk
f
348.707 289.992 mo
348.707 288.74 347.691 287.724 346.439 287.724 cv
345.187 287.724 344.171 288.74 344.171 289.992 cv
344.171 291.245 345.187 292.26 346.439 292.26 cv
347.691 292.26 348.707 291.245 348.707 289.992 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 286.44 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 286.44 mo(=68.0)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 286.44 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 286.44 mo(7.0)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf150.52 286.44 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf156.52 286.44 mo(19.0)[3.72003 3.72006 2.03996 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/at <1C60D8A8C9B51976DFA365837D88AE23DB50E788E3BB763D1E0F6444D167D15B3EE6F6291801A3B047E10FB3A94DE99F4044D833D97B7E9D8932EC668B578C63C276BC9EAE93017DCBB6B14626D56288BCC0105832B745AE513DEBE4389EF946302B93780D6C89AAB58A7EF5233003B397F4E152EE489DBBE3CF759D1A07F97B56D651E24DA9439CA7A35DFFE05A43D6933EE72D5C5EA227D39F9A2B8475B9550A1066CCEEA0DACB8D9F47468B8EECF51E640C4B1674CC5DB06C38D50BB6ED2A6D830262BDA76223E4CDCB7E347AB0DD15F372ED440773FDF928B07A27CB0389827A804830C3DB9B43582400454594A87C16C601DC915CE3C150E45A4DD272D4FDB34C46469A4AD827E6DD8A3E41B21A78A2442A94DDFE2799F2AE050B9EC91D426B13DFB20101CB59FB9F15C4C2BFD92BC54A5922D9DF9C5C16A8336A> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 64 /at putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf171.52 286.44 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 292.56 mo(MC@NLO\(theory\))[5.51994 4.8 6.72002 4.8 3.71999 6.95993 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh590.78 289.992 mo
590.78 275.623 li
595.266 275.623 li
595.266 304.362 li
590.78 304.362 li
.466438 .391089 .392615 .0311284 cmyk
f
579.412 289.992 mo
579.412 281.42 li
620.705 281.42 li
620.705 298.564 li
579.412 298.564 li
.818479 .642359 0 0 cmyk
f
592.921 289.992 mo
592.921 281.42 li
607.196 281.42 li
607.196 298.564 li
592.921 298.564 li
1 .998535 .0944533 .0983291 cmyk
f
603.744 289.992 mo
603.744 287.957 602.094 286.307 600.059 286.307 cv
598.023 286.307 596.373 287.957 596.373 289.992 cv
596.373 292.027 598.023 293.677 600.059 293.677 cv
602.094 293.677 603.744 292.027 603.744 289.992 cv
0 0 0 1 cmyk
f
602.327 289.992 mo
602.327 288.74 601.311 287.724 600.059 287.724 cv
598.806 287.724 597.791 288.74 597.791 289.992 cv
597.791 291.245 598.806 292.26 600.059 292.26 cv
601.311 292.26 602.327 291.245 602.327 289.992 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 293.76 mo(4.6)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 291.6 mo(JHEP01,049\(2015\))[3.36005 4.79999 4.44006 6.23993 3.71997 3.71997 3.59985 3.71997 3.71997 5.39984 2.15997 3.71997 3.71997 3.72003 3.71997 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B78E05922DFD3AE291311EDDA978D554F833EEF8F0AA38DBEBDD2326AC4D55C915CC4853AB84A252602DE5ACB2665E160DD4BB46E9D53F2A68651B0C69DBF0732FE864448E65EB2681EABE008B59298BC974F7827B008BDB4F25502248403B4385866E6A60C4677AF7C7EBD2C241081B3007E2FA1E8723AC2349CB5A58C2CCAEA20DF8EDDBF41CA7FF22> |-/c <1C60D8A8C9B75378B6BCFFEF4AAE679EA954FB4498D95CE324A2E7132FEB4452E60B8D880068A62C8D6E7E521CD8D302768FD1DF7DB3FCE2C177AEF7D0965D80365F03850CCF830E568B28072D091F7097457A2A8EAA667EB51D31421CA0B369AB3B162512A3D45AED03A632DA417D5E30BAC111971A75E39EB311815F738BC2AFAEAE> |-/h <1C60D8A8C9B7EA3AC724EF1810EE8C39AC19C15155E38F978B90FFD6363F7B3129BEAE58266AABBA84BC763985FAAA821A5A61316CC201733B1A67B69428A6E2AF4C5459990484E8920C9FA130761C10F85B6A1E389E0AA7BCF5AC47E0E848D768DB93C914A9800B7E43D5> |-/n <1C60D8A8C9B7EA3AC724EF1810EE8C07BEFD9AE558769FDDACC5CE9B7CB1DA292BBECD43432953BFFAD39C3DAC8A57A17EC79F202614CF5DA26BECB60CCCC4AE1E9A85925FC2B584F3E57C1BBC79422AD5EFC1A7284C83096266DC7A6752CE38C1EF688D38BA> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 97 /a putdup 99 /c putdup 104 /h putdup 110 /n putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 26{/.notdef}rp /one 16{/.notdef}rp /B 3{/.notdef}rp /F /.notdef /H 13{/.notdef}rp /V /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /.notdef /f /g /h 5{/.notdef}rp /n 5{/.notdef}rp /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf20.3199 259.44 mo(t)shGANIVS+CMSSBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf27.2801 261.96 mo(t)shGANIVR+txbsy*1 [11.9552 0 0 -11.9552 0 0 ]msf32.0801 261.96 mo( )shGANIVS+CMSSBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf40.1199 261.96 mo(chan)[5.88009 6.72008 6.23994 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 271.2 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh345.186 251.007 mo
345.186 244.435 li
346.282 244.435 li
346.282 257.579 li
345.186 257.579 li
.466438 .391089 .392615 .0311284 cmyk
f
344.481 251.007 mo
344.481 246.721 li
348.173 246.721 li
348.173 255.293 li
344.481 255.293 li
.818479 .642359 0 0 cmyk
f
345.987 251.007 mo
345.987 246.721 li
346.878 246.721 li
346.878 255.293 li
345.987 255.293 li
1 .998535 .0944533 .0983291 cmyk
f
350.124 251.007 mo
350.124 248.972 348.474 247.322 346.439 247.322 cv
344.404 247.322 342.754 248.972 342.754 251.007 cv
342.754 253.042 344.404 254.692 346.439 254.692 cv
348.474 254.692 350.124 253.042 350.124 251.007 cv
0 0 0 1 cmyk
f
348.707 251.007 mo
348.707 249.755 347.691 248.739 346.439 248.739 cv
345.187 248.739 344.171 249.755 344.171 251.007 cv
344.171 252.259 345.187 253.275 346.439 253.275 cv
347.691 253.275 348.707 252.259 348.707 251.007 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 250.08 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 250.08 mo(=68.0)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 250.08 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 250.08 mo(2.0)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf150.52 250.08 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf156.52 250.08 mo(8.0)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf167.8 250.08 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 256.2 mo(NLO+NLL\(theory\))[4.8 3.71999 5.16002 3.83998 4.8 3.72 5.52016 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh591.094 251.007 mo
591.094 244.435 li
595.627 244.435 li
595.627 257.579 li
591.094 257.579 li
.466438 .391089 .392615 .0311284 cmyk
f
588.349 251.007 mo
588.349 246.721 li
604.255 246.721 li
604.255 255.293 li
588.349 255.293 li
.818479 .642359 0 0 cmyk
f
594.373 251.007 mo
594.373 246.721 li
598.231 246.721 li
598.231 255.293 li
594.373 255.293 li
1 .998535 .0944533 .0983291 cmyk
f
599.987 251.007 mo
599.987 248.972 598.337 247.322 596.302 247.322 cv
594.266 247.322 592.616 248.972 592.616 251.007 cv
592.616 253.042 594.266 254.692 596.302 254.692 cv
598.337 254.692 599.987 253.042 599.987 251.007 cv
0 0 0 1 cmyk
f
598.57 251.007 mo
598.57 249.755 597.554 248.739 596.302 248.739 cv
595.049 248.739 594.034 249.755 594.034 251.007 cv
594.034 252.259 595.049 253.275 596.302 253.275 cv
597.554 253.275 598.57 252.259 598.57 251.007 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 254.76 mo(4.6)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 252.6 mo(PRD90,112006\(2014\))[4.44006 4.79999 6.59985 3.72003 3.71991 3.59985 3.72003 3.71997 3.71997 3.71997 3.71997 5.40002 2.15997 3.71991 3.72003 3.71997 3.71997 0 ]xsh349.979 266.601 mo
349.979 260.029 li
350.886 260.029 li
350.886 273.173 li
349.979 273.173 li
.466438 .391089 .392615 .0311284 cmyk
f
346.995 266.601 mo
346.995 262.315 li
351.45 262.315 li
351.45 270.887 li
346.995 270.887 li
0 .589105 1 0 cmyk
f
349.164 266.601 mo
349.164 262.315 li
349.604 262.315 li
349.604 270.887 li
349.164 270.887 li
.179263 .966278 1 .0934768 cmyk
f
349.386 269.969 mo
353.212 269.969 li
349.386 262.315 li
345.559 269.969 li
349.386 269.969 li
0 0 0 1 cmyk
f
349.386 268.744 mo
351.511 268.744 li
349.386 264.492 li
347.259 268.744 li
349.386 268.744 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 265.68 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 265.68 mo(=82.6)[7.68051 3.72004 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf133.6 265.68 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf139.48 265.68 mo(1.2)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf150.52 265.68 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf156.52 265.68 mo(12.0)[3.72003 3.72006 2.03996 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf171.52 265.68 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 271.8 mo(NLO+NLL\(theory\))[4.8 3.71999 5.16002 3.83998 4.8 3.72 5.52016 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36 0 ]xsh591.675 266.601 mo
591.675 260.029 li
595.435 260.029 li
595.435 273.173 li
591.675 273.173 li
.466438 .391089 .392615 .0311284 cmyk
f
580.775 266.601 mo
580.775 262.315 li
597.89 262.315 li
597.89 270.887 li
580.775 270.887 li
0 .589105 1 0 cmyk
f
588.482 266.601 mo
588.482 262.315 li
590.184 262.315 li
590.184 270.887 li
588.482 270.887 li
.179263 .966278 1 .0934768 cmyk
f
589.333 269.969 mo
593.159 269.969 li
589.333 262.315 li
585.506 269.969 li
589.333 269.969 li
0 0 0 1 cmyk
f
589.333 268.744 mo
591.459 268.744 li
589.333 264.492 li
587.207 268.744 li
589.333 268.744 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 270.36 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 268.92 mo(ATLAS-CONF-2014-007)[3.6001 4.0799 3.72003 4.44006 4.44006 2.15997 4.79999 5.16003 4.79999 4.07996 2.15997 3.72003 3.71991 3.72003 3.71997 2.15997 3.71997 3.72003 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf36.2801 231.12 mo(t)sh42.0399 228.84 mo(\026)sh43.2399 231.12 mo(t)shGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 240 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh359.957 219.819 mo
359.957 213.246 li
361.762 213.246 li
361.762 226.391 li
359.957 226.391 li
.466438 .391089 .392615 .0311284 cmyk
f
360.825 219.819 mo
360.825 215.533 li
362.004 215.533 li
362.004 224.105 li
360.825 224.105 li
.818479 .642359 0 0 cmyk
f
361.167 219.819 mo
361.167 215.533 li
361.68 215.533 li
361.68 224.105 li
361.167 224.105 li
1 .998535 .0944533 .0983291 cmyk
f
365.111 219.819 mo
365.111 217.784 363.461 216.134 361.426 216.134 cv
359.391 216.134 357.741 217.784 357.741 219.819 cv
357.741 221.854 359.391 223.504 361.426 223.504 cv
363.461 223.504 365.111 221.854 365.111 219.819 cv
0 0 0 1 cmyk
f
363.693 219.819 mo
363.693 218.566 362.678 217.551 361.426 217.551 cv
360.173 217.551 359.158 218.566 359.158 219.819 cv
359.158 221.071 360.173 222.087 361.426 222.087 cv
362.678 222.087 363.693 221.071 363.693 219.819 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 218.88 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 218.88 mo(=182.9)[7.68051 3.72004 3.72005 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 218.88 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 218.88 mo(3.1)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf154.24 218.88 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf160.24 218.88 mo(6.4)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf171.52 218.88 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 225 mo(top++NNLO+NNLL\(theory\))[1.8 3.71999 3.72 3.84001 5.75984 4.8 4.79999 3.72 5.16 3.84 4.8 4.8 3.72 5.39984 2.15994 1.8 3.72 3.72 3.72 2.39987 3.36 0 ]xsh589.151 219.819 mo
589.151 213.246 li
596.543 213.246 li
596.543 226.391 li
589.151 226.391 li
.466438 .391089 .392615 .0311284 cmyk
f
592.596 219.819 mo
592.596 215.533 li
597.603 215.533 li
597.603 224.105 li
592.596 224.105 li
.818479 .642359 0 0 cmyk
f
594.009 219.819 mo
594.009 215.533 li
596.191 215.533 li
596.191 224.105 li
594.009 224.105 li
1 .998535 .0944533 .0983291 cmyk
f
598.785 219.819 mo
598.785 217.784 597.135 216.134 595.1 216.134 cv
593.064 216.134 591.414 217.784 591.414 219.819 cv
591.414 221.854 593.064 223.504 595.1 223.504 cv
597.135 223.504 598.785 221.854 598.785 219.819 cv
0 0 0 1 cmyk
f
597.368 219.819 mo
597.368 218.566 596.352 217.551 595.1 217.551 cv
593.847 217.551 592.832 218.566 592.832 219.819 cv
592.832 221.071 593.847 222.087 595.1 222.087 cv
596.352 222.087 597.368 221.071 597.368 219.819 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 223.56 mo(4.6)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/colon <1C60D8A8C9B854D088EEB7EF3C13811E8EB967C5CB98F731671C37203AFF4867191A0B47F0BA607F38> |-/s <1C60D8A8C9B7A73D3A65C15B5AE8DF91C48D2A2C43668D79F8F3A5F935483A3C34060A94950E9D350B9F868CE3ED993FB40EC7E2AFF791133043B6F7AAED813166E977345DD4BD6846AFC2220F71A5F08394F74E4F5F1CD427FFB1CAFB15B1F5A397A7109181C4A69B391CAEE240EE10B1146EFE73E7914695CD307234F6> |-/u <1C60D8A8C9B7EF32A8358723FC8D12C202AB69F38475355DC87FE6F09EA2B473E65B356517588F1CD4EF1A03FE0C354A3AD7E84141D7037001E355ABB43F410AFF0DF867DE0D34519A04D189A6EBB6E818EC8695A108F616E6262CAC79AADD14AD49EE> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 58 /colon putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 221.4 mo(Eur.Phys.J.C74:3109\(2014\))[4.44006 3.71997 1.80017 4.19995 4.44006 3.47992 3.36005 3.23999 4.08008 3.11993 3.60004 6.59998 3.72003 3.71991 4.07996 3.71997 3.71997 3.71997 5.40015 2.15997 3.71997 3.72003 3.71997 3.71997 0 ]xsh365.44 235.413 mo
365.44 228.841 li
367.111 228.841 li
367.111 241.985 li
365.44 241.985 li
.466438 .391089 .392615 .0311284 cmyk
f
365.032 235.413 mo
365.032 231.127 li
366.325 231.127 li
366.325 239.699 li
365.032 239.699 li
0 .589105 1 0 cmyk
f
365.586 235.413 mo
365.586 231.127 li
365.798 231.127 li
365.798 239.699 li
365.586 239.699 li
.179263 .966278 1 .0934768 cmyk
f
365.692 238.78 mo
369.519 238.78 li
365.692 231.127 li
361.866 238.78 li
365.692 238.78 li
0 0 0 1 cmyk
f
365.692 237.556 mo
367.818 237.556 li
365.692 233.304 li
363.566 237.556 li
365.692 237.556 li
1 /0 /CSD get_res sepcs
0 sep
f
.185153 .726986 .75256 .0513924 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 234.48 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 234.48 mo(=242.4)[7.68051 3.72004 3.72005 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 234.48 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 234.48 mo(1.7)[3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf154.24 234.48 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf160.24 234.48 mo(10.2)[3.72003 3.72006 2.03996 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf175.24 234.48 mo(pb\(data\))[3.71999 5.51985 2.15994 3.72 3.71999 1.8 3.72 0 ]xsh137.08 240.6 mo(top++NNLO+NNLL\(theory\))[1.8 3.71999 3.72 3.84001 5.75984 4.8 4.8 3.71999 5.15999 3.84001 4.8 4.8 3.72 5.39984 2.15994 1.8 3.72 3.72 3.72 2.39987 3.36002 0 ]xsh589.451 235.413 mo
589.451 228.841 li
596.299 228.841 li
596.299 241.985 li
589.451 241.985 li
.466438 .391089 .392615 .0311284 cmyk
f
587.889 235.413 mo
587.889 231.127 li
592.984 231.127 li
592.984 239.699 li
587.889 239.699 li
0 .589105 1 0 cmyk
f
590.018 235.413 mo
590.018 231.127 li
590.855 231.127 li
590.855 239.699 li
590.018 239.699 li
.179263 .966278 1 .0934768 cmyk
f
590.436 238.78 mo
594.263 238.78 li
590.436 231.127 li
586.609 238.78 li
590.436 238.78 li
0 0 0 1 cmyk
f
590.436 237.556 mo
592.562 237.556 li
590.436 233.304 li
588.31 237.556 li
590.436 237.556 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf689.32 239.16 mo(20.3)[6.36005 6.35999 3.12 0 ]xsh.185153 .726986 .75256 .0513924 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 237 mo(Eur.Phys.J.C74:3109\(2014\))[4.44006 3.71997 1.80017 4.19995 4.44006 3.47992 3.36005 3.23999 4.08008 3.11993 3.60004 6.59998 3.72003 3.71991 4.07996 3.71997 3.71997 3.71997 5.40015 2.15997 3.71997 3.72003 3.71997 3.71997 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf37.4801 199.32 mo(Z)shGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 208.92 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh437.907 196.428 mo
437.907 182.058 li
438.72 182.058 li
438.72 210.797 li
437.907 210.797 li
.466438 .391089 .392615 .0311284 cmyk
f
436.984 196.428 mo
436.984 187.855 li
438.188 187.855 li
438.188 205 li
436.984 205 li
.818479 .642359 0 0 cmyk
f
437.501 196.428 mo
437.501 187.855 li
437.694 187.855 li
437.694 205 li
437.501 205 li
1 .998535 .0944533 .0983291 cmyk
f
441.284 196.427 mo
441.284 194.392 439.633 192.742 437.598 192.742 cv
435.563 192.742 433.913 194.392 433.913 196.427 cv
433.913 198.462 435.563 200.112 437.598 200.112 cv
439.633 200.112 441.284 198.462 441.284 196.427 cv
0 0 0 1 cmyk
f
439.866 196.427 mo
439.866 195.175 438.85 194.16 437.598 194.16 cv
436.346 194.16 435.33 195.175 435.33 196.427 cv
435.33 197.68 436.346 198.695 437.598 198.695 cv
438.85 198.695 439.866 197.68 439.866 196.427 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 192.84 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 192.84 mo(=27.94)[7.68051 3.72004 3.72005 2.03998 3.72005 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 192.84 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 192.84 mo(0.178)[3.72003 2.03999 3.72003 3.72006 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf161.68 192.84 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf167.68 192.84 mo(1.096)[3.72003 2.03999 3.72003 3.72006 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Z <1C60D8A8C9B7D8BE6A02C8B7AC4B1E33E926F4A42EB3DCBF52BDEFDA4099AE6D8F2CCCC8FDC741D08BB03D80C22B48068881> |-/n <1C60D8A8C9B7EF32570F064E9AB268C93B02DD2F28468DDCB1A3C4F86F48E602E7C7194C181368A5716EB5792253727267A0374429827FD86C7FABB6E6778ED0FC2796F1CFF756E02469F24A251C434955893E9F7666388B889F20AB9CA915C27E181E30FFC8DEE269B03878734391ECE2257AD2> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 90 /Z putdup 110 /n putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T 2{/.notdef}rp /W /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf186.4 192.84 mo(nb\(data\))[3.71999 5.39993 2.15994 3.72 3.72 1.79999 3.72 0 ]xsh137.08 198.96 mo(FEWZ+HERAPDF1.5NNLO\(theory\))[4.07996 4.44003 6.24001 4.07996 3.84 4.8 4.44005 4.8 4.44005 4.44006 4.79999 4.07996 3.72 1.8 5.40001 4.79999 4.8 3.72 6.84015 2.15996 1.79999 3.72 3.72 3.72 2.39987 3.36 0 ]xsh592.038 196.428 mo
592.038 182.058 li
595.418 182.058 li
595.418 210.797 li
592.038 210.797 li
.466438 .391089 .392615 .0311284 cmyk
f
588.414 196.428 mo
588.414 187.855 li
593.189 187.855 li
593.189 205 li
588.414 205 li
.818479 .642359 0 0 cmyk
f
590.419 196.428 mo
590.419 187.855 li
591.184 187.855 li
591.184 205 li
590.419 205 li
1 .998535 .0944533 .0983291 cmyk
f
594.487 196.427 mo
594.487 194.392 592.837 192.742 590.802 192.742 cv
588.766 192.742 587.116 194.392 587.116 196.427 cv
587.116 198.462 588.766 200.112 590.802 200.112 cv
592.837 200.112 594.487 198.462 594.487 196.427 cv
0 0 0 1 cmyk
f
593.07 196.427 mo
593.07 195.175 592.054 194.16 590.802 194.16 cv
589.549 194.16 588.534 195.175 588.534 196.427 cv
588.534 197.68 589.549 198.695 590.802 198.695 cv
592.054 198.695 593.07 197.68 593.07 196.427 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf686.2 200.16 mo(0.035)[6.36005 3.11993 6.36005 6.35999 0 ]xsh.644129 .630549 .129 .00750744 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 198 mo(PRD85,072004\(2012\))[4.44006 4.79999 6.59985 3.72003 3.71991 3.59985 3.72003 3.71997 3.71997 3.71997 3.71997 5.40002 2.15997 3.71991 3.72003 3.71997 3.71997 0 ]xsh0 0 0 1 cmyk
GANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf34.1199 168.12 mo(W)shGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 177.72 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh456.618 165.239 mo
456.618 150.87 li
457.357 150.87 li
457.357 179.609 li
456.618 179.609 li
.466438 .391089 .392615 .0311284 cmyk
f
455.446 165.239 mo
455.446 156.667 li
456.643 156.667 li
456.643 173.812 li
455.446 173.812 li
.818479 .642359 0 0 cmyk
f
456.026 165.239 mo
456.026 156.667 li
456.088 156.667 li
456.088 173.812 li
456.026 173.812 li
1 .998535 .0944533 .0983291 cmyk
f
459.742 165.239 mo
459.742 163.204 458.092 161.554 456.057 161.554 cv
454.022 161.554 452.372 163.204 452.372 165.239 cv
452.372 167.275 454.022 168.925 456.057 168.925 cv
458.092 168.925 459.742 167.275 459.742 165.239 cv
0 0 0 1 cmyk
f
458.325 165.239 mo
458.325 163.987 457.309 162.971 456.057 162.971 cv
454.805 162.971 453.789 163.987 453.789 165.239 cv
453.789 166.492 454.805 167.507 456.057 167.507 cv
457.309 167.507 458.325 166.492 458.325 165.239 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 161.64 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 161.64 mo(=94.51)[7.68051 3.72004 3.72005 2.03998 3.72005 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 161.64 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 161.64 mo(0.194)[3.72003 2.03999 3.72003 3.72006 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf161.68 161.64 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf167.68 161.64 mo(3.726)[3.72003 2.03999 3.72003 3.72006 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf186.4 161.64 mo(nb\(data\))[3.71999 5.39993 2.15994 3.72 3.72 1.79999 3.72 0 ]xsh137.08 167.76 mo(FEWZ+HERAPDF1.5NNLO\(theory\))[4.07996 4.44003 6.24001 4.07996 3.84 4.8 4.44005 4.8 4.44005 4.44006 4.79999 4.07996 3.72 1.8 5.40001 4.79999 4.8 3.72 6.84015 2.15996 1.79999 3.72 3.72 3.72 2.39987 3.36 0 ]xsh592.108 165.239 mo
592.108 150.87 li
595.179 150.87 li
595.179 179.609 li
592.108 179.609 li
.466438 .391089 .392615 .0311284 cmyk
f
587.539 165.239 mo
587.539 156.667 li
592.209 156.667 li
592.209 173.812 li
587.539 173.812 li
.818479 .642359 0 0 cmyk
f
589.752 165.239 mo
589.752 156.667 li
589.995 156.667 li
589.995 173.812 li
589.752 173.812 li
1 .998535 .0944533 .0983291 cmyk
f
593.559 165.239 mo
593.559 163.204 591.909 161.554 589.874 161.554 cv
587.839 161.554 586.189 163.204 586.189 165.239 cv
586.189 167.275 587.839 168.925 589.874 168.925 cv
591.909 168.925 593.559 167.275 593.559 165.239 cv
0 0 0 1 cmyk
f
592.141 165.239 mo
592.141 163.987 591.126 162.971 589.874 162.971 cv
588.621 162.971 587.606 163.987 587.606 165.239 cv
587.606 166.492 588.621 167.507 589.874 167.507 cv
591.126 167.507 592.141 166.492 592.141 165.239 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf686.2 169.08 mo(0.035)[6.36005 3.11993 6.36005 6.35999 0 ]xsh.644129 .630549 .129 .00750744 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 166.92 mo(PRD85,072004\(2012\))[4.44006 4.79999 6.59985 3.72003 3.71991 3.59985 3.72003 3.71997 3.71997 3.71997 3.71997 5.40002 2.15997 3.71991 3.72003 3.71997 3.71997 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B83BB81FFC85D8C430E7BCF8524CCDAB1983F2507E71A2F2D225837C8CA436F03EA8FFF5B6C46E40FC9B3D> |-/zero <1C60D8A8C9B795A0335964371F4A4CA7FE73AF3B8BEC93A4723E1E0006587A524086FFB8AFE852C45BAD4113AFD64CF3B4AA1AE0CB7FD854DB68ADBA8300892E0591E04AA71233C37D4CAFB659E8CA41D5D53D4D6F32CCE483FBF1316456353D58DDB1063D61EB69A4FC385EA560ED68E8D6C2FC59AAE3538D4C1891AE> |-/four <1C60D8A8C9B795A0CD18DE88D966E8EE73C5B0E63CE619650CA590D6134491CD609701CB13DED0343A5650C5CCE0E1272A69934EBE4C07D5F77278A4D9ED3E2901893FB9C819002BC45C5AAE8FF14B00030F6D393BE4FBAAAF40BC7FAD2263B36A38812031A277C95D8E5C56E271BA57B7D0> |-/equal <1C60D8A8C9B68A39B13680E2374A1B59427BA7CD1074FEE8A34AEBE307DC29CE4A70C4EFAD3E3A4D7488A0142064E095F8618C84E3F48EEEFAF5C677A8397FD9A6D5D3C7F372572A4E6603CF982F> |-/D <1C60D8A8C9B6CFDA41F3C621A3A5CA4385D39385C52231EF8E47C753BDB73C7E3807EAF4E22627EDF21B04CB8A2AD62AAC8D4C7A8AABC25ACD5603D6860AE682D1A79D5F2365AA4D0E1E5700A8D60D78893F3FD2C80E4EF33A236CC942972BC5AEA1> |-/R <1C60D8A8C9B63300629256560D3191717F200CE1821459BBB044FFBB84190BC926854A036A5A5560827D8E1EA0B54E50E9090F8647CCEDA76BD363F93DDB0234C1875C9918FCDBF7F93E8A694F6C8688B64B89F84C6A30667F9E61729356540CD630922F6A3092B3072D484AEA9F5923745B480473FC4CEC8370> |-/e <1C60D8A8C9B7BC12CC501AF4851AB1417F00D2F8B8B3E6F94B5ADA7FE32BB71FD839D14528C8AE1E9DE6F579A38B08B8DBC61C11D3B007147105009AA982FB5DC29266D24DEA8D7517B6CAAB39C7D6341BF72799E6513F5A1049A0078AF3929D5530C834943D9C8B4860CD7183058BDED8AA42BB03F448B2C685C2CFAC107B00CF> |-/i <1C60D8A8C9B86D0BB6F0C2211391C359C2C95D33FB9E4BB0BD652FC48487777B9B7C231F520CAB8BFF91DF865469B5608DFC6CE0B190C0CCB45C2A35A37D7A058E7E51A3853921C310E5E4532D8767436958C8608173> |-/j <1C60D8A8C9B84C677EB3E33DC9962C608E5C9BF7C9CB3F486FAFCA248C9C33C85A066B9123294358C087DD3154641E9F5BE7878981DA2D29191E95C2457BD6A88DFA478687D741A6653A8F526174AF01B1776A12A153E09ED120B9331DD1D021863A126BB29BBE454D3493E0EB8ABB629F584E0FA4270132F9DF55> |-/s <1C60D8A8C9B71648374B9C8B9384F339C456410D2602E78D109A626EEF56CAD2977F6C5EC65BC7A3B2C9B5B62FE40634DD604CAF28EF9C4AC700614AF0192CDEBF0CCA2AC9DB79D50831E5670C357815A6A472D6B9894FC61F91D44D697B78A468AD45ECCC3937F0C480FC34E8F0D484A805A4016F80365A18DF96CCD6953C5C0C9759C49C9E9546E16928818C36E72D6B1DE4E73DA4ABF7350F87188EE6E3B77E743004F938940EB6DC72C6E110BBDD19D3E9> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 46 /period putdup 48 /zero putdup 52 /four putdup 61 /equal putdup 68 /D putdup 82 /R putdup 101 /e putdup 105 /i putdup 106 /j putdup 115 /s putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 23{/.notdef}rp /period /.notdef /zero /one 2{/.notdef}rp /four 8{/.notdef}rp /equal 4{/.notdef}rp /B /.notdef /D /.notdef /F /.notdef /H 9{/.notdef}rp /R 3{/.notdef}rp /V /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j 3{/.notdef}rp /n 4{/.notdef}rp /s /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [14.3462 0 0 -14.3462 0 0 ]msf4.48008 134.52 mo(Dijets)[11.4001 3.72006 4.07992 7.32 5.76008 0 ]xshGANIVS+CMSSBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf46.6 134.52 mo(R=0.4)[8.39997 10.2 6.60005 3.59992 0 ]xsh%ADOBeginSubsetFont: NMOBAA+txsy AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVX+txsy dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/asteriskmath <1C60D8A8C9B7445140233A9A8AE22F5992FC0700E7BDEB791C522BE877AA99523A4058AE3F308FCA28B6ED5F85BE42DCC427C6BCCD1863CD6A06CE6C48CC5CA1DF6A82101851230BDFF0B2F44342CAE25A784849C8F2B4DC83D89C5389BDEA98CA2BBDC930DC20EE912AF7FF3AD9ED73ED69CA92CDACF50E740A731FBB859041E066182E680C0C65C58041010F7495EB55CA8039D49E3822A146EFCB4F1278565BC10E42AAA4F2A2B0D3> |-/bar <1C60D8A8C9B8A2CE8901EB528275A2C49A03E968757DFD3B7429EB94A92D> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVX+txsy /Encoding getdup 3 /asteriskmath putdup 106 /bar putpop%ADOEndSubsetFont
/GANIVX+txsy*1 [3{/.notdef}rp /asteriskmath 2{/.notdef}rp /plusminus 25{/.notdef}rp /minus 73{/.notdef}rp /bar 149{/.notdef}rp]GANIVX+txsy nfGANIVX+txsy*1 [9.96264 0 0 -9.96264 0 0 ]msf7.96018 145.68 mo(j)sh%ADOBeginSubsetFont: TAJRMX+CMSSI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TAJRMX+CMSSI10 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSSI10.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 121 /y putdef/FontBBox {0 -205 465 444} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 444 461 656 678 694 716] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [61] def/StdVW [80] def/StemSnapH [61 65] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/y <1C60D8A8C9B74E615DF37ED16CE747B849C4AF8037A6DB70729217C8C4094523AD78D941B7B845CF4241F266DCD452322FF524C36D50827B35F4334184DD715F32DC5D5B3FFF58A620251707DA7939D10FCABB425723A8BBAAEE6842CDAEAA79B33D1E982C1486FE19DC8DBED4> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVY+CMSSI10 /TAJRMX+CMSSI10 findfont ct_VMDictPut/GANIVY+CMSSI10*1 [121{/.notdef}rp /y 134{/.notdef}rp]GANIVY+CMSSI10 nfGANIVY+CMSSI10*1 [9.96264 0 0 -9.96264 0 0 ]msf10 145.68 mo(y)shGANIVX+txsy*1 [9.96264 0 0 -9.96264 0 0 ]msf15.6399 145.68 mo(j)sh%ADOBeginSubsetFont: FSFAAA+rtxmi AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVV+rtxmi dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/less <1C60D8A8C9B67106DD61A62C5B7FD2918F26F9FCCC9C8859D54B2D437C1B15BE488AD0> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVV+rtxmi /Encoding getdup 60 /less putpop%ADOEndSubsetFont
/GANIVV+rtxmi*1 [27{/.notdef}rp /sigma 32{/.notdef}rp /less 195{/.notdef}rp]GANIVV+rtxmi nfGANIVV+rtxmi*1 [9.96264 0 0 -9.96264 0 0 ]msf17.6797 145.68 mo(<)sh%ADOBeginSubsetFont: SDUAAA+CMSS10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /SDUAAA+CMSS10 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSS10.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 48 /zero putdup 51 /three putdef/FontBBox {0 -22 457 678} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 444 461 656 678 694 716] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [61] def/StdVW [78] def/StemSnapH [61 64] def/StemSnapV [78 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/period <1C60D8A8C9B8574464859E074121EF25E578E57727A0111D8F02> |-/zero <1C60D8A8C9B7A73D3B44BE74C368F4E2FC0D1E282D6B80C084CC069A0A14712591F89EABDE27294D1768DD69DB23E7FDCDF76DD01EA2CE0CCF6F4531C8A5BCAB0F1BE07F8191DEC09C9A3BC8F2BD2C623D1D6E463DE09FAA97A87D431A34F6930759E9BEDE1196203F9A0CFDDAE3BE022EED71EB4AA4845FF1759BB735B5433870BF2F7C4D6B648D9C9DDAA0B7F47B27B9132A> |-/three <1C60D8A8C9B7A73D3B44BE7B3BE12688EE7DDA3A63BDA62EEDB076E2123EB921A3297B68A71F5DF92E7CDAF71A150A947FFEC101C8C7F263DD77DC4F7F72BCB13AC247B7F12687C9B4904765C9156BEE359166190CA1B2094BC321039EC0AE22422B378A1337A7F24F1131A027BF6934C63B5D4012127C> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIVZ+CMSS10 /SDUAAA+CMSS10 findfont ct_VMDictPut/GANIVZ+CMSS10*1 [46{/.notdef}rp /period /.notdef /zero 2{/.notdef}rp /three 204{/.notdef}rp]GANIVZ+CMSS10 nfGANIVZ+CMSS10*1 [9.96264 0 0 -9.96264 0 0 ]msf24.0399 145.68 mo(3.0)[5.04 2.75958 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf36.8797 145.68 mo(,)shGANIVY+CMSSI10*1 [9.96264 0 0 -9.96264 0 0 ]msf41.9195 145.68 mo(y)shGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf47.5601 141.96 mo(\003)shGANIVV+rtxmi*1 [9.96264 0 0 -9.96264 0 0 ]msf51.28 145.68 mo(<)shGANIVZ+CMSS10*1 [9.96264 0 0 -9.96264 0 0 ]msf57.6402 145.68 mo(3.0)[5.04 2.75958 0 ]xsh452.453 134.051 mo
452.453 119.682 li
455.583 119.682 li
455.583 148.421 li
452.453 148.421 li
.466438 .391089 .392615 .0311284 cmyk
f
453.469 134.051 mo
453.469 125.479 li
456.045 125.479 li
456.045 142.623 li
453.469 142.623 li
.818479 .642359 0 0 cmyk
f
454.735 134.051 mo
454.735 125.479 li
454.825 125.479 li
454.825 142.623 li
454.735 142.623 li
1 .998535 .0944533 .0983291 cmyk
f
458.465 134.051 mo
458.465 132.016 456.815 130.366 454.78 130.366 cv
452.745 130.366 451.095 132.016 451.095 134.051 cv
451.095 136.086 452.745 137.736 454.78 137.736 cv
456.815 137.736 458.465 136.086 458.465 134.051 cv
0 0 0 1 cmyk
f
457.048 134.051 mo
457.048 132.799 456.032 131.783 454.78 131.783 cv
453.528 131.783 452.513 132.799 452.513 134.051 cv
452.513 135.304 453.528 136.319 454.78 136.319 cv
456.032 136.319 457.048 135.304 457.048 134.051 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 130.44 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 130.44 mo(=86.87)[7.68051 3.72004 3.72005 2.03998 3.72005 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 130.44 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 130.44 mo(0.26+7.56)[3.72003 2.03999 3.72003 5.28021 7.32036 3.72003 2.03999 3.72003 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf180.04 130.44 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf185.92 130.44 mo(7.2)[3.72003 2.03999 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf197.32 130.44 mo(nb\(data\))[3.71999 5.39993 2.15996 3.72 3.72 1.79999 3.72 0 ]xsh137.08 136.56 mo(NLOJet++,CT10\(theory\))[4.8 3.71999 5.16002 3.35999 3.72 1.79999 3.84001 3.84 3.72017 4.79999 4.07996 3.72 5.39999 2.15994 1.8 3.72 3.71999 3.72 2.39987 3.36 0 ]xsh584.133 134.051 mo
584.133 119.682 li
596.393 119.682 li
596.393 148.421 li
584.133 148.421 li
.466438 .391089 .392615 .0311284 cmyk
f
587.836 134.051 mo
587.836 125.479 li
598.425 125.479 li
598.425 142.623 li
587.836 142.623 li
.818479 .642359 0 0 cmyk
f
592.815 134.051 mo
592.815 125.479 li
593.188 125.479 li
593.188 142.623 li
592.815 142.623 li
1 .998535 .0944533 .0983291 cmyk
f
596.687 134.051 mo
596.687 132.016 595.037 130.366 593.002 130.366 cv
590.966 130.366 589.316 132.016 589.316 134.051 cv
589.316 136.086 590.966 137.736 593.002 137.736 cv
595.037 137.736 596.687 136.086 596.687 134.051 cv
0 0 0 1 cmyk
f
595.269 134.051 mo
595.269 132.799 594.254 131.783 593.002 131.783 cv
591.749 131.783 590.734 132.799 590.734 134.051 cv
590.734 135.304 591.749 136.319 593.002 136.319 cv
594.254 136.319 595.269 135.304 595.269 134.051 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 137.88 mo(4.5)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
GANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 135.72 mo(JHEP05,059\(2014\))[3.36005 4.79999 4.44006 6.23993 3.71997 3.71997 3.59985 3.71997 3.71997 5.39984 2.15997 3.71997 3.71997 3.72003 3.71997 0 ]xsh1 .998535 .0944533 .0983291 cmyk
GANIVW+CMSS8*1 [7.97011 0 0 -7.97011 0 0 ]msf385 135.48 mo(0.3)[4.20004 2.39999 0 ]xshGANIVV+rtxmi*1 [7.97011 0 0 -7.97011 0 0 ]msf397.96 135.48 mo(<)sh%ADOBeginSubsetFont: VENAAA+CMSSI8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /VENAAA+CMSSI8 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSSI8.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 106 /j putdup 109 /m putdef/FontBBox {-100 -204 830 686} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 -0 444 459 656 677 694 715] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [66] def/StdVW [89] def/StemSnapH [59 66] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/j <1C60D8A8C9B850A9DC00ED82EA215A86599E02DA76B6AC810BAAEA9FDF06A0D7E1B9A1B050D00F9FEF14ED82EE86E02F918FAD6D3DCBF521390CC1CA9A9DE0B563AE0298D5CCBB608E0121DB6E2ECBE420844D> |-/m <1C60D8A8C9B6BE2F2D6538308F515A8332B9D0C0021E1D8BE92FDFB579BC33C15E9B1C41FFF619C39FFF763BE422C06DFE4BA2CF98AEE4717D45674569C8B2973140B2C66AFF868071E1FC5EAB511F09D7192DFFDFE10A40AEB7FAB6E6AF585B40710EF0A2CB1587A1E6AD49849E3474F3CA3EF5132B5D02845172FB8EE99C08B03CA9F4AD6A05A5AD82D30336BB> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIWA+CMSSI8 /VENAAA+CMSSI8 findfont ct_VMDictPut/GANIWA+CMSSI8*1 [106{/.notdef}rp /j 2{/.notdef}rp /m 146{/.notdef}rp]GANIWA+CMSSI8 nfGANIWA+CMSSI8*1 [7.97011 0 0 -7.97011 0 0 ]msf405.28 135.48 mo(m)shGANIWA+CMSSI8*1 [5.97758 0 0 -5.97758 0 0 ]msf412 136.8 mo(jj)[1.67996 0 ]xshGANIVV+rtxmi*1 [7.97011 0 0 -7.97011 0 0 ]msf418.72 135.48 mo(<)shGANIVW+CMSS8*1 [7.97011 0 0 -7.97011 0 0 ]msf425.92 135.48 mo(5)sh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/V <1C60D8A8C9B64EDF88209F74DE48C31924050FF0040AA5A034E0BA481252B18875F38C0C76ED1A659C37AD61> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 86 /V putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T /.notdef /V /W /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h 3{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [7.57158 0 0 -7.57158 0 0 ]msf432.28 135.48 mo(TeV)[3.71988 4.19998 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/J <1C60D8A8C9B7B4A1BD2A5A24407C8E27B2B207FA2DADA295B4FA0B365C888D73DC16D00E680B84EF867BECF6FE12427F8D56304FEF76858DD5045EBB60CA04D267C6A9CB562092054D0E9F4A4D3F39DF816E43582B5A80833772D41D587680> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 74 /J putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 23{/.notdef}rp /period /.notdef /zero /one 2{/.notdef}rp /four 8{/.notdef}rp /equal 4{/.notdef}rp /B /.notdef /D /.notdef /F /.notdef /H /.notdef /J 7{/.notdef}rp /R 3{/.notdef}rp /V /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j 3{/.notdef}rp /n 4{/.notdef}rp /s /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [14.3462 0 0 -14.3462 0 0 ]msf10.2398 104.76 mo(Jets)[7.43994 7.32 5.76008 0 ]xshGANIVS+CMSSBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf40.7199 104.76 mo(R=0.4)[8.39997 10.2 6.60006 3.59991 0 ]xshGANIVX+txsy*1 [9.96264 0 0 -9.96264 0 0 ]msf24.7601 114.48 mo(j)shGANIVY+CMSSI10*1 [9.96264 0 0 -9.96264 0 0 ]msf26.7999 114.48 mo(y)shGANIVX+txsy*1 [9.96264 0 0 -9.96264 0 0 ]msf32.4398 114.48 mo(j)shGANIVV+rtxmi*1 [9.96264 0 0 -9.96264 0 0 ]msf34.4796 114.48 mo(<)shGANIVZ+CMSS10*1 [9.96264 0 0 -9.96264 0 0 ]msf40.8398 114.48 mo(3.0)[5.04 2.75958 0 ]xsh481.986 102.863 mo
481.986 88.494 li
484.034 88.494 li
484.034 117.232 li
481.986 117.232 li
.466438 .391089 .392615 .0311284 cmyk
f
481.663 102.863 mo
481.663 94.291 li
484.532 94.291 li
484.532 111.435 li
481.663 111.435 li
.818479 .642359 0 0 cmyk
f
483.071 102.863 mo
483.071 94.291 li
483.152 94.291 li
483.152 111.435 li
483.071 111.435 li
1 .998535 .0944533 .0983291 cmyk
f
486.797 102.863 mo
486.797 100.828 485.147 99.178 483.112 99.178 cv
481.077 99.178 479.427 100.828 479.427 102.863 cv
479.427 104.898 481.077 106.548 483.112 106.548 cv
485.147 106.548 486.797 104.898 486.797 102.863 cv
0 0 0 1 cmyk
f
485.38 102.863 mo
485.38 101.611 484.364 100.595 483.112 100.595 cv
481.859 100.595 480.844 101.611 480.844 102.863 cv
480.844 104.115 481.859 105.131 483.112 105.131 cv
484.364 105.131 485.38 104.115 485.38 102.863 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 99.24 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 99.24 mo(=563.9)[7.68051 3.72004 3.72005 3.72003 2.03999 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 99.24 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 99.24 mo(1.5+55.4)[3.72003 2.03999 5.27989 7.32034 3.72005 3.72005 2.03998 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf176.32 99.24 mo( )shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf182.32 99.24 mo(51.4)[3.72003 3.72006 2.03996 0 ]xshGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf197.32 99.24 mo(nb\(data\))[3.71999 5.39993 2.15996 3.72 3.72 1.79999 3.72 0 ]xsh137.08 105.36 mo(NLOJet++,CT10\(theory\))[4.8 3.71999 5.16002 3.35999 3.71999 1.80002 3.84 3.84 3.72015 4.80002 4.07996 3.71999 5.39999 2.15994 1.8 3.72 3.71999 3.71999 2.39987 3.36002 0 ]xsh587.96 102.863 mo
587.96 88.494 li
596.248 88.494 li
596.248 117.232 li
587.96 117.232 li
.466438 .391089 .392615 .0311284 cmyk
f
586.755 102.863 mo
586.755 94.291 li
598.438 94.291 li
598.438 111.435 li
586.755 111.435 li
.818479 .642359 0 0 cmyk
f
592.214 102.863 mo
592.214 94.291 li
592.542 94.291 li
592.542 111.435 li
592.214 111.435 li
1 .998535 .0944533 .0983291 cmyk
f
596.063 102.863 mo
596.063 100.828 594.413 99.178 592.378 99.178 cv
590.343 99.178 588.693 100.828 588.693 102.863 cv
588.693 104.898 590.343 106.548 592.378 106.548 cv
594.413 106.548 596.063 104.898 596.063 102.863 cv
0 0 0 1 cmyk
f
594.646 102.863 mo
594.646 101.611 593.63 100.595 592.378 100.595 cv
591.125 100.595 590.11 101.611 590.11 102.863 cv
590.11 104.115 591.125 105.131 592.378 105.131 cv
593.63 105.131 594.646 104.115 594.646 102.863 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf692.56 106.68 mo(4.5)[6.36005 3.11993 0 ]xsh.644129 .630549 .129 .00750744 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/bracketleft <1C60D8A8C9B854D0F805B076695C4791B8845952830C7FB55167992C298DFED4E6540E405268F50CB1674618> |-/bracketright <1C60D8A8C9B854D0F805B076695C4791847EF8EBB56619F27FB0CD5233D0EE1F20F643C498EE4922B42BB138> |-/i <1C60D8A8C9B88C080EFCC82E33C60F44B423FBBF2ABF4FE046280527DD15D9F3F2B0AA5EEEBB0758A1872C56EEA08CC4883F148025E6> |-/v <1C60D8A8C9B7A73DC54C6E6FD58E3FF02EC0039EA78A08B0B838392D24470C9B580A1092E3692A4C20563FB5> |-/x <1C60D8A8C9B7A73DC54C6E6FD58E3FF027C631C574BD3FD240B1F8C9A95C88F92FF205771BB95068209117D8FBE93B12814FB1E2F770A498FDD7D26313CA0A35A2> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 91 /bracketleft putdup 93 /bracketright putdup 105 /i putdup 118 /v putdup 120 /x putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T /.notdef /V /W /X /.notdef /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 104.52 mo(arXiv:1410.8857[hep-ex])[3.72003 2.15991 4.44012 1.43994 3.36005 1.79999 3.71997 3.71997 3.71997 3.71997 1.79999 3.72003 3.71997 3.71997 5.40015 1.79999 3.71997 3.71997 3.72003 2.15997 3.47992 3.36005 0 ]xsh1 .998535 .0944533 .0983291 cmyk
%ADOBeginSubsetFont: BJEBAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVW+CMSS8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B6086D55E350F19C964A8302560C1F73991160546912E7BCDF46205AC02AF91A569A2BA0C975A11F68D3B11768FFFF8BFB264853019690F276> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVW+CMSS8 /Encoding getdup 84 /T putpop%ADOEndSubsetFont
/GANIVW+CMSS8*1 [43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 22{/.notdef}rp /T 171{/.notdef}rp]GANIVW+CMSS8 nfGANIVW+CMSS8*1 [7.97011 0 0 -7.97011 0 0 ]msf415.12 104.76 mo(0.1)[4.20004 2.39999 0 ]xshGANIVV+rtxmi*1 [7.97011 0 0 -7.97011 0 0 ]msf428.2 104.76 mo(<)sh%ADOBeginSubsetFont: VENAAA+CMSSI8 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWA+CMSSI8 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B797474C287A4E3426F7D00160DB6E7C41D8EEC927D56199B8DE5EB6DB4754CACB42AC426956E66992C93B19F5F94A740051D6BB2D33FC4026E788F73D6FFD7BA0E210B51D058832075F8C584FFBE352FD2AC526CB0F0239C6041DB8DB471A> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWA+CMSSI8 /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/GANIWA+CMSSI8*1 [106{/.notdef}rp /j 2{/.notdef}rp /m 2{/.notdef}rp /p 143{/.notdef}rp]GANIWA+CMSSI8 nfGANIWA+CMSSI8*1 [7.97011 0 0 -7.97011 0 0 ]msf435.4 104.76 mo(p)shGANIVW+CMSS8*1 [5.97758 0 0 -5.97758 0 0 ]msf439.72 106.08 mo(T)shGANIVV+rtxmi*1 [7.97011 0 0 -7.97011 0 0 ]msf446.8 104.76 mo(<)shGANIVW+CMSS8*1 [7.97011 0 0 -7.97011 0 0 ]msf454.12 104.76 mo(2)shGANIVU+NimbusSanL-Regu*1 [7.57158 0 0 -7.57158 0 0 ]msf460.48 104.76 mo(TeV)[3.71988 4.19998 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: KGFRMX+CMSSBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVS+CMSSBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B7EA3AB7CB5098A9AF9919CD029A9EC5584D90D56EF7750C158D51BEA5BB774752EB88993492A11073B980E5B8C1BD8C2533E15033B1A311957C1FBA334DE9CB9A9BDDC2206BC53608FCE474B735561DBE18691BC29A2FEEE0B4E21C6D9F8C5F705241D53F60CB8FA83DD7DD83AFCD9D1CCDB037C941770BF473> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVS+CMSSBX10 /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/GANIVS+CMSSBX10*1 [22{/.notdef}rp /macron 23{/.notdef}rp /period /.notdef /zero /one 2{/.notdef}rp /four 8{/.notdef}rp /equal 4{/.notdef}rp /B /.notdef /D /.notdef /F /.notdef /H /.notdef /J 7{/.notdef}rp /R 3{/.notdef}rp /V /W 2{/.notdef}rp /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j 3{/.notdef}rp /n /.notdef /p 2{/.notdef}rp /s /t 139{/.notdef}rp]GANIVS+CMSSBX10 nfGANIVS+CMSSBX10*1 [17.2154 0 0 -17.2154 0 0 ]msf33.5199 70.8 mo(pp)[9.60006 0 ]xshGANIVU+NimbusSanL-Regu*1 [9.46447 0 1.58057 -9.46447 0 0 ]msf34.2398 84.12 mo(total)[2.64 5.28 2.64 5.28 0 ]xsh526.329 71.675 mo
526.329 57.305 li
526.636 57.305 li
526.636 86.045 li
526.329 86.045 li
.466438 .391089 .392615 .0311284 cmyk
f
525.729 71.675 mo
525.729 63.103 li
526.159 63.103 li
526.159 80.2471 li
525.729 80.2471 li
.818479 .642359 0 0 cmyk
f
525.884 71.675 mo
525.884 63.103 li
526.005 63.103 li
526.005 80.2471 li
525.884 80.2471 li
1 .998535 .0944533 .0983291 cmyk
f
529.63 71.675 mo
529.63 69.639 527.98 67.989 525.945 67.989 cv
523.91 67.989 522.26 69.639 522.26 71.675 cv
522.26 73.71 523.91 75.36 525.945 75.36 cv
527.98 75.36 529.63 73.71 529.63 71.675 cv
0 0 0 1 cmyk
f
528.213 71.675 mo
528.213 70.4221 527.198 69.407 525.945 69.407 cv
524.693 69.407 523.677 70.4221 523.677 71.675 cv
523.677 72.927 524.693 73.9431 525.945 73.9431 cv
527.198 73.9431 528.213 72.927 528.213 71.675 cv
1 /0 /CSD get_res sepcs
0 sep
f
.644129 .630549 .129 .00750744 cmyk
GANIVV+rtxmi*1 [6.97385 0 0 -6.97385 0 0 ]msf104.44 68.16 mo(\033)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf111.16 68.16 mo(=95.35)[7.68051 3.72004 3.72005 2.03998 3.72005 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf137.2 68.16 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf143.2 68.16 mo(0.38)[3.72003 2.03999 3.72003 0 ]xshGANIVX+txsy*1 [6.97385 0 0 -6.97385 0 0 ]msf157.96 68.16 mo(\006)shGANIVW+CMSS8*1 [6.97385 0 0 -6.97385 0 0 ]msf163.96 68.16 mo(1.3)[3.72003 2.03999 0 ]xsh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/m <1C60D8A8C9B6B41CC78139463B68644DCA5BB8E2028C7CA1E86B33F066639DA3F35B7DDFE45432E7A2C574E1841C4747E57802803B51CE345923194466C5EF852CDD93A3C40922D4091C6271210E8853C875458B992514FC458C505AB921A870117BEFC5032EC52C5C0B4ED8E033C8825C6A79E135F4917A84EDE1A42949055FF22F7EA5E707733E7E37910C34363FBCB83155DB7DD17CDFF4D96A4E9E85EF09E79030FA> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 109 /m putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T /.notdef /V /W /X /.notdef /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf175.24 68.16 mo(mb\(data\))[5.51994 5.51985 2.15994 3.72 3.72 1.79999 3.72 0 ]xsh137.08 74.2799 mo(COMPETERRpl2u2002\(theory\))[4.8 5.16 5.51994 4.44005 4.44006 4.07994 6.24013 4.8 4.8 3.71999 1.44002 3.72 5.40007 3.71999 3.72 3.72 5.40016 2.15996 1.79999 3.72 3.72 3.72 2.39987 3.36002 0 ]xsh592.392 71.675 mo
592.392 57.305 li
593.653 57.305 li
593.653 86.045 li
592.392 86.045 li
.466438 .391089 .392615 .0311284 cmyk
f
589.993 71.675 mo
589.993 63.103 li
591.701 63.103 li
591.701 80.2471 li
589.993 80.2471 li
.818479 .642359 0 0 cmyk
f
590.608 71.675 mo
590.608 63.103 li
591.087 63.103 li
591.087 80.2471 li
590.608 80.2471 li
1 .998535 .0944533 .0983291 cmyk
f
594.533 71.675 mo
594.533 69.639 592.883 67.989 590.848 67.989 cv
588.813 67.989 587.163 69.639 587.163 71.675 cv
587.163 73.71 588.813 75.36 590.848 75.36 cv
592.883 75.36 594.533 73.71 594.533 71.675 cv
0 0 0 1 cmyk
f
593.115 71.675 mo
593.115 70.4221 592.1 69.407 590.848 69.407 cv
589.595 69.407 588.58 70.4221 588.58 71.675 cv
588.58 72.927 589.595 73.9431 590.848 73.9431 cv
592.1 73.9431 593.115 72.927 593.115 71.675 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf688.96 76.32 mo(8)sh%ADOBeginSubsetFont: NMOBAA+txsy AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVX+txsy dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/multiply <1C60D8A8C9B67106DD6BE95D18A9A2FF869750297EA9E4AB6FFB5AB6B388503C25DC1B795237E6BD67ABEA115B571FE15D2B1B0B2796FCAEEE00CF85507DAA> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVX+txsy /Encoding getdup 2 /multiply putpop%ADOEndSubsetFont
/GANIVX+txsy*1 [2{/.notdef}rp /multiply /asteriskmath 2{/.notdef}rp /plusminus 25{/.notdef}rp /minus 73{/.notdef}rp /bar 149{/.notdef}rp]GANIVX+txsy nfGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf695.32 76.32 mo(\002)sh%ADOBeginSubsetFont: CLIRMX+CMSS12 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /CLIRMX+CMSS12 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSS12.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdef/FontBBox {0 -21 462 676} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 -0 444 459 655 676 694 715] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [60] def/StdVW [76] def/StemSnapH [54 60] def/StemSnapV [76 86] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/zero <1C60D8A8C9B752ABCACBC193220898C0103A9C9D09BFC2FB1AEEC41BC6AAB8EC37301071578E433BB1ECF7D68A2857D7D0E676D59AD9746C051842BAC7A4347EBA10D8B11A577C90B09EDA4281CF256784696635D551944E01B38EF5C41BFEF6FC313A1B57BA5CA22FD1B704050C2864B6B0BDE7C82DB3B299A599918C9E1B926CF52CC0FF50FB> |-/one <1C60D8A8C9B752AB3746D6BE0954E0A97A8880D020A6F1B88C2D39360EABF5F8A561314BE5D85FAD28932C07C7CD283B39C0A3004BDE3584C03F4BD52F2954E3F53D53D42E7C> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIWB+CMSS12 /CLIRMX+CMSS12 findfont ct_VMDictPut/GANIWB+CMSS12*1 [48{/.notdef}rp /zero /one 206{/.notdef}rp]GANIWB+CMSS12 nfGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf702.88 76.32 mo(10)[5.87994 0 ]xshGANIVX+txsy*1 [7.97011 0 0 -7.97011 0 0 ]msf714.64 72.0001 mo( )shGANIVW+CMSS8*1 [7.97011 0 0 -7.97011 0 0 ]msf719.68 72.0001 mo(8)sh.644129 .630549 .129 .00750744 cmyk
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B7A73D3A65C15B5AE8DF81DD1343D8AA6F164496C050DAE1B7AE1C7D1CCEAF2E1094AEE61906D994460D35D718694E3B5F4B6AA437EC1B72F10FE2CDD44AC7D043035ADEA0FA367F7D09EC8F26E62094A9C6DCA9C61C> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T /.notdef /V /W /X /.notdef /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [6.62514 0 0 -6.62514 0 0 ]msf733 73.32 mo(Nucl.Phys.B,486-548\(2014\))[4.79999 3.72003 3.35999 1.44 4.07996 4.44006 3.47992 3.36005 3.23999 4.08008 4.32001 3.59998 3.72003 3.71991 3.72003 2.15997 3.71997 3.71997 5.40015 2.15997 3.71997 3.71997 3.72003 3.71997 0 ]xsh100.403 555.091 mo
537.166 555.091 li
0 0 0 1 cmyk
@
100.403 49.958 mo
537.166 49.958 li
@
100.403 555.091 mo
100.403 49.958 li
@
537.166 555.091 mo
537.166 49.958 li
@
GANIVV+rtxmi*1 [24.7871 0 0 -24.7871 0 0 ]msf458.2 604.08 mo(\033)shGANIVU+NimbusSanL-Regu*1 [23.5476 0 0 -23.5476 0 0 ]msf481.48 604.08 mo([pb])[6.59998 13.08 13.08 0 ]xsh108.141 555.091 mo
108.141 548.969 li
@
108.141 56.0811 mo
108.141 49.958 li
@
%ADOBeginSubsetFont: RCIRMX+CMSS17 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RCIRMX+CMSS17 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSS17.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdef/FontBBox {0 -16 431 672} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-16 -0 430 442 656 672 694 710] def/OtherBlues [-204 -194] def/BlueScale 0.0479599 def/StdHW [61] def/StdVW [76] def/StemSnapH [56 61] def/StemSnapV [76 84] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/zero <1C60D8A8C9B74526DDD8B2857BBFD19850EAF02E5A4D7AE87692BE6E2AA2BA8335E5C1033B0931E1B9E91D0B1E675DCA9F7D79824DC6951E77E90268FAC08D35733D077DBEC388B971EC290D3E82B59A23E3FB3AA0973FF1C005DB502D5CE351F600364F3E0F4DC02757AD7AFE0761228277298DFACD7BCC29FAFEFDA4E8DF24233B9C5F272F97F3D701DB50> |-/one <1C60D8A8C9B745262DE0FE240EA090D55E40A74DC5E0EDDC4BF938B402AF16A6025BEFBA73C4A16211A7DABD272D581E5BC6A79365E4F7ABD0D91E789033D53E> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIWC+CMSS17 /RCIRMX+CMSS17 findfont ct_VMDictPut/GANIWC+CMSS17*1 [48{/.notdef}rp /zero /one 206{/.notdef}rp]GANIWC+CMSS17 nfGANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf93.0398 577.44 mo(10)[8.04 0 ]xshGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf109.12 571.08 mo( )sh%ADOBeginSubsetFont: CLIRMX+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWB+CMSS12 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B752ABCACBC193DC0DD3DEF5269C3C5F0296EEEAE755E2C474FD9D90FACD1579FC095AB17D2F70E25E9FBEB6DFDB00639FE64DE055475BBBAE8E77EAC1C91A8C9AEC63D7E3E2C34859D1FD89756C64F5FE7218D7BA4618DC4ACE739310FEC31325> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWB+CMSS12 /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/GANIWB+CMSS12*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]GANIWB+CMSS12 nfGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf116.68 571.08 mo(5)sh108.141 555.091 mo
108.141 552.03 li
@
108.141 53.02 mo
108.141 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
118.64 555.091 mo
118.64 552.03 li
@
118.64 53.02 mo
118.64 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
124.781 555.091 mo
124.781 552.03 li
@
124.781 53.02 mo
124.781 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
129.139 555.091 mo
129.139 552.03 li
@
129.139 53.02 mo
129.139 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
132.519 555.091 mo
132.519 552.03 li
@
132.519 53.02 mo
132.519 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
135.28 555.091 mo
135.28 552.03 li
@
135.28 53.02 mo
135.28 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
137.615 555.091 mo
137.615 552.03 li
@
137.615 53.02 mo
137.615 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
139.638 555.091 mo
139.638 552.03 li
@
139.638 53.02 mo
139.638 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
141.422 555.091 mo
141.422 552.03 li
@
141.422 53.02 mo
141.422 49.958 li
@
100.403 555.091 mo
100.403 552.03 li
@
100.403 53.02 mo
100.403 49.958 li
@
102.738 555.091 mo
102.738 552.03 li
@
102.738 53.02 mo
102.738 49.958 li
@
104.761 555.091 mo
104.761 552.03 li
@
104.761 53.02 mo
104.761 49.958 li
@
106.545 555.091 mo
106.545 552.03 li
@
106.545 53.02 mo
106.545 49.958 li
@
143.018 555.091 mo
143.018 548.969 li
@
143.018 56.0811 mo
143.018 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf127.96 577.44 mo(10)[8.04 0 ]xshGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf144.04 571.08 mo( )sh%ADOBeginSubsetFont: CLIRMX+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWB+CMSS12 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B752AB37239F27390FB463F30E3AC907AD4D8F604D7D57A82A4383BE368345CACC7D63DB03EEE7E2B2019C4D8EBA4A4C18AEE10A56FFE9DFA2FDF7300163A523FCEFC77A69C151CFD85D97> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWB+CMSS12 /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/GANIWB+CMSS12*1 [48{/.notdef}rp /zero /one 2{/.notdef}rp /four /five 202{/.notdef}rp]GANIWB+CMSS12 nfGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf151.6 571.08 mo(4)sh143.018 555.091 mo
143.018 552.03 li
@
143.018 53.02 mo
143.018 49.958 li
@
153.517 555.091 mo
153.517 552.03 li
@
153.517 53.02 mo
153.517 49.958 li
@
159.659 555.091 mo
159.659 552.03 li
@
159.659 53.02 mo
159.659 49.958 li
@
164.016 555.091 mo
164.016 552.03 li
@
164.016 53.02 mo
164.016 49.958 li
@
167.396 555.091 mo
167.396 552.03 li
@
167.396 53.02 mo
167.396 49.958 li
@
170.158 555.091 mo
170.158 552.03 li
@
170.158 53.02 mo
170.158 49.958 li
@
172.493 555.091 mo
172.493 552.03 li
@
172.493 53.02 mo
172.493 49.958 li
@
174.515 555.091 mo
174.515 552.03 li
@
174.515 53.02 mo
174.515 49.958 li
@
176.299 555.091 mo
176.299 552.03 li
@
176.299 53.02 mo
176.299 49.958 li
@
177.895 555.091 mo
177.895 548.969 li
@
177.895 56.0811 mo
177.895 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf162.76 577.44 mo(10)[8.04001 0 ]xshGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf178.84 571.08 mo( )sh%ADOBeginSubsetFont: CLIRMX+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWB+CMSS12 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B752ABCACBC19CF80B3A566B9CD1D366ADAC7098D9AD1775DCCE7394AB954BA988EC74CDE5CEA0921A076CC538B5438FDCC38D344A818DC901F332519BC16BC38324FE361060F2B7D1BFCB475426C41B6416AFA0A1968FD56B9C08519F238D9168A810E790D92B5BCD87EC06514F28FAB4> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWB+CMSS12 /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/GANIWB+CMSS12*1 [48{/.notdef}rp /zero /one /.notdef /three /four /five 202{/.notdef}rp]GANIWB+CMSS12 nfGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf186.4 571.08 mo(3)sh177.895 555.091 mo
177.895 552.03 li
@
177.895 53.02 mo
177.895 49.958 li
@
188.394 555.091 mo
188.394 552.03 li
@
188.394 53.02 mo
188.394 49.958 li
@
194.536 555.091 mo
194.536 552.03 li
@
194.536 53.02 mo
194.536 49.958 li
@
198.893 555.091 mo
198.893 552.03 li
@
198.893 53.02 mo
198.893 49.958 li
@
202.273 555.091 mo
202.273 552.03 li
@
202.273 53.02 mo
202.273 49.958 li
@
205.035 555.091 mo
205.035 552.03 li
@
205.035 53.02 mo
205.035 49.958 li
@
207.37 555.091 mo
207.37 552.03 li
@
207.37 53.02 mo
207.37 49.958 li
@
209.393 555.091 mo
209.393 552.03 li
@
209.393 53.02 mo
209.393 49.958 li
@
211.176 555.091 mo
211.176 552.03 li
@
211.176 53.02 mo
211.176 49.958 li
@
212.772 555.091 mo
212.772 548.969 li
@
212.772 56.0811 mo
212.772 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf197.68 577.44 mo(10)[8.03999 0 ]xshGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf213.76 571.08 mo( )sh%ADOBeginSubsetFont: CLIRMX+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWB+CMSS12 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B752AB374CAF8A571CC768D28C7F4AE0804685E7C85F950F7F740012565D6DFE24F08F6A6742C7D7E2B714CA9E4DE7B654CCA0CEECBC29F1DA9A95326D9D6E440A105443B129780B111EFD2F53AF2221AF88AD7371948B34DEA82D6C2C> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWB+CMSS12 /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/GANIWB+CMSS12*1 [48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]GANIWB+CMSS12 nfGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf221.32 571.08 mo(2)sh212.772 555.091 mo
212.772 552.03 li
@
212.772 53.02 mo
212.772 49.958 li
@
223.271 555.091 mo
223.271 552.03 li
@
223.271 53.02 mo
223.271 49.958 li
@
229.413 555.091 mo
229.413 552.03 li
@
229.413 53.02 mo
229.413 49.958 li
@
233.77 555.091 mo
233.77 552.03 li
@
233.77 53.02 mo
233.77 49.958 li
@
237.15 555.091 mo
237.15 552.03 li
@
237.15 53.02 mo
237.15 49.958 li
@
239.912 555.091 mo
239.912 552.03 li
@
239.912 53.02 mo
239.912 49.958 li
@
242.246 555.091 mo
242.246 552.03 li
@
242.246 53.02 mo
242.246 49.958 li
@
244.269 555.091 mo
244.269 552.03 li
@
244.269 53.02 mo
244.269 49.958 li
@
246.054 555.091 mo
246.054 552.03 li
@
246.054 53.02 mo
246.054 49.958 li
@
247.65 555.091 mo
247.65 548.969 li
@
247.65 56.0811 mo
247.65 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf232.48 577.44 mo(10)[8.03999 0 ]xshGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf248.56 571.08 mo( )shGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf256.12 571.08 mo(1)sh247.65 555.091 mo
247.65 552.03 li
@
247.65 53.02 mo
247.65 49.958 li
@
258.148 555.091 mo
258.148 552.03 li
@
258.148 53.02 mo
258.148 49.958 li
@
264.29 555.091 mo
264.29 552.03 li
@
264.29 53.02 mo
264.29 49.958 li
@
268.648 555.091 mo
268.648 552.03 li
@
268.648 53.02 mo
268.648 49.958 li
@
272.027 555.091 mo
272.027 552.03 li
@
272.027 53.02 mo
272.027 49.958 li
@
274.789 555.091 mo
274.789 552.03 li
@
274.789 53.02 mo
274.789 49.958 li
@
277.124 555.091 mo
277.124 552.03 li
@
277.124 53.02 mo
277.124 49.958 li
@
279.146 555.091 mo
279.146 552.03 li
@
279.146 53.02 mo
279.146 49.958 li
@
280.93 555.091 mo
280.93 552.03 li
@
280.93 53.02 mo
280.93 49.958 li
@
282.526 555.091 mo
282.526 548.969 li
@
282.526 56.0811 mo
282.526 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf278.44 576 mo(1)sh282.526 555.091 mo
282.526 552.03 li
@
282.526 53.02 mo
282.526 49.958 li
@
293.025 555.091 mo
293.025 552.03 li
@
293.025 53.02 mo
293.025 49.958 li
@
299.167 555.091 mo
299.167 552.03 li
@
299.167 53.02 mo
299.167 49.958 li
@
303.524 555.091 mo
303.524 552.03 li
@
303.524 53.02 mo
303.524 49.958 li
@
306.905 555.091 mo
306.905 552.03 li
@
306.905 53.02 mo
306.905 49.958 li
@
309.666 555.091 mo
309.666 552.03 li
@
309.666 53.02 mo
309.666 49.958 li
@
312.001 555.091 mo
312.001 552.03 li
@
312.001 53.02 mo
312.001 49.958 li
@
314.024 555.091 mo
314.024 552.03 li
@
314.024 53.02 mo
314.024 49.958 li
@
315.808 555.091 mo
315.808 552.03 li
@
315.808 53.02 mo
315.808 49.958 li
@
317.404 555.091 mo
317.404 548.969 li
@
317.404 56.0811 mo
317.404 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf306.04 577.44 mo(10)[8.03998 0 ]xshGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf322.12 571.08 mo(1)sh317.404 555.091 mo
317.404 552.03 li
@
317.404 53.02 mo
317.404 49.958 li
@
327.903 555.091 mo
327.903 552.03 li
@
327.903 53.02 mo
327.903 49.958 li
@
334.044 555.091 mo
334.044 552.03 li
@
334.044 53.02 mo
334.044 49.958 li
@
338.402 555.091 mo
338.402 552.03 li
@
338.402 53.02 mo
338.402 49.958 li
@
341.781 555.091 mo
341.781 552.03 li
@
341.781 53.02 mo
341.781 49.958 li
@
344.543 555.091 mo
344.543 552.03 li
@
344.543 53.02 mo
344.543 49.958 li
@
346.878 555.091 mo
346.878 552.03 li
@
346.878 53.02 mo
346.878 49.958 li
@
348.901 555.091 mo
348.901 552.03 li
@
348.901 53.02 mo
348.901 49.958 li
@
350.685 555.091 mo
350.685 552.03 li
@
350.685 53.02 mo
350.685 49.958 li
@
352.281 555.091 mo
352.281 548.969 li
@
352.281 56.0811 mo
352.281 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf340.96 577.44 mo(10)[8.03998 0 ]xshGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf357.04 571.08 mo(2)sh352.281 555.091 mo
352.281 552.03 li
@
352.281 53.02 mo
352.281 49.958 li
@
362.78 555.091 mo
362.78 552.03 li
@
362.78 53.02 mo
362.78 49.958 li
@
368.921 555.091 mo
368.921 552.03 li
@
368.921 53.02 mo
368.921 49.958 li
@
373.279 555.091 mo
373.279 552.03 li
@
373.279 53.02 mo
373.279 49.958 li
@
376.659 555.091 mo
376.659 552.03 li
@
376.659 53.02 mo
376.659 49.958 li
@
379.42 555.091 mo
379.42 552.03 li
@
379.42 53.02 mo
379.42 49.958 li
@
381.755 555.091 mo
381.755 552.03 li
@
381.755 53.02 mo
381.755 49.958 li
@
383.778 555.091 mo
383.778 552.03 li
@
383.778 53.02 mo
383.778 49.958 li
@
385.562 555.091 mo
385.562 552.03 li
@
385.562 53.02 mo
385.562 49.958 li
@
387.158 555.091 mo
387.158 548.969 li
@
387.158 56.0811 mo
387.158 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf375.88 577.44 mo(10)[8.03998 0 ]xshGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf391.96 571.08 mo(3)sh387.158 555.091 mo
387.158 552.03 li
@
387.158 53.02 mo
387.158 49.958 li
@
397.657 555.091 mo
397.657 552.03 li
@
397.657 53.02 mo
397.657 49.958 li
@
403.798 555.091 mo
403.798 552.03 li
@
403.798 53.02 mo
403.798 49.958 li
@
408.156 555.091 mo
408.156 552.03 li
@
408.156 53.02 mo
408.156 49.958 li
@
411.536 555.091 mo
411.536 552.03 li
@
411.536 53.02 mo
411.536 49.958 li
@
414.298 555.091 mo
414.298 552.03 li
@
414.298 53.02 mo
414.298 49.958 li
@
416.632 555.091 mo
416.632 552.03 li
@
416.632 53.02 mo
416.632 49.958 li
@
418.655 555.091 mo
418.655 552.03 li
@
418.655 53.02 mo
418.655 49.958 li
@
420.439 555.091 mo
420.439 552.03 li
@
420.439 53.02 mo
420.439 49.958 li
@
422.035 555.091 mo
422.035 548.969 li
@
422.035 56.0811 mo
422.035 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf410.68 577.44 mo(10)[8.03998 0 ]xshGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf426.76 571.08 mo(4)sh422.035 555.091 mo
422.035 552.03 li
@
422.035 53.02 mo
422.035 49.958 li
@
432.534 555.091 mo
432.534 552.03 li
@
432.534 53.02 mo
432.534 49.958 li
@
438.676 555.091 mo
438.676 552.03 li
@
438.676 53.02 mo
438.676 49.958 li
@
443.033 555.091 mo
443.033 552.03 li
@
443.033 53.02 mo
443.033 49.958 li
@
446.413 555.091 mo
446.413 552.03 li
@
446.413 53.02 mo
446.413 49.958 li
@
449.175 555.091 mo
449.175 552.03 li
@
449.175 53.02 mo
449.175 49.958 li
@
451.51 555.091 mo
451.51 552.03 li
@
451.51 53.02 mo
451.51 49.958 li
@
453.532 555.091 mo
453.532 552.03 li
@
453.532 53.02 mo
453.532 49.958 li
@
455.316 555.091 mo
455.316 552.03 li
@
455.316 53.02 mo
455.316 49.958 li
@
456.912 555.091 mo
456.912 548.969 li
@
456.912 56.0811 mo
456.912 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf445.6 577.44 mo(10)[8.03998 0 ]xshGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf461.68 571.08 mo(5)sh456.912 555.091 mo
456.912 552.03 li
@
456.912 53.02 mo
456.912 49.958 li
@
467.411 555.091 mo
467.411 552.03 li
@
467.411 53.02 mo
467.411 49.958 li
@
473.553 555.091 mo
473.553 552.03 li
@
473.553 53.02 mo
473.553 49.958 li
@
477.91 555.091 mo
477.91 552.03 li
@
477.91 53.02 mo
477.91 49.958 li
@
481.29 555.091 mo
481.29 552.03 li
@
481.29 53.02 mo
481.29 49.958 li
@
484.052 555.091 mo
484.052 552.03 li
@
484.052 53.02 mo
484.052 49.958 li
@
486.387 555.091 mo
486.387 552.03 li
@
486.387 53.02 mo
486.387 49.958 li
@
488.409 555.091 mo
488.409 552.03 li
@
488.409 53.02 mo
488.409 49.958 li
@
490.193 555.091 mo
490.193 552.03 li
@
490.193 53.02 mo
490.193 49.958 li
@
491.789 555.091 mo
491.789 548.969 li
@
491.789 56.0811 mo
491.789 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf480.52 577.44 mo(10)[8.03998 0 ]xsh%ADOBeginSubsetFont: CLIRMX+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWB+CMSS12 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B752ABCACBC193FDA111283A67E29A38D7F8DD77C31CF21D47EC9AF46491B1B966BC8EF6442B861486A947760E06DD23E6C208442398B446BBC990B5C5B96391BAD1EE6460496B266435551A58777F2A92680D31C75F80F33CA65167498BBB3A4A4EEAD41918A48DC467337FD80638DE781540EAFC76398CFAB767FAEC5277189E5F76A15742D8B63ED27228E6B2D9355DE02140> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWB+CMSS12 /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/GANIWB+CMSS12*1 [48{/.notdef}rp /zero /one /two /three /four /five /six 201{/.notdef}rp]GANIWB+CMSS12 nfGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf496.6 571.08 mo(6)sh491.789 555.091 mo
491.789 552.03 li
@
491.789 53.02 mo
491.789 49.958 li
@
502.288 555.091 mo
502.288 552.03 li
@
502.288 53.02 mo
502.288 49.958 li
@
508.43 555.091 mo
508.43 552.03 li
@
508.43 53.02 mo
508.43 49.958 li
@
512.788 555.091 mo
512.788 552.03 li
@
512.788 53.02 mo
512.788 49.958 li
@
516.167 555.091 mo
516.167 552.03 li
@
516.167 53.02 mo
516.167 49.958 li
@
518.929 555.091 mo
518.929 552.03 li
@
518.929 53.02 mo
518.929 49.958 li
@
521.264 555.091 mo
521.264 552.03 li
@
521.264 53.02 mo
521.264 49.958 li
@
523.286 555.091 mo
523.286 552.03 li
@
523.286 53.02 mo
523.286 49.958 li
@
525.071 555.091 mo
525.071 552.03 li
@
525.071 53.02 mo
525.071 49.958 li
@
526.666 555.091 mo
526.666 548.969 li
@
526.666 56.0811 mo
526.666 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf512.44 577.44 mo(10)[8.03998 0 ]xshGANIWB+CMSS12*1 [11.9552 0 0 -11.9552 0 0 ]msf528.52 571.08 mo(11)[5.87994 0 ]xsh526.666 555.091 mo
526.666 552.03 li
@
526.666 53.02 mo
526.666 49.958 li
@
537.166 555.091 mo
537.166 552.03 li
@
537.166 53.02 mo
537.166 49.958 li
@
549.411 555.091 mo
667.786 555.091 li
@
549.411 49.958 mo
667.786 49.958 li
@
549.411 555.091 mo
549.411 49.958 li
@
667.786 555.091 mo
667.786 49.958 li
@
%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D07462C36D147388CBB0E1C3D6E589D5A8349FEF5C3A67E6906968> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 47 /slash putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T /.notdef /V /W /X /.notdef /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [23.5476 0 0 -23.5476 0 0 ]msf538.96 603.96 mo(observed/theory)[13.08 13.08 11.76 13.08 8.51978 11.1602 13.08 13.08 6.59998 6.60004 13.08 13.08 13.08 8.51978 0 ]xsh561.871 555.091 mo
561.871 548.969 li
@
561.871 56.0811 mo
561.871 49.958 li
@
%ADOBeginSubsetFont: RCIRMX+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWC+CMSS17 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B86722A0DDA7FA500FE08E34D12731C476882DF7E8> |-/five <1C60D8A8C9B74526DDD983C626B48A0EC06756CD89215B1F1BB983BCAC0797C81EAC164566F203CD53EEE1D3E7D5C43A2E357C1E9BCB3FFE8137D14A30C04A948B0390F31A38EAFA180A27CCE75B9BDFFCF43A2D1DCF2A0AD29B18969D958381984CACF4C09C> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWC+CMSS17 /Encoding getdup 46 /period putdup 53 /five putpop%ADOEndSubsetFont
/GANIWC+CMSS17*1 [46{/.notdef}rp /period /.notdef /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]GANIWC+CMSS17 nfGANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf551.44 576 mo(0.5)[8.03998 4.44006 0 ]xsh561.871 555.091 mo
561.871 552.03 li
@
561.871 53.02 mo
561.871 49.958 li
@
561.871 555.091 mo
561.871 552.03 li
@
561.871 53.02 mo
561.871 49.958 li
@
568.102 555.091 mo
568.102 552.03 li
@
568.102 53.02 mo
568.102 49.958 li
@
555.641 555.091 mo
555.641 552.03 li
@
555.641 53.02 mo
555.641 49.958 li
@
574.332 555.091 mo
574.332 552.03 li
@
574.332 53.02 mo
574.332 49.958 li
@
580.562 555.091 mo
580.562 552.03 li
@
580.562 53.02 mo
580.562 49.958 li
@
586.793 555.091 mo
586.793 552.03 li
@
586.793 53.02 mo
586.793 49.958 li
@
593.023 555.091 mo
593.023 548.969 li
@
593.023 56.0811 mo
593.023 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf588.88 576 mo(1)sh593.023 555.091 mo
593.023 552.03 li
@
593.023 53.02 mo
593.023 49.958 li
@
593.023 555.091 mo
593.023 552.03 li
@
593.023 53.02 mo
593.023 49.958 li
@
599.253 555.091 mo
599.253 552.03 li
@
599.253 53.02 mo
599.253 49.958 li
@
586.793 555.091 mo
586.793 552.03 li
@
586.793 53.02 mo
586.793 49.958 li
@
605.484 555.091 mo
605.484 552.03 li
@
605.484 53.02 mo
605.484 49.958 li
@
580.562 555.091 mo
580.562 552.03 li
@
580.562 53.02 mo
580.562 49.958 li
@
611.714 555.091 mo
611.714 552.03 li
@
611.714 53.02 mo
611.714 49.958 li
@
574.332 555.091 mo
574.332 552.03 li
@
574.332 53.02 mo
574.332 49.958 li
@
617.944 555.091 mo
617.944 552.03 li
@
617.944 53.02 mo
617.944 49.958 li
@
568.102 555.091 mo
568.102 552.03 li
@
568.102 53.02 mo
568.102 49.958 li
@
624.174 555.091 mo
624.174 548.969 li
@
624.174 56.0811 mo
624.174 49.958 li
@
GANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf613.84 576 mo(1.5)[8.03998 4.44006 0 ]xsh624.174 555.091 mo
624.174 552.03 li
@
624.174 53.02 mo
624.174 49.958 li
@
624.174 555.091 mo
624.174 552.03 li
@
624.174 53.02 mo
624.174 49.958 li
@
630.404 555.091 mo
630.404 552.03 li
@
630.404 53.02 mo
630.404 49.958 li
@
617.944 555.091 mo
617.944 552.03 li
@
617.944 53.02 mo
617.944 49.958 li
@
636.634 555.091 mo
636.634 552.03 li
@
636.634 53.02 mo
636.634 49.958 li
@
611.714 555.091 mo
611.714 552.03 li
@
611.714 53.02 mo
611.714 49.958 li
@
642.865 555.091 mo
642.865 552.03 li
@
642.865 53.02 mo
642.865 49.958 li
@
605.484 555.091 mo
605.484 552.03 li
@
605.484 53.02 mo
605.484 49.958 li
@
649.095 555.091 mo
649.095 552.03 li
@
649.095 53.02 mo
649.095 49.958 li
@
599.253 555.091 mo
599.253 552.03 li
@
599.253 53.02 mo
599.253 49.958 li
@
655.325 555.091 mo
655.325 548.969 li
@
655.325 56.0811 mo
655.325 49.958 li
@
%ADOBeginSubsetFont: RCIRMX+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIWC+CMSS17 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B745262DEA0EA6D22CC6802A1F818A123F7DC2FFA604E6D12A2D5422A5E16D74F449670845A8A5BFBCC051DC769D6CBA4655C49CB0383726732188749B2605AEFC86AC9B49B2EF828BF703E84685E66162E1B5A9D839175F1C7BA9A4457788A1E781E3> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIWC+CMSS17 /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/GANIWC+CMSS17*1 [46{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five 202{/.notdef}rp]GANIWC+CMSS17 nfGANIWC+CMSS17*1 [17.2154 0 0 -17.2154 0 0 ]msf651.28 576 mo(2)sh655.325 555.091 mo
655.325 552.03 li
@
655.325 53.02 mo
655.325 49.958 li
@
655.325 555.091 mo
655.325 552.03 li
@
655.325 53.02 mo
655.325 49.958 li
@
661.556 555.091 mo
661.556 552.03 li
@
661.556 53.02 mo
661.556 49.958 li
@
649.095 555.091 mo
649.095 552.03 li
@
649.095 53.02 mo
649.095 49.958 li
@
642.865 555.091 mo
642.865 552.03 li
@
642.865 53.02 mo
642.865 49.958 li
@
636.634 555.091 mo
636.634 552.03 li
@
636.634 53.02 mo
636.634 49.958 li
@
630.404 555.091 mo
630.404 552.03 li
@
630.404 53.02 mo
630.404 49.958 li
@
.498132 lw
593.023 555.091 mo
593.023 49.958 li
0 0 0 .59353 cmyk
@
496.346 555.091 mo
496.346 548.969 li
520.838 548.969 li
520.838 561.214 li
496.346 561.214 li
1 /0 /CSD get_res sepcs
0 sep
f
.996264 lw
501.245 561.214 mo
503.694 548.969 li
0 0 0 1 cmyk
@
496.346 555.091 mo
501.245 561.214 li
@
506.143 561.214 mo
503.694 548.969 li
@
506.143 561.214 mo
508.592 548.969 li
@
511.041 561.214 mo
508.592 548.969 li
@
511.041 561.214 mo
513.49 548.969 li
@
515.94 561.214 mo
513.49 548.969 li
@
520.838 555.091 mo
515.94 561.214 li
@
496.346 49.958 mo
496.346 43.835 li
520.838 43.835 li
520.838 56.0811 li
496.346 56.0811 li
1 /0 /CSD get_res sepcs
0 sep
f
501.245 56.0811 mo
503.694 43.835 li
0 0 0 1 cmyk
@
496.346 49.958 mo
501.245 56.0811 li
@
506.143 56.0811 mo
503.694 43.835 li
@
506.143 56.0811 mo
508.592 43.835 li
@
511.041 56.0811 mo
508.592 43.835 li
@
511.041 56.0811 mo
513.49 43.835 li
@
515.94 56.0811 mo
513.49 43.835 li
@
520.838 49.958 mo
515.94 56.0811 li
@
398.381 359.161 mo
398.381 267.319 li
524.92 267.319 li
524.92 451.004 li
398.381 451.004 li
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
%ADOBeginSubsetFont: ZCXPMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVT+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079FE1E4FFFDE1F32FAA37A10F75E41D32EA877BFB5D4C62B5EEFA8ECAD59EF88401D574481D064892DE3DD151F7A55A8A67A56F183E25AD99B1D0400E49A105B8251D09DD504D0F5E75DE503803F5A4274A48C1D3B564D81C0850CB4C47B2D1F7BBABC42B7D9A> |-/H <1C60D8A8C9B6079F1E49523752257B4545F597F50F80CEAD8C3845B4CCD8827805E16E003943B69E102B4E21C84EDAD75D285BCB97E8AFF3443E637F5226982E4F80BE941C1A6B280070DE655E9A5C5E0ABBBDCF4F135864> |-/L <1C60D8A8C9B7D8BE6A287CF020B2DF4146A3B5CB459EFA6B4013612880918274F8CD7790D992DC0AE38B> |-/p <1C60D8A8C9B7D8BE1A3394F7AD9ED306E3A9A717BC4DBD80AF254A86B7656390A3D983CB80A3846AD2603335FD0DBD55114C3307B71EF22BD0E8379AAEC55A74C95AF2A5353017B6FA54C640683D9FD182CCFEF557D95B98DFA122595531C6CAA493B475EF3E5D6CE7A94D0313FC> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVT+NimbusSanL-Bold /Encoding getdup 67 /C putdup 72 /H putdup 76 /L putdup 112 /p putpop%ADOEndSubsetFont
/GANIVT+NimbusSanL-Bold*1 [67{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 5{/.notdef}rp /R 16{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n /.notdef /p /.notdef /r 141{/.notdef}rp]GANIVT+NimbusSanL-Bold nfGANIVT+NimbusSanL-Bold*1 [11.3574 0 0 -11.3574 0 0 ]msf414.64 283.2 mo(LHCpp)[6.95993 8.16006 11.4 6.95993 0 ]xsh%ADOBeginSubsetFont: NMOBAA+txsy AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVX+txsy dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/radical <1C60D8A8C9B6323396D6E182C5E70FB872472DB0172025681995FEC14B1A56DD5A73975CD5E3F649F7> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVX+txsy /Encoding getdup 112 /radical putpop%ADOEndSubsetFont
/GANIVX+txsy*1 [2{/.notdef}rp /multiply /asteriskmath 2{/.notdef}rp /plusminus 25{/.notdef}rp /minus 73{/.notdef}rp /bar 5{/.notdef}rp /radical 143{/.notdef}rp]GANIVX+txsy nfGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf460.24 274.56 mo(p)sh468.628 273.852 mo
474.148 273.852 li
474.148 274.572 li
468.628 274.572 li
cp
1 .998535 .0944533 .0983291 cmyk
gsave
clp
[1 0 0 -1 0 620 ]ct
[5.52 0 0 -.72 468.628 346.148 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
1 .998535 .0944533 .0983291 cmyk
%ADOBeginSubsetFont: RSPQMX+CMSSI12 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RSPQMX+CMSSI12 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSSI12.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 115 /s putdef/FontBBox {0 -10 426 459} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 -0 444 459 655 676 694 715] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [60] def/StdVW [78] def/StemSnapH [56 60] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/s <1C60D8A8C9B724826C55580DDC31762D1F9E382828ADB6D8F5AFFA9F854A6821671175C0E691E52CB24058A7C5DBDE173D08BFC313AB96B559387CD2DDC674906A0E1D7CD6B9F3BF9AC192D18D7AC71F45EC11924DD40F48B0AC15393ACDE4E06E002F8C4595392DC44F72E768B48503A94BEAC15AF6B3BBC97102DD8449808ED186> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIWD+CMSSI12 /RSPQMX+CMSSI12 findfont ct_VMDictPut/GANIWD+CMSSI12*1 [115{/.notdef}rp /s 140{/.notdef}rp]GANIWD+CMSSI12 nfGANIWD+CMSSI12*1 [11.9552 0 0 -11.9552 0 0 ]msf468.64 283.2 mo(s)sh%ADOBeginSubsetFont: ZCXPMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVT+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF32570F064ECA1683266ABEA9968232884EF7AECB1D9A6E6CF0577E303195CCE7E4A9146F093575827C1C387A29E27D841179992CC94273> |-/equal <1C60D8A8C9B7F374C13CE9EAE388365CFB07369F798E2E7F0683335C0E6AB689B148B933E851F022195090DA675F> |-/T <1C60D8A8C9B7D8BE6A40C97A2504E97549A10A4D5A2952C52478FBC51C41E243598725CE4FB612CBFD41559E108549438C> |-/V <1C60D8A8C9B64EDF88209F74DE48C31919224F513441E179945695D6A713C4F85177A20ECB30FCE685BAB93AD524> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVT+NimbusSanL-Bold /Encoding getdup 55 /seven putdup 61 /equal putdup 84 /T putdup 86 /V putpop%ADOEndSubsetFont
/GANIVT+NimbusSanL-Bold*1 [55{/.notdef}rp /seven 5{/.notdef}rp /equal 5{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 5{/.notdef}rp /R /.notdef /T /.notdef /V 12{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n /.notdef /p /.notdef /r 141{/.notdef}rp]GANIVT+NimbusSanL-Bold nfGANIVT+NimbusSanL-Bold*1 [11.3574 0 0 -11.3574 0 0 ]msf477.16 283.2 mo(=7TeV)[9.83984 9.4801 6.23978 6.36002 0 ]xsh414.709 300.994 mo
414.709 291.81 li
447.364 291.81 li
447.364 310.179 li
414.709 310.179 li
.466438 .391089 .392615 .0311284 cmyk
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf463.6 306.84 mo(Theory)[6.95993 6.36005 6.35995 6.36005 4.1998 0 ]xsh414.709 328.547 mo
414.709 318.75 li
447.364 318.75 li
447.364 338.343 li
414.709 338.343 li
.818479 .642359 0 0 cmyk
f
422.873 328.547 mo
422.873 318.75 li
439.2 318.75 li
439.2 338.343 li
422.873 338.343 li
1 .998535 .0944533 .0983291 cmyk
f
434.721 328.547 mo
434.721 326.512 433.071 324.862 431.036 324.862 cv
429.001 324.862 427.351 326.512 427.351 328.547 cv
427.351 330.582 429.001 332.232 431.036 332.232 cv
433.071 332.232 434.721 330.582 434.721 328.547 cv
0 0 0 1 cmyk
f
433.304 328.547 mo
433.304 327.295 432.289 326.279 431.036 326.279 cv
429.784 326.279 428.768 327.295 428.768 328.547 cv
428.768 329.8 429.784 330.815 431.036 330.815 cv
432.289 330.815 433.304 329.8 433.304 328.547 cv
1 /0 /CSD get_res sepcs
0 sep
f
1 .998535 .0944533 .0983291 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf463.6 323.28 mo(Observed)[8.88 6.36002 5.63998 6.36002 4.1998 5.39999 6.36005 0 ]xshGANIVU+NimbusSanL-Regu*1 [11.3574 0 1.89669 -11.3574 0 0 ]msf463.6 335.28 mo(stat)[5.63998 3.12003 6.36002 0 ]xsh.818479 .642359 0 0 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 1.89669 -11.3574 0 0 ]msf463.6 343.32 mo(stat+syst)[5.63998 3.12003 6.36002 3.11996 6.60001 5.64001 5.63998 5.64001 0 ]xsh.179263 .966278 1 .0934768 cmyk
GANIVT+NimbusSanL-Bold*1 [11.3574 0 0 -11.3574 0 0 ]msf414.64 378.12 mo(LHCpp)[6.95993 8.16006 11.4 6.95993 0 ]xshGANIVX+txsy*1 [11.9552 0 0 -11.9552 0 0 ]msf460.24 369.48 mo(p)sh468.628 368.772 mo
474.148 368.772 li
474.148 369.492 li
468.628 369.492 li
cp
.179263 .966278 1 .0934768 cmyk
gsave
clp
[1 0 0 -1 0 620 ]ct
[5.52 0 0 -.72 468.628 251.228 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
.179263 .966278 1 .0934768 cmyk
GANIWD+CMSSI12*1 [11.9552 0 0 -11.9552 0 0 ]msf468.64 378.12 mo(s)sh%ADOBeginSubsetFont: ZCXPMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVT+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF32A8168B63EDFA3C5B942C5D96060AAE58F358E733186A55A663F109182930F7CBE7EAEC7B0F8D572ABC45DBD12684D66F080905BD31671366E6B281102DD724ED4A754479B513146B47143A053824D854E14C6D94628B26BEDE4FBF7B359D52FADBBB438A1A057449AA5C9A3894292FC8C623FA969CE53000BA0058156AC5CC1244E3362C1E179C3FA8CBA8B4FB0F25E23D46655D8F04D56A118570502D77182D187CE02C8AA937EA161584154E69AF47BB5C8AD651D2EDC2E15860ACB7754A03352ADD15C9D3D9F1EECF6D751BEB7D6B45699DA404AAA0> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVT+NimbusSanL-Bold /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/GANIVT+NimbusSanL-Bold*1 [55{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 5{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L 5{/.notdef}rp /R /.notdef /T /.notdef /V 12{/.notdef}rp /c /.notdef /e /f 7{/.notdef}rp /n /.notdef /p /.notdef /r 141{/.notdef}rp]GANIVT+NimbusSanL-Bold nfGANIVT+NimbusSanL-Bold*1 [11.3574 0 0 -11.3574 0 0 ]msf477.16 378.12 mo(=8TeV)[9.83984 9.4801 6.23978 6.36002 0 ]xsh414.709 395.898 mo
414.709 386.714 li
447.364 386.714 li
447.364 405.082 li
414.709 405.082 li
.355261 .29041 .293706 0 cmyk
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf463.6 401.76 mo(Theory)[6.95993 6.36005 6.35995 6.36005 4.1998 0 ]xsh414.709 426.512 mo
414.709 416.716 li
447.364 416.716 li
447.364 436.309 li
414.709 436.309 li
0 .589105 1 0 cmyk
f
422.873 426.512 mo
422.873 416.716 li
439.2 416.716 li
439.2 436.309 li
422.873 436.309 li
.179263 .966278 1 .0934768 cmyk
f
431.036 429.88 mo
434.863 429.88 li
431.036 422.226 li
427.209 429.88 li
431.036 429.88 li
0 0 0 1 cmyk
f
431.036 428.655 mo
433.162 428.655 li
431.036 424.403 li
428.911 428.655 li
431.036 428.655 li
1 /0 /CSD get_res sepcs
0 sep
f
.179263 .966278 1 .0934768 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 0 -11.3574 0 0 ]msf463.6 421.2 mo(Observed)[8.88 6.36002 5.63998 6.36002 4.1998 5.39999 6.36005 0 ]xshGANIVU+NimbusSanL-Regu*1 [11.3574 0 1.89669 -11.3574 0 0 ]msf463.6 433.32 mo(stat)[5.63998 3.12003 6.36002 0 ]xsh0 .589105 1 0 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 1.89669 -11.3574 0 0 ]msf463.6 441.36 mo(stat+syst)[5.63998 3.12003 6.36002 3.11996 6.60001 5.64001 5.63998 5.64001 0 ]xsh0 0 0 1 cmyk
%ADOBeginSubsetFont: ZCXPMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVT+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B6B41CC7813947DCFB460F7EE031E2873EBC49843C554F652C4DE324F683723D6A4A3FD902AEAAC9379CD93CF629EF3E243B7DC6FB0B5CB8BFC9726B62A6BF2FB55B07B1E009> |-/P <1C60D8A8C9B64EDF88209F7AC6EB35FA97FA02124F4E559B3E30E255998B6B81703F7C947C171345C66C892843AB7B7B477D4D0F783B68863A736503F556CFC50BD914F9BCB9EDBDB25DCA3624773582E29AB4> |-/S <1C60D8A8C9B64EDF77FD9D35879CEC1FE8565709C274922A5BF981CA926142EF497D56B1F4D3C5457519814436A23EFE1CF8AA7C1BC0495D5D86B1457C8261CE2366FD3B25496C6436F22AB40D34206D44AED4363EE91C2C1E0416EF2045B9386AE54B7D5FF26B7D6B71AB2042FC160A2E08D27C7CDD60ABE6BFD8B95AA73F0A6CAE36F0F4BF75B730> |-/a <1C60D8A8C9B7EF32A81682205E0185D7EB9D1C9B41590D7B4E23FBE44E4AA7B30E4749969A8C22588CD0B28BCDB63A840276A69D723D4E6C645623B19B9468748179DC145FC3D0ABAC2EE39036BC1FA994FA3FFA37AE469D130C49206C060371090F8FEAFD30515F9647A02DC12C5C75617C10F0241D49FE89931F5EA8D7A3A2C0A5A9E9AC113D734AE03EC74E0DEA54FDCC6D9C89B0643CD42EB2DBAC0E772862> |-/d <1C60D8A8C9B7D8BE957B433F3D9F2DA307C70B9CB8BB66A84A60F2431A8997A43C7F3C6C6B3E320903FC446E84F94E7C27B0394066DAAA7ECA37ADAEA4DB3CF9BFB36BFDEA7F948059E3DA65A0351DF0739E66920A1EAD27DAB2417AF07BC782CFE42A49A0055723A96F9E9FC3> |-/i <1C60D8A8C9B854D08882A1CD48CE03C1D5CC5D23EF0D84B86A88B835239C5621D560B94894CF6E36D2ACC4C13F13811184> |-/l <1C60D8A8C9B854D08882A1CCB0E44CC208E4CA1394B8A835F8F822C2225DC3D23195CE> |-/m <1C60D8A8C9B59F859BE1C826B143C91505E9F5DB2BBB5E95F578C7627BF79B7CD194986EC8AF97C3260BD651F41EF3661A5EFBDB97294D0FA79985CCB154630EA8647AE20E8BE6C7862A3E7D558A7B8440E82351DC80C42B1332C0CCC54F13D0AF32527A5CE98C06019DB657E4D98CF5DB7FDA96CF75B14DDA036C1ECF03E494CBAE195D8D2829F5016C7DDDDED542DCC9> |-/o <1C60D8A8C9B7D8BE957B4FEA1D42E66ED1D0AEB6F6B04B84C31D3105C2E5AF69F54E9F611AA05249B2DCBFADEDD578AB32A421A4FF62818B40D929B154E3EFDF3641B666EE732E981859D68337CC5B0E2C43ABC864860F21F1> |-/s <1C60D8A8C9B7EF32A816858DA2D8DD0B878448BC043BF441121225A15046500B8A822B5383356F87D1B68C64DE897B4BDCDCC3BE0414BE8A4C96DFC9D87DC93B429970DFC145E870AE0D909F3B63768C6C135E52B0C43608A509F83A39C76AF0A6FEC00FB3F7C0C9353DD4CA25B4F5FE2A33EACAECD57BF3B19A832D2BCD3311D3DCCA6A90F7152885A37BDC611FA323EFD68B129E> |-/t <1C60D8A8C9B81F2CB9D6B905E4E48C719AE44AF08B8EE22179EF5461093B7D07A3D031B9E7EC9A37192CF13D030F9719CB5DB6502565F49B49E84351BBA2E9582BE28F7ACFB9D551263225BEB6> |-/u <1C60D8A8C9B7D8BE957B41A03F1CF0F386A83FA4F101F6713A1144C295DEC08E03D491E7A5489B56567FA8EC808087BBA9478B34EC88BF1E9D9E67CF3391F0DC883C0AA9AFB9B6B00025> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVT+NimbusSanL-Bold /Encoding getdup 77 /M putdup 80 /P putdup 83 /S putdup 97 /a putdup 100 /d putdup 105 /i putdup 108 /l putdup 109 /m putdup 111 /o putdup 115 /s putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/GANIVT+NimbusSanL-Bold*1 [55{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 5{/.notdef}rp /C 4{/.notdef}rp /H 3{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]GANIVT+NimbusSanL-Bold nfGANIVT+NimbusSanL-Bold*1 [19.6294 0 0 -19.6294 0 0 ]msf18.7602 38.64 mo(StandardModelTotalProductionCrossSectionMeasurement)[13.0802 6.47986 10.92 11.9999 11.9999 10.92 7.3201 17.3999 16.3199 11.9999 11.9999 10.92 10.9202 10.4397 11.9998 6.47989 10.92 10.92 13.0802 7.32016 11.9999 11.9999 11.9999 10.92 6.47989 5.39999 11.9999 17.5198 14.16 7.32025 11.9999 10.92 16.2 13.0802 10.92 10.92 6.47992 5.39999 11.9998 17.6397 16.3199 10.92 10.92 10.92 11.9999 7.68011 10.92 17.4001 10.92 11.9999 0 ]xsh594.04 38.64 mo(s)sh0 0 0 .59353 cmyk
GANIVU+NimbusSanL-Regu*1 [11.3574 0 1.89669 -11.3574 0 0 ]msf614.68 26.28 mo(Status:)[7.56012 3.11993 6.36005 3.12 6.36005 5.64001 0 ]xsh614.68 38.5198 mo(March2015)[9.47992 6.36005 3.83997 5.64001 9.36011 6.36005 6.36005 6.35999 0 ]xsh333.071 503.048 mo
333.071 469.372 li
529.002 469.372 li
529.002 536.723 li
333.071 536.723 li
1 /0 /CSD get_res sepcs
0 sep
f
1.09589 lw
333.071 536.723 mo
333.071 469.372 li
0 0 0 1 cmyk
@
333.071 536.723 mo
529.002 536.723 li
@
529.002 469.372 mo
333.071 469.372 li
@
529.002 469.372 mo
529.002 536.723 li
@
%ADOBeginSubsetFont: ZCXPMX+NimbusSanL-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVT+NimbusSanL-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B6079F1E495237AA3F64441E4A131C11FB3E8512A0B86473A2F60C423CF878E88E0F4833552CCA1B70C921FDFE4A9F47B1CA4B5C61C70FFA4765A82B6DBE934516EF> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVT+NimbusSanL-Bold /Encoding getdup 65 /A putpop%ADOEndSubsetFont
/GANIVT+NimbusSanL-Bold*1 [55{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 4{/.notdef}rp /H 3{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]GANIVT+NimbusSanL-Bold nfGANIVT+NimbusSanL-Bold*1 [16.3545 0 2.73121 -16.3545 0 0 ]msf349.36 491.88 mo(ATLAS)[10.3199 9.95987 9.95984 11.76 0 ]xshGANIVU+NimbusSanL-Regu*1 [16.3546 0 0 -16.3546 0 0 ]msf426.52 491.88 mo(Preliminary)[10.9202 5.3999 9.12003 3.60001 3.60001 13.6799 3.60001 9.12006 9.12006 5.87976 0 ]xsh349.36 523.56 mo(Run1)[11.76 9.12003 13.6802 0 ]xshGANIVX+txsy*1 [17.2154 0 0 -17.2154 0 0 ]msf414.04 511.2 mo(p)sh426.148 510.132 mo
433.708 510.132 li
433.708 511.212 li
426.148 511.212 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 0 620 ]ct
[7.56 0 0 -1.08 426.148 109.868 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: MKNBAA+CMSSI17 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /MKNBAA+CMSSI17 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMSSI17.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 115 /s putdef/FontBBox {0 -8 384 442} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-16 -0 430 442 656 672 694 710] def/OtherBlues [-204 -195] def/BlueScale 0.0479599 def/StdHW [61] def/StdVW [77] def/StemSnapH [56 61] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/s <1C60D8A8C9B802B3A83108F155A0ACEB7FFD614D3E23CB778929CFDC2892CE2EAA99FFA056A6E40A0943B8088C72E9D3BAD8032F3D8F32DAB1BA0B7A429871D8180F29862D46EC0AC30A542C65AE100C306C8BC6B9C00A25F829FA11AB19CE6606F7379B11E9B92B7161669C717BFCB9> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GANIWE+CMSSI17 /MKNBAA+CMSSI17 findfont ct_VMDictPut/GANIWE+CMSSI17*1 [115{/.notdef}rp /s 140{/.notdef}rp]GANIWE+CMSSI17 nfGANIWE+CMSSI17*1 [17.2154 0 0 -17.2154 0 0 ]msf426.16 523.56 mo(s)sh%ADOBeginSubsetFont: RDDBAA+NimbusSanL-Regu AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.systemdict beginGANIVU+NimbusSanL-Regu dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/equal <1C60D8A8C9B7F37489A06F9529783C031558988C863E410A0DF584A69C5F43BA5C59A31785C289BA346D> |-systemdict /gcheck known {setglobal} if end {end} ifendGANIVU+NimbusSanL-Regu /Encoding getdup 61 /equal putpop%ADOEndSubsetFont
/GANIVU+NimbusSanL-Regu*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 2{/.notdef}rp /at /A /B /C /D /E /F /G /H /.notdef /J /.notdef /L /M /N /O /P /.notdef /R /S /T /.notdef /V /W /X /.notdef /Z /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]GANIVU+NimbusSanL-Regu nfGANIVU+NimbusSanL-Regu*1 [16.3546 0 0 -16.3546 0 0 ]msf438.16 523.56 mo(=7,8TeV)[14.1602 9.12006 8.99991 13.6801 8.03973 9.12006 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/GANIWC+CMSS17*1 uf/GANIWC+CMSS17 uf/RCIRMX+CMSS17 uf/GANIWE+CMSSI17*1 uf/GANIWE+CMSSI17 uf/MKNBAA+CMSSI17 uf/GANIVZ+CMSS10*1 uf/GANIVZ+CMSS10 uf/SDUAAA+CMSS10 uf/GANIVT+NimbusSanL-Bold*1 uf/GANIVT+NimbusSanL-Bold uf/ZCXPMX+NimbusSanL-Bold uf/GANIVV+rtxmi*1 uf/GANIVV+rtxmi uf/FSFAAA+rtxmi uf/GANIVS+CMSSBX10*1 uf/GANIVS+CMSSBX10 uf/KGFRMX+CMSSBX10 uf/GANIVR+txbsy*1 uf/GANIVR+txbsy uf/NTEBAA+txbsy uf/GANIWD+CMSSI12*1 uf/GANIWD+CMSSI12 uf/RSPQMX+CMSSI12 uf/GANIVW+CMSS8*1 uf/GANIVW+CMSS8 uf/BJEBAA+CMSS8 uf/GANIWA+CMSSI8*1 uf/GANIWA+CMSSI8 uf/VENAAA+CMSSI8 uf/GANIVX+txsy*1 uf/GANIVX+txsy uf/NMOBAA+txsy uf/GANIVY+CMSSI10*1 uf/GANIVY+CMSSI10 uf/TAJRMX+CMSSI10 uf/GANIWB+CMSS12*1 uf/GANIWB+CMSS12 uf/CLIRMX+CMSS12 uf/GANIVQ+txbex*1 uf/GANIVQ+txbex uf/MUFAAA+txbex uf/GANIVU+NimbusSanL-Regu*1 uf/GANIVU+NimbusSanL-Regu uf/RDDBAA+NimbusSanL-Regu ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
