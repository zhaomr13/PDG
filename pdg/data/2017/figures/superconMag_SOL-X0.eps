%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%AI8_CreatorVersion: 10.0%%For: (Don Groom) (Lawrence Berkeley Lab)%%Title: (DetMag_10_SOL-X0.eps)%%CreationDate: 1/14/10 9:56 AM%%BoundingBox: 182 244 472 459%%HiResBoundingBox: 182.2388 244.8403 471.9321 458.5737%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Helvetica%%+ Helvetica-Oblique%%DocumentNeededFonts: Helvetica%%+ Helvetica-Oblique%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 1%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30 31 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI5_OpenToView: 170.5 483.5 1.5 1124 743 26 0 1 387 218 0 0%AI5_OpenViewLayers: 77%%PageOrigin:30 31%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 96 8%%BeginData: 9194 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD87FFA8527DFD7EFFA852FD05FF7DA87D7DA8A87DA87DA87D7DA8%A852A8A87D7D7DA8A87DA8A87D7DA87DA87D7DA87D7DA87DA87D7DA8A852%A8A87D7D7DA8A87DA8A87D7DA87DA87DA8A87D7DA87DA87D7DA8A852A87D%A87D7DA8A87DA8A87D7DA87DA87DA8A87D7DA87DA87D7DA87D7DA87DA87D%7DA8A87DA8A87D7D7DFD08FFA8527DFD05FFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFF7DFD0DFF7DFD10FF7DFD0DFFA8FD%0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFF7DFD10FF%A8FD6EFF7DFD10FF7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD%0DFFA8FD0DFFA8FD0CFFA8FD10FF7DA8FD6DFF52FD10FFA8FD0DFFA8FD0D%FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFFA8FD10FFA8%FD6EFF7DFD10FF7DFD0DFFA8FD0DFFA8FD07FF7D7D7DFF527DA87D52FFA8%7D7DFD07FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0BFFA87DFD10FFA8FD22FF%52FF52FF527DFF52FF7DFF7D52FD3FFF7DFD10FF7DFD0DFFA8FD0DFFA8FD%06FF7D7D277D7D7DFF7D7D7DFF527DFD08FFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD0CFF7DFD10FFA8FD6EFF7DFD09FF7D52FF527DA8FF7DFD0DFFA8FD0D%FFA8FD0DFFA8FD05FFA8A8FD06FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFF%A8FD09FF7D7DFF7D527DFF7D7DA8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA87D%A8A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FF%A8A852FFFF7D7D27FD04FF527DFF7D7D7DFFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD05FFA8A8FD06FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFFA8FFFFA852%7DFD0BFFA8FD6EFF7DFFFF7D7D7DFD0BFF7DFD0DFFA8FD0DFFA8FD0DFFA8%FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0BFFA87DFFFF52527DFD0BFFA8%FD6EFF7DFFFF527D52FD0BFF7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD%0DFFA8FD0DFFA8FD0DFFA8FD0CFF7DFD10FFA8FD6EFF7DFFFF7D7D277DFD%0AFF7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD0CFFA8FFFFA8527D7DFD0AFF7DA8FD6DFF52FFFF7D7D7DFD0BFFA8FD%0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8A8FFFFA8FF7DA8%7DA8A8A8FFFFA8FD0CFFA8FFFFA8F87DFD0BFF7DA8FD52FFA87DA8A8FF7D%A8A8FF7DA87DFD0FFF7DFFFF7D7D7DFD0BFFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD0DFFA8FD0DFFA8FD0DFF7DFD07A8FFA8FFA8FFFFA8FD0CFFA8FFFFA8%527DFD04FF5252FD05FFA8FD55FFA8A8FD17FF7DFFFF7D7D7DFD04FFA87D%FD05FF7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7DFD09FF277D%FD05FFA8FD55FF7DA8FD17FF7DFFFF7D7D52FD0BFF7DFD0DFFA8FD0DFFA8%FD0DFFA8FD0DFFA8FFFFA87DA8FD08FFA8FD0DFFA8FD0DFFA8FD0CFFA8FF%FFA8F87DFD0BFF7DA8FD38FFA87DA87DFD31FF52FFFF7DFF7DFD0BFFA8FD%0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FFA8FFA8A8FD08FFA8FD0DFFA8FD0D%FFA8FD0CFFA8FFFFFF527DFD0BFF7DA8FD36FF7DA8FD07FF7DFD2DFF7DFF%FF7D7D7DFD0BFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFF7DA8FD0CFFA8FD%0DFFA8FD0DFFA8FD0CFFA8FFFF525252FD0BFFA8FD37FFA8FD36FF7DFD04%FFA8FD0BFF7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFF7D7DFD0CFFA8FD0DFF%A8FD0DFFA8FD0CFF7DFFFF7D2752FD0BFFA8FD36FFA87DA8FD35FF7DFFFF%A87D52FD0BFF7DFD0DFFA8FD0DFFA8FD0DFFA8A8A8FF7DA8A8FF7DA8A8A8%7DA8A8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFFA8FFFFA8527DFD0BFF7DA8FD%28FFA8FFA87DA87DFF7DFFFFA87D7DFD38FF52FFFF527D27FD0BFFA8FD0D%FFA8FD0DFFA8FD0DFF7DFD04A87DA8A8FFFFA8FF52FFA8FD0DFFA8FD0DFF%A8FD0DFFA8FD0CFFA8FFFFFF527DFD04FF527DFF7D52FFFF7D7DA8A8FFA8%FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8%FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8%FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8FFA8FFA8A852FFFF7D5252FD05FF52FF7D7D7DFF%A8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD%0CFFA8FFFF7D5252FD05FF7DA8A8527DFFA8FD6EFF7DFFFF7D7D7DFD0BFF%7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD%0CFF7DFD10FFA8FD6EFF7DFD10FF7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD0DFFA8FD0DFFA8FFFD05A8FFFD05A8FF7DA8A8A8FD09FFA8FFFF7D52%7DFD0BFF7DA8FD55FF7DA87DA87DFFFFFF7DA87DFF7DFD0BFF52FFFFA8F8%7DFD0BFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FF%FD07A8FFFD07A8FD0AFFA8FD10FF7DA8FD55FFA8A8A8FFFD07A8FFFD04A8%7DA8FD06FF7DFD10FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8%FD0DFFA8FFFD04A87DA8A8A87DA8A8A87DA87DFFA87DA8FD06FFA8FFFF7D%5252FD0BFFA8FD55FFA87DA87DA87DA87DA8A8A87DA87D7DFFFFA8FD07FF%7DFFFF7D7D7DFD0BFF7DFD0DFFA8FD0DFFA8FFFFFFA8527D7D7DFD05FFA8%FD0DFFA8FD0DFFA8FD0DFFA8FFA8FD08FFA8FFA8FD0DFF7DFFFF7D5252FD%0BFFA8FD1FFF7DFF7DA87DFD32FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FD%09FF7DFFFFA82752FD04FF7D7DFD05FF7DFD0DFFA8FD0DFFA8FFFFFF527D%7D7DFD06FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD1AFFA8FFFF7D527DFD05FF%7DFD05FF7D7DA8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8%A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8%FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A852FFFFA852%7DFD05FF7DFD05FFA8FD0DFFA8FD0DFFA8FD05FFA8FD07FFA8FD0DFFFD05%A8FFA87DA8FFFFFFA8FFA8FD0DFFA8FD0DFFA8FD0CFFA8FFFF7D527DFD0B%FF7DA8FD1EFFA8F8F8A8FD15FF7DA8A8FF7DFFA8A8A8FF7D7DA8FD29FF7D%FFFF7D7D7DFD0BFFA8FD0DFFA8FD0DFFA8FD04FF27F8A8FD06FFA8FFFFFF%A8277DFD07FF7DA87DA8FFFD05A8FFA87DFFA8FD0DFFA8FD0DFFA8FD0CFF%A8FFFFA87D7DFD0BFFA8FD0EFFA87DA8FF7DA852A8FF7DFFA87DFD05FFA8%7D7DFD0AFF27F8F8FD3EFF7DFFFF7D527DFD0BFF7DFD0DFFA8FFA8FFA8FF%A8FFFFFFA8A8A8FFA8FD05FFA8A8FD0BFF527D7D7D527DFF52A8A8FD0DFF%A8FD0DFFA8FD0DFFA8FD0CFF7DFFFF7D7D7DFD0BFFA8FD0FFFA8FFA87D7D%FFFF7DA852A8FD08FF52A8FF7DA87D7DA8FD05FF7DFF7DFF7D527DFD38FF%7DFFFFA87D52FD0BFF7DFD0DFFA8FD0DFFA8A8A8FFFFFFA8FFFFA8A8A8FF%FF7DFD05FF7D7D277D7D7DFFFFA8FD0DFF52FD0DFFA8FD0DFFA8FD0CFFA8%FFFFA8527DFD0BFF7DA8A8FFA87DA87DA8A8A87DA8A8FD0EFFA8527DFFFF%FFA8FFFF7DA87DFFA87DA8FD19FFF8F852FD27FF52FFFFA87D7DFD0BFFA8%FFFFFD07A8FFA8A8FFA8FD0DFFA8FD07FFA8A8A87D7DA87DFFA8FD0BFFA8%FD0CFF7DF8FFFF52FFFF277D7DFF27A87DA8FFFF7D7D7DA8FD08FFA8FD0C%FFA8FFFF52527DFD0BFF7DA8FF7DA87DA8A8A87DFD04A8FD0DFF7D7DFD08%FF7DA8FFA8FD1FFFA8527DFF7D52FF7D527D7D7DFF52FFFF7D7DFD15FF7D%FFFF277D7DFD0BFFA8FD0DFFA8FD0CFFA87DFD08FFA87DFFA8A8A8FD0DFF%A8FD0DFFA8FF527D52FF7D5252527D7D527DA87D527D7D7DFD08FFA8FD0C%FFA8FFFF7DFD06FF5252FF7D52A8FFA8FD0CFF7D7DA8FD05FFA8A87DFF7D%A8A8FFA8FF7DA8FD04FFA8A8A8FFA8A8A8FD43FF7DFD09FF7D7DFF7D7D7D%FF7DFD04A8FF7DA8A8A87DA8A8A87DFFA8FFA8FFA8A8FFFFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7DFD09FF5252A8A852%7DFFA8FFA87DA8A8A8FFFD04A8FFFFA8FD06FFFD05A87D7DA8A8A87DA8FD%4EFF7DFD10FF7DFF7DFD0AA8FFA8FD1BFFA8FD0DFFA8FD0DFFA8FD0DFFA8%FD0DFFA8FD0CFFA8FD10FF7DA8FFA8A8A8FFA8A8A8FFA8A8FD62FF52FD10%FFA8FFA8FF7DA8FFFD05A8FFFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8%FD0DFFA8FD0DFFA8FD0CFFA8FD10FF7DFD05A8FF7DA87DFF7DA8FD62FF7D%FD10FFA8FFA8A87DFF7DA8A8A852A8A8FFA8FD0DFFA8FD0DFFA8FD0DFFA8%FD0DFFA8FD0DFFA8FD0DFFA8FD0CFFA8FD10FFA8FFFFA8FFA8A8A8FFA87D%A8FD63FF7DFD10FF7DFD05FF7DFFFFA87D7DFFFFA8FD0DFFA8FD0DFFA8FD%0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0CFF7DFD10FFA8FD04FFA87DA8FF%FFA8A8FD63FF7DFD10FF7DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFF%A8FD0DFFA8FD0DFFA8FD0CFF7DFD10FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD%0DFFA8FD0DFFA8FD0DFFA8FD0CFFA8FD0DFF7DFD09FF7D52FD05FFA8FD05%FFA8FFA8FD05FF7DFD07FFA8FD05FF7DFD07FFA8FD05FF7DFD07FFA8FD05%FF7DFFA8FD05FFA8FD05FF7DFFA8FD05FFA8FD05FF7DFFA8FD05FFA8FD04%FFA8A8FFA8FD05FFA8FD04FFA8FD09FF527DFD05FFA87DA87DA8FD057DA8%7DA87D7D7DA87DA87DA87D7D7DA87DA87D7D7DA87DA87DA87D7D7DA87DA8%7D7D7DA87DA87DA87D7D7DA87DA8FD057DA87DA87D7D7DA87DA8FD057DA8%7DA87D7D7DA87DA8FD057DA87DA87D7D7DA87DA87DA87D7D7DA87DA87D7D%7DA87DA87DFD09FF7D52FDFCFFFD08FFA87D7DFD0CFF27FD0CFFA87D7DFD%0BFF7D52FD0DFF52FD0CFF7D7DFD0CFF7D7DFD0CFF7D27FD0CFF7D52FD0E%FF52FF52FD0CFF7DFD0DFF7D7DFD0CFF52A8FD0BFF527DFD0CFF527D7DFD%0BFF527D7DFD0BFFA87DFD0CFF5252FD0EFFA8527DFD0CFF7DFD0CFF7D52%7DFD0BFF7D7DA8FD0BFF7D27FD0CFF7D7DA8FD0BFF7D52A8FD0BFF7DFD0D%FF7D52FDC0FF7DA8FD09FF7DFD73FFA8A87DFD08FF7DA87DFD70FF277DA8%527DFF5252FFFF527D275252FF7D7D7D52FD6BFF527D7DFFFFFF7D5252FF%FF7DFF7DFFFFFF52527D52FD6BFF7D7D7DFFFFFF7DA87DFFFF7DFF7DFFFF%FFFD047DFD76FF7DFD08FF52FDFCFFFD32FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(6/10/1996) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 68 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/havefont{	systemdict /languagelevel known		{		/Font resourcestatus dup			{ exch pop exch pop }		if		}		{		systemdict /FontDirectory get 1 index known			{ pop true }			{			systemdict /fileposition known				{				dup length 6 add exch				Ss 6 250 getinterval				cvs pop				Ss exch 0 exch getinterval				status					{ pop pop pop pop true }					{ false }				ifelse				}				{				pop false				}			ifelse			}		ifelse		}	ifelse} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def/subststring {	exch 2 index exch search	{		exch pop		exch dup () eq		{			pop exch concatstring		}		{			3 -1 roll			exch concatstring			concatstring		} ifelse		exch pop true	}	{		pop pop false	} ifelse} def/concatstring {	1 index length 1 index length	1 index add	string	dup 0 5 index putinterval	dup 2 index 4 index putinterval	4 1 roll pop pop pop} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	2 index havefont	{		3 index		255 string		cvs				dup		(_Symbol_)		eq		{			pop			2 index			findfont					}		{			1 index 0 eq			{				dup length 1 sub				1 exch				getinterval								cvn				findfont			}			{				pop 2 index findfont			} ifelse		} ifelse	}	{		dup 1 eq		{			2 index 64 string cvs			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring			{				exch pop dup havefont				{					findfont false				}				{					pop true				} ifelse			}			{				pop	dup				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring				{					exch pop dup havefont					{						findfont false					}					{						pop true					} ifelse				}				{					pop pop true				} ifelse			} ifelse			{				1 index 1 eq				{					/Ryumin-Light-Ext-RKSJ-V havefont					{/Ryumin-Light-Ext-RKSJ-V}					{/Courier}					ifelse				}				{					/Ryumin-Light-83pv-RKSJ-H havefont					{/Ryumin-Light-83pv-RKSJ-H}					{/Courier}					ifelse				} ifelse				findfont				[1 0 0.5 1 0 0] makefont			} if		}		{			/Courier findfont		} ifelse	} ifelse	_wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 10 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontScript exch def	/FontDirection exch def	/FontRequest exch def	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{W B} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{W F } def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{W S} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat	_shift aload pop _lineorientation 1 eq { exch } if translate	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	1 index type /nametype eq	{		dup 0.75 mul 1 index 0.25 mul neg	} if	/_fontDescent exch ddef	/_fontAscent exch ddef	/_fontSize exch ddef	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef	/_fontHeight _fontSize ddef	findfont _fontSize scalefont setfont} def/Tl{	pop neg 0 exch	_leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	0 exch	_shift astore pop	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	count 1 eq { 100 } if	100 div exch 100 div exch	_scale astore pop	iTm} def/TA{	pop} def/Tq{	pop} def/Tg{	pop} def/TG{	pop} def/Tv{	/_lineorientation exch ddef} def/TV{	/_charorientation exch ddef} def/Ty{	dup /_yokoorientation exch ddef 1 sub neg Tv} def/TY{	pop} def/T~{	Tx} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	_fontSize mul 1000 div	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse	rmoveto	pop} def/TK{	2 npop} def/T*{	_leading aload pop	_lineorientation 0 ne { exch } if	Td} def/T*-{	_leading aload pop	_lineorientation 0 ne { exch } if	exch neg exch neg	Td} def/T-{	_ax neg 0 rmoveto	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ findfont _fontSize scalefont setfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%/X^{	currentfont 5 1 roll	dup havefont		{		findfont _fontSize scalefont setfont		}		{		pop		exch		} ifelse	2 index 0 eq	{		Tx	}	{		Tj	} ifelse	pop	pop	setfont} def/T^	/X^	load def%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 50 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 40 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIDataProc null def	/XIVersion 6 def	/XIColorSpace /DeviceGray def	/XIColorValues 0 defendcurrentdict /_colorimage known not {	/colorimage where {		/colorimage get /_colorimage exch def	}{		/_colorimage null def	} ifelse} if/_image systemdict /image get def/_currenttransfer systemdict /currenttransfer get def/FourEqual {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual { 				/plateindex 0 def			}{				0 1 0 0 FourEqual { 					/plateindex 1 def				}{					0 0 1 0 FourEqual {						/plateindex 2 def					}{						0 0 0 1 FourEqual { 							/plateindex 3 def						}{							0 0 0 0 FourEqual {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/clrspaceissepn {	type /arraytype eq } def/clrspacegetname {	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse} def/clrspacegetalt {	aload pop pop pop colormake} def/clrspacegetcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/clrspacemarksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				/findcmykcustomcolor where {					pop					dup length 2 sub get					0.1 0.1 0.1 0.1 5 -1 roll					findcmykcustomcolor 1 setcustomcolor					systemdict /currentgray get exec					1 ne				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/colormake {	dup clrspacegetcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/colorexpand {	dup clrspacegetname exch	dup clrspaceissepn {		clrspacegetalt		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				clrspacegetalt colortint colortocmyk			} ifelse		} ifelse	} ifelse} def/makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/WalkRGBString {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/CMYKToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/SeparateCMYKImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne {			sourcearray plateindex get exec		}{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub {				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/ColorImageCompositeEmulator {	pop true eq {		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse				load		 end		} if		image	} ifelse} def/colorimage {	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index end		dup 8 eq exch 1 eq or not {		/_colorimage load null ne {			_colorimage		}{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}{		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {			/_colorimage load null eq {				ColorImageCompositeEmulator			}{				dup 1 eq {					pop pop image				}{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						grestore					} if				} ifelse			} ifelse		}{			dup 1 eq {				pop pop				image			}{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0 {									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace clrspacegetcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] makeimagedict _image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] makeimagedict _image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} stringapply			} concatprocs _image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} stringapply			} concatprocs false _pticomps			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse		} ifelse	} ifelse} def/graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray proctintimage} def/cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK proctintimage} def/rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB proctintimage} def/tintimage {	TestPlateIndex -1 eq {		colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop graytintimage		}{			dup /DeviceRGB eq {				pop rgbtintimage			}{				pop cmyktintimage			} ifelse		} ifelse	}{		dup clrspacemarksplate {			plateindex 5 lt {				colortocmyk plateindex get 1 exch sub				exch {1 0}{0 1} ifelse () graytintimage			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage			} ifelse		}{			pop pop pop			{pop 1} 0 1 () /DeviceGray proctintimage		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace tintimage} def/XIImage {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIType 1 eq {			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH {	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEncoding 0 ne XIVersion 6 le and {			currentfile 128 string readline pop pop		} if		XICompression 0 eq {			/XIBuffer1 XIRowBytes string def			XIEncoding 0 eq {				{currentfile XIBuffer1 readhexstring pop}			}{				{currentfile XIBuffer1 readstring pop}			} ifelse		}{			/XIBuffer1 256 string def			/XIBuffer2 XIRowBytes string def			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}			/ASCIIHexDecode filter /DCTDecode filter			/XIFile exch def			{XIFile XIBuffer2 readstring pop}		} ifelse		/XIDataProc exch def				XIVersion 6 le {			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIType 1 eq {				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if		XIEnable {			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Helvetica%%IncludeFont: Helvetica-Obliqueuserdict /_useSmoothShade true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI55J_Tsume: None%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 0 TZ%AI3_EndEncoding TrueType%AI55J_Tsume: None%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique[/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Black, White Radial)(Black, White Radial) 1 2 Bd[000<0000000000000000000000000000000000000000000000010101010101010101010101010202020202020202020202030303030303040404040404040505050505050606060607070707080808090909090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CAD0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0 0 0 0 1 1 1 2 50 0 %_Bs0 0 0 1 0 0 0 2 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Copper)(Copper) 0 7 Bd[<4A49494949484848484747474646464645454544444444434343424241414141404040403F3E3F3E3E3D3E3D3C3D3C3C3B3B3B3B3A3A3A3939393938383837373737363636363534353434333333333232323131303130302F2F2F2E2E2D2D2C2D2C2B2B2A2A292929292827272626262625252423242323222221212120201F1F1E1F1E1D1D1C1C1C1C1B1B1A191919191818171817161615151515141413><9291908F8E8D8D8C8B8A89888786858484838281807F7E7E7C7C7A7B7A797877767574737373727170706E6E6D6C6B6A6B6A696867676565646363626161605F5E5D5D5B5B5B5A5A585857565554535353525150504F4E4D4C4C4C4B4A49484847464544444443424140403F3E3D3C3D3C3B3A39393837363534353433323131302F2E2D2E2D2C2B2A29292827272526252423222121201F1E1E1D1C1C1B1A><A7A6A5A3A2A19F9E9C9B9A99989695949291908F8E8D8B8A8988878685838281807F7E7D7C7B7A797877767574737271706F6E6D6D6C6B6A69686766656464636261605F5F5D5D5C5B5A595958575655545353525150504F4E4D4C4B4B4A494847474645454343424140403F3E3E3D3C3B3A3A39383837363635343333323131302F2F2E2D2C2C2B2B2A2929282727262525242323222221201F1F1E1E1D1C><2D2C2C2B2B2A2A2A2A29282827272626262625242423232222222221202020201F1F1E1E1D1D1D1C1C1B1B1A1A19191918181817171616151515151414131313121211111010100F0F0F0F0E0E0E0E0D0D0D0C0C0C0C0B0B0B0A0A0A0A090909090908080808080807070707070706060606060605050505050505040404040404040403030303030303020202020202020202020201010101010101010101><9596969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2A3A3A4A5A5A6A6A7A7A8A8A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBDBDBEBEBFBFC0C0C1C2C2C3C3C4C4C5C5C6C7C7C8C8C9C9CACACBCCCCCDCDCECECFCFD0D1D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADADBDBDCDCDDDDDEDFDFE0E0E1E1E2E2E3E4E4E5E5E6E6E7E7E8E9E9EAEAEBEBECECED><4F50515253545455565758595A5B5C5D5D5E5F60616263646566676768696A6B6C6D6E6F70707172737475767778797A7A7B7C7D7E7F80818283838485868788898A8B8C8D8D8E8F90919293949596979798999A9B9C9D9E9FA0A0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABBBCBDBDBEBFC0C1C2C3C4C5C6C6C7C8C9CACBCCCDCECFD0D0D1D2D3D4D5D6D7D8D9D9DADBDCDDDE><35363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3>4 %_Br<60606060606060606060606060606060605F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5E5E5E5E5E5E5E5E5E5E5E5E5E5E5D5D5D5D5D5D5D5C5C5C5C5C5C5C5C5B5B5B5B5B5A5A5A5A5A59595959585858585757575757575656565555555454545353535252525151515050504F4F4E4E4E4D4D4C4C4B4B4B4A4A><AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9A9A9A9A9A9A9A9A9A9A9A9A7A7A8A8A8A8A8A7A7A7A7A7A8A6A6A6A6A6A6A5A5A5A5A4A4A4A5A3A3A4A4A3A3A3A3A2A2A2A1A1A1A0A0A19FA0A09F9F9E9E9F9D9E9C9D9E9C9D9B9C9B9B9A9B9B9A9A999A9997989798969796979696959495949493929392><EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEFEFEFEFEFEEEEEEEEEEEDEDEEEEEEEDEDEEEEEDEDEDEDEDEDEDEDEDECECECEBEBEAEAEAE9E9E7E8E6E7E5E5E3E3E2E2E0E1DFDFDEDBDCDADAD9D7D7D5D3D4D2D0D0CFCCCDCBC9C7C7C6C3C2C0C0BFBDBBB9B8B6B7B5B3B2B0AFADABAAA8A7><5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5B5B5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A59595959595858585858565656565555555554545453535352525251515050504E4F4D4D4D4C4C4B4B4A4A4949484847474646454544434342424140403F3E3E3D3C3C3B3A3A393837373635353434333231302F2F2E2E2D><6666666666666666666666666666666666676767676767676767676868686868686869696969696A6A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6E6E6E6F6F6F707071717172727373737474757576767777787879797A7A7B7B7C7D7D7E7E7F8080818282838484858686878889898A8B8C8D8D8E8F90919292939495><2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F303030303030313131313131323232323333333334343434353535353636363737373838383939393A3A3B3B3B3C3C3D3D3D3E3E3F3F40404141414242434344454546464747484849494A4B4B4C4C4D4E4E4F><000000000000000000000000000000000101010101010101010102020202020203030303030404040404050505050606060707070808080909090A0A0B0B0B0C0C0D0D0E0E0F0F10101111121213131415151616171818191A1A1B1C1C1D1E1E1F2021212223242525262728292A2B2B2C2D2E2F303132333435>4 %_Br<4A4B4B4C4C4D4D4E4E4F4F5050515152525353545454555556575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F60><91929192939493949596959697989798999A999A9B9C9B9C9D9C9D9E9F9E9FA0A1A0A1A3A4A3A4A5A6A6A7A8A9A9AA><C4C6C8C8C9CBCDCED0D0D2D4D5D7D9D9DBDCDEDFE1E0E2E3E4E6E5E6E7E9EAEBEAECEDEEEEEEEEEEEEEEEFEFEFEFEF><2D2E2F2F30313233343536373738393A3B3C3D3E3F4041424445464748494A4B4C4D4E5051525354555658595A5B5C><9594939291908F8E8D8C8B8A898887868584838281807F7E7C7B7A797877767574737271706F6E6D6C6B6A69686766><4F4E4E4D4C4B4B4A494848474645454443424241403F3F3E3D3D3C3B3A3A393837373635343433323131302F2E2E2D><26252424232221201F1F1E1D1C1B1A1A1918171615151413121111100F0E0D0C0C0B0A090807070605040302020100>4 %_Br<000102020303040505060607080809090A0A0B0B0C0C0D0D0E0E0F0F1010101011111212131314141515151516161617171818181819191A1A1A1A1B1B1C1C1D1D1D1D1E1E1F1F201F20202121222222222323242424242425252626262627272828292829292A2A2B2B2B2B2C2C2D2D2E2E2E2E2F2F2F2F3030313031313232323233333334343434353536363736373738383838393939393A3A3A3A3B3B3B3B3C3C3D3C3D3D3E3D3E3E3E3E3F3F3F3F3F4040404041414242424243434343444444444545454546464646474747474848494949494A4A4A4A><00010101020203040405050607070708090A0A0B0B0C0D0E0E0F101111121213141515161617181918191A1B1C1C1D1E1F1F2020212223232324252627262728292A2B2A2B2C2D2E2E2E2F303130313233343534353637383839393A3B3B3C3D3D3E3E3F3F4141424243434545454647474948494A4B4B4D4C4D4E4F4F4F50515253525354555656575759595A5A5B5C5D5D5D5E5F6061606162636465646666676868696A6A6C6B6C6D6E6F706F717272747374757677777779797B7A7B7C7D7E7F7F808182838383858587868788898A8B8B8C8D8E8F8F9091><000101020203040405060607070809090A0A0B0C0C0D0D0E0F0F101011111213131414151616171819191A1A1B1C1D1D1E1E1F2021212222232425252627282829292A2B2C2C2D2E2F2F30313132333434353637373839393B3B3C3D3D3F3F4041414343444546464748494A4A4C4C4D4E4F50515252535455565758585A5A5B5C5D5E5F60616163646465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081838485868788898A8B8C8E8F90919293959697989A9B9C9E9FA0A1A3A4A5A7A8AAABACAEAFB1B2B3B5B6B8B9BBBCBEBFC1C3C4><000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101020202020202020202020202020303030303030304040404040404040505050505050506060606060607070707070708080808080809090909090A0A0A0A0A0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F0F10101010111111111212131313131414151515151616171717171818181919191A1A1B1B1C1C1C1D1D1D1D1E1E1F1F1F1F20202121212122222323242425252525262627272828292929292A2A2B2B2C2C2D2D><FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A99999898979796969595><FFFEFDFDFCFBFAF9F9F8F7F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E7E7E6E5E4E3E3E2E1E0DFDFDEDDDCDBDBDAD9D8D7D6D6D5D4D3D2D2D1D0CFCECECDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B0B0AFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8E8D8D8C8B8A898988878685858483828180807F7E7D7C7C7B7A7978787776757473737271706F6F6E6D6C6B6B6A6968676766656463626261605F5E5E5D5C5B5A5A5958575655555453525151504F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726>4 %_Br<202120201F1F1E1F1F1E1E1D1D1C1D1D1C1C1B1B1A1B1B1A1A1919181819181817171717171616151515151514141313131212121211111110100F0F0E0E0E0D0D0D0C0C0C0B0B0A090909080807070606050504030302020100><3937373736353533343332313131302F2E2E2D2C2C2B2B2A2929292827262525242323222221201F1F1E1D1C1C1C1B1A1918181817161615141413131211100F0F0E0D0C0C0B0B0A090908070706060505040403020201010100><3E3D3C3B3B3A393837373635343433323230302F2F2E2D2C2C2B2A29292827262625252423222221201F1F1E1E1B1B1A1A1918181716151514141312121111100F0F0E0E0D0C0C0B0B0A09090808070606050404030202010100><050505050505050504040404040404040303030303030302020202020202020202020202020101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000><D9D9DADADBDBDCDCDCDDDDDEDEDFDFDFE0E0E1E1E2E2E2E3E3E4E4E5E5E5E6E6E7E7E8E8E8E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFF0F0F0F1F1F2F2F3F3F3F4F4F5F5F6F6F6F7F7F8F8F9F9F9FAFAFBFBFCFCFCFDFDFEFEFFFF><B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C5C6C6C7C8C9CACACBCCCDCDCECFD0D1D1D2D3D4D5D5D6D7D8D8D9DADBDCDCDDDEDFE0E0E1E2E3E3E4E5E6E7E7E8E9EAEBEBECEDEEEEEFF0F1F2F2F3F4F5F6F6F7F8F9F9FAFBFCFDFDFEFF><A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>4 %_Br<474746464646464545454545454444434343434343424242424241414141414140404040403F3F3F3E3E3E3E3E3D3D3D3C3C3C3C3C3B3B3B3B3B3B3A3A39393939393838383737373737373636363535353535343434343433333332323232323231313030303030302F2F2F2F2F2E2E2E2D2D2D2D2D2C2C2C2B2B2B2B2B2A2A2A29292929292828282727272626262626252525242424242423232322222222222121212020><C6C4C3C2C2C1BFBEBDBCBBBBB9B8B7B6B5B3B4B3B1B0AFAEADABACABA9A8A7A6A5A5A4A3A2A19F9E9F9D9D9B9A9998989796959493929291908F8E8D8C8C8B8A898886868485848382817F7F7F7E7D7C7B7A7979787776757473737271706F6E6D6E6D6C6B6A696867676666656363626261605F5E5D5C5C5B5B59585857575655545352515151504F4E4D4C4C4B4A49484846454645444342414040403F3E3D3C3B3B3A3A39><F1F0EFEFEFEEEEEDEDECEBEBEAE9E8E7E6E5E4E3E1E0DEDDDBDAD8D6D5D3D2D0CECDCBCAC8C7C5C4C2C1BFBEBCBBBAB8B6B5B4B2B1B0AEADABAAA9A7A6A5A3A2A1A09E9D9C9A99989796949392918F8E8D8C8B8A8887868584838281807F7E7D7C7A797877767574737271706F6E6E6D6B6A6A69686766656463626160605E5D5D5C5B5A5958575656555453525150504F4E4D4C4B4A4A4948474745454443434241403F3E3E><27272626262525252525242424232323232322222221212020202020201F1F1F1E1E1D1D1D1D1D1D1C1C1B1B1B1B1B1B1A1A1A1919191919181818171717171716161616161515151515151414141414131313121212121212121211111111111010100F0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0A0A0A0A0A0A09090909090909090808080808080808070707070707070706060606060606050505><9C9C9D9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A7A8A8A9A9A9AAAAAAABABACACACADADADAEAEAEAFAFB0B0B0B1B1B1B2B2B3B3B3B4B4B4B5B5B6B6B6B7B7B7B8B8B8B9B9BABABABBBBBBBCBCBDBDBDBEBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C7C7C7C8C8C8C9C9C9CACACBCBCBCCCCCCCDCDCECECECFCFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D6D7D7D8D8D8D9D9><2B2C2D2E2E2F30313233343435363738393A3A3B3C3D3E3F4041414243444546474748494A4B4C4D4D4E4F5051525353545556575859595A5B5C5D5E5F5F60616263646566666768696A6B6C6C6D6E6F7071727273747576777878797A7B7C7D7E7E7F80818283848585868788898A8B8B8C8D8E8F9091919293949596979798999A9B9C9D9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B0B1B2B3B4B5B6B6B7B8B9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5>4 %_Br[0.0745 0.102 0.1098 0.0039 0.9294 0.8706 0.8275 2 50 100 %_Bs0.2902 0.5725 0.6549 0.1765 0.5843 0.3098 0.2078 2 50 85 %_Bs0.3765 0.6667 0.9373 0.3608 0.4 0.1765 0 2 73.9136 75 %_Bs0.2902 0.5686 0.7686 0.1765 0.5843 0.3098 0.149 2 50 63 %_Bs0 0 0 0 1 1 1 2 50 34 %_Bs0.1255 0.2235 0.2431 0.0196 0.851 0.7255 0.6471 2 50 14 %_Bs0.2784 0.7765 0.9451 0.1529 0.6118 0.1686 0 2 50 2 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Nova)(Nova) 1 3 Bd[<0807070706060605050403030303030303040405050606060607070707070707070707070707070606060505040403030202020202020304040405050606060606070707070707070707070707060606060505040404040404040404040505050506060606070707070707070707070707070706060606060505050505050505050505050505050506060606060607070707070707070707070707070606060606060505050505050505050505050505050505050505060606060606060707070707070707070707070707060606060606060605050505050504040404040404040404040404040404040405050505050505050606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404040404040404040403030303030303030303030303030303030303><0505060607070808090A0A0B0C0C0D0E0F0F10111212131415161718191A1A1B1C1D1E1F2021222324252728292A2B2D2E2F2F30313233343435363738393A3A3A3B3C3D3E3F404142434445454648494A4B4C4D4E4F4F50515254555656565758595A5B5C5D5D5E5F6061626363646566676869696A6B6D6E6F707071727374757576777879797A7B7C7D7E7E7F8081828283848586868788898A8A8B8C8D8D8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A0A1A2A4A4A5A6A7A7A8A9A9AAABACACADAEAEAFB0B0B1B2B3B3B4B5B5B6B7B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C6C8C9C9CACBCBCDCDCECFCFD0D0D1D2D2D4D4D5D6D6D7D7D8D9D9DADADBDBDDDDDEDFDFE0E0E1E1E2E2E3E3E4E4E4E5E5E6E6E7E7E8E8E9E9EAEAEAEAEBEBEBECECEDEDEDEDEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5>0.913701<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B7B6B5B4B3B2B1B0AFAEAEADACABAAA9A8A7A7A6A5A4A3A2A1A0A09F9E9D9C9B9A9A99989796959494939291908F8E8E8D8C8B8A898988878685858483828180807F7E7D7C7C7B7A797878777675747473727171706F6E6D6D6C6B6A6A696867676665646463626161605F5E5E5D5C5B5B5A59585857565655545353525151504F4F4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A393938373736353534343332323131302F2F2E2E2D2C2C2B2B2A292928282727262625242423232222212120201F1E1E1D1D1C1C1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0E0D0D0C0C0C0B0B0A0A0A0909090808080707070606060505050404040403030303020202020101010101010000000000>04 %_Br<030404050606070809090A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F2020212223232425252627272829292A2B2B2C2D2D2E2F2F303131323333343535363637383839393A3A3B3B3C3C3D3D3E3F3F404041414242434344444545464647494A4C4E5051545658595B5E6061636668696B6D707173747677797A7C7D7F8182848587888A8C8D8F9092949597989A9B9C9E9FA0A2A3A4A5A7A8A9ABACADAEB0B1B2B3B5B6B7B8BABBBDBEBF><F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDEDEDECECECECECECECECECECECECECECEDEDEDEEEEEEEFEFF0F0F0F1F1F2F3F3F4F4F5F5F6F6F7F7F8F8F9F9FAFAFAFAFAF8F8F7F7F6F6F5F5F4F3F3F2F2F2F1F1F1F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDEDEDEDEDEDECECECECECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E8E8E7E7E7E7E7E7E7E7E7E6E6E6E6E6><E9E9E9E9EAEAEAEAEBEBECECECECECEBEAE9E9E7E6E4E4E2E1DFDFDDDBDBD9D7D4D4D2D0CDCDCBC8C6C6C4C2C0BFBDBBB9B9B7B4B4B2B0ADADABA8A6A5A3A09E9D9B98969593908E8D8B8886868482817F7D7B7B78757373706E6B6B68656362605D5A5A575452514F4D4D4C4B49494846454544434242413F3E3E3D3C3B3B3A383737353434333130302F2E2C2D2B2A29292827262625242222211F1F1D1C1A1A18171515131210100F0D0C0B0A0807080707070707><00000000010101010101010101020202020202020303030303030404040404040505050505050606060707070808080909090A0A0B0B0B0C0C0D0D0D0E0E0F0F1010101111121213131414151616171818191A1A1B1C1C1D1E1F1F2021222323242526262728292A2A292A282726262524232322201F1F1E1D1C1C1B191818171716161515151413121211100F0F0E0D0C0C0B0A09090808080807070707060606060505050404030403030202010101010101010101><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A><00000000000101010101010101010202020202020202020303030303030303030404040404040404040505050505050505050606060606060606060707070707070707070808080808080808080909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F1010101010101010101111111111111111111212121212121212121313131313131313131414141414><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151516171818191A1B1B1C1D1E1E1F20212122232424252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142434344454646474849494A4B4C4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F60606162626364656566676868696A6B6B6C6D6E6E6F70717172737374757676777879797A7B7C7C7D7E7F7F808182828384858586>4 %_Br[0.0314 0.0196 0.9137 0 1 1 0 2 38.2022 0 %_Bs0.0118 0.9608 0.9137 0 1 0 0 2 50 75.2809 %_Bs0.749 0.902 0.0275 0.0039 0.2902 0.0784 0.5255 2 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (RGB Rainbow)(RGB Rainbow) 0 6 Bd[<F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E3E3E2E1E0DFDEDCDBDAD9D8D6D5D4D3D1D0CFCECCCBCAC8C7C6C5C3C2C1BFBEBDBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A5A4A3A1A09E9D9B9A9896959392908F8D8C8A898786858382817F7E7D7B7A79787675747371706F6D6C6B6A686766646362615F5E5C5B5A585755545251504E4D4C4A494746454342413F3E3D3B3A393736353332312F2E2D2B2A29272625242221201F1E1E1D1C1B1A191817171615141413121111100F0F0E0D0D0C0B0B0A0A09090807070606060505040404030303030202020202><EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F8F8F8F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F2F3F3>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202>14 %_Br<D5D5D6D7D8D9DADBDDDEDFDFDFDFDFDEDEDEDDDDDCDCDCDBDBDBDBDADADADADADADBDBDCDCDDDEDEDFE0E1E2E3E4E6E8E9E9EAEBEAEAE9E8E8E7E7E6E6E5E5E4E4E3E2E1E0E0DFDFDFDFDFDFE0E0E1E2E3E5E7E8EBEDEFF1F2F4F5F4F3F1EFEDEBEAE8E7E6E5E4E3E2E2E2E2E2E2E2E3E4E5E7E8EAEBEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E8E8E9E9EAEAEBEBEBEAEAEAEAEAEAEAEAEAEBEBECEDEEEFF1F3F5F6F7F8F9FBFCFCFCF9F7F6F4F2F1F0EEEDEDECECEBEBEBEBECECEDEDEEEEEFEFEFEFEFEFEFEFF0F0F0F1F1F2F2F3F4F5F6F7F8F9FBFCFDFDFEFFFFFFFFFFFDFCFBFBFAF9F8F8F7F7F6F6F6F5F5F5F5F4F4F4F4F4F4F4F4F4F4><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010202020203030304040404050505050606060607070707070707070708090A0B0C0E11131517191B1D1F21232527282A2B2D2E3031323334353637383A3C3D3F4042444547494A4C4E4F5153555658595B5C5E5F606263646667696A6C6D6F707273757677797A7B7D7E7F80818384858687898A8C8E9091939597989A9C9D9FA0A2A3A4A6A7A8AAABACAEAFB0B2B4B5B7B9BABCBDBFC1C2C4C5C7C8CACBCCCECFD1D2D3D5D6D7D8DADBDCDDDEDFE1E2E3E3E4E5E6E7E7E8E9E9EAEAEBEBEBECECECECEDED>00<01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>14 %_Br<ECECECECECECECECECECEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E3E3E3E4E4E4E5E5E6E6E7E7E8E8E9EAEAEBEBECEDEEEEEFF0F0F0F0F0F0F0F1F1F1F1F1F1F1F0EFEEEDEDECEBEAEAE9E8E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDBDBDBDBDBDBDBDCDCDCDDDDDDDEDEDFDFE0E0E1E1E2E3E3E4E5E6E6E7E8E9E9E9E9E9E9E9E9E9E9E9E9E8E7E6E6E5E4E3E2E2E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D9D9D8D8D8D7D7D7D7D6D6D6D6D6D5D5D5D5D5D5>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F1F1F0F0EFEEEDEDECEBEAE9E8E7E5E4E3E2E1E0DFDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0CFCDCCCBCAC8C7C6C4C3C1BFBDBBB9B7B4B2B0AEACAAA8A6A4A2A09E9C9A98969492908E8C8A8987858381807E7C7A7977757372706E6C6B6967666462615F5E5C5A595756545351504E4D4B4A484746444341403E3D3B3A3837353432312F2E2C2B29282625242221201E1D1C1A1918171514131211100E0D0C0B0A0908070605040302010000>0<00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>4 %_Br<0808090A0A0B0C0C0D0E0E0F101011121314141516171818191A1B1C1D1E1F1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626365666768696A6B6C6D6E6F70717273747475767778797A7B7C7D7E7F8081838485868788898A8B8C8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BBBCBDBEC0C1C2C3C4C5C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D6D7D8D9DADBDBDCDDDEDEDFE0E0E1E2E2E3E3E4E5E5E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBEBEBEBEBECECECEC><05050505050505040404040404040404030303030303020202020202010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEBEBEBEBEBEBECECECECECEDEDEDEDEEEEEEEFEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F7F8F8F8F8F9F9F9F9FAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>104 %_Br<03030303040404040404040404040404040505050505050505050606060606060606060606060606060606060606060606060606060605050505050404040404040404040404040505050506060606060607070707070707070707060606060605050505050505050505050505050506060606060707070707070707070707060606060605050505050505050505050505060606060707070707070707070707070606060605050504040404040404040405050606060607070707070707070707070606060605050404040302020202020303040405050606060707070707070707070707070706060606050504040303030303030304050506060607070708><F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDBDAD9D8D7D6D5D4D2D1D0CFCECDCBCAC9C8C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605F5E5D5C5B5A595857565655545251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A3A39383736353434333231302F2E2D2B2A2928272524232221201F1E1D1C1B1A19181716151413121211100F0F0E0D0C0C0B0A0A090808070706060505>0.913701<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>04 %_Br[0.0078 0.9529 0 0 1 0.0078 1 2 50 100 %_Bs0.9569 0.9294 0 0 0 0 1 2 50 80 %_Bs0.8353 0 0 0 0.0039 1 1 2 50 60 %_Bs0.9255 0 1 0 0 1 0 2 50 40 %_Bs0.0314 0.0196 0.9137 0 1 1 0 2 50 20 %_Bs0.0118 0.9608 0.9137 0 1 0 0 2 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Tropical Sunset)(Tropical Sunset) 0 5 Bd[<0303030304040404040404040404040404050505050505050505050606060606060606060606060606060606060606060606060606060606060605050505050504040404040404040404040404040405050505050606060606060607070707070707070707070707070606060606060605050505050505050505050505050505050505050505060606060606060606070707070707070707070707070707070707070606060606060606060605050505050505050505050505050505050505050505050505050505050505060606060606060606060606060707070707070707070707070707070707070707070707070707><F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECECEBEAEAE9E8E7E6E5E4E4E3E2E1E1E0DFDEDDDBDAD9D8D7D7D6D5D4D2D1D0CFCECECDCBCAC9C8C8C6C5C4C3C2C1C1C0BFBEBDBDBCBBBAB9B9B8B7B6B5B5B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A2A2A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8E8D8C8C8B8B8A8989888887868685858484838382818180807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767675757474737373727271717170706F6F6F6E6E6E6D6D6D6B6B6B6A6A6A696969696868686767676767666666666665656565656564646464646464><E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0><0000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101>1<000102030405060708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212222232425262728292A2B2B2C2D2E2F3031323333343536373838393A3B3C3D3E3E3F4041424243444546464748494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061616263636465656667676869696A6B6B6C6D6D6E6F6F70707172727373747575767677787879797A7A7B7B7C7D7D7E7E7F7F8080818182828383848485858686878788888889898A8A8B8B8B8C8C8D8D8D8E8E8F8F8F909090919191929292939393949494949595959696969696979797979798989898989899999999999999>04 %_Br<08070707060606050504030303030303030404050506060606070707070707070707070707070606060505040403030202020202030404040505060606060707070707070707070707060606060505040404040404040404050505060606060707070707070707070707070606060605050505050505050505050505060606060607070707070707070707070606060606050505050505050505050505050505060606060607070707070707070707060606060606050505050404040404040404040404040505050505060606060606060606060606060606060606060606060606060606060505050505050505050404040404040404040404040403030303><0505060607070808090A0A0B0C0C0D0E0F0F10111212131415161718191A1B1C1D1E1F2021222324252728292A2B2D2E2F30313233343435363738393A3A3B3C3D3E3F4041424344454648494A4B4C4D4E4F505152545556565758595A5B5C5D5E5F606162636465666768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C8C9CACBCDCECFD0D1D2D4D5D6D7D8D9DADBDDDEDFE0E1E2E3E4E4E5E6E7E8E9EAEAEBECEDEDEEEFEFF0F0F1F1F2F2F3F3F3F4F4F4F4F4F5F5>0.913701<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>04 %_Br<02020201010202020303030303040404040404040404040404040404040403030303030202020201010101000000000001010203030303040405050505060606060606060606060505050505050505050504040404040404030304040404040505050505050606060606060606060606060606060606060606060605050505050505040404040404050505050506060606060606070707070707070707070707070606060606060505050504040404030303030303030303030404040505050606060607070707070708080808080808080808070707070707070706060606050505040404040303030303030303030304050505050606060606070707070708><9E9D9D9C9C9B9A9A9998979696959594939392929190908F8F8E8D8D8B8B8A89898888878686858584838382828180807F7F7E7C7C7B7B7A7979787877767675757372727171706F6F6E6E6D6C6C6B6B6A6969686867666665656463636262615F5F5E5E5D5C5C5B5B5A5959585857565655555452525151504F4F4E4E4D4D4D4C4C4B4A4A494847464645454443424141403F3F3E3E3D3C3C3B3B3A393938383736363535343333333332313130302F2E2E2D2D2C2B2B2A2A292727262625242422222120201F1F1E1D1D1C1C1B1A1A1919181717161615141413131211111111100F0F0E0E0E0D0D0C0C0B0B0B0A0A0A090908080807070707060606050505><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010202030304050506070708090A0A0B0C0D0D0E0F101011121314141617191B1C1E1F2123242627292B2C2E2F3133343637393B3C3E3F4142434546484A4B4D4E4F5152545557585A5B5C5E606162646567686A6B6C6E6F717273757677797A7C7D7E7F818283858687898A8B8D8E8F919293959697999A9B9C9E9FA0A1A3A4A5A6A7A9AAABACADAFB0B1B2B3B5B6B8B9BBBDBEBFC1C2C4C5C6C8C9CACBCDCECFD0D1D2D4D5D6D7D7D8D9DADBDCDDDDDEDFDFDFDFE0E0E0E1E1E1E2E2E3E3E4E4E4E5E5E6E6E6E7E7E7E7E8E8E8E8E8E9E9E9>01<6667676868696A6A6B6B6C6D6D6E6E6F70707171727373747475767677777879797A7A7B7C7C7D7D7E7F7F80808182828383848585868687888889898A8B8B8C8C8D8E8E8F8F909191929293949495959697979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A6A6A7A7A8A9A9AAAAABACACADADAEAFAFB0B0B1B2B2B3B3B4B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBEBEBFBFC0C1C1C2C2C3C4C4C5C5C6C7C7C8C8C9CACACBCBCCCDCDCECECFD0D0D1D1D2D3D3D4D4D5D6D6D7D7D8D9D9DADADBDCDCDDDDDEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E8E8E9E9EAEBEBECECEDEEEEEFEFF0F1F1F2F2F3F4F4F5F5F6F7F7F8F8F9FAFAFBFBFCFDFDFEFEFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br<D5D5D5D6D6D6D7D7D8D8D9DADADCDBDCDDDCDCDCDBDADAD9D9D8D7D7D6D6D5D4D3D3D2D1D0D0CFCECDCDCCCBCACAC9C8C8C7C6C6C5C5C4C4C3C3C3C2C2C2C1C1C0C0C0BFBFBEBEBEBDBCBBBABAB9B8B7B6B5B3B2B1B0AFADACABA9A8A7A5A4A2A09F9E9D9C9B9A999897969594939291908E8E8C8B8A8988878685838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605E5D5C5B5A595857565554535251504F4E4C4B4A4948474645444341403F3E3D3C3B3A3837363534333231302E2D2C2B2A2928262524232221201E1D1C1B1A1A191817161615141313121110100F0E0D0C0C0B0A0909080706060504040302020202><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010102020202020303030303040404040405050607080A0A0C0C0E0F0F11111315151717191A1B1C1D1E2020222324262628292A2C2C2E2E2F3131333335363738393A3C3C3E3E404141434345474748494A4C4C4D4E4F515152535456565758595B5B5C5D5E5F60616163646566666869696B6B6C6E6E6F6F717272747475777778787A7B7B7D7D7E7F8081818284848585878888898A8B8C8C8E8E8F90909292939494959697989899999A9C9C9D9D9E>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFEFEFDFDFCFBFBFAFAF9F8F8F7F7F6F5F5F4F4F3F2F2F1F1F0EFEFEEEEEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E3E3E2E2E1E0E0DFDFDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCBCBCACAC9C8C8C7C7C6C5C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACACABAAAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A09F9E9E9D9D9C9B9B9A9A999898979796959594949392929191908F8F8E8E8D8C8C8B8B8A89898888878686858584838382828180807F7F7E7D7D7C7C7B7A7A79797877777676757474737372717170706F6E6E6D6D6C6B6B6A6A696868676766>14 %_Br[0.0275 0.3922 0.9412 0.0039 1 0.6 0 2 50 100 %_Bs0.0118 0.9608 0.9137 0 1 0 0 2 35.5263 57.3034 %_Bs0.0314 0.0196 0.9137 0 1 1 0 2 50 55.618 %_Bs0.0078 0.6196 0 0 1 0.4 1 2 50 44.9438 %_Bs0.8353 0 0 0 0 1 1 2 50 19.1011 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (White, Black)(White, Black) 0 2 Bd[000<0000000000000000000000000000000000000000000000010101010101010101010101010202020202020202020202030303030303040404040404040505050505050606060607070707080808090909090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CAD0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0 0 0 1 0 0 0 2 50 100 %_Bs0 0 0 0 1 1 1 2 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d0 XR40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.3882 0.6039 0.1529 Xa 0.3882 0.6039 0.1529 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.4039 0.4 0.0824 Xa 0.4039 0.4 0.0824 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.8 0.8 0.1176 Xa 0.8 0.8 0.1176 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.0824 0.4157 0.1725 Xa 0.0824 0.4157 0.1725 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Honeycomb)(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [%AI3_Tile(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR52.3345 28.1372 m40.6475 21.3906 L40.6475 7.9009 L52.3345 1.1543 L64.0161 7.9009 L64.0161 21.3906 L52.3345 28.1372 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR43.9536 19.4839 m43.9536 9.8081 L52.3345 4.9702 L60.7153 9.8081 L60.7153 19.4839 L52.3345 24.3218 L43.9536 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR25.7944 28.1406 m14.1099 21.3911 L14.1099 7.9014 L25.7944 1.1548 L37.479 7.9014 L37.479 21.394 L25.7944 28.1406 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR17.4126 19.4839 m17.4126 9.8081 L25.7944 4.9702 L34.1743 9.8081 L34.1743 19.4839 L25.7944 24.3218 L17.4126 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR12.6846 50.7852 m1 44.0356 L1 30.5459 L12.6846 23.7993 L24.3691 30.5459 L24.3691 44.0386 L12.6846 50.7852 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR4.3027 42.1284 m4.3027 32.4526 L12.6846 27.6147 L21.0645 32.4526 L21.0645 42.1284 L12.6846 46.9663 L4.3027 42.1284 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR65.603 51.1226 m53.9185 44.3765 L53.9185 30.8843 L65.603 24.1382 L77.2871 30.8843 L77.2871 44.3774 L65.603 51.1226 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR57.2202 42.4692 m57.2202 32.7915 L65.603 27.9536 L73.9819 32.7915 L73.9819 42.4692 L65.603 47.3081 L57.2202 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR39.0649 51.1235 m27.3774 44.3765 L27.3774 30.8843 L39.0649 24.1382 L50.7471 30.8843 L50.7471 44.3774 L39.0649 51.1235 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR30.6821 42.4692 m30.6821 32.7915 L39.0649 27.9517 L47.4438 32.7915 L47.4438 42.4702 L39.0649 47.3091 L30.6821 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR25.7944 74.1074 m14.1099 67.3599 L14.1099 53.8682 L25.7944 47.1221 L37.479 53.8682 L37.479 67.3599 L25.7944 74.1074 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR17.4126 65.4526 m17.4126 55.7749 L25.7944 50.937 L34.1743 55.7749 L34.1772 65.4526 L25.7944 70.2905 L17.4126 65.4526 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4157 0 0 Xa 0.4157 0 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR52.3345 74.1074 m40.6475 67.3599 L40.6475 53.8682 L52.3345 47.1221 L64.0161 53.8682 L64.0161 67.3599 L52.3345 74.1074 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 0.3059 0 Xa 1 0.3059 0 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR43.9536 65.4526 m43.9536 55.7749 L52.3345 50.937 L60.7153 55.7749 L60.7153 65.4526 L52.3345 70.2905 L43.9536 65.4526 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Jungle Stripes)(Jungle Stripes) 37 19 73 55 [%AI3_Tile(0 O 0 R 0 0.5333 0.2157 Xa 0 0.5333 0.2157 XA) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &(0 O 0 R 0.6549 0.851 0.3412 Xa 0.6549 0.851 0.3412 XA) @(%AI6_BeginPatternLayer0 J 0 j 9 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Mediterranean Tiles)(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [%AI3_Tile(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Ls%AI6_EndPatternLayer) &(0 O 0 R 1 1 1 Xa 1 1 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 1 Xa 0 0 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.1216 0.1333 1 Xa 0.1216 0.1333 1 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.6514 7.1123 m43.6514 16.9727 L33.7915 16.9727 L33.7915 7.1123 L43.6514 7.1123 Lf26.8296 23.9307 m26.8296 33.791 L16.9702 33.791 L16.9702 23.9307 L26.8296 23.9307 Lf10.0093 7.1094 m10.0093 16.9697 L0.1538 16.9697 L0.1538 7.1094 L10.0093 7.1094 Lf43.6494 40.752 m43.6494 50.6113 L33.7876 50.6113 L33.7876 40.752 L43.6494 40.752 Lf10.0083 40.749 m10.0083 50.6084 L0.1499 50.6084 L0.1499 40.749 L10.0083 40.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.8 0.8 0.8 Xa 0.8 0.8 0.8 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.2 0.2 Xa 0.2 0.2 0.2 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6039 0.6 0.6 Xa 0.6039 0.6 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4 0.4 0.4 Xa 0.4 0.4 0.4 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0 0 0 Xa([Registration]) Pc0 0 0 Xa([Registration]) Pc([Registration]) Pc([Registration]) Pc([Registration]) Pc([Registration]) Pc([Registration]) Pc1 1 1 Xa(White) Pc1 0 0 Xa(Red) Pc0.55 g(New Color Swatch 4) Pc0.5 g(New Color Swatch 5) PcBb2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(White, Black) PcBb0 0 0 0 Bh2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black, White Radial) PcBb2 (Copper) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper) PcBb2 (RGB Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(RGB Rainbow) PcBb0 0 0 0 Bh2 (Nova) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Nova) PcBb2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Tropical Sunset) Pc(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Mediterranean Tiles) Pc(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Pyramids) Pc(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Honeycomb) Pc(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Jungle Stripes) Pc(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Camouflage) Pc(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Azure Rings) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au300 Ar0 R0 0 0 XA2 J 0 j 0.4 w 10 M []0 d0 XR217.3662 303.8818 m221.1646 303.8818 lS217.3662 333.8701 m221.1646 333.8701 lS217.3662 363.8584 m221.1646 363.8584 lS217.3662 393.7676 m221.1646 393.7676 lS217.3662 423.7559 m221.1646 423.7559 lS217.3662 279.9063 m219.2656 279.9063 lS217.3662 285.9199 m219.2656 285.9199 lS217.3662 291.9336 m219.2656 291.9336 lS217.3662 297.8682 m219.2656 297.8682 lS217.3662 309.8945 m219.2656 309.8945 lS217.3662 315.9082 m219.2656 315.9082 lS217.3662 321.9219 m219.2656 321.9219 lS217.3662 327.9355 m219.2656 327.9355 lS217.3662 339.8838 m219.2656 339.8838 lS217.3662 345.8965 m219.2656 345.8965 lS217.3662 351.832 m219.2656 351.832 lS217.3662 357.8447 m219.2656 357.8447 lS217.3662 369.793 m219.2656 369.793 lS217.3662 375.8066 m219.2656 375.8066 lS217.3662 381.8203 m219.2656 381.8203 lS217.3662 387.7539 m219.2656 387.7539 lS217.3662 399.7813 m219.2656 399.7813 lS217.3662 405.7944 m219.2656 405.7944 lS217.3662 411.8081 m219.2656 411.8081 lS217.3662 417.8218 m219.2656 417.8218 lS217.3662 429.7695 m219.2656 429.7695 lS217.3662 435.7832 m219.2656 435.7832 lS217.3662 441.7173 m219.2656 441.7173 lS217.3662 447.731 m219.2656 447.731 lS469.3008 303.8818 m465.502 303.8818 lS469.3008 333.8701 m465.502 333.8701 lS469.3008 363.8584 m465.502 363.8584 lS469.3008 393.7676 m465.502 393.7676 lS469.3008 423.7559 m465.502 423.7559 lS469.3008 279.9063 m467.4014 279.9063 lS469.3008 285.9199 m467.4014 285.9199 lS469.3008 291.9336 m467.4014 291.9336 lS469.3008 297.8682 m467.4014 297.8682 lS469.3008 309.8945 m467.4014 309.8945 lS469.3008 315.9082 m467.4014 315.9082 lS469.3008 321.9219 m467.4014 321.9219 lS469.3008 327.9355 m467.4014 327.9355 lS469.3008 339.8838 m467.4014 339.8838 lS469.3008 345.8965 m467.4014 345.8965 lS469.3008 351.832 m467.4014 351.832 lS469.3008 357.8447 m467.4014 357.8447 lS469.3008 369.793 m467.4014 369.793 lS469.3008 375.8066 m467.4014 375.8066 lS469.3008 381.8203 m467.4014 381.8203 lS469.3008 387.7539 m467.4014 387.7539 lS469.3008 399.7813 m467.4014 399.7813 lS469.3008 405.7944 m467.4014 405.7944 lS469.3008 411.8081 m467.4014 411.8081 lS469.3008 417.8218 m467.4014 417.8218 lS469.3008 429.7695 m467.4014 429.7695 lS469.3008 435.7832 m467.4014 435.7832 lS469.3008 441.7173 m467.4014 441.7173 lS469.3008 447.731 m467.4014 447.731 lS248.8584 273.9727 m248.8584 277.7705 lS280.3501 273.9727 m280.3501 277.7705 lS311.8418 273.9727 m311.8418 277.7705 lS343.334 273.9727 m343.334 277.7705 lS374.8252 273.9727 m374.8252 277.7705 lS406.3164 273.9727 m406.3164 277.7705 lS437.8086 273.9727 m437.8086 277.7705 lS223.6172 273.9727 m223.6172 275.8711 lS229.9473 273.9727 m229.9473 275.8711 lS236.1982 273.9727 m236.1982 275.8711 lS242.5283 273.9727 m242.5283 275.8711 lS255.188 273.9727 m255.188 275.8711 lS261.439 273.9727 m261.439 275.8711 lS267.769 273.9727 m267.769 275.8711 lS274.02 273.9727 m274.02 275.8711 lS286.6006 273.9727 m286.6006 275.8711 lS292.9307 273.9727 m292.9307 275.8711 lS299.1816 273.9727 m299.1816 275.8711 lS305.5117 273.9727 m305.5117 275.8711 lS318.1719 273.9727 m318.1719 275.8711 lS324.4219 273.9727 m324.4219 275.8711 lS330.752 273.9727 m330.752 275.8711 lS337.0039 273.9727 m337.0039 275.8711 lS349.584 273.9727 m349.584 275.8711 lS355.9141 273.9727 m355.9141 275.8711 lS362.165 273.9727 m362.165 275.8711 lS368.4951 273.9727 m368.4951 275.8711 lS381.1553 273.9727 m381.1553 275.8711 lS387.4063 273.9727 m387.4063 275.8711 lS393.7363 273.9727 m393.7363 275.8711 lS399.9863 273.9727 m399.9863 275.8711 lS412.5684 273.9727 m412.5684 275.8711 lS418.8984 273.9727 m418.8984 275.8711 lS425.1484 273.9727 m425.1484 275.8711 lS431.4785 273.9727 m431.4785 275.8711 lS444.1387 273.9727 m444.1387 275.8711 lS450.3896 273.9727 m450.3896 275.8711 lS456.7197 273.9727 m456.7197 275.8711 lS462.9707 273.9727 m462.9707 275.8711 lS248.8584 453.7446 m248.8584 449.9463 lS280.3501 453.7446 m280.3501 449.9463 lS311.8418 453.7446 m311.8418 449.9463 lS343.334 453.7446 m343.334 449.9463 lS374.8252 453.7446 m374.8252 449.9463 lS406.3164 453.7446 m406.3164 449.9463 lS437.8086 453.7446 m437.8086 449.9463 lS223.6172 453.7446 m223.6172 451.8452 lS229.9473 453.7446 m229.9473 451.8452 lS236.1982 453.7446 m236.1982 451.8452 lS242.5283 453.7446 m242.5283 451.8452 lS255.188 453.7446 m255.188 451.8452 lS261.439 453.7446 m261.439 451.8452 lS267.769 453.7446 m267.769 451.8452 lS274.02 453.7446 m274.02 451.8452 lS286.6006 453.7446 m286.6006 451.8452 lS292.9307 453.7446 m292.9307 451.8452 lS299.1816 453.7446 m299.1816 451.8452 lS305.5117 453.7446 m305.5117 451.8452 lS318.1719 453.7446 m318.1719 451.8452 lS324.4219 453.7446 m324.4219 451.8452 lS330.752 453.7446 m330.752 451.8452 lS337.0039 453.7446 m337.0039 451.8452 lS349.584 453.7446 m349.584 451.8452 lS355.9141 453.7446 m355.9141 451.8452 lS362.165 453.7446 m362.165 451.8452 lS368.4951 453.7446 m368.4951 451.8452 lS381.1553 453.7446 m381.1553 451.8452 lS387.4063 453.7446 m387.4063 451.8452 lS393.7363 453.7446 m393.7363 451.8452 lS399.9863 453.7446 m399.9863 451.8452 lS412.5684 453.7446 m412.5684 451.8452 lS418.8984 453.7446 m418.8984 451.8452 lS425.1484 453.7446 m425.1484 451.8452 lS431.4785 453.7446 m431.4785 451.8452 lS444.1387 453.7446 m444.1387 451.8452 lS450.3896 453.7446 m450.3896 451.8452 lS456.7197 453.7446 m456.7197 451.8452 lS462.9707 453.7446 m462.9707 451.8452 lSUu0 To1 0 0 1 202.5034 269.8018 0 Tp0 TvTP-2.5027 0 Td0 Tr0 O0 0 0 Xa0 J 1 w 4 M%_ 0 50 XQ/_Helvetica 9 9 -3.9946 Tf0 Ts100 100 Tz0 Tt%_0 0 100 100 Xu%AI55J_GlyphSubst: GlyphSubstNone 0 TA%_ 0 XL0 TY0 TV22.788 0 XbXB0 0 5 TC100 100 200 TW25 TG0 0 0 Ti1 Ta0 1 2 2 3 Th0 Tq0 Tg0 0 Tl0 Tc0 Tw(0) Tx (\r) TX TO0 To1 0 0 1 206.2515 300.1855 0 Tp0 TvTP-6.2556 0 Td0 Tr(0.5) Tx (\r) TX TO0 To1 0 0 1 202.5034 329.9365 0 Tp0 TvTP-2.5027 0 Td0 Tr(1) Tx (\r) TX TO0 To1 0 0 1 206.2515 359.6875 0 Tp0 TvTP-6.2556 0 Td0 Tr(1.5) Tx (\r) TX TO0 To1 0 0 1 202.5034 390.0713 0 Tp0 TvTP-2.5027 0 Td0 Tr(2) Tx (\r) TX TO0 To1 0 0 1 206.2515 419.8228 0 Tp0 TvTP-6.2556 0 Td0 Tr(2.5) Tx (\r) TX TO0 To1 0 0 1 202.5034 449.5737 0 Tp0 TvTP-2.5027 0 Td0 Tr(3) Tx (\r) TX TOUu0 To1 0 0 1 214.9927 262.2617 0 Tp0 TvTP0 Tr0 Ta(0) Tx (\r) TX TO0 To1 0 0 1 246.6426 262.2617 0 Tp0 TvTP0 Tr(1) Tx (\r) TX TO0 To1 0 0 1 278.2925 262.2617 0 Tp0 TvTP0 Tr(2) Tx (\r) TX TO0 To1 0 0 1 309.3096 262.2617 0 Tp0 TvTP0 Tr(3) Tx (\r) TX TO0 To1 0 0 1 340.959 262.2617 0 Tp0 TvTP0 Tr(4) Tx (\r) TX TO0 To1 0 0 1 372.6094 262.2617 0 Tp0 TvTP0 Tr(5) Tx (\r) TX TO0 To1 0 0 1 404.2598 262.2617 0 Tp0 TvTP0 Tr(6) Tx (\r) TX TO0 To1 0 0 1 435.2773 262.2617 0 Tp0 TvTP0 Tr(7) Tx (\r) TX TO0 To1 0 0 1 466.9268 262.2617 0 Tp0 TvTP0 Tr(8) Tx (\r) TX TOU0 To0 1 -1 0 191.2388 362.8574 0 Tp0 TvTP-59.2822 0 Td0 Tr1 Ta(Thickness in radiation lengths) Tx (\r) TX TO/BBAccumRotation (1.570796) XT0 To1 0 0 1 342.8291 248.835 0 Tp0 TvTP-23.4479 0 Td0 Tr/_Helvetica-Oblique 9 7.299 -2.349 Tf100 Tt0.9 Tc(B) Tx /_Helvetica 8 8 -3.5508 Tf3 Ts0.8 Tc(2) Tx /_Helvetica-Oblique 9 7.299 -2.349 Tf0 Ts0 Tt0 Tc(R) Tx /_Helvetica 9 9 -3.9946 Tf(  [T) Tx /_Helvetica 8 8 -3.5508 Tf3 Ts100 Tt0.8 Tc(2) Tx /_Helvetica 9 9 -3.9946 Tf0 Ts0 Tt0 Tc(m]) Tx (\r) TX TOLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 11 0 153 153 Lb(Layer 2) Ln0 A1 A0 R0.6 G2 J 0 j 0.5 w 10 M []0 d0 XR217.604 303.6445 m469.5371 303.6445 lS217.604 333.6328 m469.5371 333.6328 lS217.604 363.6211 m469.5371 363.6211 lS217.604 393.5303 m469.5371 393.5303 lS217.604 423.5186 m469.5371 423.5186 lS249.0957 453.5068 m249.0957 273.7344 lS280.5874 453.5068 m280.5874 273.7344 lS312.0791 453.5068 m312.0791 273.7344 lS343.5703 453.5068 m343.5703 273.7344 lS375.0625 453.5068 m375.0625 273.7344 lS406.5547 453.5068 m406.5547 273.7344 lS438.0459 454.5146 m438.0459 274.7422 lS0 Au0 0 0 XA469.3008 273.9727 m469.3008 453.7446 lS217.3662 453.7446 m469.3008 453.7446 lSUu217.3394 453.7739 m217.3394 274.002 lS/BBAccumRotation (3.141593) XT469.2744 274.002 m217.3394 274.002 lS/BBAccumRotation (3.141593) XTU*u1 D0 O1 1 1 Xa0 J1 XR327.5479 425.8135 m326.207 425.8135 325.1348 424.7407 325.1348 423.3999 c325.1348 422.0591 326.207 420.9868 327.5479 420.9868 c328.8887 420.9868 329.9609 422.0591 329.9609 423.3999 c329.9609 424.7407 328.8887 425.8135 327.5479 425.8135 c327.5479 425.8135 lb*U*u0.55 g1 w 4 M344.6387 377.8633 m343.2988 377.8633 342.2256 376.791 342.2256 375.4502 c342.2256 374.1094 343.2988 373.0371 344.6387 373.0371 c345.9805 373.0371 347.0527 374.1094 347.0527 375.4502 c347.0527 376.791 345.9805 377.8633 344.6387 377.8633 c344.6387 377.8633 lf*U*u344.6387 383.7979 m343.2988 383.7979 342.2256 382.7256 342.2256 381.3848 c342.2256 380.0439 343.2988 378.9707 344.6387 378.9707 c345.9805 378.9707 347.0527 380.0439 347.0527 381.3848 c347.0527 382.7256 345.9805 383.7979 344.6387 383.7979 c344.6387 383.7979 lf*U0 D279.1235 312.1113 m280.5522 312.1113 281.6948 310.9678 281.6948 309.5391 c281.6948 308.1104 280.5522 306.9678 279.1235 306.9678 c277.6948 306.9678 276.5518 308.1104 276.5518 309.5391 c276.5518 310.9678 277.6948 312.1113 279.1235 312.1113 c279.1235 312.1113 lf0.6 0.6 0.6 Xa295.6606 325.8789 m297.0894 325.8789 298.2324 324.7354 298.2324 323.3066 c298.2324 321.8789 297.0894 320.7354 295.6606 320.7354 c294.2319 320.7354 293.0889 321.8789 293.0889 323.3066 c293.0889 324.7354 294.2319 325.8789 295.6606 325.8789 c295.6606 325.8789 lf0 0 0 Xa323.9873 326.5117 m325.416 326.5117 326.5586 325.3691 326.5586 323.9395 c326.5586 322.5117 325.416 321.3682 323.9873 321.3682 c322.5586 321.3682 321.416 322.5117 321.416 323.9395 c321.416 325.3691 322.5586 326.5117 323.9873 326.5117 c323.9873 326.5117 lf*u323.9873 326.5117 m325.416 326.5117 326.5586 325.3691 326.5586 323.9395 c326.5586 322.5117 325.416 321.3682 323.9873 321.3682 c322.5586 321.3682 321.416 322.5117 321.416 323.9395 c321.416 325.3691 322.5586 326.5117 323.9873 326.5117 c323.9873 326.5117 lf1 D323.9873 326.3535 m322.6465 326.3535 321.5742 325.2813 321.5742 323.9395 c321.5742 322.5996 322.6465 321.5264 323.9873 321.5264 c325.3281 321.5264 326.4004 322.5996 326.4004 323.9395 c326.4004 325.2813 325.3281 326.3535 323.9873 326.3535 c323.9873 326.3535 lf*U0 D0.55 g283.3965 318.124 m284.8247 318.124 285.9678 316.9805 285.9678 315.5527 c285.9678 314.124 284.8247 312.9805 283.3965 312.9805 c281.9678 312.9805 280.8247 314.124 280.8247 315.5527 c280.8247 316.9805 281.9678 318.124 283.3965 318.124 c283.3965 318.124 lf248.6602 307.3633 m250.0889 307.3633 251.2319 306.2207 251.2319 304.791 c251.2319 303.3633 250.0889 302.2207 248.6602 302.2207 c247.2319 302.2207 246.0889 303.3633 246.0889 304.791 c246.0889 306.2207 247.2319 307.3633 248.6602 307.3633 c248.6602 307.3633 lf412.5283 395.9834 m413.957 395.9834 415.0996 394.8398 415.0996 393.4121 c415.0996 391.9824 413.957 390.8398 412.5283 390.8398 c411.0996 390.8398 409.957 391.9824 409.957 393.4121 c409.957 394.8398 411.0996 395.9834 412.5283 395.9834 c412.5283 395.9834 lf370.75 330.0723 m372.1787 330.0723 373.3223 328.9297 373.3223 327.5 c373.3223 326.0723 372.1787 324.9287 370.75 324.9287 c369.3223 324.9287 368.1787 326.0723 368.1787 327.5 c368.1787 328.9297 369.3223 330.0723 370.75 330.0723 c370.75 330.0723 lf240.3521 288.1357 m241.7808 288.1357 242.9238 286.9922 242.9238 285.5645 c242.9238 284.1357 241.7808 282.9922 240.3521 282.9922 c238.9238 282.9922 237.7808 284.1357 237.7808 285.5645 c237.7808 286.9922 238.9238 288.1357 240.3521 288.1357 c240.3521 288.1357 lf0.6 0.6 0.6 Xa450.7461 348.1123 m452.1738 348.1123 453.3174 346.9697 453.3174 345.541 c453.3174 344.1123 452.1738 342.9688 450.7461 342.9688 c449.3164 342.9688 448.1738 344.1123 448.1738 345.541 c448.1738 346.9697 449.3164 348.1123 450.7461 348.1123 c450.7461 348.1123 lf0.55 g231.0156 286.9492 m232.4438 286.9492 233.5869 285.8066 233.5869 284.377 c233.5869 282.9492 232.4438 281.8057 231.0156 281.8057 c229.5869 281.8057 228.4438 282.9492 228.4438 284.377 c228.4438 285.8066 229.5869 286.9492 231.0156 286.9492 c231.0156 286.9492 lf0 0 0 Xa293.2871 330.0723 m294.7153 330.0723 295.8584 328.9297 295.8584 327.5 c295.8584 326.0723 294.7153 324.9287 293.2871 324.9287 c291.8584 324.9287 290.7153 326.0723 290.7153 327.5 c290.7153 328.9297 291.8584 330.0723 293.2871 330.0723 c293.2871 330.0723 lf*u293.2871 330.0723 m294.7153 330.0723 295.8584 328.9297 295.8584 327.5 c295.8584 326.0723 294.7153 324.9287 293.2871 324.9287 c291.8584 324.9287 290.7153 326.0723 290.7153 327.5 c290.7153 328.9297 291.8584 330.0723 293.2871 330.0723 c293.2871 330.0723 lf1 D293.2871 329.9141 m291.9463 329.9141 290.8735 328.8418 290.8735 327.5 c290.8735 326.1602 291.9463 325.0879 293.2871 325.0879 c294.6274 325.0879 295.7002 326.1602 295.7002 327.5 c295.7002 328.8418 294.6274 329.9141 293.2871 329.9141 c293.2871 329.9141 lf*U0 D375.1816 316.8584 m376.6094 316.8584 377.7529 315.7148 377.7529 314.2871 c377.7529 312.8574 376.6094 311.7148 375.1816 311.7148 c373.752 311.7148 372.6094 312.8574 372.6094 314.2871 c372.6094 315.7148 373.752 316.8584 375.1816 316.8584 c375.1816 316.8584 lf*u375.1816 316.8584 m376.6094 316.8584 377.7529 315.7148 377.7529 314.2871 c377.7529 312.8574 376.6094 311.7148 375.1816 311.7148 c373.752 311.7148 372.6094 312.8574 372.6094 314.2871 c372.6094 315.7148 373.752 316.8584 375.1816 316.8584 c375.1816 316.8584 lf1 D375.1816 316.6992 m373.8398 316.6992 372.7676 315.627 372.7676 314.2871 c372.7676 312.9453 373.8398 311.873 375.1816 311.873 c376.5215 311.873 377.5947 312.9453 377.5947 314.2871 c377.5947 315.627 376.5215 316.6992 375.1816 316.6992 c375.1816 316.6992 lf*U0 To1 0 0 1 344.5444 325.0488 0 Tp0 TvTP0 Tr0.5 g0 XR%_ 0 50 XQ/_Helvetica-Oblique 8 6.488 -2.088 Tf0 Ts100 100 Tz0 Tt%_0 0 100 100 Xu%AI55J_GlyphSubst: GlyphSubstNone 0 TA%_ 0 XL0 TY0 TV22.788 0 XbXB0 0 5 TC100 100 200 TW25 TG0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq0 Tg0 0 Tl0 Tc0 Tw(ZEUS) Tx (\r) TX TO0 To1 0 0 1 220.4521 308.4707 0 Tp0 TvTP0 Tr(VENUS) Tx (\r) TX TO0 To1 0 0 1 222.2207 296.7549 0 Tp0 TvTP0 Tr8 0 Tl(BESS,) Tx(\r) TX T*(WASA) Tx (\r) TX TO0 To1 0 0 1 407.9512 397.1509 0 Tp0 TvTP0 Tr0 0 Tl(ALEPH) Tx (\r) TX TO0 To1 0 0 1 347.9761 382.9409 0 Tp0 TvTP0 Tr(H1) Tx (\r) TX TO0 To1 0 0 1 312.8628 366.4326 0 Tp0 TvTP0 Tr(DELPHI) Tx (\r) TX TO0 To1 0 0 1 251.9351 317.4033 0 Tp0 TvTP0 Tr(TOPAZ) Tx (\r) TX TO0 To1 0 0 1 324.6563 314.9238 0 Tp0 TvTP0 Tr0 0 0 Xa(CDF) Tx (\r) TX TO0 To1 0 0 1 289.1582 334.7153 0 Tp0 TvTP0 Tr(D0) Tx (\r) TX TO0 To1 0 0 1 295.6865 428.0786 0 Tp0 TvTP0 Tr(CLEO-II) Tx (\r) TX TO1 Ap800 Ar0 D1 1 1 Xa439.6147 336.3403 m436.9624 336.3403 L436.9624 356.2354 L439.6147 356.2354 L439.6147 336.3403 Lf313.0762 304.5522 m310.4238 304.5522 L310.4238 321.9473 L313.0762 321.9473 L313.0762 304.5522 Lf0 To1 0 0 1 411.6206 348.0381 0 Tp0 TvTP0 Tr0.5 g8 0 Tl(SSC-SDC) Tx(\r) TX T*(prototype) Tx (\r) TX TO1 1 1 Xa408.6675 304.6064 m405.1304 304.6064 L405.1304 314.3325 L408.6675 314.3325 L408.6675 304.6064 Lf0 To1 0 0 1 381.0195 306.1602 0 Tp0 TvTP0 Tr0 0 0 Xa0 0 Tl(ATLAS-CS) Tx (\r) TX TO363.5728 382.6382 m364.0146 382.6382 L364.0146 382.8589 L363.5728 382.8589 L363.5728 382.6382 Lf1 1 1 Xa291.6328 299.4116 m264.6646 299.4116 L264.6646 306.2642 L291.6328 306.2642 L291.6328 299.4116 Lf0 To1 0 0 1 264.479 300.3584 0 Tp0 TvTP0 Tr0.5 g(CELLO) Tx (\r) TX TO0 To1 0 0 1 306.166 314.2153 0 Tp0 TvTP-11.5599 0 Td0 Tr1 Ta8 0 Tl(PEP4-) Tx(\r) TX 3.56 -8 Td(TPC) Tx (\r) TX TO0 Ap0 R0.5 G0.4 w 10 M1 XR411.5 346.9043 m447.3809 346.9043 lS222.4365 295.6724 m245.5078 295.6724 lS222.4365 287.8335 m245.5078 287.8335 lS411.5 338.4922 m447.3809 338.4922 lS295.103 313.167 m317.1665 313.167 lS298.4287 304.8335 m314.8252 304.8335 lSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_typography_AI5 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF