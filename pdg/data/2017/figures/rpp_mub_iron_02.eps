%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Donald E Groom) (Berkeley Lab)
%%Title: (rpp_mub_iron_02.eps)
%%CreationDate: (4/4/02) (12:59 PM)
%%BoundingBox: 181 286 461 505
%%HiResBoundingBox: 181.6495 296.4696 460.9704 504.2703
%%DocumentProcessColors: Black
%%DocumentFonts: NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%DocumentNeededFonts: NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 33 582 761
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 1 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI5_OpenToView: 114 556 3 1274 981 25 0 1 3 40 0 0
%AI5_OpenViewLayers: 15
%%PageOrigin:30 33
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -33 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 96 8
%%BeginData: 6322 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0BFFA8FD7EFF527DFD7EFF7D52FD71F8FD0DFF527DF8FD06FFF8
%FFFFFFF8FFFFF8FFF8FFF8F8F8FFF8F8FD05FFF8FFFFFFF8FFFFF8FFF8FF
%F8FFFD04F8FD06FFF8FFFFFFF8FFF8FFFFF8F8FFFD04F8FD06FFF8FFFFFF
%F8FFFFF8FFF8FFF8F8FFF8F8F8FD06FFF8FFFFFFF8FFF8FFFFF8F8FFFD04
%F8FD0FFFF8FD16FFF8FD15FFF8FD15FFF8FD16FFF8FD15FFF8FD0FFFF8FD
%6FFFF8FD0FFFF8F8FD6DFFF8F8FD0FFFF8FD6FFFF8FD0FFFF8FD68FFFD08
%F8FD0DFFA8FFF8FD5FFFFD0AF8FD06FFF8FD0CFF52FFA8F8FD58FFFD08F8
%FD0FFFF8FD0CFF7D527DF8F8F8FD0BFF7DFD44FFFD06F8FD15FFF8F8F8FD
%0CFF7DA8A8F8FD0DFF7DA8A8FFFFA8A87DFD3AFFFD04F8FD1CFFF8FD0FFF
%F8FD0DFF527D7DFF527D52A8A8FD35FFFD04F8FD20FFF8FD0FFFF8FD0DFF
%5227FFFF7D52527DA8FD32FFFD04F8FD23FFF8FD0FFFF8F8FD44FFF8F8F8
%FD26FFF8F8FD0FFFF8FD43FFF8F8FD2AFFF8FD0FFFF8FD41FFF8F8F8FD2B
%FFF8FD06FF7D7DA8FD04FFA8A8F8FD3FFFF8F8FD2EFFF8FFFFFF7DA852FF
%FFA8A8FFFFFF7D7DF8FD3DFFF8F8FD30FFF8FFFFFF7D7D52FD08FFA8F8F8
%F8FD39FFF8F8F8FFA8A8FD2DFFF8F8FFFFFFA8FFA8FD07FF7DA8F8FD39FF
%F8F8FD04FF7DA8FD2EFFF8FD06FF527DA8FD06FFF8FD38FFF8FD06FF7D7D
%A87DFFFFA8FD04FF52FD24FFF8FD06FF7D7DA8FD06FFF8FD36FFF8F8FD07
%FF527DFF52527D52FF5252FF7DFD24FFF8FD06FF7DA8A8FD06FFF8F8FD34
%FFF8FD0CFFFD047DA87D52FF52FD23FFF8F8FD06FF5252A8FD06FFF8FD33
%FFF8F8FD3AFFF8FD06FF7DFFA8FD05FFA8F8FD32FFF8F8FD3BFFF8FD06FF
%7D52FD05FF7D7DF8FD31FFF8FD3DFFF8FD0DFF527DF8FD30FFF8FD3EFFF8
%FFFFFF527D52FD07FF527DF8F8F8FD2DFFF8FD3DFFF8F8F8FD05FFA8FD09
%FFF8FD2DFFF8F8FD40FFF8FD05FF7DFD09FFF8FD2CFFF8FD42FFF8FD0FFF
%F8FD2BFFF8F8FD42FFF8FD06FFA8FFA8FD06FFF8F8FD29FFF8FD43FFF8F8
%FD06FF7D7D7DA8FD05FFF8FD29FFF8FD45FFF8FD05FFA87D527DA8FD05FF
%F8FD28FFF8FD46FFF8FD06FF7D7D7DFD06FFF8FD27FFF8FD47FFF8FD0DFF
%527DF8FD26FFF8FD48FFF8FD0DFF7D52F8F8F8FD23FFF8F8FD47FFF8F8FD
%0DFF527DF8FD24FFF8FD4AFFF8FD06FF7D7DFD07FFF8FD23FFF8FD4BFFF8
%FD05FF7DFFFFA8A8FD05FFF8FD22FFF8FD48FFFD05F8FD0FFFF8F8FD20FF
%F8FD33FFFD04F8FFFD04F8FFFFFD04F8FFFD04F8FFFFF8FFFFF8F8FD05FF
%52A8A8A8FD06FFF8FD20FFF8FD2CFFF8FFFD04F8FFFFF8FD19FFF8FD05FF
%7D7DA87DFD06FFF8FD1FFFF8FD27FFF8FFFFFD04F8FD21FFF8FD05FFA8A8
%527DFD04FFA852F8FD1EFFF8FD26FFF8F8F8FD27FFF8FD0DFFA852F8F8F8
%FD1BFFF8FD21FFFD04F8FD2AFFF8F8F8FD05FFA85252A8FD04FF7D27F8FD
%1BFFF8F8F8FD1DFFF8F8F8FF7DFD2FFFF8FD06FF7DA8A8FD06FFF8FD1AFF
%F8FD1FFFF8F8FFFFFF7DA8FD2EFFF8FD05FF7D5252A8FD06FFF8FD19FFF8
%FD1CFFF8F8FD07FF52A87DFD05FF7DFD27FFF8FD0FFFF8FD18FFF8FD1CFF
%F8F8FD08FF7D7DFF527DFF7D527D52A8FD25FFF8FFFFFF7D7D52FD09FFF8
%F8FD16FFF8FD1AFFF8FD0FFF5252FFFD0452FD25FFF8F8FFFFFF7D7D7DFD
%09FFF8FD16FFF8FD19FFF8F8F8FD0FFF7DFD2CFFF8FD04FFFD04A8FD05FF
%A8FFF8FD15FFF8F8FD46FFFD13F8FD05FFA87DA8A8FFFFFF7DA8A8F8FD14
%FFF8FD17FFF8F8F8FD22FFFD0DF8FD11FFF8FD05FFA87D7DFD05FF52FFF8
%F8F8FD11FFF8FD17FFF8F8FD1BFFFD09F8FD1DFFF8F8FD08FFA8FFFFFF7D
%7DA8F8FD12FFF8FD2FFFFD07F8FD26FFF8FD05FF527D52A8FD06FFF8FD11
%FFF8FD15FFF8F8F8FD14FFFD05F8FD2CFFF8FD08FFA8FD06FFF8FD10FFF8
%FD16FFF8FD11FFFD06F8A8A8FD2EFFF8FD0FFFF8FD0EFFF8F8F8FD25FFFD
%04F8FD05FF7DA8FD2EFFF8FD0FFFF8F8FD0CFFF8FD15FFF8F8FD0DFFFD05
%F8FD08FF7D7DA8FD2CFFF8F8FD0FFFF8FD0CFFF8FD15FFF8F8FD0AFFFD05
%F8FD0CFF527DFF7DFD0CFF7DFD05FF52FFFF52FD16FFF8FD0EFFA8F8FD0B
%FFF8FD1FFFFD04F8FD13FF527D27A8527D527D52A852A85227FF527D7D52
%7D52A87D7D7DA8527D527DA8FD0EFFF8FD0DFF7D7DF8FD0AFFF8FD13FFF8
%F8F8FD07FFFD04F8FD16FF7D5227FF7D7D5252FD057D52A852FF5252527D
%7D52527D7D52527D27FD0FFFF8FD0EFF7DF8F8F8FD07FFF8FD13FFF8F8FD
%06FFFD04F8FD35FF7DA8FD0DFFF8F8F8FD0DFF5252F8FD08FFF8FD19FFFD
%04F8FD49FFF8FD0FFFF8FD07FFF8FD12FFF8F8FFFFFFFD04F8FD4CFFF8FD
%0FFFF8FD06FFF8F8FD11FFF8F8FFF8F8F8FD50FFF8FD0FFFF8FD19FFFD04
%F8FD52FFF8FD0FFFF8F8FD14FFFD05F8FD54FFF8F8FD0FFFF8FD13FFFD04
%F8FD58FFF8FD0DFFA8FFF8FD10FFFD04F8FD5BFFF8FD0DFF7D7DF8FD0CFF
%FD06F8FD2DFFA8A8FD2EFFF8FD0DFF7DA8F8F8F8FD07FFFD04F8FFFFF8F8
%FD2EFF7DA8FD2DFFF8F8FD0DFF7D7DF8FD06FFF8F8F8FFFFFFF8F8FD31FF
%7D7DA8FD07FF7DFD25FFF8FD0FFFF8FD0CFFF8FD32FF527DFF5252527DA8
%527D5252527D52FF52A8FD1EFFF8FD0FFFF8FD0BFFF8FD36FF52FD067D52
%7DA8527DFF52FD1FFFF8FD0FFFF8F8FD06FFF8F8FD60FFFD07F8FD0FFFF8
%FD06FFFD64F8FD05FFF8FD0DFFA8FFF8FD6FFFF8FD0DFFA87DF8FD16FFF8
%FD15FFF8FD15FFF8FD16FFF8FD15FFF8FD0DFF527DF8FD06FFF8FFFFFFF8
%FFFFF8FFF8FFF8F8F8FFF8F8FD05FFF8FFFFFFF8FFFFF8FFF8FFF8FFFD04
%F8FD06FFF8FFFFFFF8FFF8FFFFF8F8FFFD04F8FD06FFF8FFFFFFF8FFFFF8
%FFF8FFF8F8FFF8F8F8FD06FFF8FFFFFFF8FFF8FFFFF8F8FFFD04F8FD0DFF
%A8A8FD71F8FD3FFF7DA8FD14FF7DA8FD14FFA8A8FD14FF7DA8FD3DFF7DFD
%14FFA8A8FD14FFA87DFD14FFA8A8FD0CFF52A8FD13FF7D7DA87DFD12FF7D
%7DFF7DA852A8FD0FFF7D7DFF7D7D52A8FD0FFFFD047DFF7D7DFD0FFF7D7D
%FF7D7D7DA8FD0CFFA8A8FD13FFA8A8527DFD12FF7DA8FF7D52FD11FFA8A8
%FF7D7DFD11FF7DA87D7DFD12FFA8A8FF7D7DFD0EFF527DFD13FF7D52A87D
%FD12FF7D52FF7DA8FD11FF7D52FF7DA8FD11FF7D52A87DFD12FF7D52FF7D
%A8FDFCFFFD37FF7DFFFF7DA8FD1BFF7DA8FFFF7DFF7DFFA8FD57FFA852A8
%52FFFD04A8FFA87DFFFFFFA8A87DFFA8A87DA8A8A87DFFA8FF7DFF52FF7D
%FFA87DA87DFF7DFD57FF7D7DA87DFFFD047DFF52A8A8FF527D52A8A87D52
%FD057DA8FFFF7DFF7DFF7D527DFF7DA8FF7DA8FD56FF527D7D52FF525252
%7DFF527D7DFF7D7D527DA852A852FF5252A87DFFFF7DFF7DA8527D7DFF52
%FFFFA8A8FD6DFF7DA87DA8FFFFFFA8FD09FFA8FDA5FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			dup length 1 sub
			1 exch
			getinterval
			
			cvn
			findfont
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
					findfont
					[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: NewCenturySchlbk-Italic
%%IncludeFont: NewCenturySchlbk-Roman
%%IncludeFont: Symbol
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _NewCenturySchlbk-Italic NewCenturySchlbk-Italic
[/_NewCenturySchlbk-Italic/NewCenturySchlbk-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _NewCenturySchlbk-Roman NewCenturySchlbk-Roman
[/_NewCenturySchlbk-Roman/NewCenturySchlbk-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding TrueType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 R
0 G
300 Ar
0 J 0 j 0.4 w 2.5 M []0 d
%AI3_Note:
0 D
0 XR
209.1485 324.6186 m
454.0211 324.6186 l
S
209.1485 324.6186 m
209.1485 328.1041 l
S
258.1263 324.6186 m
258.1263 328.1041 l
S
307.1041 324.6186 m
307.1041 328.1041 l
S
356.0655 324.6186 m
356.0655 328.1041 l
S
405.0433 324.6186 m
405.0433 328.1041 l
S
454.0211 324.6186 m
454.0211 328.1041 l
S
223.8961 324.6186 m
223.8961 326.3613 l
S
232.5112 324.6186 m
232.5112 326.3613 l
S
238.6437 324.6186 m
238.6437 326.3613 l
S
243.3787 324.6186 m
243.3787 326.3613 l
S
247.2588 324.6186 m
247.2588 326.3613 l
S
250.5306 324.6186 m
250.5306 326.3613 l
S
253.3749 324.6186 m
253.3749 326.3613 l
S
255.8904 324.6186 m
255.8904 326.3613 l
S
272.8739 324.6186 m
272.8739 326.3613 l
S
281.489 324.6186 m
281.489 326.3613 l
S
287.6051 324.6186 m
287.6051 326.3613 l
S
292.3565 324.6186 m
292.3565 326.3613 l
S
296.2366 324.6186 m
296.2366 326.3613 l
S
299.5084 324.6186 m
299.5084 326.3613 l
S
302.3527 324.6186 m
302.3527 326.3613 l
S
304.8517 324.6186 m
304.8517 326.3613 l
S
321.8353 324.6186 m
321.8353 326.3613 l
S
330.4668 324.6186 m
330.4668 326.3613 l
S
336.5829 324.6186 m
336.5829 326.3613 l
S
341.3343 324.6186 m
341.3343 326.3613 l
S
345.2144 324.6186 m
345.2144 326.3613 l
S
348.4862 324.6186 m
348.4862 326.3613 l
S
351.3305 324.6186 m
351.3305 326.3613 l
S
353.8295 324.6186 m
353.8295 326.3613 l
S
370.8131 324.6186 m
370.8131 326.3613 l
S
379.4446 324.6186 m
379.4446 326.3613 l
S
385.5607 324.6186 m
385.5607 326.3613 l
S
390.3121 324.6186 m
390.3121 326.3613 l
S
394.1758 324.6186 m
394.1758 326.3613 l
S
397.464 324.6186 m
397.464 326.3613 l
S
400.3083 324.6186 m
400.3083 326.3613 l
S
402.8073 324.6186 m
402.8073 326.3613 l
S
419.7909 324.6186 m
419.7909 326.3613 l
S
428.4224 324.6186 m
428.4224 326.3613 l
S
434.5385 324.6186 m
434.5385 326.3613 l
S
439.2735 324.6186 m
439.2735 326.3613 l
S
443.1536 324.6186 m
443.1536 326.3613 l
S
446.4418 324.6186 m
446.4418 326.3613 l
S
449.2696 324.6186 m
449.2696 326.3613 l
S
451.7851 324.6186 m
451.7851 326.3613 l
S
209.1485 498.6961 m
454.0211 498.6961 l
S
209.1485 498.6961 m
209.1485 495.2106 l
S
258.1263 498.6961 m
258.1263 495.2106 l
S
307.1041 498.6961 m
307.1041 495.2106 l
S
356.0655 498.6961 m
356.0655 495.2106 l
S
405.0433 498.6961 m
405.0433 495.2106 l
S
454.0211 498.6961 m
454.0211 495.2106 l
S
223.8961 498.6961 m
223.8961 496.9534 l
S
232.5112 498.6961 m
232.5112 496.9534 l
S
238.6437 498.6961 m
238.6437 496.9534 l
S
243.3787 498.6961 m
243.3787 496.9534 l
S
247.2588 498.6961 m
247.2588 496.9534 l
S
250.5306 498.6961 m
250.5306 496.9534 l
S
253.3749 498.6961 m
253.3749 496.9534 l
S
255.8904 498.6961 m
255.8904 496.9534 l
S
272.8739 498.6961 m
272.8739 496.9534 l
S
281.489 498.6961 m
281.489 496.9534 l
S
287.6051 498.6961 m
287.6051 496.9534 l
S
292.3565 498.6961 m
292.3565 496.9534 l
S
296.2366 498.6961 m
296.2366 496.9534 l
S
299.5084 498.6961 m
299.5084 496.9534 l
S
302.3527 498.6961 m
302.3527 496.9534 l
S
304.8517 498.6961 m
304.8517 496.9534 l
S
321.8353 498.6961 m
321.8353 496.9534 l
S
330.4668 498.6961 m
330.4668 496.9534 l
S
336.5829 498.6961 m
336.5829 496.9534 l
S
341.3343 498.6961 m
341.3343 496.9534 l
S
345.2144 498.6961 m
345.2144 496.9534 l
S
348.4862 498.6961 m
348.4862 496.9534 l
S
351.3305 498.6961 m
351.3305 496.9534 l
S
353.8295 498.6961 m
353.8295 496.9534 l
S
370.8131 498.6961 m
370.8131 496.9534 l
S
379.4446 498.6961 m
379.4446 496.9534 l
S
385.5607 498.6961 m
385.5607 496.9534 l
S
390.3121 498.6961 m
390.3121 496.9534 l
S
394.1758 498.6961 m
394.1758 496.9534 l
S
397.464 498.6961 m
397.464 496.9534 l
S
400.3083 498.6961 m
400.3083 496.9534 l
S
402.8073 498.6961 m
402.8073 496.9534 l
S
419.7909 498.6961 m
419.7909 496.9534 l
S
428.4224 498.6961 m
428.4224 496.9534 l
S
434.5385 498.6961 m
434.5385 496.9534 l
S
439.2735 498.6961 m
439.2735 496.9534 l
S
443.1536 498.6961 m
443.1536 496.9534 l
S
446.4418 498.6961 m
446.4418 496.9534 l
S
449.2696 498.6961 m
449.2696 496.9534 l
S
451.7851 498.6961 m
451.7851 496.9534 l
S
209.1485 324.6186 m
209.1485 498.6961 l
S
209.1485 324.6186 m
214.048 324.6186 l
S
209.1485 363.3043 m
214.048 363.3043 l
S
209.1485 401.99 m
214.048 401.99 l
S
209.1485 440.6757 m
214.048 440.6757 l
S
209.1485 479.3615 m
214.048 479.3615 l
S
209.1485 334.2859 m
211.5982 334.2859 l
S
209.1485 353.637 m
211.5982 353.637 l
S
209.1485 372.9716 m
211.5982 372.9716 l
S
209.1485 392.3227 m
211.5982 392.3227 l
S
209.1485 411.6573 m
211.5982 411.6573 l
S
209.1485 431.0084 m
211.5982 431.0084 l
S
209.1485 450.3431 m
211.5982 450.3431 l
S
209.1485 469.6777 m
211.5982 469.6777 l
S
209.1485 489.0288 m
211.5982 489.0288 l
S
209.1485 498.6961 m
211.5982 498.6961 l
S
454.0211 324.6186 m
454.0211 498.6961 l
S
454.0211 324.6186 m
449.1217 324.6186 l
S
454.0211 363.3043 m
449.1217 363.3043 l
S
454.0211 401.99 m
449.1217 401.99 l
S
454.0211 440.6757 m
449.1217 440.6757 l
S
454.0211 479.3615 m
449.1217 479.3615 l
S
454.0211 334.2859 m
451.5714 334.2859 l
S
454.0211 343.9697 m
451.5714 343.9697 l
S
454.0211 353.637 m
451.5714 353.637 l
S
454.0211 372.9716 m
451.5714 372.9716 l
S
454.0211 382.6389 m
451.5714 382.6389 l
S
454.0211 392.3227 m
451.5714 392.3227 l
S
454.0211 411.6573 m
451.5714 411.6573 l
S
454.0211 421.3247 m
451.5714 421.3247 l
S
454.0211 431.0084 m
451.5714 431.0084 l
S
454.0211 450.3431 m
451.5714 450.3431 l
S
454.0211 460.0104 m
451.5714 460.0104 l
S
454.0211 469.6777 m
451.5714 469.6777 l
S
454.0211 489.0288 m
451.5714 489.0288 l
S
454.0211 498.6961 m
451.5714 498.6961 l
S
U
0.5 w
223.8961 356.2182 m
243.3787 374.0074 l
258.1263 387.5055 l
272.8739 401.1844 l
292.3565 420.6012 l
307.1041 434.1322 l
321.8353 446.6109 l
341.3343 459.3856 l
356.0655 466.8334 l
370.8131 472.6042 l
390.3121 477.931 l
405.0433 480.7261 l
419.7909 482.7319 l
439.2735 484.6719 l
454.0211 485.7734 l
S
[6 2 1.5 2 ]0 d
223.8961 340.6979 m
243.3787 346.5838 l
258.1263 351.3517 l
272.8739 356.2676 l
292.3565 362.7618 l
307.1041 367.431 l
321.8353 371.7714 l
341.3343 376.7695 l
356.0655 379.8604 l
370.8131 382.3265 l
390.3121 384.6776 l
405.0433 385.8778 l
419.7909 386.6999 l
439.2735 387.374 l
454.0211 387.6863 l
S
[1.5 2 ]0 d
223.8961 332.576 m
243.3787 333.1186 l
258.1263 332.9213 l
272.8739 332.5925 l
292.3565 332.2308 l
307.1041 332.0499 l
321.8353 331.9677 l
341.3343 331.9677 l
356.0655 332.0828 l
370.8131 332.2801 l
390.3121 332.6254 l
405.0433 332.9706 l
419.7909 333.3652 l
439.2735 334.0064 l
454.0211 334.549 l
S
[6 ]0 d
223.8961 332.1815 m
243.3787 343.5587 l
258.1263 352.4697 l
272.8739 361.5616 l
292.3565 374.8459 l
307.1041 383.8885 l
321.8353 392.109 l
341.3343 399.8856 l
356.0655 404.1274 l
370.8131 407.2347 l
390.3121 409.8817 l
405.0433 411.1148 l
419.7909 411.904 l
439.2735 412.5287 l
454.0211 412.7753 l
S
u
1 w 4 M []0 d
227.546 455.1439 m
224.077 448.7976 l
N
228.6969 454.3711 m
228.6969 450.3431 l
N
228.6969 452.2667 m
229.2723 452.8421 l
229.6505 453.0394 l
230.2259 453.0394 l
230.6205 452.8421 l
230.8014 452.2667 l
230.8014 450.3431 l
N
233.1195 453.0394 m
232.725 452.8421 l
232.3468 452.4475 l
232.1495 451.8721 l
232.1495 451.4939 l
232.3468 450.9185 l
232.725 450.5404 l
233.1195 450.343 l
233.695 450.343 l
234.0731 450.5404 l
234.4513 450.9185 l
234.6486 451.4939 l
234.6486 451.8721 l
234.4513 452.4475 l
234.0731 452.8421 l
233.695 453.0394 l
233.1195 453.0394 l
N
235.9967 453.0394 m
235.9967 450.3431 l
N
235.9967 452.2667 m
236.5722 452.8421 l
236.9503 453.0394 l
237.5257 453.0394 l
237.9203 452.8421 l
238.1012 452.2667 l
238.1012 450.3431 l
N
238.1012 452.2667 m
238.6766 452.8421 l
239.0712 453.0394 l
239.6466 453.0394 l
240.0248 452.8421 l
240.2221 452.2667 l
240.2221 450.3431 l
N
241.5702 451.8721 m
243.872 451.8721 l
243.872 452.2667 l
243.6747 452.6448 l
243.4938 452.8421 l
243.0993 453.0394 l
242.5238 453.0394 l
242.1457 452.8421 l
241.7511 452.4475 l
241.5702 451.8721 l
241.5702 451.4939 l
241.7511 450.9185 l
242.1457 450.5404 l
242.5238 450.343 l
243.0993 450.343 l
243.4938 450.5404 l
243.872 450.9185 l
N
248.2946 455.1439 m
244.8256 448.7976 l
N
251.3691 452.4475 m
251.1718 452.8421 l
250.5964 453.0394 l
250.0209 453.0394 l
249.4455 452.8421 l
249.2482 452.4475 l
249.4455 452.0694 l
249.8236 451.8721 l
250.7937 451.6912 l
251.1718 451.4939 l
251.3691 451.1158 l
251.3691 450.9185 l
251.1718 450.5404 l
250.5964 450.343 l
250.0209 450.343 l
249.4455 450.5404 l
249.2482 450.9185 l
N
252.52 454.3711 m
252.7008 454.1903 l
252.8981 454.3711 l
252.7008 454.5684 l
252.52 454.3711 l
N
252.7008 453.0394 m
252.7008 450.3431 l
N
254.049 451.8721 m
256.3507 451.8721 l
256.3507 452.2667 l
256.1699 452.6448 l
255.9726 452.8421 l
255.5944 453.0394 l
255.019 453.0394 l
254.6244 452.8421 l
254.2463 452.4475 l
254.049 451.8721 l
254.049 451.4939 l
254.2463 450.9185 l
254.6244 450.5404 l
255.019 450.343 l
255.5944 450.343 l
255.9726 450.5404 l
256.3507 450.9185 l
N
257.6989 453.0394 m
257.6989 450.3431 l
N
257.6989 451.8721 m
257.8962 452.4475 l
258.2743 452.8421 l
258.6689 453.0394 l
259.2443 453.0394 l
N
260.1979 453.0394 m
260.1979 450.3431 l
N
260.1979 451.8721 m
260.3952 452.4475 l
260.7733 452.8421 l
261.1679 453.0394 l
261.7434 453.0394 l
N
264.8178 453.0394 m
264.8178 450.3431 l
N
264.8178 452.4475 m
264.4233 452.8421 l
264.0451 453.0394 l
263.4697 453.0394 l
263.0751 452.8421 l
262.6969 452.4475 l
262.4996 451.8721 l
262.4996 451.4939 l
262.6969 450.9185 l
263.0751 450.5404 l
263.4697 450.343 l
264.0451 450.343 l
264.4233 450.5404 l
264.8178 450.9185 l
N
266.725 453.6148 m
267.1196 453.7957 l
267.695 454.3711 l
267.695 450.3431 l
N
273.2685 455.1439 m
269.7995 448.7976 l
N
276.5238 454.3711 m
276.5238 450.3431 l
N
276.5238 452.4475 m
276.1457 452.8421 l
275.7676 453.0394 l
275.1757 453.0394 l
274.7975 452.8421 l
274.4194 452.4475 l
274.2221 451.8721 l
274.2221 451.4939 l
274.4194 450.9185 l
274.7975 450.5404 l
275.1757 450.343 l
275.7676 450.343 l
276.1457 450.5404 l
276.5238 450.9185 l
N
277.872 451.8721 m
280.1737 451.8721 l
280.1737 452.2667 l
279.9929 452.6448 l
279.7956 452.8421 l
279.4175 453.0394 l
278.8256 453.0394 l
278.4474 452.8421 l
278.0693 452.4475 l
277.872 451.8721 l
277.872 451.4939 l
278.0693 450.9185 l
278.4474 450.5404 l
278.8256 450.343 l
279.4175 450.343 l
279.7956 450.5404 l
280.1737 450.9185 l
N
283.6428 453.0394 m
283.6428 449.7676 l
283.4455 449.1922 l
283.2482 448.9949 l
282.8701 448.7976 l
282.2946 448.7976 l
281.9001 448.9949 l
N
283.6428 452.4475 m
283.2482 452.8421 l
282.8701 453.0394 l
282.2946 453.0394 l
281.9001 452.8421 l
281.5219 452.4475 l
281.3246 451.8721 l
281.3246 451.4939 l
281.5219 450.9185 l
281.9001 450.5404 l
282.2946 450.343 l
282.8701 450.343 l
283.2482 450.5404 l
283.6428 450.9185 l
N
288.2463 455.1439 m
284.7937 448.7976 l
N
291.518 454.3711 m
291.518 450.3431 l
N
291.518 452.4475 m
291.1235 452.8421 l
290.7453 453.0394 l
290.1699 453.0394 l
289.7753 452.8421 l
289.3972 452.4475 l
289.1999 451.8721 l
289.1999 451.4939 l
289.3972 450.9185 l
289.7753 450.5404 l
290.1699 450.343 l
290.7453 450.343 l
291.1235 450.5404 l
291.518 450.9185 l
N
292.8498 451.8721 m
295.1679 451.8721 l
295.1679 452.2667 l
294.9707 452.6448 l
294.7733 452.8421 l
294.3952 453.0394 l
293.8198 453.0394 l
293.4252 452.8421 l
293.047 452.4475 l
292.8497 451.8721 l
292.8497 451.4939 l
293.047 450.9185 l
293.4252 450.5404 l
293.8198 450.343 l
294.3952 450.343 l
294.7733 450.5404 l
295.1679 450.9185 l
N
298.6206 454.3711 m
298.6206 450.3431 l
N
298.6206 452.4475 m
298.2424 452.8421 l
297.8479 453.0394 l
297.2724 453.0394 l
296.8943 452.8421 l
296.4997 452.4475 l
296.3188 451.8721 l
296.3188 451.4939 l
296.4997 450.9185 l
296.8943 450.5404 l
297.2724 450.343 l
297.8479 450.343 l
298.2424 450.5404 l
298.6206 450.9185 l
N
299.9687 453.0394 m
302.0732 450.3431 l
N
302.0732 453.0394 m
299.9687 450.3431 l
N
306.4958 455.1439 m
303.0432 448.7976 l
N
307.6467 453.0394 m
307.6467 450.3431 l
N
307.6467 451.8721 m
307.844 452.4475 l
308.2221 452.8421 l
308.6167 453.0394 l
309.1921 453.0394 l
N
310.1457 453.0394 m
310.1457 448.7976 l
N
310.1457 452.4475 m
310.5239 452.8421 l
310.9184 453.0394 l
311.4939 453.0394 l
311.872 452.8421 l
312.2666 452.4475 l
312.4475 451.8721 l
312.4475 451.4939 l
312.2666 450.9185 l
311.872 450.5404 l
311.4939 450.343 l
310.9184 450.343 l
310.5239 450.5404 l
310.1457 450.9185 l
N
313.7957 453.0394 m
313.7957 448.7976 l
N
313.7957 452.4475 m
314.1738 452.8421 l
314.5684 453.0394 l
315.1438 453.0394 l
315.522 452.8421 l
315.9165 452.4475 l
316.0974 451.8721 l
316.0974 451.4939 l
315.9165 450.9185 l
315.522 450.5404 l
315.1438 450.343 l
314.5684 450.343 l
314.1738 450.5404 l
313.7957 450.9185 l
N
316.8701 450.3431 m
320.3227 450.3431 l
N
320.8982 453.0394 m
320.8982 450.3431 l
N
320.8982 452.2667 m
321.4736 452.8421 l
321.8682 453.0394 l
322.4436 453.0394 l
322.8218 452.8421 l
323.0191 452.2667 l
323.0191 450.3431 l
N
323.019 452.2667 m
323.5945 452.8421 l
323.9726 453.0394 l
324.5481 453.0394 l
324.9426 452.8421 l
325.1235 452.2667 l
325.1235 450.3431 l
N
326.669 453.0394 m
326.669 451.1158 l
326.8663 450.5404 l
327.2444 450.343 l
327.8198 450.343 l
328.198 450.5404 l
328.7734 451.1158 l
N
328.7734 453.0394 m
328.7734 450.3431 l
N
330.3189 454.3711 m
330.3189 450.3431 l
N
330.3189 452.4475 m
330.697 452.8421 l
331.0916 453.0394 l
331.667 453.0394 l
332.0452 452.8421 l
332.4233 452.4475 l
332.6206 451.8721 l
332.6206 451.4939 l
332.4233 450.9185 l
332.0452 450.5404 l
331.667 450.343 l
331.0916 450.343 l
330.697 450.5404 l
330.3189 450.9185 l
N
333.3933 450.3431 m
336.846 450.3431 l
N
337.4214 453.4175 m
337.4214 453.6148 l
337.6187 453.993 l
337.816 454.1903 l
338.1941 454.3711 l
338.9668 454.3711 l
339.345 454.1903 l
339.5423 453.993 l
339.7231 453.6148 l
339.7231 453.2203 l
339.5423 452.8421 l
339.1477 452.2667 l
337.2241 450.3431 l
339.9204 450.3431 l
N
343.5703 453.7957 m
343.373 454.1903 l
342.7976 454.3711 l
342.4194 454.3711 l
341.844 454.1903 l
341.4658 453.6148 l
341.2686 452.6448 l
341.2686 451.6912 l
341.4658 450.9185 l
341.844 450.5404 l
342.4194 450.343 l
342.6167 450.343 l
343.1922 450.5404 l
343.5703 450.9185 l
343.7676 451.4939 l
343.7676 451.6912 l
343.5703 452.2667 l
343.1922 452.6448 l
342.6167 452.8421 l
342.4194 452.8421 l
341.844 452.6448 l
341.4658 452.2667 l
341.2686 451.6912 l
N
345.2966 450.7212 m
345.1158 450.5404 l
345.2966 450.3431 l
345.4939 450.5404 l
345.2966 450.7212 l
N
347.0229 453.0394 m
347.0229 448.7976 l
N
347.0229 452.4475 m
347.4175 452.8421 l
347.7957 453.0394 l
348.3711 453.0394 l
348.7657 452.8421 l
349.1438 452.4475 l
349.3411 451.8721 l
349.3411 451.4939 l
349.1438 450.9185 l
348.7657 450.5404 l
348.3711 450.343 l
347.7957 450.343 l
347.4175 450.5404 l
347.0229 450.9185 l
N
350.6728 453.0394 m
350.6728 450.3431 l
N
350.6728 451.8721 m
350.8701 452.4475 l
351.2483 452.8421 l
351.6428 453.0394 l
352.2183 453.0394 l
N
353.9446 453.0394 m
353.5664 452.8421 l
353.1719 452.4475 l
352.991 451.8721 l
352.991 451.4939 l
353.1719 450.9185 l
353.5664 450.5404 l
353.9446 450.343 l
354.52 450.343 l
354.8982 450.5404 l
355.2928 450.9185 l
355.4736 451.4939 l
355.4736 451.8721 l
355.2928 452.4475 l
354.8982 452.8421 l
354.52 453.0394 l
353.9446 453.0394 l
N
224.077 444.7038 m
225.047 440.6757 l
226.0006 444.7038 l
226.9706 440.6757 l
227.9242 444.7038 l
N
228.8942 442.2048 m
231.1959 442.2048 l
231.1959 442.5993 l
230.9987 442.9775 l
230.8014 443.1748 l
230.4232 443.3556 l
229.8478 443.3556 l
229.4696 443.1748 l
229.0751 442.7802 l
228.8942 442.2048 l
228.8942 441.8266 l
229.0751 441.2512 l
229.4696 440.8566 l
229.8478 440.6757 l
230.4232 440.6757 l
230.8014 440.8566 l
231.1959 441.2512 l
N
234.6486 444.7038 m
234.6486 440.6757 l
N
234.6486 442.7802 m
234.2704 443.1748 l
233.8758 443.3556 l
233.3004 443.3556 l
232.9223 443.1748 l
232.5441 442.7802 l
232.3468 442.2048 l
232.3468 441.8266 l
232.5441 441.2512 l
232.9223 440.8566 l
233.3004 440.6757 l
233.8758 440.6757 l
234.2704 440.8566 l
234.6486 441.2512 l
N
240.2221 444.7038 m
238.6766 440.6757 l
N
240.2221 444.7038 m
241.7511 440.6757 l
N
239.2685 442.0239 m
241.1756 442.0239 l
N
242.7211 443.3556 m
242.7211 439.1303 l
N
242.7211 442.7802 m
243.0993 443.1748 l
243.4938 443.3556 l
244.0693 443.3556 l
244.4474 443.1748 l
244.8256 442.7802 l
245.0228 442.2048 l
245.0228 441.8266 l
244.8256 441.2512 l
244.4474 440.8566 l
244.0693 440.6757 l
243.4938 440.6757 l
243.0993 440.8566 l
242.7211 441.2512 l
N
246.371 443.3556 m
246.371 440.6757 l
N
246.371 442.2048 m
246.5683 442.7802 l
246.9464 443.1748 l
247.3246 443.3556 l
247.9 443.3556 l
N
255.1998 444.7038 m
257.3207 444.7038 l
256.1699 443.1748 l
256.7453 443.1748 l
257.1234 442.9775 l
257.3207 442.7802 l
257.518 442.2048 l
257.518 441.8266 l
257.3207 441.2512 l
256.9262 440.8566 l
256.3507 440.6757 l
255.7753 440.6757 l
255.1999 440.8566 l
255.019 441.0539 l
254.8217 441.432 l
N
262.8942 444.7038 m
262.3188 444.5065 l
261.9242 443.9311 l
261.7434 442.9775 l
261.7434 442.402 l
261.9242 441.432 l
262.3188 440.8566 l
262.8942 440.6757 l
263.2724 440.6757 l
263.8478 440.8566 l
264.226 441.432 l
264.4233 442.402 l
264.4233 442.9775 l
264.226 443.9311 l
263.8478 444.5065 l
263.2724 444.7038 l
262.8942 444.7038 l
N
268.0731 443.3556 m
267.8759 442.7802 l
267.4977 442.4021 l
266.9223 442.2048 l
266.725 442.2048 l
266.1496 442.4021 l
265.7714 442.7802 l
265.5741 443.3556 l
265.5741 443.5529 l
265.7714 444.1284 l
266.1496 444.5065 l
266.725 444.7038 l
266.9223 444.7038 l
267.4977 444.5065 l
267.8759 444.1284 l
268.0731 443.3557 l
268.0731 442.4021 l
267.8759 441.432 l
267.4977 440.8566 l
266.9223 440.6757 l
266.5442 440.6757 l
265.9687 440.8566 l
265.7714 441.2512 l
N
269.7995 443.3556 m
269.6186 443.1748 l
269.7995 442.9775 l
269.9968 443.1748 l
269.7995 443.3556 l
N
269.7995 441.0539 m
269.6186 440.8566 l
269.7995 440.6757 l
269.9968 440.8566 l
269.7995 441.0539 l
N
271.9204 443.9311 m
272.2985 444.1284 l
272.8739 444.7038 l
272.8739 440.6758 l
N
277.4939 444.7038 m
275.5702 444.7038 l
275.373 442.9775 l
275.5702 443.1748 l
276.1457 443.3556 l
276.7211 443.3556 l
277.2966 443.1748 l
277.6747 442.7802 l
277.872 442.2048 l
277.872 441.8266 l
277.6747 441.2512 l
277.2966 440.8566 l
276.7211 440.6757 l
276.1457 440.6757 l
275.5702 440.8566 l
275.373 441.0539 l
275.1757 441.432 l
N
279.4175 443.3556 m
279.2202 443.1748 l
279.4175 442.9775 l
279.5983 443.1748 l
279.4175 443.3556 l
N
279.4175 441.0539 m
279.2202 440.8566 l
279.4175 440.6757 l
279.5983 440.8566 l
279.4175 441.0539 l
N
282.8701 444.7038 m
280.9465 442.0239 l
283.8236 442.0239 l
N
282.8701 444.7038 m
282.8701 440.6757 l
N
287.0954 444.7038 m
285.1718 444.7038 l
284.9745 442.9775 l
285.1718 443.1748 l
285.7472 443.3556 l
286.3227 443.3556 l
286.8981 443.1748 l
287.2927 442.7802 l
287.4736 442.2048 l
287.4736 441.8266 l
287.2927 441.2512 l
286.8981 440.8566 l
286.3227 440.6757 l
285.7472 440.6757 l
285.1718 440.8566 l
284.9745 441.0539 l
284.7937 441.432 l
N
291.8962 443.7502 m
291.8962 443.9311 l
292.0935 444.3256 l
292.2743 444.5065 l
292.6689 444.7038 l
293.4252 444.7038 l
293.8198 444.5065 l
294.0171 444.3256 l
294.1979 443.9311 l
294.1979 443.5529 l
294.0171 443.1748 l
293.6225 442.5993 l
291.6989 440.6757 l
294.3952 440.6757 l
N
296.697 444.7038 m
296.1215 444.5065 l
295.7434 443.9311 l
295.5461 442.9775 l
295.5461 442.402 l
295.7434 441.432 l
296.1215 440.8566 l
296.697 440.6757 l
297.0751 440.6757 l
297.667 440.8566 l
298.0451 441.432 l
298.2424 442.402 l
298.2424 442.9775 l
298.0451 443.9311 l
297.667 444.5065 l
297.0751 444.7038 l
296.697 444.7038 l
N
300.5442 444.7038 m
299.9687 444.5065 l
299.5742 443.9311 l
299.3933 442.9775 l
299.3933 442.402 l
299.5742 441.432 l
299.9687 440.8566 l
300.5442 440.6757 l
300.9223 440.6757 l
301.4978 440.8566 l
301.8923 441.432 l
302.0732 442.402 l
302.0732 442.9775 l
301.8923 443.9311 l
301.4978 444.5065 l
300.9223 444.7038 l
300.5442 444.7038 l
N
303.4214 443.7502 m
303.4214 443.9311 l
303.6186 444.3256 l
303.7995 444.5065 l
304.1941 444.7038 l
304.9668 444.7038 l
305.345 444.5065 l
305.5422 444.3256 l
305.7231 443.9311 l
305.7231 443.5529 l
305.5422 443.1748 l
305.1477 442.5993 l
303.224 440.6757 l
305.9204 440.6757 l
N
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 0 0 1 0 0 1 255 79 79 Lb
(Layer 2) Ln
0 A
q
300 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
181.6495 296.4696 m
181.6495 504.2703 l
460.9704 504.2703 l
460.9704 296.4696 l
181.6495 296.4696 l
h
W
n
0 To
1 0 0 1 332.6532 299.7403 0 Tp
0 Tv
TP
-45.0849 0 Td
0 Tr
0 O
0 g
800 Ar
%_ 0 50 XQ
/_NewCenturySchlbk-Roman 10.0001 9.8001 -2.15 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
0 Tg
9.9729 0 Tl
0 Tc
0 Tw
(Muon energy \(GeV\)) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 206.3333 322.0667 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
2 Ta
9.84 0 Tl
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 340.9067 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 359.7467 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 379.8267 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 398.6667 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 417.5067 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 439.3467 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(6) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 457.1867 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(7) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 476.0267 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
9.8388 0 Tl
(8) Tx 
(\r) TX 
TO
0 To
1 0 0 1 206.3333 495.6933 0 Tp
0 Tv
TP
-5.56 0 Td
0 Tr
(9) Tx 
(\r) TX 
TO
U
0 To
0 1 -1 0 192.3333 420.3267 0 Tp
0 Tv
TP
-44.1355 0 Td
0 Tr
/_NewCenturySchlbk-Roman 10.0005 9.8004 -2.1501 Tf
1 Ta
8.3337 0 Tl
(10) Tx 
/_NewCenturySchlbk-Roman 9.1671 8.9837 -1.9709 Tf
3.3335 Ts
(6 ) Tx 
/_NewCenturySchlbk-Italic 10.0005 9.6805 -2.2702 Tf
0 Ts
(b) Tx 
/_NewCenturySchlbk-Roman 10.0005 9.8004 -2.1501 Tf
(\() Tx 
/_NewCenturySchlbk-Italic 10.0005 9.6805 -2.2702 Tf
50 Tt
0.5001 Tc
(E) Tx 
/_NewCenturySchlbk-Roman 10.0005 9.8004 -2.1501 Tf
0 Tt
0 Tc
(\) ) Tx 
/_Symbol 10.0005 10.0005 -2.9301 Tf
( ) Tx 
/_NewCenturySchlbk-Roman 10.0005 9.8004 -2.1501 Tf
( \(g) Tx 
/_Symbol 9.1671 9.1671 -2.686 Tf
3.3335 Ts
8.3338 0 Tl
(-) Tx 
/_NewCenturySchlbk-Roman 9.1671 8.9837 -1.9709 Tf
100 Tt
0.9168 Tc
(1) Tx 
/_NewCenturySchlbk-Roman 10.0005 9.8004 -2.1501 Tf
0 Ts
0 Tt
8.3337 0 Tl
0 Tc
(cm) Tx 
/_NewCenturySchlbk-Roman 9.1671 8.9837 -1.9709 Tf
3.3335 Ts
(2) Tx 
/_NewCenturySchlbk-Roman 10.0005 9.8004 -2.1501 Tf
0 Ts
(\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 236.3333 470.9934 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
0 Ta
10 0 Tl
(Iron) Tx 
(\r) TX 
TO
0 To
1 0 0 1 346.9206 452.7073 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Italic 10.0001 9.6801 -2.2701 Tf
9.091 0 Tl
(b) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
-2.7273 Ts
(total) Tx 
(\r) TX 
TO
0 To
1 0 0 1 347.1666 392.9933 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Ts
10 0 Tl
(b) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
-3 Ts
(pair) Tx 
(\r) TX 
TO
0 To
1 0 0 1 347.1666 368.4933 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Ts
(b) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
-3 Ts
(bremsstrahlung) Tx 
(\r) TX 
TO
0 To
1 0 0 1 347.1666 338.3267 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Ts
(b) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
-3 Ts
(nuclear) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 300.6135 312.5763 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Roman 10.0001 9.8001 -2.15 Tf
0 Ts
10.0001 0 Tl
(10) Tx 
/_NewCenturySchlbk-Roman 8.1819 8.0182 -1.7591 Tf
3.6364 Ts
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 251.3861 312.4836 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Roman 10.0001 9.8001 -2.15 Tf
0 Ts
(10) Tx 
(\r) TX 
TO
0 To
1 0 0 1 205.1666 312.1011 0 Tp
0 Tv
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 348.1135 312.5763 0 Tp
0 Tv
TP
0 Tr
(10) Tx 
/_NewCenturySchlbk-Roman 8.1819 8.0182 -1.7591 Tf
3.6364 Ts
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 395.8303 312.1011 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Roman 10.0001 9.8001 -2.15 Tf
0 Ts
(10) Tx 
/_NewCenturySchlbk-Roman 8.1819 8.0182 -1.7591 Tf
3.6364 Ts
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 444.3303 312.1011 0 Tp
0 Tv
TP
0 Tr
/_NewCenturySchlbk-Roman 10.0001 9.8001 -2.15 Tf
0 Ts
(10) Tx 
/_NewCenturySchlbk-Roman 8.1819 8.0182 -1.7591 Tf
3.6364 Ts
(5) Tx 
(\r) TX 
TO
U
Q
0 A
0 R
0 G
300 Ar
0 J 0 j 0.4 w 2.5 M []0 d
%AI3_Note:
0 D
0 XR
209.1485 343.8668 m
214.048 343.8668 l
S
209.1485 382.5525 m
214.048 382.5525 l
S
209.1485 421.2382 m
214.048 421.2382 l
S
209.1485 459.924 m
214.048 459.924 l
S
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
