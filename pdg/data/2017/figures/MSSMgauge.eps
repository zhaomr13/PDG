%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gnuplot 4.6 patchlevel 4
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 172 68 651 522
%%HiResBoundingBox: 172.800135 68.544068 650.087910 521.081914
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F9_0 /Symbol 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/alpha/beta/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
270 rotate
-595 0 translate
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
10 w
3.8 M
/DeviceRGB {} CS
[0 0 0] SC
4532 2744 m
4532 2807 l
4532 6055 m
4532 5992 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 461.2 239.984] Tm
0 0 Td
/F8_0 24 Tf
( 0) 20.016 Tj
Q
3980 2744 m
3980 2807 l
3980 6055 m
3980 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 406 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 10) 33.36 Tj
Q
3428 2744 m
3428 2807 l
3428 6055 m
3428 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 350.8 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 20) 33.36 Tj
Q
2876 2744 m
2876 2807 l
2876 6055 m
2876 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 295.6 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 30) 33.36 Tj
Q
2325 2744 m
2325 2807 l
2325 6055 m
2325 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 240.5 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 40) 33.36 Tj
Q
1773 2744 m
1773 2807 l
1773 6055 m
1773 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 185.3 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 50) 33.36 Tj
Q
1221 2744 m
1221 2807 l
1221 6055 m
1221 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 130.1 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 60) 33.36 Tj
Q
4532 2744 m
4469 2744 l
1221 2744 m
1284 2744 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 264.392] Tm
0 0 Td
/F8_0 24 Tf
( 0) 20.016 Tj
Q
4532 2928 m
4501 2928 l
1221 2928 m
1252 2928 l
4532 3112 m
4501 3112 l
1221 3112 m
1252 3112 l
4532 3296 m
4501 3296 l
1221 3296 m
1252 3296 l
4532 3480 m
4501 3480 l
1221 3480 m
1252 3480 l
4532 3664 m
4469 3664 l
1221 3664 m
1284 3664 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 356.392] Tm
0 0 Td
/F8_0 24 Tf
( 5) 20.016 Tj
Q
4532 3848 m
4501 3848 l
1221 3848 m
1252 3848 l
4532 4032 m
4501 4032 l
1221 4032 m
1252 4032 l
4532 4216 m
4501 4216 l
1221 4216 m
1252 4216 l
4532 4400 m
4501 4400 l
1221 4400 m
1252 4400 l
4532 4583 m
4469 4583 l
1221 4583 m
1284 4583 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 441.62] Tm
0 0 Td
/F8_0 24 Tf
( 10) 33.36 Tj
Q
4532 4767 m
4501 4767 l
1221 4767 m
1252 4767 l
4532 4951 m
4501 4951 l
1221 4951 m
1252 4951 l
4532 5135 m
4501 5135 l
1221 5135 m
1252 5135 l
4532 5319 m
4501 5319 l
1221 5319 m
1252 5319 l
4532 5503 m
4469 5503 l
1221 5503 m
1284 5503 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 533.62] Tm
0 0 Td
/F8_0 24 Tf
( 15) 33.36 Tj
Q
4532 5687 m
4501 5687 l
1221 5687 m
1252 5687 l
4532 5871 m
4501 5871 l
1221 5871 m
1252 5871 l
4532 6055 m
4501 6055 l
1221 6055 m
1252 6055 l
S
1221 2744 3311 3311 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[-1 0 0 -1 321.134 198.4] Tm
0 0 Td
/F9_0 24 Tf
(a) 15.144 Tj
15.1441 -7.2 Td
/F8_0 19.2 Tf
(i) 4.2624 Tj
15.1441 12 Td
(-1) 17.0688 Tj
32.2129 0 Td
/F8_0 24 Tf
(\(Q\)) 34.656 Tj
[0 1 -1 0 518.8 368.542] Tm
0 0 Td
/F8_0 24 Tf
(log) 32.016 Tj
32.016 -7.2 Td
/F8_0 19.2 Tf
(10) 21.3504 Tj
53.3664 0 Td
/F8_0 24 Tf
(\(Q/GeV\)) 89.352 Tj
-140.0016 427.1 Td
(MSSM: m) 105.336 Tj
-34.6656 419.9 Td
/F8_0 19.2 Tf
(0) 10.6752 Tj
-23.9902 427.1 Td
/F8_0 24 Tf
(=M) 34.008 Tj
10.0176 419.9 Td
/F8_0 19.2 Tf
(1/2) 26.688 Tj
36.7055 427.1 Td
/F8_0 24 Tf
(=2 TeV, A) 107.4 Tj
144.1055 419.9 Td
/F8_0 19.2 Tf
(0) 10.6752 Tj
154.7809 427.1 Td
/F8_0 24 Tf
(=0, tan) 74.064 Tj
228.845 427.1 Td
/F9_0 24 Tf
(b) 13.176 Tj
242.0212 427.1 Td
/F8_0 24 Tf
(=30) 40.704 Tj
135.7582 72.6 Td
/F8_0 12 Tf
(SOFTSUSY 3.6.2) 94.704 Tj
104.0394 372.8 Td
/F9_0 24 Tf
(a) 15.144 Tj
119.1835 365.6 Td
/F8_0 19.2 Tf
(1) 10.6752 Tj
Q
5 w
/DeviceRGB {} CS
[1 0 0] SC
1404 5128 m
1404 5767 l
3111 5705 m
3077 5659 l
3043 5613 l
3009 5567 l
2975 5521 l
2941 5474 l
2907 5428 l
2873 5382 l
2839 5336 l
2806 5290 l
2772 5243 l
2738 5197 l
2704 5151 l
2670 5105 l
2636 5058 l
2602 5012 l
2568 4966 l
2534 4920 l
2500 4874 l
2466 4827 l
2432 4781 l
2398 4735 l
2364 4689 l
2330 4643 l
2296 4596 l
2262 4550 l
2228 4504 l
2194 4458 l
2160 4411 l
2126 4365 l
2092 4319 l
2058 4273 l
2024 4227 l
1990 4180 l
1956 4134 l
1922 4088 l
1888 4042 l
1854 3996 l
1820 3949 l
1786 3903 l
1752 3857 l
1718 3811 l
1684 3764 l
1650 3718 l
1616 3672 l
1582 3626 l
1547 3580 l
1513 3533 l
1479 3487 l
1445 3441 l
1411 3395 l
1409 3390 l
1407 3385 l
1404 3380 l
1402 3376 l
1400 3371 l
1398 3366 l
1396 3361 l
1393 3356 l
1391 3352 l
1389 3347 l
1387 3342 l
1385 3337 l
1382 3333 l
1380 3328 l
1378 3323 l
1376 3318 l
1374 3314 l
1371 3309 l
1369 3304 l
1367 3299 l
1365 3294 l
1363 3290 l
1360 3285 l
1358 3280 l
1356 3275 l
1354 3271 l
1351 3266 l
1349 3261 l
1347 3256 l
1345 3251 l
1343 3247 l
1340 3242 l
1338 3237 l
1336 3232 l
1334 3228 l
1332 3223 l
1329 3218 l
1327 3213 l
1325 3208 l
1323 3204 l
1320 3199 l
1318 3194 l
1316 3189 l
1314 3185 l
1312 3180 l
1309 3175 l
1307 3170 l
1305 3165 l
1303 3161 l
1301 3156 l
1282 3105 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 170 472.581] Tm
0 0 Td
/F9_0 24 Tf
(a) 15.144 Tj
15.1441 -7.2 Td
/F8_0 19.2 Tf
(2) 10.6752 Tj
Q
[40 20] 0 d
/DeviceRGB {} CS
[0 1 0] SC
1644 5128 m
1644 5767 l
3111 5705 m
3105 5659 l
3100 5613 l
3094 5567 l
3088 5521 l
3082 5474 l
3076 5428 l
3070 5382 l
3065 5336 l
3059 5290 l
3053 5243 l
3047 5197 l
3041 5151 l
3035 5105 l
3030 5058 l
3024 5012 l
3018 4966 l
3012 4920 l
3006 4874 l
3000 4827 l
2994 4781 l
2989 4735 l
2983 4689 l
2977 4643 l
2971 4596 l
2965 4550 l
2959 4504 l
2953 4458 l
2948 4411 l
2942 4365 l
2936 4319 l
2930 4273 l
2924 4227 l
2918 4180 l
2912 4134 l
2906 4088 l
2900 4042 l
2894 3996 l
2888 3949 l
2882 3903 l
2877 3857 l
2871 3811 l
2865 3764 l
2859 3718 l
2853 3672 l
2847 3626 l
2841 3580 l
2835 3533 l
2829 3487 l
2823 3441 l
2817 3395 l
2818 3390 l
2820 3385 l
2821 3380 l
2823 3376 l
2825 3371 l
2826 3366 l
2828 3361 l
2829 3356 l
2831 3352 l
2833 3347 l
2834 3342 l
2836 3337 l
2837 3333 l
2839 3328 l
2841 3323 l
2842 3318 l
2844 3314 l
2845 3309 l
2847 3304 l
2848 3299 l
2850 3294 l
2852 3290 l
2853 3285 l
2855 3280 l
2856 3275 l
2858 3271 l
2860 3266 l
2861 3261 l
2863 3256 l
2864 3251 l
2866 3247 l
2868 3242 l
2869 3237 l
2871 3232 l
2872 3228 l
2874 3223 l
2876 3218 l
2877 3213 l
2879 3208 l
2880 3204 l
2882 3199 l
2883 3194 l
2885 3189 l
2887 3185 l
2888 3180 l
2890 3175 l
2891 3170 l
2893 3165 l
2895 3161 l
2896 3156 l
2890 3105 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 194 472.581] Tm
0 0 Td
/F9_0 24 Tf
(a) 15.144 Tj
15.1441 -7.2 Td
/F8_0 19.2 Tf
(3) 10.6752 Tj
Q
[20 30] 0 d
/DeviceRGB {} CS
[0 0 1] SC
1884 5128 m
1884 5767 l
3096 5705 m
3111 5659 l
3126 5613 l
3141 5567 l
3156 5521 l
3170 5474 l
3185 5428 l
3200 5382 l
3215 5336 l
3230 5290 l
3245 5243 l
3260 5197 l
3275 5151 l
3289 5105 l
3304 5058 l
3319 5012 l
3334 4966 l
3349 4920 l
3364 4874 l
3379 4827 l
3394 4781 l
3408 4735 l
3423 4689 l
3438 4643 l
3453 4596 l
3468 4550 l
3483 4504 l
3497 4458 l
3512 4411 l
3527 4365 l
3542 4319 l
3557 4273 l
3572 4227 l
3587 4180 l
3601 4134 l
3616 4088 l
3631 4042 l
3646 3996 l
3661 3949 l
3675 3903 l
3690 3857 l
3705 3811 l
3720 3764 l
3735 3718 l
3749 3672 l
3764 3626 l
3779 3580 l
3794 3533 l
3809 3487 l
3823 3441 l
3838 3395 l
3842 3390 l
3846 3385 l
3849 3380 l
3853 3376 l
3857 3371 l
3861 3366 l
3864 3361 l
3868 3356 l
3872 3352 l
3876 3347 l
3879 3342 l
3883 3337 l
3887 3333 l
3891 3328 l
3894 3323 l
3898 3318 l
3902 3314 l
3906 3309 l
3909 3304 l
3913 3299 l
3917 3294 l
3921 3290 l
3924 3285 l
3928 3280 l
3932 3275 l
3936 3271 l
3939 3266 l
3943 3261 l
3947 3256 l
3951 3251 l
3955 3247 l
3958 3242 l
3962 3237 l
3966 3232 l
3970 3228 l
3973 3223 l
3977 3218 l
3981 3213 l
3985 3208 l
3988 3204 l
3992 3199 l
3996 3194 l
4000 3189 l
4003 3185 l
4007 3180 l
4011 3175 l
4015 3170 l
4019 3165 l
4022 3161 l
4026 3156 l
4066 3105 l
S
[] 0 d
10 w
/DeviceRGB {} CS
[0 0 0] SC
1221 2744 3311 3311 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
