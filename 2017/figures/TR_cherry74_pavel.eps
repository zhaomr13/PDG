%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%AI8_CreatorVersion: 10.0%%For: (Don Groom) (Lawrence Berkeley Lab)%%Title: (TR_cherry74_pavel.eps)%%CreationDate: 1/29/10 4:06 PM%%BoundingBox: 128 248 448 546%%HiResBoundingBox: 128.4995 248.1875 447.3857 545.7505%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Symbol%%+ Times-Roman%%+ Times-Italic%%DocumentNeededFonts: Symbol%%+ Times-Roman%%+ Times-Italic%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 1%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30 31 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 3%AI5_OpenToView: -145 884 1 907 989 26 0 1 49 42 0 0%AI5_OpenViewLayers: 777%%PageOrigin:30 31%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 0 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 120 8%%BeginData: 19062 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFF7DFD15A87DA8A8A87DA87DFD19A87DA8A8A87DA8A8A87DFD%15A87DFD05A87DFD07A87DFD05A87DA87DA87D7DFD12FFA8FD0AFFA8FD05%FFA8FF5252A87DFF7D7DFFFFA8FFFF7DFFA8FF52FFA8FD06FFA8A8FFA8FD%11FFA8FFA8FFA8FFA8FFA8FD0AFFA8FD0AFFA8FD05FFA8FFFFA8FFFFFFA8%7DFD12FFA8FD12FF7D527D52FF5252527D7D7D5252FF527D527D27527D52%7D277D277D527D527DFD04FFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD%07FFA8FD05FFA8FFA8FFA8A8FD12FFA8FD0AFFA8FD05FFA8FF7D7D5252A8%525227527D525252FF2752277D277D5252FF527DFD0652FD04FFA8FFFFFF%A8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FD0BFF7DFD04FFA8FD04FFA8FFFF%A8FFFFA8FD04FFA8FFFF7DFD12FFA8FD15FFA8FFFFFFA8FFA8FFA8FD06FF%A8FD04FF52FD0BFFA8FFFFFFA8FFFFFFA87DA8527DFD07FF7DA8A87DFFFF%7DFFFFFF7DA87DFFA87DA8FD07FFA8FFA8FFFFFFA8FFA8FFA8A8FD12FF7D%A8FD09FFA8FD05FFA8FD04FFA8FFFFFFA8FFFF7DFFA8FFA8FFA8FFA8FD09%FFA8FD06FFA8FFFFFFA8FFFFFFA87DA8527DA87D5252277DA87D527D5252%527D27A8277DFF7DFFFF527DFD04522752FFA8277D527DFFFFFFA8FFFF7D%FD12FF7DFD08FFC2FD04FFA0C9FD06FFA0C3FFFFA8277DFD06FFA8A8FD11%FFA8FFFFFFA8FFFFFF7D527D7D7DFF27FD0452FF527D527D527D2752A87D%52FF52FFFD047DFD0552FF7D522752A8FFA8FFA8FFA8A8FD12FFA8FD04FF%9AFFFFFF9ACAA8FFA8CAA1FFA8FFFFFFA1FFA7CAFF52F87DFFFFA8FFA8FF%7DFFA8FD09FFA8FD11FFA8FFA87DA8FFA8FFA8FFFFFFA852FD05FFA8FD0A%FFA8FD05FFA8FFFFA8FFFFFFA87DFD12FFA8FFC9FFCACAC9FFC3FFC9FFFF%CAFFC9FD05FFCAA8FFA1FFF827A8FD04FFA8A8FFFFCAC3C9A1FD0DFFA8FF%FFFFA8FFFFFFA8FD0FFFA8FD05FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FF%A8A8FD12FFA8FFBCFFC9FFC9FFC9FFC9A8FFA0FFCACAA8FFFFFFA1FFFFC9%7D7DFFA8FFFFA8A87DFFA8C3A1FFFFFFA1C9FD04FFA8FD11FFA8FFA8A852%7DA8A87D7DA87D7D52FD05FFA8FD0AFFA8FD05FFA8FFFFA8FFFFFFA87DFD%0EFFA87DFFFFA8FFA0CFC3FFA1FFC3FFA1FFFFC9FFFFC3FFFFFFC3FFA8FF%FFC9A8FFA8FF27A8A8FFFFC9FD06FFCAC9CFFD09FFA8FFFFFFA8FFFFFF7D%7D527D52FFFFA87DFF7D7D527DFF5227FD05FFA8FD05FFA8FD07FFA8FD05%FFA8FFA8FFA8A8FD09FF52A852A8FFA852FFFFA8A7FFA1C9FFC9FFC9FFC9%A8FFA0FFFFC9A8FFFFC9FFA8FFFFA1A8FFFF7DF852FFA8CAA1FFA8FD06FF%C9CAFFA8FD06FFA8FFFFFFA8FFFFFFA852A8527DA8A827A8A87D52527D7D%7DFD0CFFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD09FF7D7DFF7D7D%527DFFFF7DA17EA1A1FFC3FFC9FFC3FFFFC9FFFFC9FFFFFFC9FFA8FFFFC9%A8FFA852F87DFFFFA1FD0AFFC9CAFD07FFA8FFFFFFA8FFFFFFA87DFD14FF%A8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD09FF277D527DFD05FFA8A1%FFA1C9A8C37EA17EA17EA9A1A87EA1A8A8A8A17E847EFFA1A8FF7D52FFA8%FFA8CAA8FFA8FD08FFC9A8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8%FFA8FFA8FD10FFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD12FF7DC9%FFC9A1FFC3FFA1FFC3FFFFC9FFFFA1FFFFFFA1FFA8FFFFFFA1A87EA8FF84%FFC9FD0DFFA1FD06FFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD07FFA8%FD05FFA8FFA8FFA8A8FD12FF7D7DA8A1A1A8A7A8A1A8A87DA8A1FFA8A77D%FFA8A1FD05A8A1A8A8A8FFA8A8767E7DA87DFFA8A8A0FD04A1FFA8A1A8FF%FD0EA87DFFA8A87DFFA8A87DFFA8A8A8FFA8A8A8FFA8A8A8FFFD07A8FFFD%06A87DFFFD06A87DFD04FFFD047DFD0AFF76FFFFC9C3FFC9FFC3FFFFA7FF%CAFFFFFFCAFFCFC9FFA8FFFFFFA1FFA8FFFFFFCACAFFFFFFA8A9A2A1FD05%FFC3CACACAFD04FFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD07FFA8FD%05FFA8FFA8FFA8A8FD04FF7D7DFD0CFFA1FFFFA1C9FFC9A7FFFFFFA1FFA1%FFFFFFA1FFA1FD06FFA7FFA8FFFFA8C9A8FFA8FFA8FFA0A87EA8FD04FFA1%CAA1CFFD0EFFA8FFA8FFA8FFA8FFA8FD0AFFA8FD0AFFA8FD05FFA8FFFFA8%FFFFFFA87DFD04FFA87D52FD0BFF7DA8FFC9C3FFA1C9FFFFFFC9FFC9FFFF%FFA7FFC9FFFFA8FFFFFFA7CFA8FFFFFFC3FD05FFA0FD04FFA9A8FFFFFFC9%CFA0FFFFFFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD07FFA8FD05FFA8%FFA8FFA8A8FD04FF52A8FD0CFF7DA8FFA0C9FFFF9AFFFFFFA1FFA7FFFFFF%A1FFA0FFFFA8FFFFFFA8A1FFFFFFA8C9A8FFA8FFA8CAFD06FFA8A87DFFA1%FFA1FFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FD10FFA8FD04%FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF7DA8FD0BFFA8FFFFCAC9FFFF%C2FFFFFFCAC9FD04FFA7FFCAFFFFA8FFFFFFA8CAA8FFFFFFC9FD04FFA7FD%0AFFA8A9C3CAC9FFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD07FFA8FD%05FFA8FFA8FFA8A8FD05FF277DFD0BFFA8FFFFA1C9FFFFA1FFFFFFA1C9FD%04FFA1FFA1FFFFA8FFFFFFA8A1FFFFFFA8CAA8FFA8FFA1FD09FFA8FFA8A9%A0CACAA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FD10FFA8FD04FF%A8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF7D52FD0BFF7DA8FFCFCAFD06FF%A7A1FD04FFC9FFC9FFFFA8FFFFFFA8C9A8FFFFA7FD04FFA1FD0EFFCA76C3%A8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8%FD04FF7D5252FD0BFFA8FD0AFFA89AFD04FFA1FFA1FD07FFA1A8FFFFA1FF%A8FFA8C9A8FD09FFA8FD04FFCAA1A1FD0AFFA8FFA8FFA8FFA8FFA8FD0AFF%A8FD0AFFA8FD05FFA8FFFFA8FFFFFFA87DFD04FF7D7D7DFD0BFF7DFD10FF%CFC9C9FFFFA8FFFFFFA8FFA1FFFFA7FFFFFFCAC9FD10FFCAA1A9A8FFA8FF%FFFFA8FD15FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD04FF7D7DFD%0CFFA8FD0AFFA8FD05FFA8C9A1FD08FFA1FFFFA1FFA8FFA1FFA8FD09FFA8%FD06FFA1A0A97EFD07FFA8FFA8FFA8FFA8FFA8FD0AFFA8FD0AFFA8FD05FF%A8FFFFA8FFFFFFA87DFD04FFA87D52FD0BFFA8FD11FFA0C9FFFFA8FFFFFF%A8FFA1FFFFC9FFFFFFC9FD12FFA8C3CAFF7DFFFFFFA8FD15FFA8FD05FFA8%FD07FFA8FD05FFA8FFA8FFA8A8FD04FF52A8FD0CFF7DA8FD09FFA8FD05FF%A8FD04FFA8FFFFFFA8FFA7FFFFA1FFA8FFA1FFA8FD09FFA8FD06FFA8A1C3%FFA8A8A9FFA8FFFFA8FFA8FFA8FFA8FFA8FD10FFA8FD04FFA8FFFFA8FFFF%A8FD04FFA8FFFF7DFD05FF7DA8FD0BFFA8FD15FFA8FFFFFFA8FFA1FFCACA%FFFFCACAFD12FFA8FFC9C9A8FFA9FFA8FD15FFA8FD05FFA8FD07FFA8FD05%FFA8FFA8FFA8A8FD05FF277DFD0BFFA8FD0AFFA8FD05FFA8FD04FFA8FFFF%FFA8FFA8A7C9A8FFA8C9A8FFA8FD09FFA8FD06FFA8FFFFA0A8FFFFA884FF%FFA8FFA8FFA8FFA8FFA8FD10FFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF%7DFD05FF7D52FD0BFF7DFD15FFA8FFFFFFA8FFA8C9C3FFFFFFC3FD13FFA8%FFFFC9A1FFFFFFA8A8FD08FF535AA8FD04FF7EFD04FFA8FF7EFFFFFF7DA8%FD06FFA8FD05FFA8FFA8FFA8A8FD04FF7D5252A8FD0AFF7DA8FD09FFA8FD%05FFA8FD0AFFA8A1C9A8FFA8C9A8FFA8FD09FFA8FD0AFFA1A8FFFFFFA8A8%A8FFA8FFA8FFA853537E2F7E2F53532F53FFFD04532F53292F5953537E2F%53FD04FFA8FFFFA8FFFFFFA87DFD04FFA87D7DA8FD0AFFA8FD15FFA8FFFF%FFA8C29ACAC9FFFFFFC9FD13FFA8FFFFFFA8C3FFFFA8FFA9A8FD06FF5353%535A53547E5A53A9FF5A535A537E7E5A537E2FFD047EFFA8FD05FFA8FFA8%FFA8A8FD12FFA8FD0AFFA8FD05FFA8FD07FFA1928CA8A1C9A8FFA1FFA8FF%A8FD09FFA8FD0BFFA0C9FD04FFA884A8FFA8FFA8FFA8FFFFFF2F7EFD05FF%A8FD0AFFA8FD05FFA8FFFFA8FFFFFFA87DFD05FF7DA8FD0BFFA8FD15FFA8%FFFFC38CC3A8FD04FFA7FD14FFA8FFFFFFA8FFA0FFA8FD04FFA8FD0EFFA8%FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF2752FD0BFFA8FD0A%FFA8FD05FFA8FD04FFA8FFCAA893FD04FFA8FFA1FFA8FFA8FD09FFA8FD06%FFA8FFFFFFA8FFC9A0A8FFFFA8FFA87EA8FFA8FFA8FD07FFA8A9FD07FFA8%FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF7DA8FD0BFF7DA8FD14FF%A8CFCAFFA8FFA8FFFFC393A7FD14FFA8FFFFFFA8FFFFC3A8FD06FFA8FD0A%FFA9FFFFFFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FFF87DFD0B%FFA8FD0AFFA8FD05FFA8FD04FFA8A8FFFFA8FFFFFF938CC3A1FFA8FFA8FD%09FFA8FD06FFA8FFFFFFA8FFFFA7A1FFFFA8FFA8FFA8A9A8FFA8FD05FFA8%FD0AFFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF5252FD0BFF7D%FD14FFCFA7FFFFFFA8FFA8FF9293CACAFD14FFA8FFFFFFA8FFFFFFA1CAFD%06FFA8A8FD04FFA9FFA9FD05FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8%A8FD04FFA8FD0DFFA8FD0AFFA8FD05FFA8FFFFCAA8FD06FFA8A1C9A0C9A8%FFA8FFA8FD09FFA8FD0EFFA89AFFA8FFA8FFA8FF7DFFA8FFFF537DA9FD05%FFA8FD0AFFA8FD05FFA8FFFFA8FFFFFFA87DFD04FF7D5252FD0BFFA8FD13%FFC9FFA8FFFFFFA8FFA1FFFFFFC3FD15FFA8FFFFFFA8FFFFFFA8C9C3FD07%FF7EFFFFFF0653FD06FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05%FF2752FD0BFFA8FD0AFFA8FD05FFA8FD09FFCAA8FFFFA8C9A8FFA8FFA8FD%09FFA8FD10FFC2A8FFA8FFA8FFA8FF7EFF2F297EFD06FFA8FD0AFFA8FD05%FFA8FFFFA8FFFFFFA87DFD05FF7DA8FD0BFFA8FD0EFFC2C3A0A0C2A0FF99%CFFFCA99FFA8FFFFFFC3FD15FFA8FFFFFFA8FFFFFFA8FFC3A1FD07FFA8A8%7EFD08FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF2752FD0BFF%A8FD0AFFA8FFFFFFA7C299BC99C2FF939AC28C9AA193FFFFA8C9A8FFA8FF%A8FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFF9AFFA8FFA8FFA8FFA8A8FD%0FFFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD04FF7D5252FD07FFA8%7DFFFFA8FD0EFFBBC29A9AC29AFF93C39AB593C393FFFFFFC9FD15FFA8FF%FFFFA8FFFFFFA8FFFFCAA0FD07FFA8A9FD08FFA8FD05FFA8FD07FFA8FD05%FFA8FFA8FFA8A8FD05FF5252FFFF52FF52A8FFFF52FFFFA8FD0AFFA8FD05%FFA8FD04FFA8FFFFFFA8FD04FFA8C9A8FFA8FFA8FD09FFA8FD06FFA8FFFF%FFA8FFFFFFA8FFFFA8C3A1FFA8FFA8FFA8FF7EFD0EFFA8FD04FFA8FFFFA8%FFFFA8FD04FFA8FFFF7DFD05FF5252FFFF7D52FF7D7D527DFFFF7DA8A8FF%A8FFA8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A1FD07%A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8A1%FD07A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8A8%A8FFA8FFA8FFA8A8FD04FFA85252FFFF277D527DFD05FF7DA8FD09FFA8FD%05FFA8FD0AFFA8FFFFA1FFA8FFA8FFA8FD09FFA8FD11FFA8FFA0CAA8FFA8%FFA8FFFFA8A8FD06FFA8FD0AFFA8FD05FFA8FFFFA8FFFFFFA87DFD12FFA8%FD15FFA8FFFFFFA8FFA8FFFFA7FFC9A0FD13FFA8FFFFFFA8FFFFFFA8FD05%FF9AFD08FFA9FD06FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF%A8FD0CFF7DA8FD09FFA8FD05FFA8FD0AFFA8FFFFA1FFA8938CC2A8FD09FF%A8FD11FFA8FFA8C3A1FFA8FFA8FFFFFFA8A9FD05FFA8FD0AFFA8FD05FFA8%FFFFA8FFFFFFA87DFD05FF5227FD0BFFA8FD15FFA8FFFFFFA8FFA8FFFFC9%FFFFA08C92C3FD10FFA8FFFFFFA8FFFFFFA8FD06FFA0FD08FF7EFD05FFA8%FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF2752FD0BFF7DA8FD09FF%A8FD05FFA8FD04FFA8FFFFFFA8FD04FFA1FFA8FFA1999AFD09FFA8FD06FF%A8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA1C3A8FFA8FD05FF7DFD0AFFA8FD04%FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF7D7DFD0BFFA8FD15FFA8FFC9%FFA8FFA8FFFFCAFD05FF99C9FD0FFFA8FFFFFFA8FFFFFFA8FD07FF99FD0D%FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF275252FD0AFF7DA8%FD09FFA8FD05FFA8FD04FFA8A1CA9AA8FD04FFA1FFA8FFA8FFA899A1FD07%FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8CAA0FFA8FD10FFA8FD%04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD12FF7DFD15FFA8CAFFFFA1FFA8%FFFFA7FD07FFBCC9FD0DFFA8FFFFFFA8FFFFFFA8FD08FFA1FD08FFA8FFFF%FFA8FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD04FF7D5252FD0BFF7DA8%FD09FFA8FD05FFA8FD04FFA7FFFFFFA1FFA8FFCAA7FFA8FFA8FFA8FFFF99%A1FD05FFA8FD11FFA8FFA8FFA8FFA1C3A8FD07FF7DFFFFA8FD0AFFA8FD05%FFA8FFFFA8FFFFFFA87DFD05FF7D52FD0BFFA8FD15FFA1FFFFFFA8C9A8FF%C9FD0AFFC9FD0CFFA8FFFFFFA8FFFFFFA8FD09FF9AFD08FFA9FFFFA8FD05%FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD04FF7D5252FD0BFFA8FD0AFFA8FD%05FFA8FFFFFFCAA7FD04FFA1A8FFC9A8CA99BC99CAA0CAA0FFFFFF9AFFFF%FFA8FD04FFC9A8FD0BFFA8FFA8FFA8FFA8CAA0FD08FFA9FFA8FD0AFFA8FD%05FFA8FFFFA8FFFFFFA87DFD05FF7DA8FD0BFF7DA8FD13FFC9A8FFFFFFA8%CAA8FFA1FFFFA092C2999AA1BBA0CA92C29AC299BC9ABB92BC99BB9AC292%BBA8FFFFFFA8FD0AFFA0FD08FFA8FFA8FD05FFA8FD07FFA8FD05FFA8FFA8%FFA8A8FD05FF2752FD0BFFA8FD0AFFA8FD05FFA8FFFFFFA1A8FFFFFFA8FF%A7FFC9A8FF99BC99BC9AC293BCA19399C2999993C2939A99C293A0999393%A8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA1C3FD08FFA8FD06FFA8FD04FFA8FF%FFA8FFFFA8FD04FFA8FFFF7DFD04FFA87D52FD0BFFA8FD14FFC9A8FFFFFF%A8FFA1FFC3FD13FF99FFFFFFA8FFFFFFA8FFFFFFA8FD0BFF9AFD08FFA9A8%FD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF527DA8FD0AFFA8FD0AFF%A8FD05FFA8FFFFFFA1A8FFFFFFA8FFA8CAC9A8FFA8FFA8FFA8FD09FFA8FD%06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8CAA0FD08FFA8FD05%FFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF527D7DFD0AFF7DA8%FD13FFC9A8FFFFFFA8FFA8C9C3FD17FFA8FFFFFFA8FFFFFFA8FD0CFFC2FD%08FF7DFD05FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD12FFA8FD0AFFA8FD05%FFA8FFFFCAA8FD06FFA8A1FFA8FFA8FFA8FFA8FD09FFA8FD11FFA8FFA8FF%A8FFA8FFA8FFA0C3FD07FFA8A8FD09FFA8FD05FFA8FFFFA8FFFFFFA87DFD%04FF7D7D52FD0BFFA8FD13FFC3FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FF%FFFFA8FD0DFF9AFD07FFA8A9FD04FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD%05FF7D52FD0BFFA8FD0AFFA8FD05FFA8FFFFC9FD07FFA8FFFFA8FFA8FFA8%FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FFFFCAA0FD06FFA8A8FD09FF%A8FD05FFA8FFFFA8FFFFFFA87DFD05FF5252FD0BFFA8FD13FFC3FFA8FFFF%FFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD0EFFC2FD06FFA8FF7EFFFFFFA8%FD07FFA8FD05FFA8FFA8FFA8A8FD04FFA85252FD0BFFA8FD0AFFA8FD05FF%A8FFFFC3FFA8FFFFFFA8FD04FFA8FFA8FFA8FFA8FD09FFA8FD06FFA8FFFF%FFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFFFFFA0CAFD07FFA8FFFFFFA8%FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD04FF7D5252FD0BFF7DA8FD12%FFC9FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD0FFF9AFD05FFA8%FFFFA9FFFFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF5252FD0BFFA8FD0A%FFA8FD05FFA8FFFFC9FFA8FFFFFFA8FD04FFA8FFA8FFA8FFA8FD09FFA8FD%06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FD04FFC3A8FD07FF%A8FFFFA8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD05FF5252FD0BFF7D%FD13FFA1FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD10FFBCFD04%FFA8FFFFA9A8FFA8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF52A8FD0BFFA8%FD0AFFA8FD05FFA8FFFFC9FD07FFA8FFFFA8FFA8FFA8FFA8FD09FFA8FD11%FFA8FFA8FFA8FFA8FFA8FD05FF9AFD04FFA8FFFFFFA9FD06FFA8FD05FFA8%FFFFA8FFFFFFA87DFD05FF5252FD0BFFA8FD13FFC3FFA8FFFFFFA8FFA8FD%19FFA8FFFFFFA8FFFFFFA8FD11FFA0FFFFFFA8FFFFFF7EFFA8FD07FFA8FD%05FFA8FFA8FFA8A8FD05FFA8FD0CFFA8FD0AFFA8FD05FFA8FFA1FD08FFA8%FFFFA8FFA8FFA8FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD06FFC2CA%FFFFA8FD04FFA8FD05FFA8FD05FFA8FFFFA8FFFFFFA87DFD05FF5227FD0B%FFA8FD0EFFCFFFFFFFC9FFFFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFF%A8FD11FFCAC2FFFFA8FD04FFA8A8FD07FFA8FD05FFA8FFA8FFA8A8FD05FF%2752FD08FF7DFFFFA8FD0AFFA8FFFFCAA0CAA8FFA1FFFFA8FFFFFFA8FD04%FFA8FFA8FFA8FFA8FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FF%A8FFA8FFA8FD07FF9AFD07FFA8A8FD04FFA8FFFFA8FFFFA8FD04FFA8FFFF%7DFD04FFA8FD04FF7DA87D7DFFA852FFFFA8FD0DFFC3FFC9FFFFCAFFFFA8%FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD13FF9AFFA8FD05FF7EFD07%FFA8FD05FFA8FFA8FFA8A8FD04FF7D2752FFFF527DFF7D525227A8FF7D7D%A8A8FFA8A8A8FFA8A87DFFA8A1A8A7A8A8A1FFA8A8A8FFFD06A87DFFA8A8%7DFFA8A8A8FFA8A8A8FFA8A87DFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF%A8A87DFFA8A87DFFA8A8A8FFA8A8A8FFA8A1A1FD04A8FFA8A8A8FFA8A87D%FFA8A8A8FFFD08A87DFD04FF7D5252FFFF527D7D7DFD05FF7DFD0DFFC3FF%A1FFFFC9FFFFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD13FFCFC3%A8FD05FFA8A9FD06FFA8FD05FFA8FFA8FFA8A8FD04FFA85252FD0BFF7DA8%FD09FFA8FFA1FFFFCAA1FFA1FD08FFA8FFFFA8FFA8FFA8FFA8FD09FFA8FD%11FFA8FFA8FFA8FFA8FFA8FD09FF9AA8FD06FF7EFFFFFFA8FD05FFA8FFFF%A8FFFFFFA87DFD04FF7D7D52FD0BFF7DFD0CFFCAFFFFFFCAFFC9FFFFA8FF%FFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD15FFA0FD05FFA8A8FD06FFA8%FD05FFA8FFA8FFA8A8FD05FF5252FD0BFFA8FD0AFFA8FFA0FFFFFFA1FFA1%FD08FFA8FFFFA8FFA8FFA8FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD%0AFFA0CAFD06FFA9FFFFA8FD05FFA8FFFFA8FFFFFFA87DFD12FF7DA8FD0B%FFC9FFFFFFA7FFC9FFFFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD%15FFA8C3FD04FFA8FF84FD05FFA8FD05FFA8FFA8FFA8A8FD06FFA87DFD0A%FFA8FD0AFFA8FFA0FFFFFFA1FFA1FFFFA8FFFFFFA8FD04FFA8FFA8FFA8FF%A8FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FD0B%FF9AFD04FFA8FFA9FFFFA8FFFFA8FFFFA8FD04FFA8FFFF7DFD04FFFD047D%FD0AFF7DA8FD0BFFC9FFFFFFA7FFCAFFFFA8FFFFFFA8FFA8FD19FFA8FFFF%FFA8FFFFFFA8FD15FFA8FFA0FFFFFFA8FFFFA8FD04FFA8FD05FFA8FFA8FF%A8A8FD05FF527DFD0BFFA8FD0AFFA8FFA1FFFFFFA8C2CAFFFFA8FFFFFFA8%FD04FFA8FFA8FFA8FFA8FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FF%A8FFA8FFA8FFA8FD0CFFC2CAFFFFA8FFFF7EFFA8FFFFA8FFFFA8FD04FFA8%FFFF7DFD05FF7D52FD0BFF7DFD0CFFC9FD04FFC3FFFFFFA8FFFFFFA8FFA8%FD19FFA8FFFFFFA8FFFFFFA8FD15FFA8FFCAC3FFFFA8FFFFA9FD04FFA8FD%05FFA8FFA8FFA8A8FD05FF5252FD0BFF7DA8FD09FFA8FFA1FFFFFFA8FD0A%FFA8FFFFA8FFA8FFA8FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD0AFF%A8FFFF9AFD06FFA9A8FD05FFA8FFFFA8FFFFFFA87DFD05FF7D52FD0BFFA8%FD08FFCFFFFFFFCAFD08FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8%FD15FFA8FFFFCAA0FFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFA8A8FD04FF%27277DFD0BFFA8FD08FFA0C9A8FFA0FFFFFFA8FD0AFFA8FFFFA8FFA8FFA8%FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD0AFFA8FFFFFFC2FD06FFA8%FD05FFA8FFFFA8FFFFFFA87DFD04FFA8FF7DFD0BFF7DA8FD07FFC9A1FFFF%C9FD08FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD15FFA8FFFFFF%C2C9A8FD04FFA8FFFFA8FD05FFA8FFA8FFA8A8FD04FFA8527D7DFD0AFFA8%FD08FFA1C9A8FFA1FFFFFFA8FD04FFA8FFFFFFA8FD04FFA8FFA8FFA8FFA8%FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FD0FFF%9AA8FD04FF7DFFFFA8FFFFA8FD04FFA8FFFF7DFD04FF7D5252FD0BFFA8FD%07FFC9FFC3FFFFC9FD08FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8%FD15FFA8FD04FFCAA1FD04FFA9A9FFA8FD05FFA8FFA8FFA8A8FD04FFA852%52FD0BFFA8FD07FFC9FFC9A8FFA1FFFFFFA8FD04FFA8FFFFFFA8FD04FFA8%FFA8FFA8FFA8FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FF%A8FFA8FD10FFA0FD04FFA8A9FFA8FFFFA8FD04FFA8FFFF7DFD04FFA87D52%FD0BFF7DA8FD06FFA1FFCACAC9FD09FFA8FFFFFFA8FFA8FD19FFA8FFFFFF%A8FFFFFFA8FD15FFA8FD05FFA1CFFD04FF7EFFA8FD05FFA8FFA8FFA8A8FD%04FF527D7DFD0BFFA8FD07FFC9FFFFA1C9FD04FFA8FD0AFFA8FFFFA8FFA8%FFA8FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD0AFFA8FD06FF9AFFFF%FFA8FFA8FFFFFFA8FFFFA8FFFFFFA87DFD04FF7DA852FD0BFFA8FD07FFC3%FFFFA7C3FD09FFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD15FFA8%FD05FFA8C3CAFD04FFA9A8FD05FFA8FFA8FFA8A8FD04FF7D5252FD0BFFA8%FD07FFC9FFFFA1C9FD04FFA8FD0AFFA8FFFFA8FFA8FFA8FFA8FD09FFA8FD%11FFA8FFA8FFA8FFA8FFA8FD0AFFA8FD06FFCAC2FFFFA8FF7EFFFFFFA8FF%FFA8FFFFFFA87DFD05FF7D52FD0BFFA8FD07FFC3FFFFA7C3FD09FFA8FFFF%FFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FFA0FD05FFA8%FD05FFA8FFA8FFA8A8FD12FF7DA8FFFFFFA0CAFFC9FFFFA0C2FD04FFA8FD%04FFA8FFFFFFA8FD04FFA8FFA8FFA8FFA8FD09FFA8FD06FFA8FFFFFFA8FF%FFFFA8FFFFA8FFA8FFA8FFA8FFA8FD10FFA8FFCAA0FFA8FFFFA8FFFFA8FD%04FFA8FFFF7DFD12FFA8FD04FFC9A1FFC9FD0DFFA8FFFFFFA8FFA8FD19FF%A8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FFFFBCFD04FF7EFD05FFA8FFA8%FFA8A8FD12FFA8FD04FFA1C3FFC9FFFFA8FD05FFA8FD04FFA8FFFFFFA8FD%04FFA8FFA8FFA8FFA8FD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8%FFA8FFA8FFA8FD10FFA8FFFFCAC3A8FFFFA8A8FFA8FD04FFA8FFFF7DFD12%FF7DFFFFFFC9FFC3FFA1FD0DFFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFF%FFA8FD15FFA8FD05FFA8FFFFFF99FFFFFFA8A8FD04FFA8FFA8FFA8A8FD12%FFA8FFFFFFC9FFC9A7FFFFFFA8FD05FFA8FD0AFFA8FFFFA8FFA8FFA8FFA8%FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD0AFFA8FD09FFC9A1FFFFFF7EFF%A8FFFFA8FFFFFFA87DFD12FFA8FFFFFFC3FFC3C9FD0EFFA8FFFFFFA8FFA8%FD19FFA8FFFFFFA8FFFFFFA8FD15FFA8FD05FFA8FD04FFA1FFFFA8A8A9FF%FFFFA8FFA8FFA8A8FD12FFA8FFFFFFC9FFC9A1FFFFFFA8FD05FFA8FD0AFF%A8FFFFA8FFA8FFA8FFA8FD09FFA8FD11FFA8FFA8FFA8FFA8FFA8FD0AFFA8%FD0AFFA0CAFFFFFFA8A8FFFFA8FFFFFFA87DFD0EFFA87DFFFFA8FFFFFFC3%FFA1C9FD0EFFA8FFFFFFA8FFA8FD19FFA8FFFFFFA8FFFFFFA8FD15FFA8FD%05FFA8FD05FFA0FFA8FFA8FFFFFFA8FFA8FFA8A8FD09FF52A852A8FFA852%FFFF7DFFC3FFC9FFCAA0FFFFFFA8FD05FFA8FD04FFA8FFFFFFA8FD04FFA8%FFA8FFA8FF7DFD09FFA8FD06FFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FF%A8FF7DFD10FFA8FD04FFA8C2CAA8FFA9A8FD04FFA8FFFF7DFD09FF7D7DFF%7D7D527DFFFF7DFF99CFC9FFFFC2FFFFFFA8FD05FFA8FD04FF7DFFFFFF7D%FFA8FFFFA8FFA8FFA8FFA8FD09FFA8FD06FF7DFFFFFF7DFFFFFF7DFFFFA8%FFA8FFA8FFA8FFA8FD0AFFA8FD05FF7DFD04FFA8CFC37DFFFF7EFFFFA8FF%7DFFA8A8FD09FF277D527DFD05FFA87DA17DA77DA87CA87DA87DA87DA87D%A87DA87DA87D7D7DA8FD057DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87D7D7DA87D7D7DA87D7D7DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87D7D7DA87DA87D7D7DA87DA87DA87C7D7DA87DA8FD077DFD12%FF52FD22FF7DFF7D7DFD1FFFA8FD057DA8FD1CFF7DFFFD067DFD0FFF7DFD%22FF52FF527DFD20FF527DFF7DFF7DFD1CFF52FF527D527D527DFD0FFF52%A8FD21FF527D7D7DFD1FFFA852FD057DFD1CFF52A8FD067DFDCBFFA8FD7E%FFA827A8FD06FF7D52FFFFFF52A852A8FD59FF7D52A8FF277D525252FF27%52277D27277D527D7D52FF277D527D7DFFFFFF7DFD04527D7DFF7DFD59FF%7D52A87D5252527D7DFF7D7D52277D27A827FF52A8A87D5252527DFFFFFF%7D275252A8FF52FF7DFD60FF7DA8FD07FFA87D7D7DFD0AFF7DFD07FF7DFD%A3FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(6/10/1996) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 68 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/havefont{	systemdict /languagelevel known		{		/Font resourcestatus dup			{ exch pop exch pop }		if		}		{		systemdict /FontDirectory get 1 index known			{ pop true }			{			systemdict /fileposition known				{				dup length 6 add exch				Ss 6 250 getinterval				cvs pop				Ss exch 0 exch getinterval				status					{ pop pop pop pop true }					{ false }				ifelse				}				{				pop false				}			ifelse			}		ifelse		}	ifelse} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def/subststring {	exch 2 index exch search	{		exch pop		exch dup () eq		{			pop exch concatstring		}		{			3 -1 roll			exch concatstring			concatstring		} ifelse		exch pop true	}	{		pop pop false	} ifelse} def/concatstring {	1 index length 1 index length	1 index add	string	dup 0 5 index putinterval	dup 2 index 4 index putinterval	4 1 roll pop pop pop} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	2 index havefont	{		3 index		255 string		cvs				dup		(_Symbol_)		eq		{			pop			2 index			findfont					}		{			1 index 0 eq			{				dup length 1 sub				1 exch				getinterval								cvn				findfont			}			{				pop 2 index findfont			} ifelse		} ifelse	}	{		dup 1 eq		{			2 index 64 string cvs			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring			{				exch pop dup havefont				{					findfont false				}				{					pop true				} ifelse			}			{				pop	dup				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring				{					exch pop dup havefont					{						findfont false					}					{						pop true					} ifelse				}				{					pop pop true				} ifelse			} ifelse			{				1 index 1 eq				{					/Ryumin-Light-Ext-RKSJ-V havefont					{/Ryumin-Light-Ext-RKSJ-V}					{/Courier}					ifelse				}				{					/Ryumin-Light-83pv-RKSJ-H havefont					{/Ryumin-Light-83pv-RKSJ-H}					{/Courier}					ifelse				} ifelse				findfont				[1 0 0.5 1 0 0] makefont			} if		}		{			/Courier findfont		} ifelse	} ifelse	_wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 10 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontScript exch def	/FontDirection exch def	/FontRequest exch def	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{W B} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{W F } def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{W S} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat	_shift aload pop _lineorientation 1 eq { exch } if translate	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	1 index type /nametype eq	{		dup 0.75 mul 1 index 0.25 mul neg	} if	/_fontDescent exch ddef	/_fontAscent exch ddef	/_fontSize exch ddef	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef	/_fontHeight _fontSize ddef	findfont _fontSize scalefont setfont} def/Tl{	pop neg 0 exch	_leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	0 exch	_shift astore pop	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	count 1 eq { 100 } if	100 div exch 100 div exch	_scale astore pop	iTm} def/TA{	pop} def/Tq{	pop} def/Tg{	pop} def/TG{	pop} def/Tv{	/_lineorientation exch ddef} def/TV{	/_charorientation exch ddef} def/Ty{	dup /_yokoorientation exch ddef 1 sub neg Tv} def/TY{	pop} def/T~{	Tx} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	_fontSize mul 1000 div	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse	rmoveto	pop} def/TK{	2 npop} def/T*{	_leading aload pop	_lineorientation 0 ne { exch } if	Td} def/T*-{	_leading aload pop	_lineorientation 0 ne { exch } if	exch neg exch neg	Td} def/T-{	_ax neg 0 rmoveto	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ findfont _fontSize scalefont setfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%/X^{	currentfont 5 1 roll	dup havefont		{		findfont _fontSize scalefont setfont		}		{		pop		exch		} ifelse	2 index 0 eq	{		Tx	}	{		Tj	} ifelse	pop	pop	setfont} def/T^	/X^	load def%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 50 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 40 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIDataProc null def	/XIVersion 6 def	/XIColorSpace /DeviceGray def	/XIColorValues 0 defendcurrentdict /_colorimage known not {	/colorimage where {		/colorimage get /_colorimage exch def	}{		/_colorimage null def	} ifelse} if/_image systemdict /image get def/_currenttransfer systemdict /currenttransfer get def/FourEqual {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual { 				/plateindex 0 def			}{				0 1 0 0 FourEqual { 					/plateindex 1 def				}{					0 0 1 0 FourEqual {						/plateindex 2 def					}{						0 0 0 1 FourEqual { 							/plateindex 3 def						}{							0 0 0 0 FourEqual {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/clrspaceissepn {	type /arraytype eq } def/clrspacegetname {	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse} def/clrspacegetalt {	aload pop pop pop colormake} def/clrspacegetcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/clrspacemarksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				/findcmykcustomcolor where {					pop					dup length 2 sub get					0.1 0.1 0.1 0.1 5 -1 roll					findcmykcustomcolor 1 setcustomcolor					systemdict /currentgray get exec					1 ne				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/colormake {	dup clrspacegetcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/colorexpand {	dup clrspacegetname exch	dup clrspaceissepn {		clrspacegetalt		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				clrspacegetalt colortint colortocmyk			} ifelse		} ifelse	} ifelse} def/makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/WalkRGBString {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/CMYKToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/SeparateCMYKImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne {			sourcearray plateindex get exec		}{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub {				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/ColorImageCompositeEmulator {	pop true eq {		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse				load		 end		} if		image	} ifelse} def/colorimage {	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index end		dup 8 eq exch 1 eq or not {		/_colorimage load null ne {			_colorimage		}{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}{		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {			/_colorimage load null eq {				ColorImageCompositeEmulator			}{				dup 1 eq {					pop pop image				}{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						grestore					} if				} ifelse			} ifelse		}{			dup 1 eq {				pop pop				image			}{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0 {									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace clrspacegetcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] makeimagedict _image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] makeimagedict _image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} stringapply			} concatprocs _image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} stringapply			} concatprocs false _pticomps			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse		} ifelse	} ifelse} def/graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray proctintimage} def/cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK proctintimage} def/rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB proctintimage} def/tintimage {	TestPlateIndex -1 eq {		colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop graytintimage		}{			dup /DeviceRGB eq {				pop rgbtintimage			}{				pop cmyktintimage			} ifelse		} ifelse	}{		dup clrspacemarksplate {			plateindex 5 lt {				colortocmyk plateindex get 1 exch sub				exch {1 0}{0 1} ifelse () graytintimage			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage			} ifelse		}{			pop pop pop			{pop 1} 0 1 () /DeviceGray proctintimage		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace tintimage} def/XIImage {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIType 1 eq {			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH {	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEncoding 0 ne XIVersion 6 le and {			currentfile 128 string readline pop pop		} if		XICompression 0 eq {			/XIBuffer1 XIRowBytes string def			XIEncoding 0 eq {				{currentfile XIBuffer1 readhexstring pop}			}{				{currentfile XIBuffer1 readstring pop}			} ifelse		}{			/XIBuffer1 256 string def			/XIBuffer2 XIRowBytes string def			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}			/ASCIIHexDecode filter /DCTDecode filter			/XIFile exch def			{XIFile XIBuffer2 readstring pop}		} ifelse		/XIDataProc exch def				XIVersion 6 le {			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIType 1 eq {				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if		XIEnable {			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Symbol%%IncludeFont: Times-Roman%%IncludeFont: Times-Italicuserdict /_useSmoothShade true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI55J_Tsume: None%AI3_BeginEncoding: _Symbol Symbol[/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/universal/numbersign/existential/percent/ampersand/suchthat/parenleft/parenright/asteriskmath/plus/comma/minus/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/congruent/Alpha/Beta/Chi/Delta/Epsilon/Phi/Gamma/Eta/Iota/theta1/Kappa/Lambda/Mu/Nu/Omicron/Pi/Theta/Rho/Sigma/Tau/Upsilon/sigma1/Omega/Xi/Psi/Zeta/bracketleft/therefore/bracketright/perpendicular/underscore/radicalex/alpha/beta/chi/delta/epsilon/phi/gamma/eta/iota/phi1/kappa/lambda/mu/nu/omicron/pi/theta/rho/sigma/tau/upsilon/omega1/omega/xi/psi/zeta/braceleft/bar/braceright/similar/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/Euro/Upsilon1/minute/lessequal/fraction/infinity/florin/club/diamond/heart/spade/arrowboth/arrowleft/arrowup/arrowright/arrowdown/degree/plusminus/second/greaterequal/multiply/proportional/partialdiff/bullet/divide/notequal/equivalence/approxequal/ellipsis/arrowvertex/arrowhorizex/carriagereturn/aleph/Ifraktur/Rfraktur/weierstrass/circlemultiply/circleplus/emptyset/intersection/union/propersuperset/reflexsuperset/notsubset/propersubset/reflexsubset/element/notelement/angle/gradient/registerserif/copyrightserif/trademarkserif/product/radical/dotmath/logicalnot/logicaland/logicalor/arrowdblboth/arrowdblleft/arrowdblup/arrowdblright/arrowdbldown/lozenge/angleleft/registersans/copyrightsans/trademarksans/summation/parenlefttp/parenleftex/parenleftbt/bracketlefttp/bracketleftex/bracketleftbt/bracelefttp/braceleftmid/braceleftbt/braceex/.notdef/angleright/integral/integraltp/integralex/integralbt/parenrighttp/parenrightex/parenrightbt/bracketrighttp/bracketrightex/bracketrightbt/bracerighttp/bracerightmid/bracerightbt/.notdef/_Symbol/Symbol 0 0 0 TZ%AI3_EndEncoding AdobeType%AI55J_Tsume: None%AI3_BeginEncoding: _Times-Roman Times-Roman[/_Times-Roman/Times-Roman 0 0 0 TZ%AI3_EndEncoding TrueType%AI55J_Tsume: None%AI3_BeginEncoding: _Times-Italic Times-Italic[/_Times-Italic/Times-Italic 0 0 0 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp13 Bn%AI5_BeginGradient: (Black, White Radial)(Black, White Radial) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_Bs0 0 0 1 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Copper)(Copper) 0 7 Bd[<5E5E5D5D5C5B5B5A5A595958585757565655555454535352525150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464645444443434242414140403F3F3E3E3D3D3C3C3B3B3A39393838373736363535343433333232313130302F2F2E2D2D2C2C2B2B2A2A292928282727262625252424232222212120201F1F1E1E1D1D1C1C1B1B1A1A1919181817161615151414131312121111><9A9998989796959493929291908F8E8D8C8C8B8A8988878686858483828181807F7E7D7C7B7B7A79787776757574737271706F6F6E6D6C6B6A6969686766656463636261605F5E5D5D5C5B5A5958575756555453525151504F4E4D4C4B4B4A49484746454544434241403F3F3E3D3C3B3A3A39383736353434333231302F2E2E2D2C2B2A2928282726252423222221201F1E1D1C1C><B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D><12121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909080808080808080807070707070707070606060606060606050505050505050504040404040404040403030303030303030202020202020202010101010101010100000000>1 %_Br<737373737373737373737373737373737373737373737372727272727272727271717171717170707070706F6F6F6F6F6E6E6E6E6D6D6D6D6C6C6C6B6B6B6A6A6A69696968686767676666656564646463636262616160605F5F5E><BCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABAAAAA9A9A8A7A7A6A5A4A4A3A2A2A1A09F9E9E9D9C9B9A><D9D9D9D9D9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D5D5D5D5D4D4D4D3D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCCCBCBCACAC9C9C8C7C7C6C5C5C4C3C2C2C1C0BFBFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1><28282828282828272727272727272727272727272727272727262626262626262625252525252524242424242323232323222222212121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1A1A1A191918181717161615151414131312>1 %_Br<5E5F5F6060616162626364646565666667676868696A6A6B6B6C6C6D6D6E6E6F7070717172727373><9A9B9C9D9E9F9FA0A1A2A3A4A5A6A6A7A8A9AAABACADADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBBBC><B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><12131314141516161717181819191A1A1B1C1C1D1D1E1E1F1F202021222223232424252526262728>1 %_Br<0001010202030304040505060607070809090A0A0B0B0C0C0D0D0E0E0F0F1010111212131314141515161617171818191A1A1B1B1C1C1D1D1E1E1F1F202021212223232424252526262727282829292A2B2B2C2C2D2D2E2E2F2F303031313232333434353536363737383839393A3A3B3C3C3D3D3E3E3F3F404041414242434344454546464747484849494A4A4B4B4C4D4D4E4E4F4F505051515252535354555556565757585859595A5A5B5B5C5C5D5E5E><00010203030405060708090A0A0B0C0D0E0F1011111213141516171818191A1B1C1D1E1E1F20212223242525262728292A2B2C2C2D2E2F3031323333343536373839393A3B3C3D3E3F4040414243444546474748494A4B4C4D4E4E4F50515253545455565758595A5B5B5C5D5E5F6061626263646566676869696A6B6C6D6E6F6F70717273747576767778797A7B7C7D7D7E7F80818283848485868788898A8A8B8C8D8E8F9091919293949596979898999A><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1><0000000000010101010101010101010202020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060607070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F101010101010101010111111111111111111111212121212121212>1 %_Br<24232222212120201F1F1E1D1D1C1C1B1B1A1919181817171615151414131312121110100F0F0E0E0D0C0C0B0B0A0A0908080707060605050403030202010100><3B3A39383737363534333231302F2E2D2C2B2A29282827262524232221201F1E1D1C1B1A19181817161514131211100F0E0D0C0B0A0908080706050403020100><403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322211F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><01010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<59595858585757575656565555555454545353535252525151515050504F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A4949494848484747474646464545454444444343434242424141414040403F3F3F3E3E3E3D3D3D3C3C3C3B3B3A3A3A3939393838383737373636363535353434343333333232323131313030302F2F2F2E2E2E2D2D2D2C2C2C2B2B2B2A2A2A292929282828272727262626252525242424><ADACACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929191908F8E8E8D8C8B8B8A89898887868685848483828181807F7F7E7D7C7C7B7A7A79787777767575747372727170706F6E6D6D6C6B6B6A69686867666665646363626161605F5E5E5D5C5C5B5A59595857565655545453525151504F4F4E4D4C4C4B4A4A49484747464545444342424140403F3E3D3D3C3B><DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140><0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A090909090909090909090908080808080808080808080707070707070707070707070606060606060606060606050505050505050505050504040404040404040404040303030303030303030303030202020202020202020202010101010101010101>1 %_Br[0.0656 0.1081 0.1138 0.0003 1 50 100 %_Bs0.3689 0.6046 0.6942 0.0716 1 50 85 %_Bs0.4526 0.7386 0.8504 0.1551 1 73.9136 75 %_Bs0.3689 0.6046 0.6942 0.0716 1 50 63 %_Bs0 0 0 0 1 50 34 %_Bs0.1397 0.2324 0.251 0.0029 1 50 14 %_Bs0.3494 0.6791 0.8753 0.0583 1 50 2 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605040302>0.9882<0505050505050505050505050505050505050505050505050505050505050505050505050505050505050606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707080808080808080808080808080808080808080808080808080808080808080808080808080808080808>01 %_Br<E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9><1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC><0909090909090909090909090909090909090909090909090909090909090808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080807070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070706060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050505050505050505050505>01 %_Br<ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8><131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09>01 %_Br<08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><05050505050505050506060606060606060606060606060606070707070707070707070707070707070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101010101111111111111111111111111111111112121212121212121212121212121212131313131313131313><E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF>01 %_Br<03030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070708080808080808080808080808080808080808080808080808><F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605>0.913701 %_Br[0.0078 0.9882 0.0314 0 1 50 100 %_Bs0.9765 0.9882 0.0196 0 1 50 80 %_Bs0.9098 0.0784 0.0353 0 1 50 60 %_Bs0.9255 0.0745 0.9373 0 1 50 40 %_Bs0.0314 0.0196 0.9137 0 1 50 20 %_Bs0.0118 0.9608 0.9137 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Tropical Sunset)(Tropical Sunset) 0 5 Bd[0<BFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C9B9A9A99989796959493939291908F8E8E8D8C8B8A898988878685858483828181807F7E7D7D7C7B7A7A79787777767575747372727170706F6E6D6D6C6B6B6A696968676766666564646362626161605F5F5E5E5D5C5C5B5B5A5A595858575756565555545453535252515150504F4F4E4E4D4D4D4C4C4B4B4B4A4A49494948484747474646464545454444444443434343424242424141414141414040404040404040><BFBFBFBFBFC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7>01 %_Br<08080808080808080808080807070707070707070707070707070707070707070707070706060606060606060606060606060606060606060606060505050505050505050505050505050505050505050505040404040404040404040404040404040404040404040403030303030303030303030303030303030303030303030202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101000000000000000000000000><05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><E9E9E9E8E8E8E8E7E7E7E7E7E6E6E6E6E5E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0E0DFDFDFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDCDBDBDBDBDADADADADAD9D9D9D9D8D8D8D8D7D7D7D7D7D6D6D6D6D5D5D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D1D1D1D1D1D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACAC9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0C0BFBF>01 %_Br<202020201F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A191919191919191919181818181818181818181717171717171717171716161616161616161616151515151515151515151414141414141414141313131313131313131312121212121212121212111111111111111111111010101010101010100F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909090808080808><696868676766666665656464636363626261616060605F5F5E5E5D5D5D5C5C5B5B5A5A5A59595858575757565655555454545353525251515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A4949494848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3A3A3A39393838373737363635353434343333323231313130302F2F2E2E2E2D2D2C2C2B2B2B2A2A29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1C1C1C1B1B1A1A1A19191818171717161615151414141313121211111110100F0F0E0E0E0D0D0C0C0B0B0B0A0A0909080808070706060505><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9>01 %_Br<CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120><000101020203040405050607070809090A0A0B0C0C0D0D0E0F0F101011121213131415151616171818191A1A1B1B1C1D1D1E1E1F20202121222323242425262627282829292A2B2B2C2C2D2E2E2F2F303131323233343435353637373839393A3A3B3C3C3D3D3E3F3F404041424243434445454647474848494A4A4B4B4C4D4D4E4E4F50505151525353545455565657585859595A5B5B5C5C5D5E5E5F5F606161626263646465666667676869>001 %_Br[0 0.25 0.78 0 1 50 100 %_Bs0 0.75 0.75 0 1 35.5263 57.3034 %_Bs0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs0.125 0.41 0 0 1 50 44.9438 %_Bs0.8 0 0 0 1 50 19.1011 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient)(Unnamed gradient) 0 6 Bd[<F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605040302>0.9882<0505050505050505050505050505050505050505050505050505050505050505050505050505050505050606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707080808080808080808080808080808080808080808080808080808080808080808080808080808080808><0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9><1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC><0909090909090909090909090909090909090909090909090909090909090808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080807070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070706060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050505050505050505050505>0.00391 %_Br<ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8><131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09><030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030302020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1 %_Br<08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><05050505050505050506060606060606060606060606060606070707070707070707070707070707070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101010101111111111111111111111111111111112121212121212121212121212121212131313131313131313><E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF><00000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202030303030303030303030303030303030303030303030303030303030303030303030303030303>1 %_Br<03030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070708080808080808080808080808080808080808080808080808><F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605>0.913701 %_Br[0.0078 0.9882 0.0314 0 1 50 100 %_Bs0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs0.0314 0.0196 0.9137 0 1 50 20 %_Bs0.0118 0.9608 0.9137 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 1 6 Bd[<03030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070708080808080808080808080808080808080808080808080808><F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605>0.913701 %_Br<08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><05050505050505050506060606060606060606060606060606070707070707070707070707070707070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101010101111111111111111111111111111111112121212121212121212121212121212131313131313131313><E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF><00000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202030303030303030303030303030303030303030303030303030303030303030303030303030303>1 %_Br<ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8><131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09><030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030302020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1 %_Br<E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9><1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC><0909090909090909090909090909090909090909090909090909090909090808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080807070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070706060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050505050505050505050505>0.00391 %_Br<F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605040302>0.9882<0505050505050505050505050505050505050505050505050505050505050505050505050505050505050606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707080808080808080808080808080808080808080808080808080808080808080808080808080808080808><0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.0118 0.9608 0.9137 0 1 50 0 %_Bs0.0314 0.0196 0.9137 0 1 50 20 %_Bs0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs0.0078 0.9882 0.0314 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 12)(Unnamed gradient 12) 0 5 Bd[<040506070809090A0B0C0D0E0F10111213141415161718191A1B1C1D1E1E1F20212223242526272828292A2B2C2D2E2F30313233333435363738393A3B3C3D3D3E3F40414243444546474848494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F60616263646566676768696A6B6C><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454648494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081><DEDEDEDFDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E2E3E3E3E3E3E3E4E4E4E4E4E4E5E5E5E5E5E6E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9E9EAEAEAEAEAEAEBEBEBEBEBECECECECECECEDEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F1F2F2F2><0001020203040506060708090A0A0B0C0D0E0E0F1011121213141516161718191A1A1B1C1D1E1E1F2021222223242526262728292A2A2B2C2D2E2E2F303131323334353536373839393A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F505151525354555556575859595A5B>1 %_Br<6C6B6A69686767666564636261605F5E5D5C5C5B5A59585756555453525251504F4E4D4C4B4A49484847464544434241403F3E3D3D3C3B3A39383736353433333231302F2E2D2C2B2A29282827262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A09090807060504><81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E><F2F2F2F1F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E4E3E3E3E3E3E3E2E2E2E2E2E2E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDFDEDEDE><5B5A595958575655555453525151504F4E4D4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A393938373635353433323131302F2E2E2D2C2B2A2A2928272626252423222221201F1E1E1D1C1B1A1A1918171616151413121211100F0E0E0D0C0B0A0A090807060605040302020100>1 %_Br<040506070809090A0B0C0D0E0F10111213141415161718191A1B1C1D1E1E1F20212223242526272828292A2B2C2D2E2F30313233333435363738393A3B3C3D3D3E3F40414243444546474848494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F60616263646566676768696A6B6C><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454648494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081><DEDEDEDFDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E2E3E3E3E3E3E3E4E4E4E4E4E4E5E5E5E5E5E6E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9E9EAEAEAEAEAEAEBEBEBEBEBECECECECECECEDEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F1F2F2F2><0001020203040506060708090A0A0B0C0D0E0E0F1011121213141516161718191A1A1B1C1D1E1E1F2021222223242526262728292A2A2B2C2D2E2E2F303131323334353536373839393A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F505151525354555556575859595A5B>1 %_Br<6C6B6A69686767666564636261605F5E5D5C5C5B5A59585756555453525251504F4E4D4C4B4A49484847464544434241403F3E3D3D3C3B3A39383736353433333231302F2E2D2C2B2A29282827262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A09090807060504><81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E><F2F2F2F1F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E4E3E3E3E3E3E3E2E2E2E2E2E2E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDFDEDEDE><5B5A595958575655555453525151504F4E4D4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A393938373635353433323131302F2E2E2D2C2B2A2A2928272626252423222221201F1E1E1D1C1B1A1A1918171616151413121211100F0E0E0D0C0B0A0A090807060605040302020100>1 %_Br[0.4235 0.5059 0.949 0.3569 1 50 100 %_Bs0.0157 0.0549 0.8706 0 1 50 78.0899 %_Bs0.4235 0.5059 0.949 0.3569 1 50 53.9326 %_Bs0.0157 0.0549 0.8706 0 1 50 28.0899 %_Bs0.4235 0.5059 0.949 0.3569 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 27)(Unnamed gradient 27) 1 4 Bd[<3333333434343535353636363737383839393A3A3B3B3C3C3D3D3E3F3F404041414243434445454646474848494A4A4B4C4D4D4E4F4F505151525354545556575758595A5A5B5C5D5E5E5F6061626263646566666768696A6B6B6C6D6E6F7071717273747576777878797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9E9FA0A1A2A3><3333333434343535353636363737383839393A3A3B3B3C3C3D3D3E3F3F404041414243434445454646474848494A4A4B4C4D4D4E4F4F505151525354545556575758595A5A5B5C5D5E5E5F6061626263646566666768696A6B6B6C6D6E6F7071717273747576777878797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9E9FA0A1A2A3><3333333434343535353636363737383839393A3A3B3B3C3C3D3D3E3F3F404041414243434445454646474848494A4A4B4C4D4D4E4F4F505151525354545556575758595A5A5B5C5D5E5E5F6061626263646566666768696A6B6B6C6D6E6F7071717273747576777878797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9E9FA0A1A2A3><3333333434343535353636363737383839393A3A3B3B3C3C3D3D3E3F3F404041414243434445454646474848494A4A4B4C4D4D4E4F4F505151525354545556575758595A5A5B5C5D5E5E5F6061626263646566666768696A6B6B6C6D6E6F7071717273747576777878797A7B7C7D7E7F80818282838485868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9E9FA0A1A2A3>1 %_Br<A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC><A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC><A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC><A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC>1 %_Br<CCCAC8C6C4C2C0BEBCBBB9B7B6B4B3B1B0AEADABAAA9A7A6A5A4A3A1A09F9E9D9C9B9A99999897969594949392929190908F8E8E8D8D8C8C8B8B8A8A8A8989888888878787868686858585858484848484838383838382828282828282818181818181818181818181808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080><CCCAC8C6C4C2C0BEBCBBB9B7B6B4B3B1B0AEADABAAA9A7A6A5A4A3A1A09F9E9D9C9B9A99999897969594949392929190908F8E8E8D8D8C8C8B8B8A8A8A8989888888878787868686858585858484848484838383838382828282828282818181818181818181818181808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080><CCCAC8C6C4C2C0BEBCBBB9B7B6B4B3B1B0AEADABAAA9A7A6A5A4A3A1A09F9E9D9C9B9A99999897969594949392929190908F8E8E8D8D8C8C8B8B8A8A8A8989888888878787868686858585858484848484838383838382828282828282818181818181818181818181808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080><CCCAC8C6C4C2C0BEBCBBB9B7B6B4B3B1B0AEADABAAA9A7A6A5A4A3A1A09F9E9D9C9B9A99999897969594949392929190908F8E8E8D8D8C8C8B8B8A8A8A8989888888878787868686858585858484848484838383838382828282828282818181818181818181818181808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080>1 %_Br[0.2 0.2 0.2 0.2 1 59.434 0 %_Bs0.64 0.64 0.64 0.64 1 50 60 %_Bs0.8 0.8 0.8 0.8 1 13 60.5 %_Bs0.5 0.5 0.5 0.5 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 29)(Unnamed gradient 29) 1 3 Bd[0.10.10.10.11 %_Br<1A1B1C1C1D1E1F202122232425262728292A2B2C2D2E2F3031313233343536373839393A3B3C3D3E3F404041424344454546474849494A4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5D5E5F5F606161626363646465666667676869696A6A6B6B6C6D6D6E6E6F6F70707171727273737474747575767677777778787979797A7A7A7B7B7B7C7C7C7D7D7D7D7E7E7E7E7E7F7F7F7F7F7F7F7F80><1A1B1C1C1D1E1F202122232425262728292A2B2C2D2E2F3031313233343536373839393A3B3C3D3E3F404041424344454546474849494A4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5D5E5F5F606161626363646465666667676869696A6A6B6B6C6D6D6E6E6F6F70707171727273737474747575767677777778787979797A7A7A7B7B7B7C7C7C7D7D7D7D7E7E7E7E7E7F7F7F7F7F7F7F7F80><1A1B1C1C1D1E1F202122232425262728292A2B2C2D2E2F3031313233343536373839393A3B3C3D3E3F404041424344454546474849494A4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5D5E5F5F606161626363646465666667676869696A6A6B6B6C6D6D6E6E6F6F70707171727273737474747575767677777778787979797A7A7A7B7B7B7C7C7C7D7D7D7D7E7E7E7E7E7F7F7F7F7F7F7F7F80><1A1B1C1C1D1E1F202122232425262728292A2B2C2D2E2F3031313233343536373839393A3B3C3D3E3F404041424344454546474849494A4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5D5E5F5F606161626363646465666667676869696A6A6B6B6C6D6D6E6E6F6F70707171727273737474747575767677777778787979797A7A7A7B7B7B7C7C7C7D7D7D7D7E7E7E7E7E7F7F7F7F7F7F7F7F80>1 %_Br[0.1 0.1 0.1 0.1 1 50 0 %_Bs0.1 0.1 0.1 0.1 1 35.5932 4 %_Bs0.5 0.5 0.5 0.5 1 50 25.2809 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 55)(Unnamed gradient 55) 1 4 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515152535455565758595A5B5C5C5D5E5F60616263646565666768696A6B6C6C6D6E6F7071727373747576777878797A7B7C7D7D7E7F80808182838484858686878889898A><000001010101020202030303030404040505050506060607070707080808090909090A0A0A0B0B0B0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F101010101111111112121213131313141414141515151616161617171717181818181919191A1A1A1A1B1B1B1B1C1C1C1C1D1D1D1D1E1E1E1E1F1F1F1F202020202121212122222222232323232424242424252525252626262626272727272728>001 %_Br<8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C2C3C4C5C6C7C8C9CACACBCC><282828282929292A2A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F2F303030313131313232323233333334343434353535363636363737373738383838393939393A3A3A3A3B>001 %_Br<CCCCCCCCCCCDCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADBDBDBDCDCDCDDDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9E9E9EAEAEBEBECECECEDEDEEEEEFEFEFF0F0F1F1F2F2F3F3F3F4F4F5F5F6F6F7F7F8F8F8F9F9FAFAFBFBFCFCFDFDFEFEFFFF><3B3B3B3B3C3C3C3D3D3D3E3E3F3F3F4040414142424343444445464647474848494A4A4B4C4C4D4D4E4F4F50515152535354555656575858595A5B5B5C5D5E5E5F606161626364656566676869696A6B6C6D6D6E6F7071727373747576777879797A7B7C7D7E7F80818182838485868788898A8B8C8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6>001 %_Br[0 0 0 0 1 46.6667 9.4444 %_Bs0.54 0.1552 0 0 1 48.0769 43.3333 %_Bs0.8 0.23 0 0 1 59.6154 71.1111 %_Bs1 0.65 0 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Violet Eye)(Violet Eye) 1 5 Bd[<FFFFFFFFFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9><FFFEFEFDFCFCFBFAFAF9F9F8F7F7F6F6F5F4F4F3F3F2F1F1F0F0EFEEEEEDEDECECEBEAEAE9E9E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACACAC9C9C8C8C8C7C7C7C6C6C5C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBABABABAB9B9B9B8B8B8B8B7B7B7B7B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B2B1B1B1B1B0B0B0B0AFAFAFAFAFAEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7A7A7A7A7A6A6A6A6A6A6A6A5A5A5A5A5A5A5A4A4A4A4A4A4A4A3A3A3A3A3A3A3A3A2A2A2A2A2A2A2A2A2A1A1A1A1A1A1A1A1A1A0A0A0A0A0A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898><060606060606060606060606060605050505050505050505050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404040404040404040403030303030303030303030303030303030303030303030303030303030303030303030303030303030303030202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFDFCFAF9F7F5F4F2F1EFEEECEBE9E8E6E5E3E2E0DFDDDCDAD9D7D6D5D3D2D0CFCECCCBC9C8C7C5C4C3C1C0BFBDBCBBBAB8B7B6B5B3B2B1B0AEADACABAAA8A7A6A5A4A2A1A09F9E9D9C9A999897969594939291908F8D8C8B8A898887868584838281807F7E7D7C7C7B7A79787776757473727170706F6E6D6C6B6A6A6968676665656463626161605F5E5D5D5C5B5A5A59585757565555545352525150504F4E4E4D4C4C4B4A4A494848474646454544434342424140403F3F3E3D3D3C3C3B3B3A3A39393837373636353534343333323231313030302F2F2E2E2D2D2C2C2B2B2B2A2A29292828282727262626252524242423232322222121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1A191919181818181717171616161615151515141414141313131312121212111111111110101010100F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A09090909090909090808080808080808070707070707070706060606060606060606050505050505050505050504040404040404040404040404040303030303030303030303030303030302020202020202020202020202020202020202020202010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDDDCDCDCDCDC><9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625>001 %_Br<DCDCDCDCDBDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCECECDCDCCCBCBCACAC9C9C8C8C7C6C6C5C5C4C4C3C2C2C1C0C0BFBFBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B3B2B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A1A09F9E9D9D9C9B9A9999989796959494939291908F><252525252626262627272728282829292A2A2A2B2B2C2C2D2D2E2E2F2F30303131323233343435353637373838393A3A3B3C3C3D3E3E3F40404142434344454646474849494A4B4C4C4D4E4F505051525354545556575859595A5B5C5D5E5F5F60616263646566676868696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202>01 %_Br<8F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><807F7E7D7C7B7A79787777767574737271706F6F6E6D6C6B6A69686767666564636261605F5F5E5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484746464544434241403F3E3E3D3C3B3A39383736353534333231302F2E2D2D2C2B2A29282726252524232221201F1E1D1D1C1B1A19181716151514131211100F0E0D0C0C0B0A0908070605040403020100><020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000>01 %_Br[1 1 0.0235 1 1 16.6667 25.8427 %_Bs0.9137 0.5961 0 0 1 50 49.4382 %_Bs0.8627 0.1451 0 0 1 61.5385 64.6067 %_Bs0.5623 0.5 0.007 0 1 50 70.2247 %_Bs0 0 0 0 1 50 78.6517 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (White, Black)(White, Black) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_Bs0 0 0 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d0 XR40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.6 0.1412 0.9373 0.0275 k 0.6 0.1412 0.9373 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.4941 0.3529 0.9529 0.2 k 0.4941 0.3529 0.9529 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k 0.1882 0.1098 0.9059 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k 0.9216 0.2157 0.9451 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Honeycomb)(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [%AI3_Tile(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR64.0161 21.3906 m64.0161 7.9009 L52.3345 1.1543 L40.6475 7.9009 L40.6475 21.3906 L52.3345 28.1372 L64.0161 21.3906 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.9536 19.4839 m43.9536 9.8081 L52.3345 4.9702 L60.7153 9.8081 L60.7153 19.4839 L52.3345 24.3218 L43.9536 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR37.479 21.394 m37.479 7.9014 L25.7944 1.1548 L14.1099 7.9014 L14.1099 21.3911 L25.7944 28.1406 L37.479 21.394 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR17.4126 19.4839 m17.4126 9.8081 L25.7944 4.9702 L34.1743 9.8081 L34.1743 19.4839 L25.7944 24.3218 L17.4126 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR24.3691 44.0386 m24.3691 30.5459 L12.6846 23.7993 L1 30.5459 L1 44.0356 L12.6846 50.7852 L24.3691 44.0386 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.3027 42.1284 m4.3027 32.4526 L12.6846 27.6147 L21.0645 32.4526 L21.0645 42.1284 L12.6846 46.9663 L4.3027 42.1284 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR77.2871 44.3774 m77.2871 30.8843 L65.603 24.1382 L53.9185 30.8843 L53.9185 44.3765 L65.603 51.1226 L77.2871 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.2202 42.4692 m57.2202 32.7915 L65.603 27.9536 L73.9819 32.7915 L73.9819 42.4692 L65.603 47.3081 L57.2202 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR50.7471 44.3774 m50.7471 30.8843 L39.0649 24.1382 L27.3774 30.8843 L27.3774 44.3765 L39.0649 51.1235 L50.7471 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR30.6821 42.4692 m30.6821 32.7915 L39.0649 27.9517 L47.4438 32.7915 L47.4438 42.4702 L39.0649 47.3091 L30.6821 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR37.479 67.3599 m37.479 53.8682 L25.7944 47.1221 L14.1099 53.8682 L14.1099 67.3599 L25.7944 74.1074 L37.479 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR17.4126 65.4526 m17.4126 55.7749 L25.7944 50.937 L34.1743 55.7749 L34.1772 65.4526 L25.7944 70.2905 L17.4126 65.4526 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR64.0161 67.3599 m64.0161 53.8682 L52.3345 47.1221 L40.6475 53.8682 L40.6475 67.3599 L52.3345 74.1074 L64.0161 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.9536 65.4526 m43.9536 55.7749 L52.3345 50.937 L60.7153 55.7749 L60.7153 65.4526 L52.3345 70.2905 L43.9536 65.4526 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Jungle Stripes)(Jungle Stripes) 37 19 73 55 [%AI3_Tile(0 O 0 R 1 0 1 0 k 1 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0 0.6863 0 k 0.3451 0 0.6863 0 K) @(%AI6_BeginPatternLayer0 J 0 j 9 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Mediterranean Tiles)(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [%AI3_Tile(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.9725 0.9451 0 0 k 0.9725 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.6514 7.1123 m43.6514 16.9727 L33.7915 16.9727 L33.7915 7.1123 L43.6514 7.1123 Lf26.8296 23.9307 m26.8296 33.791 L16.9702 33.791 L16.9702 23.9307 L26.8296 23.9307 Lf10.0093 7.1094 m10.0093 16.9697 L0.1538 16.9697 L0.1538 7.1094 L10.0093 7.1094 Lf43.6494 40.752 m43.6494 50.6113 L33.7876 50.6113 L33.7876 40.752 L43.6494 40.752 Lf10.0083 40.749 m10.0083 50.6084 L0.1499 50.6084 L0.1499 40.749 L10.0083 40.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 k([Registration]) Pc0 0 0 0 k(White) Pc0 0 0 1 k(Black) Pc0.8 0 1 0 k(Green C=80 Y=100) Pc0 0 1 0 k(Yellow) Pc0 1 1 0.2 k(New Color Swatch 1) Pc1 0.65 0.0314 0.15 k(New Color Swatch 2) PcBb2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(White, Black) PcBb0 0 0 0 Bh2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black, White Radial) PcBb2 (Copper) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper) PcBb2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Rainbow) PcBb0 0 0 0 Bh2 (Violet Eye) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Violet Eye) PcBb2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Tropical Sunset) Pc(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Mediterranean Tiles) Pc(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Pyramids) Pc(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Honeycomb) Pc(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Jungle Stripes) Pc(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Azure Rings) Pc(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Camouflage) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 A300 Ar0 R0 G0 J 0 j 0.45 w 10 M []0 d0 XR167.3916 273.4258 m167.3916 545.5254 l439.4922 545.5254 l439.4922 273.4258 l167.3916 273.4258 ls169.9419 296.9746 m167.3916 296.9746 lS1 D169.9419 310.7754 m167.3916 310.7754 lS169.9419 320.5254 m167.3916 320.5254 lS169.9419 328.1758 m167.3916 328.1758 lS0 D169.9419 334.3252 m167.3916 334.3252 lS169.9419 339.5752 m167.3916 339.5752 lS169.9419 344.0752 m167.3916 344.0752 lS1 D169.9419 348.125 m167.3916 348.125 lS172.4917 351.7246 m167.3916 351.7246 lS0 D169.9419 375.2754 m167.3916 375.2754 lS1 D169.9419 389.0752 m167.3916 389.0752 lS169.9419 398.8252 m167.3916 398.8252 lS169.9419 406.3252 m167.3916 406.3252 lS0 D169.9419 412.625 m167.3916 412.625 lS169.9419 417.875 m167.3916 417.875 lS169.9419 422.375 m167.3916 422.375 lS1 D169.9419 426.4253 m167.3916 426.4253 lS0 D172.4917 429.875 m167.3916 429.875 lS1 D169.9419 453.5752 m167.3916 453.5752 lS0 D169.9419 467.2251 m167.3916 467.2251 lS169.9419 477.125 m167.3916 477.125 lS1 D169.9419 484.625 m167.3916 484.625 lS0 D169.9419 490.7754 m167.3916 490.7754 lS1 D169.9419 496.0254 m167.3916 496.0254 lS0 D169.9419 500.6753 m167.3916 500.6753 lS169.9419 504.5752 m167.3916 504.5752 lS1 D172.4917 508.1753 m167.3916 508.1753 lS169.9419 531.7251 m167.3916 531.7251 lS167.3916 278.5254 m167.3916 273.4258 lS194.6919 275.9746 m194.6919 273.4258 lS0 D210.5918 275.9746 m210.5918 273.4258 lS221.9917 275.9746 m221.9917 273.4258 lS230.8418 275.9746 m230.8418 273.4258 lS237.8916 275.9746 m237.8916 273.4258 lS244.042 275.9746 m244.042 273.4258 lS249.292 275.9746 m249.292 273.4258 lS253.9419 275.9746 m253.9419 273.4258 lS258.1416 278.5254 m258.1416 273.4258 lS285.4419 275.9746 m285.4419 273.4258 lS301.3418 275.9746 m301.3418 273.4258 lS312.7422 275.9746 m312.7422 273.4258 lS321.4414 275.9746 m321.4414 273.4258 lS328.6416 275.9746 m328.6416 273.4258 lS334.792 275.9746 m334.792 273.4258 lS340.042 275.9746 m340.042 273.4258 lS344.6914 275.9746 m344.6914 273.4258 lS348.7422 278.5254 m348.7422 273.4258 lS1 D376.042 275.9746 m376.042 273.4258 lS0 D392.0918 275.9746 m392.0918 273.4258 lS403.4922 275.9746 m403.4922 273.4258 lS412.1914 275.9746 m412.1914 273.4258 lS419.3916 275.9746 m419.3916 273.4258 lS425.542 275.9746 m425.542 273.4258 lS430.792 275.9746 m430.792 273.4258 lS435.4414 275.9746 m435.4414 273.4258 lSLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 255 79 79 Lb(Layer 2) Ln0 A0 R1 0.65 0.0314 0.15 K0 J 0 j 0.7 w 10 M [10 2 2 2 ]0 d0 XR167.3916 513.4253 m178.1919 513.4253 l181.042 513.2754 l189.1416 513.2754 l191.8418 513.125 l194.542 513.125 l197.2417 512.9751 l200.0918 512.9751 l202.792 512.8252 l205.4917 512.6753 l208.1919 512.6753 l210.8916 512.5254 l213.5918 512.375 l216.292 512.2251 l219.1416 512.0752 l221.8418 511.7754 l224.542 511.625 l227.2417 511.3252 l229.9419 511.0254 l232.6416 510.7251 l235.3418 510.2754 l238.1919 509.9751 l240.8916 509.5254 l243.5918 509.0752 l246.292 508.4751 l248.9917 507.875 l251.6919 507.2754 l254.3916 506.6753 l257.2417 505.9253 l259.9419 505.1753 l262.6416 504.4253 l265.3418 503.5254 l268.042 502.625 l270.7417 501.7251 l273.4419 500.6753 l276.292 499.625 l278.9917 498.4253 l281.6919 497.2251 l284.3916 496.0254 l287.0918 494.6753 l289.792 493.3252 l292.4917 491.9751 l295.3418 490.3252 l298.042 488.8252 l300.7417 487.1753 l303.4419 485.375 l306.1416 483.5752 l308.8418 481.7754 l311.542 479.6753 l314.3916 477.7251 l317.0918 475.4751 l319.792 473.2251 l322.4922 470.8252 l325.1914 468.2754 l327.8916 465.7251 l330.5918 462.875 l333.4414 460.0254 l336.1416 457.0254 l338.8418 453.875 l341.542 450.4253 l344.2422 446.9751 l346.9414 443.375 l349.6416 439.4751 l352.4922 435.4253 l355.1914 431.2251 l357.8916 426.7251 l360.5918 422.0752 l363.292 417.125 l365.9922 412.0254 l368.6914 406.7754 l371.542 401.2251 l374.2422 395.375 l376.9414 389.375 l379.6416 383.0752 l382.3418 376.625 l385.042 370.0254 l387.7422 363.125 l390.5918 355.9258 l393.292 348.7246 l395.9922 341.2246 l398.6914 333.4258 l401.3916 325.625 l404.0918 317.6758 l406.792 309.5752 l409.6416 301.3252 l412.3418 292.9258 l415.042 284.375 l417.7422 275.8252 l418.4863 273.4258 lS0 1 1 0.2 K[]0 d167.3916 502.4751 m169.042 509.6753 l170.0918 513.875 l170.6919 516.7251 l171.5918 521.6753 l171.8916 523.3252 l172.3418 523.9253 l172.6416 523.9253 l172.792 523.3252 l173.0918 522.2754 l173.2417 520.1753 l173.542 516.875 l173.8418 511.9253 l174.5918 497.2251 l174.8916 493.625 l175.042 491.6753 l175.3418 490.625 l175.4917 490.0254 l175.792 490.4751 l175.9419 491.6753 l176.2417 493.7754 l176.3916 496.9253 l176.8418 502.9253 l177.4419 513.875 l177.7417 517.9253 l177.8916 520.625 l178.1919 522.5752 l178.1919 523.4751 l178.6416 525.2754 l179.0918 526.625 l179.542 527.2251 l180.1416 526.9253 l180.4419 526.0254 l181.042 524.0752 l181.1919 522.4253 l183.7417 492.7251 l184.042 492.4253 l184.3418 493.0254 l184.6416 494.375 l185.0918 496.7754 l186.4419 507.2754 l186.8916 510.7251 l187.4917 517.9253 l188.0918 523.625 l188.3916 526.625 l188.6919 528.4253 l188.9917 529.7754 l189.1416 529.9253 l189.5918 530.375 l189.8916 529.9253 l190.3418 528.5752 l190.9419 526.1753 l191.8418 520.7754 l192.1416 518.0752 l192.5918 514.4751 l193.3418 506.2251 l193.792 499.7754 l194.2417 496.4751 l194.542 493.9253 l194.542 493.625 l195.4419 489.125 l195.8916 487.1753 l196.3418 486.125 l196.792 485.9751 l197.0918 486.4253 l197.2417 487.1753 l197.542 488.6753 l197.8418 491.0752 l198.1416 494.6753 l198.4419 499.1753 l199.1919 513.2754 l199.4917 517.9253 l199.792 520.7754 l200.0918 522.7251 l200.3916 525.2754 l200.9917 527.5254 l201.4419 529.0254 l202.1919 530.0752 l202.792 530.375 l203.3916 530.0752 l203.9917 529.0254 l204.7417 526.7754 l205.4917 523.9253 l206.0918 520.625 l206.9917 515.8252 l208.1919 506.8252 l209.9917 490.4751 l210.4419 486.7251 l210.8916 484.3252 l211.792 480.7251 l212.3916 479.2251 l212.8418 478.7754 l213.1416 478.9253 l213.5918 479.9751 l213.5918 480.2754 l213.8916 481.9253 l214.1919 484.4751 l214.6416 488.5254 l215.0918 496.4751 l215.6919 504.4253 l215.9917 508.0254 l216.292 511.3252 l216.8916 515.0752 l217.4917 518.5254 l218.3916 522.2754 l219.1416 524.6753 l219.8916 526.7754 l220.792 528.5752 l221.8418 529.4751 l222.8916 529.7754 l223.9419 529.1753 l224.542 528.5752 l225.5918 526.9253 l226.9419 524.2251 l227.2417 523.4751 l228.4419 519.7251 l229.9419 514.4751 l231.292 508.4751 l232.6416 502.1753 l235.3418 487.3252 l238.042 472.9253 l238.1919 472.3252 l239.8418 463.625 l240.292 462.5752 l240.7417 462.125 l240.8916 462.2754 l241.1919 463.0254 l241.6416 464.5254 l242.0918 467.0752 l243.292 475.9253 l243.5918 477.7251 l244.6416 484.625 l245.6919 492.2754 l246.292 495.5752 l247.1919 499.7754 l248.3916 504.7251 l248.9917 506.8252 l250.3418 510.7251 l251.6919 514.1753 l253.3418 517.3252 l254.3916 518.9751 l256.3418 521.375 l257.2417 522.125 l259.3418 523.625 l259.9419 523.7754 l262.6416 524.5254 l265.3418 524.375 l268.042 523.625 l270.7417 522.125 l273.4419 520.3252 l276.292 518.0752 l278.9917 515.375 l281.6919 512.5254 l284.3916 509.375 l287.0918 506.0752 l289.792 502.4751 l292.4917 498.7251 l295.3418 494.8252 l298.042 490.9253 l300.7417 486.7251 l303.4419 482.5254 l306.1416 478.3252 l308.8418 473.8252 l311.542 469.3252 l314.3916 464.8252 l317.0918 460.1753 l319.792 455.5254 l322.4922 450.875 l325.1914 445.9253 l327.8916 441.125 l330.5918 436.1753 l333.4414 431.2251 l336.1416 426.125 l338.8418 421.0254 l341.542 415.7754 l344.2422 410.5254 l346.9414 405.2754 l349.6416 399.875 l352.4922 394.3252 l355.1914 388.625 l357.8916 382.9258 l360.5918 377.0752 l363.292 371.0752 l365.9922 364.7754 l368.6914 359.5254 l371.542 354.2754 l374.2422 348.875 l376.9414 343.3252 l379.6416 337.7754 l382.3418 332.2246 l385.042 326.5254 l387.7422 320.5254 l390.5918 314.5254 l393.292 308.375 l395.9922 302.375 l398.6914 296.5254 l401.3916 290.6758 l404.0918 284.6758 l406.792 278.5254 l409.0449 273.4258 lSu171.2319 273.4258 m171.292 273.7246 l171.4419 274.4746 l171.4419 275.0752 l171.5918 275.6758 l171.7417 276.2754 l171.8916 276.7246 l172.042 277.0254 l172.042 277.3252 l172.1919 277.625 l172.3418 277.7754 l172.6416 277.7754 l172.6416 277.625 l172.792 277.3252 l172.9419 277.1758 l173.0918 276.7246 l173.2417 276.2754 l173.2417 275.6758 lS173.2417 275.6758 m173.3916 275.0752 l173.542 274.3252 l173.6919 273.5752 lS176.7666 273.4258 m176.8418 274.7754 l177.1416 277.625 l177.292 280.0254 l177.4419 282.125 l177.5918 284.2246 l177.8916 286.3252 l178.042 288.125 l178.1919 289.7754 l178.1919 290.2246 l178.4917 291.5752 l178.6416 292.9258 l178.792 293.9746 l178.9419 295.0254 l179.0918 295.9258 l179.2417 296.6758 l179.3916 297.2754 l179.6919 297.875 l179.8418 298.3252 l179.9917 298.4746 l180.4419 298.4746 l180.5918 298.1758 l180.7417 297.875 l180.8916 297.4258 l181.042 297.2754 l181.1919 296.6758 l181.3418 295.9258 l181.4917 295.0254 l181.6416 293.9746 l181.792 292.9258 lS181.792 292.9258 m181.9419 291.5752 l182.2417 290.0752 l182.3916 288.4258 l182.542 286.4746 l182.6919 284.6758 l182.9917 282.5752 l183.1416 280.3252 l183.292 277.7754 l183.4419 275.5254 l183.5581 273.4268 lSU183.8882 273.4258 m184.6416 278.8252 l185.3916 285.2754 l186.4419 293.5254 l186.7417 297.2754 l187.3418 304.1758 l188.0918 313.3252 l188.3916 317.2246 l188.6919 319.9258 l188.9917 322.0254 l189.1416 322.7754 l189.5918 324.125 l189.8916 324.5752 l190.3418 324.5752 l190.9419 323.5254 l191.6919 321.2754 l191.8418 320.375 l192.1416 318.5752 l194.542 299.8252 l195.1416 298.0254 l195.7417 297.125 l196.1919 296.9746 l196.6416 297.5752 l196.9419 298.625 l197.2417 300.4258 l197.542 302.2246 l197.8418 305.0752 l198.1416 308.8252 l198.4419 314.2246 l198.8916 323.9746 l199.3418 332.6758 l199.4917 336.875 l199.792 340.1758 l200.0918 342.7246 l200.3916 346.3252 l200.8418 349.625 l201.4419 352.625 l202.042 355.3252 l202.792 357.2754 l203.3916 358.4746 l203.9917 359.0752 l204.5918 358.7754 l205.4917 357.7246 l206.0918 356.2246 l206.8418 353.6758 l208.1919 347.5254 l209.9917 335.9746 l210.4419 333.5752 l210.8916 332.2246 l210.8916 331.9258 l211.4917 330.875 l212.0918 330.5752 l212.542 331.0254 l212.9917 332.0752 l213.4419 333.5752 l213.5918 335.0752 l213.8916 337.1758 l214.1919 340.3252 l214.4917 344.5254 l214.9419 351.7246 l215.6919 363.7246 l215.9917 369.125 l216.292 373.1758 l216.8916 378.2754 l217.4917 383.375 l218.3916 389.0752 l219.1416 393.5752 l219.8916 397.7754 l220.792 401.8252 l221.8418 405.5752 l222.7417 408.5752 l223.9419 410.9751 l224.542 411.875 l225.5918 413.2251 l226.792 413.8252 l227.2417 413.8252 l228.4419 413.5254 l229.6416 412.4751 l229.9419 412.1753 l231.292 410.0752 l232.6416 407.0752 l233.8418 404.0752 l235.3418 399.5752 l238.042 392.0752 l238.1919 391.7754 l239.9917 387.875 l240.292 387.875 l240.7417 388.4746 l240.8916 388.9258 l241.1919 390.4258 l241.6416 392.9746 l241.9419 396.4253 l242.542 402.2754 l243.4419 410.5254 l243.5918 411.5752 l244.4917 420.875 l245.6919 431.5254 l246.292 436.625 l247.1919 442.9253 l248.2417 450.4253 l248.9917 454.7754 l250.1919 461.375 l251.6919 468.7251 l253.1919 474.7251 l254.3916 479.8252 l255.8916 485.0752 l257.2417 488.6753 l258.7417 492.875 l259.9419 495.2754 l261.7417 498.875 l262.6416 500.2251 l264.7417 503.0752 l265.3418 503.8252 l267.5918 505.9253 l268.042 506.2251 l270.4419 507.5752 l270.7417 507.7251 l273.1416 508.1753 l273.4419 508.1753 l276.292 507.7251 l278.9917 506.5254 l281.6919 504.875 l284.3916 502.7754 l287.0918 500.2251 l289.792 497.2251 l292.4917 494.0752 l295.3418 490.625 l298.042 487.0254 l300.7417 483.2754 l303.4419 479.375 l306.1416 475.1753 l308.8418 470.9751 l311.542 466.625 l314.3916 462.2754 l317.0918 457.7754 l319.792 453.125 l322.4922 448.4751 l325.1914 443.6753 l327.8916 438.875 l330.5918 434.0752 l333.4414 429.125 l336.1416 424.1753 l338.8418 419.0752 l341.542 413.8252 l344.2422 408.7251 l346.9414 403.3252 l349.6416 397.9253 l352.4922 392.5254 l355.1914 386.8252 l357.8916 381.125 l360.5918 375.4258 l363.292 369.4258 l365.9922 363.2754 l368.6914 357.875 l371.542 352.625 l374.2422 347.375 l376.9414 341.8252 l379.6416 336.4258 l382.3418 330.7246 l385.042 325.0254 l387.7422 319.1758 l390.5918 313.1758 l393.292 307.0254 l395.9922 301.0254 l398.6914 295.3252 l401.3916 289.4746 l404.0918 283.4746 l406.792 277.3252 l408.5352 273.4697 lS1 w 4 M409.0449 273.4258 m408.5557 273.4258 lN418.4863 273.4258 m409.0449 273.4258 lN408.5557 273.4258 m167.3916 273.4258 l167.3916 545.5254 l439.4922 545.5254 l439.4922 273.4258 l418.4863 273.4258 lN1 Au0 R0.5 G0.45 w 10 M [1 2 ]0 d439.4922 351.7246 m167.3916 351.7246 lS439.4922 429.875 m167.3916 429.875 lS439.4922 508.1753 m167.3916 508.1753 lS194.6919 545.5254 m194.6919 273.4258 lS210.5918 545.5254 m210.5918 273.4258 lS221.9917 545.5254 m221.9917 273.4258 lS230.8418 545.5254 m230.8418 273.4258 lS237.8916 545.5254 m237.8916 273.4258 lS244.042 545.5254 m244.042 273.4258 lS249.292 545.5254 m249.292 273.4258 lS253.9419 545.5254 m253.9419 273.4258 lS258.1416 545.5254 m258.1416 273.4258 lS285.4419 545.5254 m285.4419 273.4258 lS301.3418 545.5254 m301.3418 273.4258 lS312.7422 545.5254 m312.7422 273.4258 lS321.4414 545.5254 m321.4414 273.4258 lS328.6416 545.5254 m328.6416 273.4258 lS334.792 545.5254 m334.792 273.4258 lS340.042 545.5254 m340.042 273.4258 lS344.6914 545.5254 m344.6914 273.4258 lS348.7422 545.5254 m348.7422 273.4258 lS376.042 545.5254 m376.042 273.4258 lS392.0918 545.5254 m392.0918 273.4258 lS403.4922 545.5254 m403.4922 273.4258 lS412.1914 545.5254 m412.1914 273.4258 lS419.3916 545.5254 m419.3916 273.4258 lS425.542 545.5254 m425.542 273.4258 lS430.792 545.5254 m430.792 273.4258 lS435.4414 545.5254 m435.4414 273.4258 lSU0 A1 w 4 M []0 d175.3037 273.4258 m175.4917 273.875 l178.1919 280.1758 l181.042 286.4746 l183.7417 292.9258 l186.4419 299.5254 l189.1416 306.125 l191.8418 312.7246 l194.542 319.3252 l197.2417 326.0752 l200.0918 332.9746 l202.792 339.7246 l205.4917 346.625 l208.1919 353.375 l210.8916 360.125 l213.5918 367.1758 l216.292 374.0752 l219.1416 380.9746 l221.8418 387.875 l224.542 394.7754 l227.2417 401.8252 l229.9419 408.7251 l232.6416 415.625 l235.3418 422.5254 l238.1919 429.4253 l240.8916 436.1753 l243.5918 442.9253 l246.292 449.5254 l248.9917 455.9751 l251.6919 461.9751 l254.3916 467.5254 l257.2417 472.625 l259.9419 476.6753 l262.6416 480.125 l265.3418 482.9751 l268.042 485.375 l270.7417 487.1753 l273.4419 488.5254 l276.292 489.2754 l278.9917 489.5752 l281.6919 489.5752 l284.3916 489.4253 l287.0918 488.8252 l289.792 488.0752 l292.4917 487.1753 l295.3418 486.125 l298.042 484.9253 l300.7417 483.7251 l303.4419 482.2251 l306.1416 480.5752 l308.8418 478.7754 l311.542 476.9751 l314.3916 475.0254 l317.0918 472.9253 l319.792 470.8252 l322.4922 468.4253 l325.1914 466.0254 l327.8916 463.4751 l330.5918 460.7754 l333.4414 457.9253 l336.1416 454.9253 l338.8418 451.7754 l341.542 448.4751 l344.2422 445.0254 l346.9414 441.4253 l349.6416 437.6753 l352.4922 433.625 l355.1914 429.4253 l357.8916 424.9253 l360.5918 420.2754 l363.292 415.4751 l365.9922 410.375 l368.6914 405.125 l371.542 399.5752 l374.2422 393.875 l376.9414 387.875 l379.6416 381.7246 l382.3418 375.2754 l385.042 368.5254 l387.7422 361.7754 l390.5918 354.5752 l393.292 347.375 l395.9922 339.875 l398.6914 332.2246 l401.3916 324.4258 l404.0918 316.4746 l406.792 308.375 l409.6416 300.125 l412.3418 291.7246 l415.042 283.3252 l417.7422 274.7754 l418.1602 273.4258 lNLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 11 0 153 153 Lb(Layer 3) Ln0 A0 To1 0 0 1 202.103 249.9023 0 Tp0 TvTP-45.334 0 Td3 Tr0 J 0 j 1 w 4 M []0 d0 XR%_ 0 50 XQ/_Times-Roman 4 4 -1.7148 Tf0 Ts100 100 Tz0 Tt%_0 0 100 100 Xu%AI55J_GlyphSubst: GlyphSubstNone 0 TA%_ 0 XL0 TY0 TV59.376 0 XbXB0 0 5 TC100 100 200 TW25 TG0 0 0 Ti1 Ta0 1 2 2 99 Th0 Tq0 Tg16.4933 0 Tl0 Tc0 Tw(SPORTS10/PASSAGE10/TRD10/TRD) Tx (_cherry74) Tx (_pavel) Tx (\r) TX TOu0 To1 0 0 1 161.7993 426.5986 0 Tp0 TvTP-19.1849 0 Td0 Tr0 O0 0 0 1 k/_Times-Roman 10.0032 10.0032 -4.2885 Tf1 TA22.5072 0 XbXB2 Ta0 1 2 2 3 Th0 0 Tl(10) Tx 1 0 Tk/_Symbol 8.7528 8.7528 -2.5646 Tf3.126 Ts(-) Tx 1 0 Tk/_Times-Roman 8.7528 8.7528 -3.7524 Tf(3) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 161.7993 509.8218 0 Tp0 TvTP-19.1849 0 Td0 Tr/_Times-Roman 10.0032 10.0032 -4.2885 Tf0 Ts(10) Tx 1 0 Tk/_Symbol 8.7528 8.7528 -2.5646 Tf3.126 Ts(-) Tx 1 0 Tk/_Times-Roman 8.7528 8.7528 -3.7524 Tf(2) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 161.7993 348.5322 0 Tp0 TvTP-19.1849 0 Td0 Tr/_Times-Roman 10.0032 10.0032 -4.2885 Tf0 Ts(10) Tx 1 0 Tk/_Symbol 8.7528 8.7528 -2.5646 Tf3.126 Ts(-) Tx 1 0 Tk/_Times-Roman 8.7528 8.7528 -3.7524 Tf(4) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 161.7993 271.1982 0 Tp0 TvTP-19.1849 0 Td0 Tr/_Times-Roman 10.0032 10.0032 -4.2885 Tf0 Ts(10) Tx 1 0 Tk/_Symbol 8.7528 8.7528 -2.5646 Tf3.126 Ts(-) Tx 1 0 Tk(5) Tx 1 0 Tk(\r) TX TOUu0 To1 0 0 1 257.8916 263.8418 0 Tp0 TvTP-5 0 Td0 Tr/_Times-Roman 10 10 -4.2871 Tf0 Ts21.6 0 XbXB1 Ta(10) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 168.2324 263.8418 0 Tp0 TvTP-2.5 0 Td0 Tr(1) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 348.7344 263.8418 0 Tp0 TvTP-7.5 0 Td0 Tr(100) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 437.3857 263.8418 0 Tp0 TvTP-10 0 Td0 Tr(10) Tx 1 0 Tk(0) Tx 1 0 Tk(0) Tx 1 0 Tk(\r) TX TOU0 To1 0 0 1 322.1016 527.4038 0 Tp0 TvTP0 Tr0 TA59.376 0 XbXB0 Ta0 1 2 2 99 Th12 0 Tl(25) Tx ( ) Tx /_Symbol 10 10 -2.93 Tf(m) Tx /_Times-Roman 10 10 -4.2871 Tf(m ) Tx (Mylar) Tx /_Times-Roman 13 13 -5.5732 Tf(/) Tx /_Times-Roman 10 10 -4.2871 Tf(1.5 ) Tx (mm ) Tx (air) Tx (\r) TX T*/_Symbol 10 10 -2.93 Tf(g = ) Tx (2 ) Tx (\264) Tx /_Times-Roman 10 10 -4.2871 Tf(10) Tx /_Times-Roman 8 8 -3.4297 Tf4 Ts(4) Tx (\r) TX TO0 To1 0 0 1 251.4893 535.3682 0 Tp0 TvTP-38.7451 0 Td0 Tr/_Times-Roman 10 10 -4.2871 Tf0 Ts1 Ta10 0 Tl(Without absorption) Tx (\r) TX TO0 To1 0 0 1 279.4932 396.0469 0 Tp0 TvTP-32.356 0 Td0 Tr0 1 1 0.2 k(With absorption) Tx (\r) TX TO0 To1 0 0 1 221.0615 433.4966 0 Tp0 TvTP-17.6392 0 Td0 Tr(200 foils) Tx (\r) TX TO0 To1 0 0 1 375.8271 463.5942 0 Tp0 TvTP-31.5137 0 Td0 Tr1 0.65 0.0314 0.15 k(Single interface) Tx (\r) TX TOu800 Ar359.667 443.6665 m352.5127 439.5864 l357.3057 448.6235 lF/BBAccumRotation (3.141593) XT0 R1 0.65 0 0.1 K0.7 w356.4014 443.5278 m373.5029 460.6313 lS/BBAccumRotation (3.141593) XTUu0 O0 1 1 0.2 k1 w253.7617 418.2246 m249.7031 425.3926 l258.7246 420.5703 lF/BBAccumRotation (0.782201) XT0 R0 1 1 0.2 K253.6328 421.4902 m269.3672 405.5859 lS/BBAccumRotation (0.782201) XTUu0 O0 1 1 0.2 k240.7764 451.8613 m247.9307 455.9424 l243.1377 446.9063 lF/BBAccumRotation (5.497787) XT0 R0 1 1 0.2 K0.7 w244.042 452 m235.3662 443.3262 lS/BBAccumRotation (5.497787) XTUu0 O0 1 1 0.2 k1 w229.4888 461.6157 m236.6431 465.6978 l231.8501 456.6606 lF/BBAccumRotation (5.497787) XT0 R0 1 1 0.2 K0.7 w232.7544 461.7544 m216 445 lS/BBAccumRotation (5.497787) XTUu0 O0 0 0 1 k1 w244.5103 515.3604 m237.356 511.2793 l242.1489 520.3154 lF/BBAccumRotation (2.356195) XT0 R0 G0.7 w241.2446 515.2217 m260.1567 534.0005 lS/BBAccumRotation (2.356195) XTUu0 O0 0 0 1 k1 w236.6899 525.8418 m229.5356 521.7607 l234.3286 530.7969 lF/BBAccumRotation (2.356195) XT0 R0 G0.7 w233.4243 525.7031 m242.3521 534.3164 lS/BBAccumRotation (2.356195) XTUu0 To1 0 0 1 306.0649 252.7236 0 Tp0 TvTP-51.655 0 Td0 Tr0 O0 0 0 1 k1 w1 TA21.6 0 XbXB0 1 2 2 3 Th0 0 Tl(   x-ray ener) Tx 1 18 Tk(gy   ) Tx 1 0 Tk/_Symbol 10 10 -2.93 Tf(w) Tx 1 0 Tk/_Times-Italic 10 10 -4.1309 Tf( ) Tx 1 0 Tk/_Times-Roman 10 10 -4.2871 Tf(  \(keV\)) Tx 1 0 Tk(\r) TX TOu*u0 g318.5322 258.1006 m318.5322 258.4092 L314.9346 258.4092 L314.9346 258.1006 l318.5322 258.1006 Lf*U*u316.3311 256.1768 m316.8975 256.8643 317.4971 256.9346 317.8057 256.9346 c318.4932 256.9346 318.9502 256.585 318.9502 255.8584 c318.9502 255.2998 318.5029 254.1045 318.333 253.667 c318.2725 253.4971 318.1631 253.2178 318.1631 252.9678 c318.1631 252.7588 318.2236 252.6396 318.4131 252.6396 c318.6826 252.6396 319.1299 252.8584 319.4189 253.876 c319.4697 254.0244 319.4697 254.0537 319.5693 254.0537 c319.5986 254.0537 319.6885 254.0537 319.6885 253.9541 c319.6885 253.8955 319.3389 252.4209 318.3838 252.4209 c317.9346 252.4209 317.5654 252.7295 317.5654 253.2471 c317.5654 253.4365 317.6162 253.5771 317.6748 253.7354 c317.8545 254.1943 318.3135 255.4092 318.3135 256.0283 c318.3135 256.3564 318.2139 256.7158 317.7744 256.7158 c316.7393 256.7158 316.1807 255.5986 316.1221 255.3506 c315.4932 252.8096 L315.4443 252.6006 315.3135 252.4209 315.085 252.4209 c314.9658 252.4209 314.7959 252.4795 314.7959 252.7002 c314.7959 252.7393 314.7959 252.7588 314.835 252.9092 c316.2803 258.6885 L316.2803 258.6982 316.3096 258.8271 316.3096 258.8564 c316.3096 258.9561 316.29 259.0264 315.8115 259.0264 c315.6729 259.0264 315.5732 259.0264 315.5732 259.1357 c315.5732 259.3252 315.6826 259.335 315.8018 259.3447 c316.8193 259.4248 L316.8486 259.4346 316.9482 259.4443 316.9775 259.4443 c317.0576 259.4443 317.1182 259.415 317.1182 259.3252 c317.1182 259.3057 317.0967 259.2256 317.0869 259.1963 C316.3311 256.1768 lf*UUUu0 To0 1 -1 0 138.4995 402.9263 0 Tp0 TvTP-103.0173 0 Td0 Tr0 0 0 1 k/_Times-Italic 10 10 -4.1309 Tf(dS/d) Tx 1 0 Tk/_Times-Roman 10 10 -4.2871 Tf(\() Tx 1 0 Tk/_Times-Italic 10 10 -4.1309 Tf(  ) Tx 1 0 Tk/_Symbol 10 10 -2.93 Tf(w) Tx 1 0 Tk/_Times-Roman 10 10 -4.2871 Tf(\), dif) Tx 1 18 Tk(ferential yield per interface \(keV/keV\)) Tx 1 0 Tk(\r) TX TO/BBAccumRotation (1.570796) XTu*u0 g132.644 324.6035 m132.335 324.6035 L132.335 321.0078 L132.644 321.0078 l132.644 324.6035 Lf/BBAccumRotation (1.570796) XT*U*u134.5669 322.4023 m133.8794 322.9707 133.8096 323.5684 133.8096 323.877 c133.8096 324.5645 134.1582 325.0234 134.8857 325.0234 c135.4438 325.0234 136.6396 324.5742 137.0776 324.4043 c137.2471 324.3457 137.5264 324.2363 137.7754 324.2363 c137.9844 324.2363 138.104 324.2949 138.104 324.4844 c138.104 324.7539 137.8848 325.2012 136.8687 325.4902 c136.7192 325.541 136.6895 325.541 136.6895 325.6406 c136.6895 325.6699 136.6895 325.7598 136.7891 325.7598 c136.8486 325.7598 138.3232 325.4121 138.3232 324.4551 c138.3232 324.0059 138.0146 323.6387 137.4966 323.6387 c137.3071 323.6387 137.1675 323.6875 137.0083 323.748 c136.5498 323.9258 135.334 324.3848 134.7163 324.3848 c134.3877 324.3848 134.0288 324.2852 134.0288 323.8477 c134.0288 322.8105 135.145 322.252 135.394 322.1934 c137.9346 321.5645 L138.144 321.5156 138.3232 321.3867 138.3232 321.1563 c138.3232 321.0371 138.2637 320.8672 138.0444 320.8672 c138.0044 320.8672 137.9844 320.8672 137.835 320.9082 c132.0562 322.3516 L132.0459 322.3516 131.9165 322.3828 131.8867 322.3828 c131.7871 322.3828 131.7173 322.3633 131.7173 321.8848 c131.7173 321.7441 131.7173 321.6445 131.6074 321.6445 c131.4185 321.6445 131.4082 321.7539 131.3984 321.875 c131.3188 322.8906 L131.3086 322.9199 131.2988 323.0195 131.2988 323.0508 c131.2988 323.1289 131.3286 323.1895 131.4185 323.1895 c131.4385 323.1895 131.5181 323.1699 131.5479 323.1602 C134.5669 322.4023 lf/BBAccumRotation (1.570796) XT*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_typography_AI5 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF