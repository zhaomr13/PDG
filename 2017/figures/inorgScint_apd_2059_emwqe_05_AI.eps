%!PS-Adobe-3.1 EPSF-3.0
%%Title: apd_2059_emwqe_05_AI1.eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0
%AI9_PrintingDataBegin
%%For: Piotr Zyla
%%CreationDate: 1/30/06
%%BoundingBox: 0 0 311 242
%%HiResBoundingBox: 0 0 310.0206 241.8252
%%CropBox: 0 0 310.0206 241.8252
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: apd_2059_emwqe_05_AI1.eps 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2006-01-27T23:11:05Z</xap:CreateDate>
  <xap:ModifyDate>2006-01-30T23:19:47Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>200</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqlWn6ZpssMsk&#xA;lpC7tcXJZ2jUkn136kjFVZtO0NZUia1tVlkBMcZSMMwWnLiKVNK74qgIb7yXMEZPqYWSJJ0Z41jU&#xA;xyOY0NXVR8TqQB1wqrk+UgZQfqAMIYzA+j8ASnMt4ceQrXpgVsL5VMohAsTKQCIx6PKhUsNuu6qT&#xA;8sVUYbryXNP6ET6fJKeBCr6Jr6oYpx8eQQkUwqt1i98n6Rax3V9FAsMsogjMVuZ2aQoZOISFJG+w&#xA;hbp0wKlY85/li1ml5FcWk8EtwbSIwW7TM84g+s8ESONnb9yQ9QKUwquXzf8Aly2mWmpqI2sb/mbS&#xA;UWM55pGgd5Aoh5CMIeXMjjTeuKufzj+WKM4N1YnhIsRKxBlLNz3VghDKPRfkw+FeJ5EUxVXj8x/l&#xA;7JNbwq9r6l1Mbe2rAQHkV1jIVinEj1JETlXjyYCtSMVT79EaT/yxQf8AIpP6YFd+iNJ/5YoP+RSf&#xA;0xV36I0n/lig/wCRSf0xV36I0n/lig/5FJ/TFXfojSf+WKD/AJFJ/TFXfojSf+WKD/kUn9MVd+iN&#xA;J/5YoP8AkUn9MVd+iNJ/5YoP+RSf0xV36I0n/lig/wCRSf0xV36I0n/lig/5FJ/TFXfojSf+WKD/&#xA;AJFJ/TFXfojSf+WKD/kUn9MVd+iNJ/5YoP8AkUn9MVd+iNJ/5YoP+RSf0xV36I0n/lig/wCRSf0x&#xA;VBW2paTplvb29zPFam7vJ7ayhJCmSUzyERxr3NB2xVOMVdirsVS4+YtEGtjQzdp+lWj9UWu/LjQn&#xA;rTjy4gtxrypvSmKt6L5g0bW7d7nSrpLuGNgjuldiVDr1A2ZHVlPQggjbFV2kRRJbzFEVS9zcs5UA&#xA;Fj677mnXFUHqHk/y/qHmTTfMd3bGTVtISWOwm5uFQTCjfADxJp0qO+KvMtY8k/lNq+mxWUWuCx9U&#xA;/VZZbZY4pZpFEiNJNWOpqL6nNvh3WpINCUK2peSPy1u9I1DU7fV24wEXN5dWQi9YrHL65fZQzR1l&#xA;VuYNKUIPfFUl0jy7+WOpW8WjWT6pJcfVxZG8FiolSONEtuUknpkJRbYg8v8AK2xVPV/KLyRZy6Tb&#xA;yeYJvUluTNZ7wGSeRLl7iQCUIXoXnCGrU+zWrUOKp55c8peSrnSIrVNWGs2cOqGZ2laICS5Sx+qC&#xA;AiNUG0REi0FTsdxilCWvkj8u7bzD/iO11NYDo18Ue1jMaW0VxI7wiLgFFDWRYVp/IFHQ4qipvJfk&#xA;XW7LSvJ8t+buTy1YvYi3VgJeKW8Vt6slBsyVQim3L5EYqqS/lLb3X1tr/Wbq4mvKxzz+nbq5tmgk&#xA;tntR+7KrEYpmCqoHFviG5ararbf8lvLkN9bXS3M4FveJe+jGltFG5jeKVEYRRJtzt0L/AM/7W4Uq&#xA;2r0HArsVdirsVdirsVdirsVdirsVdirsVdirsVU5oUmTg5YCtao7If8AgkKnFUhl8u2up21gXdkb&#xA;TNSkvIXPxuTFPJ8BZiWo1d98KsiwK7FXYqxq78lQzeaF8wR300MyUkW2ARo/XETW/q/EvL+5cpxr&#xA;Tv1xVE+U/LLaBaXMMl9LqU93O1zcXlwqLNJI4AJcoF5bKAPBQFFAAMVRek2lqiSzpDGs7T3PKUKA&#xA;5rO/VqVxVMcVeLS2f5Y6V9Wk+raqqanDJfvKjRKjRqOQt5KMlXc2Y48Kvtu4GFCZabd+S44tV0VL&#xA;LWHkTTZvr9tI8UksVtZypaGCN45W+O3Ch0CMag1qzEDFUBoF95FsfMLNbWutXep30ZMX1v6pzvRd&#xA;EFeDyPHKCyXfOrMlF2ahHHFUT5nuPKMGjeXtU0vTLiSC1iu76yInNtJbRiOOeecNOk3PhRf7tia/&#xA;CocFhiqjos3lWTRotT1q1k0HRbHUUuLK4lulume4SJYYUVBCxWJIIAq1INAOp3xVM9csPItrrl3p&#xA;1/a6o8kuoWlxLMkhigSbUpZBDMjrJE/pRytKppUAudjT4VUbY3vkW680X3mhDdWt9pt5+i532SGe&#xA;RibVW9OLkZEDhwruOtewFFKdXX5haZAmuMlld3H6B4G5WIQAyiR5Iv3AeVOREkDrxNGJ+yDUYFVY&#xA;vPWlHzQvlq4guLPUZI0khNysccUoeP1CsT+ofUZKcWCV3rSoDEKskxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KtMAQQa0IpsaH7xiqD0hFjs2RSSFnuACxLH+/fqWJJxVG4q7FXYq7FXYqgdIiiS3mK&#xA;Iql7m5ZyoALH133NOuKo7FXjMnmPQrZ1D+SNPku7s3KqIbLe2fgfVt7otAoaR1NH9NiKV5UHHkUL&#xA;l120trex1FfK+jDSTJbTWyxWoWSEXkEs7hX48BKDbiM0Aq5GKoL8wdUnsNUZ7TStKMN7ZWzRxS6c&#xA;k7SxmFn4LOUWOSOF7aPZmHVaDZaqss0W1stU0nSdM13QrXW7S+Z5lnSwhFnbGNfSWqqZ4w1I9mDd&#xA;Nu2KoDyx50a2tdMWw8uW2nXGqX6Q6jDbwGFQskscasDGG9R+Msj83oP3Tg8TiqL1rzZpuoWiapH5&#xA;bgv7m31ddNY3ccc0nGBZZIpI2RZCpZ/hjr0Z/vVQ8+r2E+neYm07yvpeoWemXttIkKxIouSxNXCS&#xA;RrzmVeIR6faYqvLj8SrLfLMGga7pNtr76TbJe6giSXcjWypI00LUqS6+oQsiVQtv0OBKbz6LpFxf&#xA;xahPZQy30PH0bp41aROHPjxYiop6rU+eKo3FXYq7FUJfavpWntCt/ewWjXLenbrPKkRkfb4U5kcj&#xA;v0GKoW181+V7xGktNYsbiNJPQd4rmFwsvX0yVY0b/J64qlupfmd+XemxPJeeZNORYpfQlC3McjLL&#xA;v8DLGWYH4T1GKqll+Y3kK++ufVdfsJE090jvJPXRY43kLBAXYhDy9NqUPbFVkn5mfl7FfXVjP5j0&#xA;+C6sqC6Sa4jiCEkAAs5Ve/Y4qtX80Py5a7ntB5l00TWyLLOWuYljVH48W9QkRmvqL0bvirtT/NH8&#xA;udNgkmvPMumqsSLI8cdzFLLwcgKwiiLyMDyHRcVUdK/Nr8t9W1FNO0/zBaXF5JALlY1YgenxD7uw&#xA;CBgp+JSeQ7jFUx1Dz35J093jvdf0+3mSE3Jge6hEvohS/qCPlzZeIrsMVdpfnvyXqsUMun65Y3C3&#xA;CPJCqzxh2SLl6jBCQ1F4MTttQ4qmmn6lp2o2wutPuoby2YkLPbyLLGSpoQGQkbYqiGBIIBIJHUdR&#xA;9+KoPSFZbNlZy5E9wC7Uqf377niAPwxVG4q7FXYq7FXYqgdIjVLeYgsS9zcseTMwr679ASafIYqj&#xA;sVdiqn6EHAR+mvANzCUFOQbnyp48t/niqpirsVdirsVdirFvM/5n+RvLMt1bavq0EF/a2z3bWBdV&#xA;ndFQuFjVioZ340Ra1JxVjNn+dV1rotT5R8oaxrEF9ayzW1/JCLS1WeMyL6Uk85SGlYhVkkPWgq3w&#xA;4qttZf8AnIbWZLS4kg0XyrbUeO8tZ3fULivxcZkEX7roRRfW7VPhirrP8rvzCvpLO78zfmHqb3lr&#xA;IxaLSRFY28kWxVWjjRFZq1qXVttvmqvf8gvLl1NYTav5g8xazLptx9ZtJL/UnkdGqhKqyLGyAmMb&#xA;oQ3+V0xVWi/I/wDJOxmt7M6JaiYyGe3t57meR3fapCyysXHwD4dx+OKqEn5PfkRcKkDaLZqDLcTq&#xA;VlniPO1lW3nBdZFPCOVlQoTxqdhiqeWv5b/lJbevFF5f0YiRzJNHJBBKAyAknjIG48QT0pTFVPWP&#xA;yw/KHW0Nve6FpTPNIszPbJHbTu7VIJltzFK3Ll/Nviq1/wAv/wAmrlTpv6C0UsI4mZY4IElKMzJG&#xA;TIgDtyaJh9rcjFW9c/L78oI9Bu5dT0LSoNLhhVru6SCOJlij4upM0IWX9kdG398VSs6J+Qmmai0b&#xA;aZpSXdtEluwNt6qlfRSVEBKPHI5hdH2qxBrhVGeY9N/JnVvLsdzrFjp82lXFLKCdIDHMv1WtYY2h&#xA;VZ4/REBDBacVU1oMCpdZeVv+cfNOYLBpuksbXjZVkT6zX1PU2Yyep6v93JVzWnFqn4TRVUl8kfkH&#xA;ql7b3v6K0syiVtJtkhUwRNLKjn01gj9OJ2KuzLJxJ7q3wiiqmv5Ra9o9+mneS/MUvl7yRcAtqOjo&#xA;qXE4kcFZWtbi5Sd4ua8f2tmqRiren/kdLpVxYtpPnnzLa29pIZpIHvEmWViQfiRo/RI26NGwPfFW&#xA;feXrea20tYJrqW9ljmuA91OI1kkPrv8AEwhSKOv+qgGKplirsVdirsVdiqR/pjRND06W71S+isoZ&#xA;bq5Cvcy8QziWRuEYc7txUkKn3YqxWz85fmb5hNjc6F5YXSdPF7NDqB112hma3QMEkiiQc1rQVqD8&#xA;WwqtWxVs63+dmnWxe68vabrEkmpemiWN20LpYFvtlZ1VGPHoeY7VXriqdeXvzN8p63f6jp0c72Oo&#xA;aVNHb3lpfqLeQSS8QqpyNH+NuHwk/FTsykqsrxV2KuxVinnX8xNH8tWs0cFNX8wjiLTy5Zv6l9Oz&#xA;UaiwxiSQAJ8ZbhSmKsOTQPzO/MJi/mWVfL3kTVbcCfy1ER+kwRSiTyy2qlA7ryYKwIG3jirM/Kf5&#xA;YeRPKsVsNH0a2iu7QMsWpSRJJeUeoatyy+puGK9em3TFWU4q7FXYq7FUh1PyN5V1TzHp/mS/sRNr&#xA;elLxsLsySqYxVjTgrBG3c/aU4qwTzD5D/Ku/+tltetLC7e8u01C4S4tlka5u7v6y0MpLAh4mjZEW&#xA;oPWtd8Ktn8rfy8uNLvDb6ok8unKyX97bCCeeMr9cZll9FWkBpesCuxoi+GKpLo3l/wDJydLawtNb&#xA;kvr+VibOZbVpLhuMlq37s+ixPE6fT/ZPihMrr8kPJum29tFfa+9oJJohC85t42eSIS8Y4nlBfpO/&#xA;whiDtyDAULasi0jyD5fu/L62S65JqulXc9rLHJBLGiyQ6aqxwQpLbcCVQwoWZW5Fl69sUoK2/L/y&#xA;FpWnXEb6zH9YvJaWOo3U0LSQDToYbdooOZ4EwpYhZTTl9rkcVTjU/wAs7PUNCGlzahM0rXkuo3F4&#xA;8cDvJcTBgzBCnGMqH/dmPiVoNzvVVJpvyJ8vSzz3B1C6a5nnE5uJFgklrymdmLtHVpa3LcJT8ScV&#xA;p03bVFab+SnlrT7uwuobq69TTbxbyzUMiRrx4VRkRVVi/pL6jkcmpucbV6FgVpq0PEgNTYncV/DF&#xA;UHpAkFmwkIZ/XuOTKCoJ9d+gJan34qjcVdirCIPzA1I+cbjQv0Sb2yjn9AahauEkjYNEriS2uPSk&#xA;kWL6wjSSQ81CkHwqqyz9L6V+kv0X9dg/SYj9Y2Pqp6/pVpz9KvPjXvSmKqB8yeXRPBAdUsxPdSPD&#xA;bRevFzkliYJJGi8qsyOwVgNwdsVY1bfl/pusaqNZ8xgajLp+oXM+h2hZ/QtKTmj8a/vJHKBm5fCN&#xA;gq7cmVZvirsVSLzZ5I8r+bdPWw16xW7t0lW4Tdo3WRKAMHQq24FDvuMVYhfaz5u/Ls6hqev3Fz5p&#xA;8r3FxDFp4toVa+slIWNfVCqglVjsXLV5AbVc0VZvP5r8sW+kJrNxq1pBpMgVkv5Z40hIk3SjsQtW&#xA;7DFXnaXX5pfmBJqFvaTR+WfI13STR/MNukqapcQpIpVolM6NEswUkO0Yqnb4q4qyzyl+WPljy1qH&#xA;6Zt0nu/Mc9otnqGt3dzcTz3IAj5NIJZJFBZoVPwjboNsVZbirsVdirsVdirsVdirxfzDoX5b2Fxd&#xA;3l9qurWY1241FLi5iMCIiwXkpu4g3pV4mZyRTlJxUb8QcKEz04eR45b/AEsnVbm7ksZdOuNMngi9&#xA;eC0jglnjtk4Rq4LRTu0fxF3r8RNAAql2hXPkPTfNh1yLWNY1LU75Y54Jp4bUreKzGyhEQWCJyHJ4&#xA;qycVI41O4qqra9ovkCPyvpJ0azv44YNSkltrG0ZvXW9giMs3NbtLn+5Ft8VNgVK1NSCqt8q6n5Uu&#xA;o7K/9e7TT/KslxC9/JLayvLLdySK7TrDAJ+bSBviAQn7RqSTiqJ8xWn5c2OnWfledNRtba1dbzTt&#xA;QhZecP19pHjaO7mLPCA4ZwW41Me/L4qqs1m86+U9K0vUWl1VbkeXjHbal8Xq3CylFKK4G7O9evSv&#xA;LpxagSiY/OGiv5ok8s8nTVI09Tg68UdeAkPpsSOdFbcD38DRVO8VdiqnMJylIHVHr9p1LinyDJ+v&#xA;FWDeYdN83XU+jvpDztHDc3P1o2s4tollOowMss6NIDLEtulwpj+OvL7NaEFUq81eU/OV9Nqep6XJ&#xA;q1oblrUW+mR6lKKgRNNM5UXsUcP790iYQyL8KMV5Bt1VPWtf80QedIrGw1ePT7hEs7aXT5qXsFxd&#xA;XELutYpGiuIolaMK8sTN9oEj7ZRQq+WIYH/NPVFlm9KW1uLqa10oJJIi+qiCS7WUzcVaXl8SmKgr&#xA;Qda4qya48lXJ83HzFaagkRLLL9VlgaX996K2zHmJY/gMC0CU2f4qn7OBKBj/ACwhg1qx1CzvVtIr&#xA;O5luFghhMZEcs4n9GIpKqIppwkqjcl6BTvhtWUaTbRqkswMnNp7moMjlP79+iFuI+gYFTHFXYq7F&#xA;UFq2s6Ro9obzVr2CwtAaGe5kSJK0JpycgVoDtir54m/Lfzl5m1TzF5vsNDs5dG1C4+uaPoV488Me&#xA;phWaOG4uImmQxERu0qBuIYndRUUKvbPJvnDy9qQXQLbjYa3pVtF9f0AhlktAAE4DkFDopAAZdiCp&#xA;6MMCsoxV2KuxV2KuxV2KuxV2KvFtf83/AJfaZNf3Go+XY7u4S6u1it47hp2+sGaZm+uwyhEtxNJB&#xA;6igep15UrSpQqz655b0v176DytbJZWA+tx3UV9Klyxje+ROaiICoFlKCGlIHILuBsqh/zG1nRtBk&#xA;guIdJ0p7NdPt1tYrvmZ5KO0EUdr6MrRSvB6YLyBg0aEUJ6Yqnnl5tN1ryvpdlrHl+LUbHUblhHHp&#xA;KevZ2jQgQepNM05K80Y14jcc+VamqqD8m+bPLFxqL6DB5Xlt7K7vLyGaWZ5bq0rZR/WVcmZDGskp&#xA;kcslQVI+I1IxVOIvMPlLzA2guuhSXUGvzvC1wEMkMAsIphGJHg9SL4qsgQsBxLE7AgqW/K155a8x&#xA;al5h0XUtDSz1Gc+tqtjPK14s1HeAyq9PRHHiEqjcgwK0HAYqzGfy7ok+qW+qzWcb6haqFt7gg8kV&#xA;QwUDelB6jfTv1wKmWKuxVpq0PEAtTYHYV/HFUHpBkNmxkAV/XuOSqSwB9d+hIWv3YqjcVeT61q8V&#xA;v+dNpbyn12kFvHA5kuENuGUBkVY5Y43DtKpPKNuu5oDxKEL5Tg08fm5c3Ek6vqLyXcM1nGUpFNBG&#xA;rST+l6jTJHK1xIEZxT5VSqr2LAl2KoHSI1S3mILEvc3LHkzMK+u/QEmnyGKo7FXYq7FXmXmODyz+&#xA;Z/mk+UpSl/oPleT635gRGdC1+4lt7a15o0bjgBM8hXuFXxxV6birFfOHk+4v4bjVPLc8WjecRHwt&#xA;NZ9MHlQUEVytGEsZGwDq3E0YCoxVT8oed4r3UpPKWrt6fnPSrWObVYFX91IPhU3ELr8PCQsrhTRl&#xA;DAEbHFWXYq7FXYq7FXYq7FXYq7FUOdPsGtpLU20RtZWd5YCi+mzSOZHLLShLOxZvE74qrlQRQgEV&#xA;B38RuMVbxV2KuxV2KuxV2KuxVpq0PEAtTYHYV/HFUHpBkNmxkAV/XuOSqSwB9d+hIWv3YqjcVeQX&#xA;+oWTfmxZpbyJc3a3ccdtctPG3CHlOt7C/KcTB1mPGNEiK0FPEqUIL8orHXoNctLzWLgytcK9vE/r&#xA;NN6gW2WaGpW4KmsDK4LQAkGu1cVe2YEuxVA6RGqW8xBYl7m5Y8mZhX136Ak0+QxVHYq7FWN/mB59&#xA;0LyP5ek1rWJCqEmGzhVXYz3PpPJHACivwL+kRyb4R3OKteQ/KUXl/STJcQwf4g1NmvNfvoUVWnu5&#xA;neaQFgAWSN5WWMHouKt6x5wkttVm0bR9Judc1W3hjuLmK3kt4YYFmZhEJ5Z5I+JfgxCorNQVpQiq&#xA;qpofnG31HUn0e+sbnRtcji9c6feCMmSL4Q0sE0LywyorMFPFuS/tKtcVU/PHlJ9e0mb9GTJpvmON&#xA;QdL1oJ+9gkQkqOSlW4MGZWXcUY7HpiqG8pecoLi/k8paxdR/4z0uENqECgATxgLxu4uI4cZQ6sU6&#xA;oTQilCVWW4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWmJAJAJIHQdT9+KoPSGZrNmZChM9&#xA;wSjUqP377HiSPxxVG4q8L0RNMsfzKvJrbVWeW71d5ZNO+BaPLqNxaOnwPvxMJk3SvFhXxwoZX5M0&#xA;PypYeaHtNMn1a4m0uR4SbuVWtkljtktzRG4yErAqIrcaUGKvScCXYqgdIjVLeYgsS9zcseTMwr67&#xA;9ASafIYqgvNHnXyr5Whhm8walFp6XJYW/q8iZCgBYIqhmYio6DFXn8P5i/nN5h08yeW/Iq6TOtwF&#xA;9fXZmWJ7fgx5LD/okwYtx3oR1+hVPPK35Y39vqk+r+c9ZHmy+JrpkdxAY7ew5ljKIImkmSr1VeZA&#xA;bitPHFWf4qxHyE31q/8ANmqmII13rc0CSU3aPT4IbEfF3HqW8h9iTirf5k2kkeixeY7SIyan5YmG&#xA;qW6qQryQRgreQBuLH99atIoH83E9sVZRa3NvdW0V1byCW3nRZYZV3VkcclYexBxVI/NXlkXsT6rp&#xA;UUUHmqzjLaZfkBGZ4wxS3mcDk1vIWKupqN+Q+IA4q7yLr+qaxoSNrdvFZeYrR2t9ZsISSkNwpqAt&#xA;S3wvGVdTyIodieuKshxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVpiQCQCSB0HU/fiqD0hmaz&#xA;ZmQoTPcEo1Kj9++x4kj8cVRuKsCF/C35iXGm2ujWnG0aCS41BLJ5JedypkLNcKFWNvnXxr2BQlGh&#xA;aZ9Q/Ni4ngDzW1/NePLI1qiiOXiGZRdSWETsK7cUu2/1SK0UvThd2pujaCaP60E9U2/Iep6dac+F&#xA;eXGu1cCr45opQxidXCsUYqQaMpoymncHriqVxXthpOj3+pXs3oWVtJd3N1NIzMqRxyyM7U+KgAHR&#xA;RirCPJPl3XPODRea/wAydIgjvYTTQNFdVkt7aCRI5PrLRuZCLiR9jz3TiKBTXFXp2KuxV2KsT/Ky&#xA;WW48j2V9KKPqU15qJAFBS+vJroU9qTbfxxVlbKGBVhUHYg9CMVYp+V8pTyjDpTyiWbQLi50ZyBxI&#xA;TT53ggqPFrdI2+nFWWYqwTzpoNppPmG3/MmOSUTaRbNBq1qJSkUunnkZH41VWkh5eoA2zcaU5cSF&#xA;WX6Rq+maxpltqml3KXen3aCW3uIzVWU/qI6EHcHY4qjMVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;iqnNMkKc3DEVpREZz/wKBjirCde87XWhy6VBbW8UkWoXN08zXDPE/BdRgtvTiUiplb65zAPZD9BV&#xA;G+X/ADncap5w1TRmWAWdshksJYXSZpUT0g7u0cr8Pjl2V0WooQTvQKw7Xb6C8/NqxW0091uLa8gi&#xA;nvZbW55MqqefEvp3pcN9pBejxUEbEqh/I6eXNO/NnUtMs7K0huRNdG3ltbOGBViNf3YkXT42JVo3&#xA;VqXjbq22xUKs1l8lX6+e/wDEtvcQekzCRo3RvWq0UVtInMH7AiiLqP5z4YqmvlDy2nl7Trmxj4CG&#xA;W9u7qBIwQqR3MzSqm/dQ1DgVg3nfQ77V/NHk3TINTlttOudVvrrV7AhpobqKwnW6VJI2cKE5xcOl&#xA;KvWhpQlXquBXYq7FUHrGoppuk3uoyLySyt5bh1J41ESFyK0NPs+GKpZ+X1u9t5C8tW8gIeHSrKNw&#xA;djVbdAf1Yqn+KsS8uk2PnvzVpZMax3gstat0FAx+sQmzm29nsAx93364qy3FVOeCC4gkt7iNZoJl&#xA;aOWKRQyOjCjKymoIINCDirB9D1jSfKnm6P8AL4ho4L+N7/y2iIzJHFVmntSQPhETqzx9uBC/siqr&#xA;PMVdirsVdirsVdirsVdirsVdirsVdirsVdirTEAEmtAK7Cp+4Yql2mwWl1apNJCshiubiSAyp8SN&#xA;68g5KHHJWxVFwWVlbsz29vHCzKqM0aKpKoOKAkAbKNh4Yq8m14X1t+dlpJDpbywXj2okvJIYpOJR&#xA;QtYXezldRxYk8blfsOaD9oq7QdS8vXn5wR3OlvzN0Lus0kcPCbih+O0eK3V2VSrcnaQjenKr0ZQ9&#xA;gwJdirCIobZ/zD0ZSeckFlr1zwLsxRnvrOJW4k/CCpkA7dcVZvirsVdirGvzMmWH8ufNDlxGf0Ve&#xA;qjE8fja3dUAPiWIA98VY75i8oanexatotqmm/o+9v7W5s45bt0lra2lqnoNC1tcRgqtuZF5CQUpV&#xA;N6gqlnlryVc22qWM8t9o87ac9rfT6pby/wCmQW8FitubONBGqi2crz581WjH93XfFWVapJDF+YHl&#xA;fV7YLNbata32kvcxtyUkol/bmoJDALZzU/1sCswxV2KpD5y0ya60k3tkCNX0lvr2mOqlmMsQJaH4&#xA;QW4zpyicDs3jTFV/kzzbp/m3y7a69p8NxBa3XMJFdx+lKDG5RqirA7r1BIxVO8VdirsVdirsVdir&#xA;sVdirsVdirsVdirsVaZgoLMQFAqSegGKoPSJI5LNnjYOjT3BVlIII9d+hGKo3FXi+vvJqH5h6Rr5&#xA;0e3OmfppdKttRRLb679Zs5XgkMsohkmWHlFJxX1PioNlBqCrJPI+ieWXu9GvrPzIdYg02yMXl2wk&#xA;NqJba2mjQEOY1WeRliVU+Pp+1Vt8VeiYFdirBdCtJZPzO1G5MheOz0oIqtQFTe6ndmihQKj/AEPf&#xA;ka4VZ1gV2KuxViX5qwyXHke8s4hWS+uLGzVdhU3V9BBSp2FfU64qhtd8jX+sPrVrO8C2Go3cF/aX&#xA;CPMl1DLHBb20igoF4h4oZFqrVo1OlcKpJfflBdvrV5eWM1lbWbskttZmFnicxXFtcJDLGxPpx/6J&#xA;wf0mCuKEpVcVV9b8vv5d8pWV9eXEaTaf5gtdWm+rIyW8KXd6sNwkSfa4LBcyf6xqab4q9KwK7FXY&#xA;qwgeYNO8s+fo/LdzIVh80l73SY1Vjwu1/wB64zQEKslFlH+WXr1GKsn1vX9F0KxN9rF7FY2gYIJZ&#xA;mC8nIJCIOruaGiqCTiqSD8x9GeSP0tO1qa1kXl9cTR9RMQqCRt6Alau26oRv1xVNdA81+XPMEUkm&#xA;j6hFdmE0uIVPGaE1I4zQvxliNVOzqDiqbYq7FXYq7FXYq7FXYq7FXYq7FWmYKCzEBQKknoBiqD0i&#xA;SOSzZ42Do09wVZSCCPXfoRiqNxV5lZ6joY85/plPK+nxNPqc2lDWFuE/SJnjdrRp2tfRAVHeIpz9&#xA;bmVoSKYVY9+UPmtLnzTFoNlrem6zpVnbPHbXFnFBaSFYQFRTBMfrZoo3dC6nucVe3YFdirBfJMss&#xA;/nzzm7uXW2azs4wQo4hXurniOIFRW76nfCrOsCuxV2KsV/MW44aXpUHGpu9c0eMNX7Pp6hDPX3/u&#xA;afTirKsVdiqT+cNGbW/KmsaQgUy39lPbwlqUWWSNljbfoVehB7Yqv8q61+nPLGk6yVVG1GzgunRe&#xA;itNGrsu9fsk0xVNcVdirCPzN1a1gtbaxs4Td+aqm90WJOIMBtiHe5nlchYbYfYlYn4lbgKk0xVh/&#xA;l/zFZ3lno/nSO8stX8w6yt0f0pqbta2WmrbR8prK0jo5i2+EtXk4DOzMKLhVOpPzohneaCw05muY&#xA;JBA3qODE8kokSJomX4mi9aIguUHw/wCUGVWkWkPm3Vb661K4uL60tYNU0q5uYLfW9NMltfxxWNvF&#xA;dzcJGLhw8U5URSBkY/aBrirNh5q1/wAsOkHnONJ9LLLHF5qskKwLXYfpC3qzWxLU/eKWiqd/T6YE&#xA;szjkjkjWSNg8bgMjqQQQRUEEdQcVXYq7FXYq7FXYq7FXYq7FWmYKCzEBQKknoBiqD0iSOSzZ42Do&#xA;09wVZSCCPXfoRiqNxV45oV0+k/mnd2V7aW1/c6pdTugSaC4uLcfWpXhuBDFG0lun1aREfmQCwqTU&#xA;mpQyz8u/Lfm7y6stnqTW9xYzLE7TC+ubqYXCQrHNIBPAu08i+oV5gKSaVrgSzfFXYqwz8um9S/8A&#xA;OkoJKv5hnVeVP912drG3T/KQ0xVmeKuxV2KsU88WwutT8n25YLy1xZORFf8AeewvLilKjr6VPbri&#xA;rK8VdirsVYl+XCfUrHV9B9MRDQ9Vu7eFA3L/AEe5YX9tTc7LBeIn0Yqy3FUk82earLy5pyzyo11f&#xA;XL+hpemRf393csPghjHv+0x2UbnbFUP5P8tXWmJc6nq8qXfmXVisuq3UYIjTiD6drbg7iCAMVSu7&#xA;bs3xMcVSK7u/LflnznZ+Wry3iOl+a2afTLMQc4ob+3CrL8IUoiSoUZadHDE/arirMLvy/od3BdQT&#xA;2MLJehhdEIEdy4Kli60blQ/arUYq3e6HpF9CYbq1jkRpFlbahZ1ZWqzLQmvpqGqfiGxqNsVRskcc&#xA;kbRyKHjcFXRgCCCKEEHqDirAo5Lr8upDFOZLryCxH1eckyS6QWYD05a/E9nv8L7mLofgoVVZ7HJH&#xA;JGskbB43AZHUgggioII6g4quxV2KuxV2KuxV2KuxV2Ksfk8z6Ho/1a21G59Ca+ublbZRHI4P+liI&#xA;s5RWEaCS4jUu9FBYb74qp6l+YnlHTL2Wyvbx47qFhGYhbXLlmYgUi4RsJaFxy4V496Yqtt/IOgW2&#xA;vr5h0w3Gm3sjyzXSW7lYbg3JV5vWt5Q6AyNGpdkVXJA3xVk2KsFu/JWuHzvd69atbCK6Qx/WDK8d&#xA;yIpYbe3aHaFx6cPoyXEY5fFIePwglgqx7y3+Uuv6Zrml6k50+JLKVGMETtLHDGsEUM3oxyW61e4e&#xA;H1WfkhV2Jq/cqyz8uLExWGq3Ymc/W9b1mR4CE4Bk1KeAEELz+zCP2sCsvxV2KuxVinmq4P8Ai7yV&#xA;aU2a/u7gv3rFptzHx+n16/RirK8VdirsVYjAv6N/NG6jEYSDzDpUdwsnL7Vzpc3pS/D4tDeQ/Qnz&#xA;xVO/MfmLTvL+lSajfl2QMsUFvCvqTzzyHjFBBGN3kkYhVX76CpxVI/K3ljVJdUfzZ5q4vr86GOw0&#xA;9WEkGlWr7+hCwFHmfb15h9o/CvwAVVZfiqW+YNDtta0ySzlYxS7SWl2gBkt50PKKaOv7UbgMPuO2&#xA;KpP+Xnm7UvMekznWNMfRtc0+Y2uoadKwLBgoZZlA3EcoNU+mhYblVlWKuxVbJHHJG0cih43BV0YA&#xA;ggihBB6g4qwOdLr8vLhrmAPceQpmrc2ygu+jsessKipNl/PGP7r7S/BUKqzuGaGeGOeCRZYZVDxS&#xA;oQysrCqsrDYgjocVX4q7FXYq7FXYq7FVOaCCdPTnjWVK14OoYVHscVY3ceT9M1hbOWWSa2FhPcqs&#xA;dsURJImvUnaF6oxCNJaxk8CrbUrQkEqgdQ/KvTdRmvJtQ1fULya+EYlknWxkKrGhjCx8rUhFo7ni&#xA;NuTFhRt8CsxtbaK2tobaKvpQIscdSSeKDiKk9dhiqrirsVdiqX6LAIraYKfhe6unC0UBS1xIWpxA&#xA;6kkmu9cVTDFXYq7FWJ63bvP+ZPlUrxpbWWrXDluvEG0hou3XlOPorirLMVdirsVYf+YpTT10PzOf&#xA;TUaFqUJupZOW1nfA2Nx9nsn1hZT/AKn0Yqo+XI5PNmtJ5wuw40a05p5TtHXgHSReMmpOp+ItOKrB&#xA;ypxi+KlZDRVm2KuxV2KsP87eUdV1HUNL1/Qb+Sx1fSJA8trG/pRajbK3P6ncuATwJrwJDBeTbb1C&#xA;qY+SvO+g+cdJbU9HkZo4pWtrmGVeMkU0dOUbjcGlRupIPjiqf4q7FWmUMCrCoOxB6EYqwZ9K1fyP&#xA;K9x5etZNS8pyEyXXl+KrXFkx3aTTVP24juWtux3i68Cqy3R9Z0vWdOg1LS7qO8sbheUM8RqpHcHu&#xA;GB2KncHY74qjcVdirsVdirsVaZQwKsAVIoQehGKoPSI447NkjUIiz3AVVAAA9d+gGKo3FXYq7FXY&#xA;q7FUDpCMtvMS7OGubkgNxoo9d9hQD8cVR2KuxV2KsYvZY2/MvRogwMkei6qzr3CyXWnBSfnwanyx&#xA;Vk+KuxV2KvPPMT/8rDnuvKul3Dp5YgLR+Y9XtyKTSAbWFtJuGNaG4ZdgPgrVjRVP/wAvNWn1HypZ&#xA;peBU1XTuWm6tCpX4LuzPoy7LsFcr6if5LDFWSYq7FXYq7FWFebvJOrzX9prXlG9TRtVgl9TUIVXh&#xA;DqMQYyejcUDAEyE/vODEcmxVHeR/zB0XzhDe/UY57W90yY22o2F0npywyjYjYkEVBFQe2KsnxV2K&#xA;uxViGr+UtQ0/UZ/MHk+SO11Od/U1LSZiVsdR2oxkCgmG4/lnQezqw6Ko/wAt+ddL1uWSxZZNN122&#xA;Fb3RLwCO6i3pzCglZYj+zLGWQ+NdsVZBirsVdirsVaYAgg1oRTY0P3jFUHpCLHZsikkLPcAFiWP9&#xA;+/UsSTiqNxV2KuxV2KuxVA6QjLbzEuzhrm5IDcaKPXfYUA/HFUdirsVdirD2PP8AN5AB/c+X35n/&#xA;AIy3q8P+TTYqrz/mX5OW4ltLK8fV7yFS0lvpFvPqLKRtxdrRJUjNdvjZffFVJPPWr3KP+j/J2tSy&#xA;AVT6wtnZpv8AZ5Ge4RwPGiEjwxVC3+k+adcgeTzZqEGgeXQga50rTp29SRCF5Jd6i6wlY+oZYUTr&#xA;/eEYqr2P5gflzZJFpOiXaXUVsgSK00S2nv440A2UCwinVaYqxPV/PkPl7zXL5otdE1saFfR+l5l9&#xA;TTp4UBtxxttQT1ljpxX93Ly4/BxNKpTFWYWn5k6TcKHfStbgjZQ0UjaTfSq4PdTbxTfjiqrZfmf+&#xA;X12/prr1pbz1p9XvJPqc1f8AjFc+lJ/wuKsmjkjkjWSNg8bgMjqQQQRUEEdQcVXYq7FWKed/Ih8x&#xA;pZz6fqc2g6tZTLLFqVoqmR0DBmhl3UvEzKGK8qVAxVAaF+ZZWe6sPOVg3lm8trkWlrd3RK2V+ahf&#xA;UtZnAX4mNQhYmh6mjUVZ1irsVdiqUeY/Kmh+YYIo9SgJmtmL2V7CzQ3VtIafvLeeMrJG2w+yd+9R&#xA;iqSI/n7y2OMqHzfpC/Zlj9K21aJByIDoxitrqgA+JWjb/JY4qrxfmh5MEqQalePod06Bxb6zDLpz&#xA;bmlFe5WON9xT4HYeGKsmtbq1u4EuLWZLi3kFY5omDow6VVlJBxVVxVpgSCASCR1HUffiqD0hWWzZ&#xA;WcuRPcAu1Kn9++54gD8MVRuKuxV2KuxVTe4gSWOF5FWWavpRswDPxFW4g7mg60xVC6QjLbzEuzhr&#xA;m5IDcaKPXfYUA/HFUdirsVY5r3n3QtJvDpkZk1TXiAU0TTk+sXe/EgyKvwwJRweczItO+KsHtPK+&#xA;q+bfzHvpPOUcMdpbaRZtJoNlPI0NJ7m5eGG9kHH6yyekzOoAj+z8LdSqzS+85eSPLYTSIp4RdQj0&#xA;7bQtNj9e523CJaWwZ1HuVCjuRiqEW6/MbX97W3h8p6a/2Z7wJeamy/CQVt0b6tBWpHxvIfFBiqvb&#xA;/lp5XMy3WsJN5ivlJK3WsyG84ljWscDAW0P/ADyiXFXn+meWfzXtrEQzR38lmkVurWS33pzNcLbS&#xA;xs0brqHL0Uk9NmC3EPPtEoX4iqfeXdE/MH9Jab+mo7ppA0X6UuZLxZdPey/Rwjktvqvqtyn+t/Ez&#xA;+jvufUoeOKp0vlfzD5adn8nTQzaSSXPli/ZkgjJ3b6jdKJHtwT0iZHjH7PAYFW3P5geX/q0ln5w0&#xA;m70ONykU66pbetYOzb0+tw+vaFaj9t1PsMVW6b5L/KnVn/SPl+GzR4xxN3oF01mRyr9p9Okh3NT1&#xA;O+Kon/BXmCzgKaN5w1OD4uSx3622ox0PUFpYluT/AMj8VXl/zRtJpCY9F1m341j4tdaVJy6/ZYam&#xA;p8PtD6MVWjzl5jtoGk1PybqcZQ0ZrGWyvUp4qFnjnb6IcVS7zD5t/LjVtPht/Nen3SWazRzpFquk&#xA;38cSTxn4T6kkHpVFTWjkEV7VxVirXENgb+fyH+ZenzXOo3FvJbaPq97Dc29vAvFWijDM06GmwH8t&#xA;FI5ANirJJ/MH5zRWesXFroWj6tHEsJ0OS1vHj+sBlrK/FwwYA9i8fgC3XFV1/wCavzeRtVW08l2z&#xA;fV7SOXT3fUUYSzsG9RNkXlxNPhPDp9r4hRVfdXv523Ut7HaaZo2mxPYK9lNLczXLJety5I3GOMNx&#xA;2/Y4j+ZtxirMtFXV10izGstC+rCFPrzWwYQmbiOfpht+NelcVRUsUUsTxSoskUilZI2AZWVhQgg7&#xA;EEYqxm5/K/yDNOtzHo0FjdI3JbnTi+nzcvEyWbQOT8ziqxPIEtvcGaw80a7aLUlYWu47xFrtQfX4&#xA;rsn/AGROKqz+VPMHE8POerhqHiTDpBAPYkCwFfvxVG+XfVstKt7XUr9bq9M1xGbl1SFp5BNISRGv&#xA;w1oK0XFU5xV2KuxV2KsB8+6Vpw80aDrF9qNtZRpLDEPXVzKDDcJcD0Cuy+oR6chagCn6MKEVpvmb&#xA;ykbgQ2Xmh2F3dzRw24EBX15pVkKqTBy4l7lAhLUPJQCajFLIbnSL6W1eCLWr22kc1W5iWzaRfi5U&#xA;US28if5O6nb33wKlo8p66BQec9Z6k7xaQepr30/FUHcfl7qMwm/53LXIWuHEk7266VA7sqCMFnis&#xA;Ec0VQOuKpV/ypnyZZW13eatqWqagHpcald6nfySrIIEIV50PGFhHHUCqbLiqvpesflr5fguI9L1m&#xA;3063cR3UkFrDbRIRJHFwKJHbryPCWNiFBI5AmlcKsvgtnnRbmDVJ5YZkVomX6uyFTVgykRftBuuB&#xA;V40+5Dl/0jc7gDjSCgpXcfuu9cVcNPuQ5f8ASNzuAONIKCldx+671xVx0+5Lh/0jc7AjjSChrTc/&#xA;uu1MVY1/jDygz2t23mV4xNFKbZ5FijV4qLIzgvAvw0QFW6HtXCqdaXNBq1tHf6frE89s3qRhlWED&#xA;kj8HDK0IYMjIRQ9N8CpXq35YeUNWna41CxgnupG5yXRtbMTsT4zCASdd/tYqg4Pyf8q2sgksbnU7&#xA;BtwfqV/cWwKncr+5ZPhrvQd8NqqS/lfaNT0fMfmK38eGrXMlf+Rxl/DAqVSR+WNG1B21Dz5qsjaf&#xA;Kvr211PBJFzCmQBlFt8XAIXah+GlWpTCrK9M1LTdZkuodM12S5ksZAl0IfQPFg5FK+lQgtGy1G2x&#xA;HbAqvqXly21OAW+oTNdQhg3pzRWsi7HweFhv0PtiqRXf5Q+QrqN0fSrSJn3M0FnZQyg+IkjgVvxx&#xA;VbB+Unly2Rksr/WLFWFCtpqd3brt0PGN1XbttiqUa75c8r6RcCz1Dzp5g09rmOR0SS+mmjMYR3cc&#xA;p450NEjY0J5UGFUXov1C9ni03S/zE1W4neNpooSNMlcqG+IF5rBn5KTujNyA7UwKni+U9dVQo856&#xA;yQBSpi0gn7zp+Koiw8t6vazK8vmjVL2NQR6FxHpoU7UqTFZRPUf62Kpimn3KIqfpG5biAOTCAk07&#xA;n91iqW6ze2OjW8Lanr81klzN6UMsgtql2q/HeFgFCg7nYAbnFWD66vlLWL7QobLzDayywXksJNyO&#xA;UzSz6haXjSw+kqKH9SJI43oE/ebHsxQ9XwJdirsVdiqRebvKsfmSygs5ruW1gimSaRYlQl+BqtGY&#xA;FkdSKq6moPjirHdP/KGwsrqzuE1S5Y2jW6BCkIDWtk9tJa254qP7trGP4+rAtXqKKs/xV2KuxVK/&#xA;Mvl6x8xaNcaRfmQWtxxL+k5RqowdalaVHJRVTseh2xVhsf5MWEK2voavdRvYwiOybhEwjlaK3hmk&#xA;IYHl6iWafCT8NWp12NqzzTNPt9N020062r9XsoY7eHkatwiQItTtvQYFRWKuxVKvMOu6XpFtCdSd&#xA;ora9ka1M4AZIyYZJOUleikRFRsfiI2xV4vpOgflXqdgllJrs1haarbwG6tZo7WzWUSBreGFEVaQy&#xA;QSQc5Qu3N6n7WFD0/wAua35Q0izhs28xWt5dajKbsXEksSNPJfN6qsiKQvFuY4geI8dwlFWH5ieT&#xA;bzTYb8arb26S2ttevDPLGk0UV4IzD6qcjxJ9eMU8WX+YVVU778zfIdnGrPrVtK0gheOKGRZZGW4K&#xA;CNgqkmh9VT7Ag4qqab+YPlbUfLdz5gtLsSWdnF6t3EpVpozx5CNo1J+NugXudsVYBrHl/wDLP9I6&#xA;vfS+a4tMuLi5lF3Fztqwz3MV1DcxzbHm/B7hU5H93Q0rTCrKfIVt5VsNXuk0bU21NdQty1lKpieF&#xA;LWzupXaBJI/ttDNqBqW34uvXrgVnWKuxV2Kse8x+TbLX7hpruZ1Asp7K3VQp9J53R2nTlUcx6K0q&#xA;PwJxVLvLv5a2mja0NWGoT3MzST3dxG6xqsl7d1E0/wACjiGU0CDYYVZlgV2KuxVjPnjyLYebreyh&#xA;vJ5IFspjMhjCtuylCRyB4uoPwON1xVJLb8ndMguoJ/0ncusLRRGIrFxezt5IJYbdvhr8L2iVkHxE&#xA;ch32Nq9BwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUn82eV9L80aFcaLqfP6ncGNnMRCyAxyLIO&#xA;LENSvGh26E4qxjU/yV8qX80831i9tmuL2fUZVheEqZbloncBZYpAFDwB1puCzb/EcVan/JDyVNPD&#xA;MRcK8N5Pej4onB+sPEzQfvI34xJ9WjVOFGVRQNuaqtaL+SPk3R7yC6tHujJbR2aR+o0J+Kxa2dHL&#xA;CIOWkNlHzHLj14qpOKoA/kpG+sOTqs0Ohx0msraEJ66XQjt09Yu6PHUfVF248Tt8IPIsbVkI/LjT&#xA;bfy3faNYXEqtc2kFtFNOVfg1pyMDkIsfKjmrDv7Y2qnfflZoF+yy3E1zHLW9ZxC8YXlqC3om6xVo&#xA;P0pLw+S1rvUKitF8i2uk66l/bzu1tDHdGOGShf1r14TKxKhAFRLVAg/ymr2xVlOKuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -241.826 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 241.826 li
310.021 241.826 li
310.021 0 li
clp
[1 0 0 1 0 0 ] concat
0.4 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
32.9053 10.5152 mo
30.6651 10.5152 li
35.1456 20.3335 mo
30.6651 20.3335 li
35.1456 20.3335 mo
30.6651 20.3335 li
32.9053 30.1524 mo
30.6651 30.1524 li
32.9053 39.9688 mo
30.6651 39.9688 li
32.9053 49.7881 mo
30.6651 49.7881 li
32.9053 59.6065 mo
30.6651 59.6065 li
35.1456 69.4249 mo
30.6651 69.4249 li
32.9053 79.2432 mo
30.6651 79.2432 li
32.9053 89.0606 mo
30.6651 89.0606 li
32.9053 98.878 mo
30.6651 98.878 li
32.9053 108.698 mo
30.6651 108.698 li
35.1456 118.515 mo
30.6651 118.515 li
32.9053 128.334 mo
30.6651 128.334 li
32.9053 138.153 mo
30.6651 138.153 li
32.9053 147.969 mo
30.6651 147.969 li
32.9053 157.789 mo
30.6651 157.789 li
35.1456 167.607 mo
30.6651 167.607 li
32.9053 177.424 mo
30.6651 177.424 li
32.9053 187.244 mo
30.6651 187.244 li
32.9053 197.061 mo
30.6651 197.061 li
32.9053 206.878 mo
30.6651 206.878 li
35.1456 216.698 mo
30.6651 216.698 li
false sop
/0 
[/DeviceCMYK] add_csa
0 0 0 1 cmyk
@
13.0826 167.724 mo
13.0826 168.669 13.1944 169.296 13.418 169.605 cv
13.6417 169.914 13.918 170.068 14.2466 170.068 cv
14.5752 170.068 14.8511 169.914 15.0752 169.603 cv
15.2989 169.293 15.4107 168.668 15.4107 167.724 cv
15.4107 166.782 15.2994 166.156 15.0772 165.845 cv
14.8545 165.536 14.5752 165.38 14.2383 165.38 cv
13.9102 165.38 13.6465 165.517 13.4483 165.791 cv
13.2042 166.14 13.0826 166.785 13.0826 167.724 cv
cp
12.3638 167.726 mo
12.3638 167.049 12.4336 166.503 12.5743 166.088 cv
12.7149 165.673 12.9239 165.355 13.2007 165.134 cv
13.4776 164.913 13.8262 164.802 14.2466 164.802 cv
14.5567 164.802 14.8296 164.865 15.066 164.988 cv
15.3023 165.111 15.4952 165.29 15.6446 165.523 cv
15.7945 165.755 15.9126 166.039 15.9991 166.374 cv
16.086 166.708 16.1294 167.159 16.1294 167.726 cv
16.1294 168.398 16.0596 168.941 15.9209 169.356 cv
15.7813 169.771 15.5733 170.089 15.2964 170.312 cv
15.0196 170.535 14.6695 170.646 14.2466 170.646 cv
13.69 170.646 13.253 170.451 12.9346 170.06 cv
12.5538 169.58 12.3638 168.801 12.3638 167.726 cv
f
17.2037 170.552 mo
17.2037 169.755 li
18.0005 169.755 li
18.0005 170.552 li
17.2037 170.552 li
f
19.7544 167.724 mo
19.7544 168.669 19.8663 169.296 20.0899 169.605 cv
20.3135 169.914 20.5899 170.068 20.9185 170.068 cv
21.2471 170.068 21.523 169.914 21.7471 169.603 cv
21.9708 169.293 22.0826 168.668 22.0826 167.724 cv
22.0826 166.782 21.9712 166.156 21.7491 165.845 cv
21.5264 165.536 21.2471 165.38 20.9102 165.38 cv
20.5821 165.38 20.3184 165.517 20.1202 165.791 cv
19.876 166.14 19.7544 166.785 19.7544 167.724 cv
cp
19.0357 167.726 mo
19.0357 167.049 19.1055 166.503 19.2461 166.088 cv
19.3868 165.673 19.5958 165.355 19.8726 165.134 cv
20.1495 164.913 20.4981 164.802 20.9185 164.802 cv
21.2286 164.802 21.5015 164.865 21.7378 164.988 cv
21.9742 165.111 22.167 165.29 22.3165 165.523 cv
22.4664 165.755 22.5845 166.039 22.6709 166.374 cv
22.7579 166.708 22.8013 167.159 22.8013 167.726 cv
22.8013 168.398 22.7315 168.941 22.5928 169.356 cv
22.4532 169.771 22.2452 170.089 21.9683 170.312 cv
21.6915 170.535 21.3414 170.646 20.9185 170.646 cv
20.3619 170.646 19.9249 170.451 19.6065 170.06 cv
19.2256 169.58 19.0357 168.801 19.0357 167.726 cv
f
23.4849 169.052 mo
24.2037 168.99 li
24.2588 169.348 24.3848 169.617 24.5831 169.797 cv
24.7813 169.978 25.0245 170.068 25.3126 170.068 cv
25.6612 170.068 25.9517 169.941 26.1836 169.686 cv
26.4156 169.432 26.5318 169.094 26.5318 168.673 cv
26.5318 168.274 26.421 167.958 26.1998 167.727 cv
25.9786 167.496 25.6817 167.38 25.3091 167.38 cv
25.0772 167.38 24.8716 167.431 24.6919 167.533 cv
24.5123 167.634 24.3702 167.765 24.2662 167.927 cv
23.6099 167.834 li
24.1724 164.896 li
27.0162 164.896 li
27.0162 165.568 li
24.7315 165.568 li
24.4185 167.117 li
24.7623 166.876 25.1231 166.755 25.5005 166.755 cv
26.0005 166.755 26.4224 166.928 26.7662 167.275 cv
27.1099 167.621 27.2818 168.066 27.2818 168.609 cv
27.2818 169.126 27.1309 169.574 26.8287 169.952 cv
26.4615 170.415 25.96 170.646 25.3248 170.646 cv
24.8038 170.646 24.379 170.5 24.0494 170.209 cv
23.7198 169.918 23.5318 169.533 23.4849 169.052 cv
f
24.4151 215.683 mo
24.4151 216.628 24.5269 217.255 24.751 217.564 cv
24.9747 217.873 25.2505 218.027 25.5792 218.027 cv
25.9073 218.027 26.1836 217.873 26.4073 217.562 cv
26.6309 217.252 26.7432 216.626 26.7432 215.683 cv
26.7432 214.741 26.6319 214.115 26.4092 213.804 cv
26.1866 213.495 25.9073 213.339 25.5713 213.339 cv
25.2427 213.339 24.9795 213.476 24.7803 213.75 cv
24.5372 214.099 24.4151 214.744 24.4151 215.683 cv
cp
23.6963 215.685 mo
23.6963 215.008 23.7667 214.462 23.9073 214.047 cv
24.0474 213.632 24.2559 213.314 24.5333 213.093 cv
24.8106 212.872 25.1592 212.761 25.5792 212.761 cv
25.8887 212.761 26.1622 212.824 26.3985 212.947 cv
26.6348 213.07 26.8277 213.249 26.9776 213.482 cv
27.127 213.714 27.2452 213.998 27.3321 214.333 cv
27.4185 214.668 27.462 215.118 27.462 215.685 cv
27.462 216.357 27.3926 216.9 27.253 217.315 cv
27.1143 217.73 26.9058 218.048 26.629 218.271 cv
26.3516 218.494 26.002 218.605 25.5792 218.605 cv
25.0225 218.605 24.585 218.41 24.2676 218.019 cv
23.8868 217.539 23.6963 216.76 23.6963 215.685 cv
f
13.2105 118.632 mo
13.2105 119.578 13.3223 120.205 13.5459 120.513 cv
13.7696 120.822 14.0459 120.976 14.3746 120.976 cv
14.7032 120.976 14.9791 120.822 15.2032 120.511 cv
15.4268 120.202 15.5386 119.576 15.5386 118.632 cv
15.5386 117.69 15.4273 117.064 15.2051 116.753 cv
14.9825 116.444 14.7032 116.289 14.3663 116.289 cv
14.0381 116.289 13.7745 116.425 13.5762 116.699 cv
13.3321 117.048 13.2105 117.693 13.2105 118.632 cv
cp
12.4917 118.634 mo
12.4917 117.958 12.5616 117.412 12.7022 116.997 cv
12.8428 116.582 13.0518 116.263 13.3287 116.042 cv
13.6055 115.821 13.9542 115.71 14.3746 115.71 cv
14.6846 115.71 14.9576 115.773 15.1939 115.896 cv
15.4302 116.019 15.6231 116.198 15.7725 116.431 cv
15.9224 116.664 16.0406 116.947 16.127 117.282 cv
16.2139 117.617 16.2574 118.067 16.2574 118.634 cv
16.2574 119.306 16.1876 119.849 16.0489 120.264 cv
15.9092 120.679 15.7012 120.998 15.4244 121.22 cv
15.1475 121.443 14.7974 121.554 14.3746 121.554 cv
13.8179 121.554 13.3809 121.359 13.0626 120.968 cv
12.6817 120.488 12.4917 119.709 12.4917 118.634 cv
f
17.3316 121.46 mo
17.3316 120.664 li
18.1285 120.664 li
18.1285 121.46 li
17.3316 121.46 li
f
21.8199 121.46 mo
21.1168 121.46 li
21.1168 116.98 li
20.9473 117.142 20.7256 117.303 20.4507 117.464 cv
20.1758 117.626 19.9292 117.748 19.7105 117.828 cv
19.7105 117.148 li
20.1036 116.963 20.4473 116.74 20.7418 116.476 cv
21.0362 116.213 21.2442 115.959 21.3668 115.71 cv
21.8199 115.71 li
21.8199 121.46 li
f
13.3169 69.542 mo
13.3169 70.4874 13.4288 71.1143 13.6524 71.4229 cv
13.876 71.7315 14.1524 71.8858 14.481 71.8858 cv
14.8096 71.8858 15.0855 71.7315 15.3096 71.421 cv
15.5333 71.1114 15.6451 70.4854 15.6451 69.542 cv
15.6451 68.5997 15.5337 67.9737 15.3116 67.6631 cv
15.0889 67.3536 14.8096 67.1983 14.4727 67.1983 cv
14.1446 67.1983 13.8809 67.335 13.6827 67.6084 cv
13.4385 67.9581 13.3169 68.6026 13.3169 69.542 cv
cp
12.5982 69.544 mo
12.5982 68.8672 12.668 68.3213 12.8086 67.9063 cv
12.9493 67.4913 13.1583 67.1729 13.4351 66.9522 cv
13.712 66.7305 14.0606 66.6202 14.481 66.6202 cv
14.7911 66.6202 15.064 66.6827 15.3003 66.8057 cv
15.5367 66.9288 15.7295 67.1075 15.879 67.3409 cv
16.0289 67.5733 16.147 67.8565 16.2334 68.1915 cv
16.3204 68.5264 16.3638 68.9766 16.3638 69.544 cv
16.3638 70.2159 16.294 70.7588 16.1553 71.1739 cv
16.0157 71.5889 15.8077 71.9073 15.5308 72.1299 cv
15.254 72.3526 14.9039 72.4639 14.481 72.4639 cv
13.9244 72.4639 13.4874 72.2686 13.169 71.878 cv
12.7881 71.3975 12.5982 70.6192 12.5982 69.544 cv
f
17.438 72.3702 mo
17.438 71.5733 li
18.2349 71.5733 li
18.2349 72.3702 li
17.438 72.3702 li
f
21.9263 72.3702 mo
21.2232 72.3702 li
21.2232 67.8897 li
21.0538 68.0518 20.8321 68.2129 20.5572 68.3741 cv
20.2823 68.5362 20.0357 68.6573 19.8169 68.7374 cv
19.8169 68.0577 li
20.21 67.8731 20.5538 67.6495 20.8482 67.3858 cv
21.1426 67.1231 21.3506 66.8682 21.4732 66.6202 cv
21.9263 66.6202 li
21.9263 72.3702 li
f
23.7193 70.8702 mo
24.438 70.8077 li
24.4932 71.1661 24.6192 71.4346 24.8174 71.6153 cv
25.0157 71.796 25.2588 71.8858 25.5469 71.8858 cv
25.8956 71.8858 26.1861 71.7588 26.418 71.504 cv
26.65 71.25 26.7662 70.9122 26.7662 70.4913 cv
26.7662 70.0918 26.6553 69.7764 26.4341 69.545 cv
26.2129 69.3135 25.9161 69.1983 25.5435 69.1983 cv
25.3116 69.1983 25.106 69.2491 24.9263 69.3506 cv
24.7466 69.4522 24.6045 69.5831 24.5005 69.7452 cv
23.8443 69.6514 li
24.4068 66.7139 li
27.2505 66.7139 li
27.2505 67.3858 li
24.9659 67.3858 li
24.6529 68.9346 li
24.9966 68.6944 25.3575 68.5733 25.7349 68.5733 cv
26.2349 68.5733 26.6568 68.7461 27.0005 69.0928 cv
27.3443 69.4385 27.5162 69.8838 27.5162 70.4268 cv
27.5162 70.9444 27.3653 71.3916 27.063 71.7696 cv
26.6958 72.2325 26.1944 72.4639 25.5591 72.4639 cv
25.0381 72.4639 24.6133 72.3184 24.2837 72.0274 cv
23.9542 71.7364 23.7662 71.3506 23.7193 70.8702 cv
f
13.4605 20.4507 mo
13.4605 21.396 13.5723 22.023 13.7959 22.3316 cv
14.0196 22.6402 14.2959 22.7945 14.6246 22.7945 cv
14.9532 22.7945 15.2291 22.6397 15.4532 22.3296 cv
15.6768 22.0196 15.7886 21.3936 15.7886 20.4507 cv
15.7886 19.5079 15.6773 18.8819 15.4551 18.5718 cv
15.2325 18.2618 14.9532 18.107 14.6163 18.107 cv
14.2881 18.107 14.0245 18.2437 13.8262 18.5171 cv
13.5821 18.8663 13.4605 19.5108 13.4605 20.4507 cv
cp
12.7417 20.4527 mo
12.7417 19.7764 12.8116 19.2305 12.9522 18.8155 cv
13.0928 18.4004 13.3018 18.0821 13.5787 17.8604 cv
13.8555 17.6397 14.2042 17.5289 14.6246 17.5289 cv
14.9346 17.5289 15.2076 17.5909 15.4439 17.7144 cv
15.6802 17.8379 15.8731 18.0162 16.0225 18.2491 cv
16.1724 18.482 16.2906 18.7657 16.377 19.1001 cv
16.4639 19.4346 16.5074 19.8853 16.5074 20.4527 cv
16.5074 21.1241 16.4376 21.6675 16.2989 22.0826 cv
16.1592 22.4976 15.9512 22.8165 15.6744 23.0391 cv
15.3975 23.2618 15.0474 23.3726 14.6246 23.3726 cv
14.0679 23.3726 13.6309 23.1778 13.3126 22.7872 cv
12.9317 22.3057 12.7417 21.5274 12.7417 20.4527 cv
f
17.5816 23.2789 mo
17.5816 22.482 li
18.3785 22.482 li
18.3785 23.2789 li
17.5816 23.2789 li
f
23.1168 22.607 mo
23.1168 23.2789 li
19.3199 23.2789 li
19.3145 23.1094 19.3418 22.9468 19.4024 22.7906 cv
19.5 22.5328 19.6553 22.2793 19.8697 22.0308 cv
20.084 21.7823 20.3907 21.4942 20.7901 21.1666 cv
21.4092 20.6504 21.8296 20.2437 22.0508 19.9458 cv
22.2715 19.6485 22.3824 19.3653 22.3824 19.0977 cv
22.3824 18.8194 22.2823 18.585 22.0831 18.3936 cv
21.8834 18.2027 21.6231 18.107 21.3023 18.107 cv
20.9629 18.107 20.6915 18.211 20.4883 18.418 cv
20.2847 18.625 20.1817 18.9122 20.1792 19.2789 cv
19.4605 19.1851 li
19.5098 18.646 19.6958 18.2354 20.0186 17.9527 cv
20.3409 17.67 20.774 17.5289 21.3179 17.5289 cv
21.8668 17.5289 22.3008 17.6817 22.6211 17.9864 cv
22.941 18.2911 23.1011 18.6685 23.1011 19.1192 cv
23.1011 19.3487 23.0547 19.5738 22.961 19.795 cv
22.8682 20.0167 22.7129 20.25 22.4971 20.4947 cv
22.2803 20.7393 21.92 21.0757 21.4161 21.5035 cv
20.9927 21.8584 20.7212 22.0992 20.6016 22.2256 cv
20.4815 22.3521 20.3829 22.4795 20.3047 22.607 cv
23.1168 22.607 li
f
282.687 213.384 mo
282.687 216.698 li
272.606 214.978 mo
272.606 216.698 li
262.525 214.978 mo
262.525 216.698 li
252.445 214.978 mo
252.445 216.698 li
242.364 214.978 mo
242.364 216.698 li
232.283 213.384 mo
232.283 216.698 li
222.202 214.978 mo
222.202 216.698 li
212.121 214.978 mo
212.121 216.698 li
202.04 214.978 mo
202.04 216.698 li
191.959 214.978 mo
191.959 216.698 li
181.878 213.384 mo
181.878 216.698 li
171.797 214.978 mo
171.797 216.698 li
161.717 214.978 mo
161.717 216.698 li
151.636 214.978 mo
151.636 216.698 li
141.555 214.978 mo
141.555 216.698 li
131.474 213.384 mo
131.474 216.698 li
121.393 214.978 mo
121.393 216.698 li
111.313 214.978 mo
111.313 216.698 li
101.231 214.978 mo
101.231 216.698 li
91.1504 214.978 mo
91.1504 216.698 li
81.0694 213.384 mo
81.0694 216.698 li
70.9883 214.978 mo
70.9883 216.698 li
60.9078 214.978 mo
60.9078 216.698 li
50.8267 214.978 mo
50.8267 216.698 li
40.7461 214.978 mo
40.7461 216.698 li
30.6651 213.384 mo
30.6651 216.698 li
@
24.8648 225.287 mo
25.5835 225.193 li
25.6636 225.585 25.7984 225.869 25.9883 226.042 cv
26.1778 226.215 26.4136 226.302 26.6954 226.302 cv
27.0284 226.302 27.3067 226.187 27.5298 225.958 cv
27.753 225.728 27.8648 225.444 27.8648 225.105 cv
27.8648 224.782 27.7598 224.515 27.5508 224.304 cv
27.3418 224.095 27.0762 223.99 26.753 223.99 cv
26.6211 223.99 26.4576 224.016 26.2613 224.068 cv
26.3389 223.443 li
26.3853 223.449 26.4224 223.451 26.4507 223.451 cv
26.7452 223.451 27.0098 223.374 27.2457 223.218 cv
27.4815 223.064 27.5992 222.825 27.5992 222.501 cv
27.5992 222.246 27.5127 222.035 27.3399 221.867 cv
27.167 221.699 26.9444 221.615 26.671 221.615 cv
26.4004 221.615 26.1749 221.701 25.9942 221.873 cv
25.8135 222.044 25.6973 222.302 25.646 222.646 cv
24.9273 222.521 li
25.0127 222.05 25.2081 221.685 25.5118 221.425 cv
25.8155 221.167 26.1939 221.037 26.646 221.037 cv
26.9576 221.037 27.2447 221.103 27.5069 221.237 cv
27.7696 221.371 27.9703 221.552 28.1094 221.783 cv
28.2481 222.013 28.3179 222.258 28.3179 222.518 cv
28.3179 222.764 28.2515 222.988 28.1187 223.191 cv
27.9859 223.392 27.7891 223.553 27.5289 223.672 cv
27.8672 223.75 28.1329 223.914 28.3257 224.16 cv
28.5186 224.406 28.6148 224.714 28.6148 225.084 cv
28.6148 225.585 28.4327 226.01 28.0679 226.358 cv
27.7032 226.707 27.2422 226.88 26.6851 226.88 cv
26.1827 226.88 25.7652 226.733 25.4332 226.437 cv
25.1011 226.141 24.9117 225.757 24.8648 225.287 cv
f
30.0171 223.958 mo
30.0171 224.904 30.129 225.531 30.3526 225.839 cv
30.5762 226.148 30.8526 226.302 31.1812 226.302 cv
31.5098 226.302 31.7857 226.148 32.0098 225.837 cv
32.2334 225.528 32.3453 224.902 32.3453 223.958 cv
32.3453 223.016 32.2339 222.39 32.0118 222.08 cv
31.7891 221.77 31.5098 221.615 31.1729 221.615 cv
30.8448 221.615 30.5811 221.751 30.3829 222.025 cv
30.1387 222.375 30.0171 223.019 30.0171 223.958 cv
cp
29.2984 223.96 mo
29.2984 223.284 29.3682 222.738 29.5088 222.323 cv
29.6495 221.908 29.8584 221.589 30.1353 221.369 cv
30.4122 221.147 30.7608 221.037 31.1812 221.037 cv
31.4913 221.037 31.7642 221.099 32.0005 221.222 cv
32.2369 221.345 32.4297 221.524 32.5792 221.757 cv
32.7291 221.99 32.8472 222.273 32.9336 222.608 cv
33.0206 222.943 33.064 223.393 33.064 223.96 cv
33.064 224.632 32.9942 225.175 32.8555 225.59 cv
32.7159 226.005 32.5079 226.324 32.231 226.546 cv
31.9542 226.769 31.6041 226.88 31.1812 226.88 cv
30.6246 226.88 30.1876 226.685 29.8692 226.294 cv
29.4883 225.814 29.2984 225.036 29.2984 223.96 cv
f
34.4664 223.958 mo
34.4664 224.904 34.5782 225.531 34.8018 225.839 cv
35.0254 226.148 35.3018 226.302 35.6304 226.302 cv
35.959 226.302 36.2349 226.148 36.459 225.837 cv
36.6827 225.528 36.7945 224.902 36.7945 223.958 cv
36.7945 223.016 36.6832 222.39 36.461 222.08 cv
36.2383 221.77 35.959 221.615 35.6221 221.615 cv
35.294 221.615 35.0303 221.751 34.8321 222.025 cv
34.5879 222.375 34.4664 223.019 34.4664 223.958 cv
cp
33.7476 223.96 mo
33.7476 223.284 33.8174 222.738 33.9581 222.323 cv
34.0987 221.908 34.3077 221.589 34.5845 221.369 cv
34.8614 221.147 35.21 221.037 35.6304 221.037 cv
35.9405 221.037 36.2134 221.099 36.4498 221.222 cv
36.6861 221.345 36.879 221.524 37.0284 221.757 cv
37.1783 221.99 37.2964 222.273 37.3829 222.608 cv
37.4698 222.943 37.5132 223.393 37.5132 223.96 cv
37.5132 224.632 37.4434 225.175 37.3047 225.59 cv
37.1651 226.005 36.9571 226.324 36.6802 226.546 cv
36.4034 226.769 36.0533 226.88 35.6304 226.88 cv
35.0738 226.88 34.6368 226.685 34.3184 226.294 cv
33.9376 225.814 33.7476 225.036 33.7476 223.96 cv
f
77.5035 224.771 mo
77.5035 222.205 li
75.711 224.771 li
77.5035 224.771 li
cp
77.5035 226.787 mo
77.5035 225.412 li
75.0191 225.412 li
75.0191 224.771 li
77.6441 221.052 li
78.2066 221.052 li
78.2066 224.771 li
78.9878 224.771 li
78.9878 225.412 li
78.2066 225.412 li
78.2066 226.787 li
77.5035 226.787 li
f
80.4214 223.958 mo
80.4214 224.904 80.5332 225.531 80.7569 225.839 cv
80.9805 226.148 81.2569 226.302 81.5855 226.302 cv
81.9141 226.302 82.19 226.148 82.4141 225.837 cv
82.6377 225.528 82.7496 224.902 82.7496 223.958 cv
82.7496 223.016 82.6382 222.39 82.4161 222.08 cv
82.1934 221.77 81.9141 221.615 81.5772 221.615 cv
81.2491 221.615 80.9854 221.751 80.7872 222.025 cv
80.543 222.375 80.4214 223.019 80.4214 223.958 cv
cp
79.7027 223.96 mo
79.7027 223.284 79.7725 222.738 79.9131 222.323 cv
80.0538 221.908 80.2627 221.589 80.5396 221.369 cv
80.8165 221.147 81.1651 221.037 81.5855 221.037 cv
81.8956 221.037 82.1685 221.099 82.4048 221.222 cv
82.6412 221.345 82.834 221.524 82.9834 221.757 cv
83.1334 221.99 83.2515 222.273 83.3379 222.608 cv
83.4249 222.943 83.4683 223.393 83.4683 223.96 cv
83.4683 224.632 83.3985 225.175 83.2598 225.59 cv
83.1202 226.005 82.9122 226.324 82.6353 226.546 cv
82.3584 226.769 82.0084 226.88 81.5855 226.88 cv
81.0289 226.88 80.5918 226.685 80.2735 226.294 cv
79.8926 225.814 79.7027 225.036 79.7027 223.96 cv
f
84.8707 223.958 mo
84.8707 224.904 84.9825 225.531 85.2061 225.839 cv
85.4297 226.148 85.7061 226.302 86.0347 226.302 cv
86.3633 226.302 86.6392 226.148 86.8633 225.837 cv
87.087 225.528 87.1988 224.902 87.1988 223.958 cv
87.1988 223.016 87.0874 222.39 86.8653 222.08 cv
86.6426 221.77 86.3633 221.615 86.0264 221.615 cv
85.6983 221.615 85.4346 221.751 85.2364 222.025 cv
84.9922 222.375 84.8707 223.019 84.8707 223.958 cv
cp
84.1519 223.96 mo
84.1519 223.284 84.2217 222.738 84.3624 222.323 cv
84.503 221.908 84.712 221.589 84.9888 221.369 cv
85.2657 221.147 85.6143 221.037 86.0347 221.037 cv
86.3448 221.037 86.6177 221.099 86.8541 221.222 cv
87.0904 221.345 87.2832 221.524 87.4327 221.757 cv
87.5826 221.99 87.7007 222.273 87.7872 222.608 cv
87.8741 222.943 87.9175 223.393 87.9175 223.96 cv
87.9175 224.632 87.8477 225.175 87.709 225.59 cv
87.5694 226.005 87.3614 226.324 87.0845 226.546 cv
86.8077 226.769 86.4576 226.88 86.0347 226.88 cv
85.4781 226.88 85.0411 226.685 84.7227 226.294 cv
84.3418 225.814 84.1519 225.036 84.1519 223.96 cv
f
125.658 225.287 mo
126.377 225.224 li
126.432 225.583 126.558 225.851 126.756 226.032 cv
126.955 226.212 127.198 226.302 127.486 226.302 cv
127.834 226.302 128.125 226.175 128.357 225.92 cv
128.589 225.667 128.705 225.329 128.705 224.908 cv
128.705 224.508 128.594 224.193 128.373 223.961 cv
128.152 223.73 127.855 223.615 127.482 223.615 cv
127.25 223.615 127.045 223.666 126.865 223.767 cv
126.686 223.869 126.543 224 126.439 224.162 cv
125.783 224.068 li
126.346 221.13 li
129.189 221.13 li
129.189 221.802 li
126.905 221.802 li
126.592 223.351 li
126.936 223.111 127.296 222.99 127.674 222.99 cv
128.174 222.99 128.596 223.163 128.939 223.509 cv
129.283 223.855 129.455 224.3 129.455 224.843 cv
129.455 225.361 129.304 225.808 129.002 226.186 cv
128.635 226.649 128.133 226.88 127.498 226.88 cv
126.977 226.88 126.552 226.735 126.223 226.444 cv
125.893 226.153 125.705 225.767 125.658 225.287 cv
f
130.826 223.958 mo
130.826 224.904 130.938 225.531 131.162 225.839 cv
131.385 226.148 131.662 226.302 131.99 226.302 cv
132.319 226.302 132.595 226.148 132.819 225.837 cv
133.042 225.528 133.154 224.902 133.154 223.958 cv
133.154 223.016 133.043 222.39 132.821 222.08 cv
132.598 221.77 132.319 221.615 131.982 221.615 cv
131.654 221.615 131.39 221.751 131.192 222.025 cv
130.948 222.375 130.826 223.019 130.826 223.958 cv
cp
130.107 223.96 mo
130.107 223.284 130.177 222.738 130.318 222.323 cv
130.459 221.908 130.667 221.589 130.944 221.369 cv
131.221 221.147 131.57 221.037 131.99 221.037 cv
132.3 221.037 132.573 221.099 132.81 221.222 cv
133.046 221.345 133.239 221.524 133.388 221.757 cv
133.538 221.99 133.656 222.273 133.743 222.608 cv
133.83 222.943 133.873 223.393 133.873 223.96 cv
133.873 224.632 133.803 225.175 133.665 225.59 cv
133.525 226.005 133.317 226.324 133.04 226.546 cv
132.763 226.769 132.413 226.88 131.99 226.88 cv
131.434 226.88 130.997 226.685 130.678 226.294 cv
130.297 225.814 130.107 225.036 130.107 223.96 cv
f
135.275 223.958 mo
135.275 224.904 135.387 225.531 135.611 225.839 cv
135.834 226.148 136.111 226.302 136.439 226.302 cv
136.768 226.302 137.044 226.148 137.268 225.837 cv
137.492 225.528 137.604 224.902 137.604 223.958 cv
137.604 223.016 137.492 222.39 137.27 222.08 cv
137.047 221.77 136.768 221.615 136.431 221.615 cv
136.103 221.615 135.839 221.751 135.641 222.025 cv
135.397 222.375 135.275 223.019 135.275 223.958 cv
cp
134.557 223.96 mo
134.557 223.284 134.626 222.738 134.767 222.323 cv
134.908 221.908 135.117 221.589 135.394 221.369 cv
135.67 221.147 136.019 221.037 136.439 221.037 cv
136.75 221.037 137.022 221.099 137.259 221.222 cv
137.495 221.345 137.688 221.524 137.837 221.757 cv
137.987 221.99 138.105 222.273 138.192 222.608 cv
138.279 222.943 138.322 223.393 138.322 223.96 cv
138.322 224.632 138.252 225.175 138.114 225.59 cv
137.974 226.005 137.766 226.324 137.489 226.546 cv
137.212 226.769 136.862 226.88 136.439 226.88 cv
135.883 226.88 135.446 226.685 135.127 226.294 cv
134.747 225.814 134.557 225.036 134.557 223.96 cv
f
176.844 224.929 mo
176.844 225.171 176.895 225.403 176.999 225.624 cv
177.102 225.845 177.246 226.013 177.429 226.128 cv
177.612 226.245 177.808 226.302 178.018 226.302 cv
178.321 226.302 178.579 226.183 178.792 225.943 cv
179.003 225.705 179.109 225.379 179.109 224.968 cv
179.109 224.574 179.004 224.261 178.795 224.035 cv
178.585 223.806 178.317 223.693 177.99 223.693 cv
177.671 223.693 177.4 223.806 177.177 224.035 cv
176.955 224.261 176.844 224.56 176.844 224.929 cv
cp
179.734 222.458 mo
179.031 222.521 li
178.968 222.244 178.879 222.042 178.764 221.917 cv
178.573 221.715 178.336 221.615 178.056 221.615 cv
177.831 221.615 177.629 221.677 177.454 221.802 cv
177.236 221.962 177.063 222.198 176.935 222.507 cv
176.806 222.816 176.74 223.257 176.734 223.83 cv
176.904 223.572 177.112 223.38 177.358 223.255 cv
177.603 223.13 177.861 223.068 178.13 223.068 cv
178.601 223.068 179.001 223.241 179.332 223.585 cv
179.663 223.931 179.828 224.376 179.828 224.923 cv
179.828 225.283 179.75 225.617 179.595 225.925 cv
179.439 226.234 179.225 226.47 178.954 226.634 cv
178.681 226.798 178.373 226.88 178.028 226.88 cv
177.439 226.88 176.959 226.666 176.588 226.234 cv
176.217 225.804 176.031 225.094 176.031 224.105 cv
176.031 223 176.237 222.195 176.648 221.693 cv
177.007 221.255 177.491 221.037 178.099 221.037 cv
178.552 221.037 178.924 221.163 179.213 221.415 cv
179.503 221.667 179.677 222.014 179.734 222.458 cv
f
181.23 223.958 mo
181.23 224.904 181.342 225.531 181.566 225.839 cv
181.79 226.148 182.066 226.302 182.395 226.302 cv
182.723 226.302 182.999 226.148 183.223 225.837 cv
183.447 225.528 183.559 224.902 183.559 223.958 cv
183.559 223.016 183.447 222.39 183.225 222.08 cv
183.002 221.77 182.723 221.615 182.386 221.615 cv
182.058 221.615 181.794 221.751 181.596 222.025 cv
181.352 222.375 181.23 223.019 181.23 223.958 cv
cp
180.512 223.96 mo
180.512 223.284 180.582 222.738 180.722 222.323 cv
180.863 221.908 181.072 221.589 181.349 221.369 cv
181.626 221.147 181.974 221.037 182.395 221.037 cv
182.705 221.037 182.978 221.099 183.214 221.222 cv
183.45 221.345 183.643 221.524 183.792 221.757 cv
183.942 221.99 184.061 222.273 184.147 222.608 cv
184.234 222.943 184.277 223.393 184.277 223.96 cv
184.277 224.632 184.208 225.175 184.069 225.59 cv
183.929 226.005 183.721 226.324 183.444 226.546 cv
183.168 226.769 182.817 226.88 182.395 226.88 cv
181.838 226.88 181.401 226.685 181.083 226.294 cv
180.702 225.814 180.512 225.036 180.512 223.96 cv
f
185.68 223.958 mo
185.68 224.904 185.792 225.531 186.015 225.839 cv
186.239 226.148 186.515 226.302 186.844 226.302 cv
187.172 226.302 187.448 226.148 187.672 225.837 cv
187.896 225.528 188.008 224.902 188.008 223.958 cv
188.008 223.016 187.896 222.39 187.674 222.08 cv
187.452 221.77 187.172 221.615 186.835 221.615 cv
186.507 221.615 186.244 221.751 186.045 222.025 cv
185.801 222.375 185.68 223.019 185.68 223.958 cv
cp
184.961 223.96 mo
184.961 223.284 185.031 222.738 185.171 222.323 cv
185.312 221.908 185.521 221.589 185.798 221.369 cv
186.075 221.147 186.423 221.037 186.844 221.037 cv
187.154 221.037 187.427 221.099 187.663 221.222 cv
187.899 221.345 188.092 221.524 188.242 221.757 cv
188.392 221.99 188.51 222.273 188.596 222.608 cv
188.683 222.943 188.727 223.393 188.727 223.96 cv
188.727 224.632 188.657 225.175 188.518 225.59 cv
188.378 226.005 188.17 226.324 187.894 226.546 cv
187.617 226.769 187.267 226.88 186.844 226.88 cv
186.287 226.88 185.85 226.685 185.532 226.294 cv
185.151 225.814 184.961 225.036 184.961 223.96 cv
f
226.514 221.802 mo
226.514 221.13 li
230.217 221.13 li
230.217 221.674 li
229.852 222.062 229.49 222.579 229.131 223.222 cv
228.772 223.867 228.496 224.529 228.3 225.21 cv
228.159 225.69 228.069 226.215 228.03 226.787 cv
227.311 226.787 li
227.319 226.335 227.407 225.791 227.576 225.152 cv
227.745 224.512 227.987 223.896 228.303 223.302 cv
228.619 222.709 228.955 222.209 229.311 221.802 cv
226.514 221.802 li
f
231.635 223.958 mo
231.635 224.904 231.748 225.531 231.971 225.839 cv
232.195 226.148 232.47 226.302 232.799 226.302 cv
233.127 226.302 233.404 226.148 233.627 225.837 cv
233.851 225.528 233.963 224.902 233.963 223.958 cv
233.963 223.016 233.852 222.39 233.629 222.08 cv
233.407 221.77 233.127 221.615 232.792 221.615 cv
232.462 221.615 232.2 221.751 232 222.025 cv
231.757 222.375 231.635 223.019 231.635 223.958 cv
cp
230.917 223.96 mo
230.917 223.284 230.987 222.738 231.127 222.323 cv
231.267 221.908 231.476 221.589 231.753 221.369 cv
232.031 221.147 232.379 221.037 232.799 221.037 cv
233.109 221.037 233.382 221.099 233.619 221.222 cv
233.855 221.345 234.048 221.524 234.198 221.757 cv
234.347 221.99 234.465 222.273 234.552 222.608 cv
234.638 222.943 234.682 223.393 234.682 223.96 cv
234.682 224.632 234.613 225.175 234.473 225.59 cv
234.334 226.005 234.126 226.324 233.849 226.546 cv
233.572 226.769 233.222 226.88 232.799 226.88 cv
232.243 226.88 231.805 226.685 231.488 226.294 cv
231.107 225.814 230.917 225.036 230.917 223.96 cv
f
236.084 223.958 mo
236.084 224.904 236.197 225.531 236.42 225.839 cv
236.644 226.148 236.919 226.302 237.249 226.302 cv
237.577 226.302 237.853 226.148 238.077 225.837 cv
238.3 225.528 238.413 224.902 238.413 223.958 cv
238.413 223.016 238.301 222.39 238.079 222.08 cv
237.856 221.77 237.577 221.615 237.241 221.615 cv
236.912 221.615 236.649 221.751 236.45 222.025 cv
236.207 222.375 236.084 223.019 236.084 223.958 cv
cp
235.366 223.96 mo
235.366 223.284 235.436 222.738 235.577 222.323 cv
235.716 221.908 235.925 221.589 236.203 221.369 cv
236.48 221.147 236.829 221.037 237.249 221.037 cv
237.558 221.037 237.832 221.099 238.068 221.222 cv
238.304 221.345 238.498 221.524 238.647 221.757 cv
238.796 221.99 238.915 222.273 239.001 222.608 cv
239.087 222.943 239.131 223.393 239.131 223.96 cv
239.131 224.632 239.062 225.175 238.922 225.59 cv
238.784 226.005 238.576 226.324 238.298 226.546 cv
238.021 226.769 237.671 226.88 237.249 226.88 cv
236.692 226.88 236.254 226.685 235.937 226.294 cv
235.556 225.814 235.366 225.036 235.366 223.96 cv
f
277.824 222.49 mo
277.824 222.761 277.91 222.982 278.081 223.154 cv
278.251 223.326 278.478 223.412 278.761 223.412 cv
279.037 223.412 279.258 223.327 279.428 223.156 cv
279.598 222.986 279.683 222.777 279.683 222.529 cv
279.683 222.271 279.595 222.054 279.42 221.878 cv
279.246 221.703 279.023 221.615 278.753 221.615 cv
278.481 221.615 278.258 221.701 278.084 221.873 cv
277.911 222.044 277.824 222.25 277.824 222.49 cv
cp
277.589 225.134 mo
277.589 225.334 277.635 225.528 277.728 225.714 cv
277.82 225.902 277.96 226.046 278.151 226.148 cv
278.34 226.251 278.543 226.302 278.759 226.302 cv
279.1 226.302 279.378 226.195 279.593 225.979 cv
279.81 225.764 279.918 225.49 279.918 225.158 cv
279.918 224.82 279.806 224.542 279.584 224.321 cv
279.362 224.1 279.08 223.99 278.736 223.99 cv
278.4 223.99 278.126 224.099 277.912 224.317 cv
277.697 224.535 277.589 224.807 277.589 225.134 cv
cp
277.964 223.683 mo
277.672 223.577 277.457 223.424 277.316 223.226 cv
277.175 223.028 277.105 222.791 277.105 222.514 cv
277.105 222.097 277.254 221.748 277.552 221.462 cv
277.851 221.179 278.248 221.037 278.744 221.037 cv
279.242 221.037 279.642 221.182 279.947 221.472 cv
280.25 221.763 280.402 222.117 280.402 222.534 cv
280.402 222.8 280.333 223.031 280.194 223.228 cv
280.055 223.424 279.845 223.577 279.562 223.683 cv
279.913 223.797 280.179 223.982 280.362 224.237 cv
280.544 224.492 280.636 224.795 280.636 225.149 cv
280.636 225.638 280.463 226.048 280.118 226.381 cv
279.772 226.714 279.318 226.88 278.753 226.88 cv
278.189 226.88 277.735 226.713 277.389 226.379 cv
277.043 226.045 276.871 225.628 276.871 225.129 cv
276.871 224.758 276.965 224.447 277.155 224.196 cv
277.344 223.945 277.614 223.774 277.964 223.683 cv
f
282.039 223.958 mo
282.039 224.904 282.15 225.531 282.375 225.839 cv
282.598 226.148 282.875 226.302 283.203 226.302 cv
283.531 226.302 283.807 226.148 284.031 225.837 cv
284.254 225.528 284.367 224.902 284.367 223.958 cv
284.367 223.016 284.255 222.39 284.033 222.08 cv
283.81 221.77 283.531 221.615 283.195 221.615 cv
282.867 221.615 282.603 221.751 282.404 222.025 cv
282.161 222.375 282.039 223.019 282.039 223.958 cv
cp
281.32 223.96 mo
281.32 223.284 281.39 222.738 281.531 222.323 cv
281.671 221.908 281.879 221.589 282.157 221.369 cv
282.434 221.147 282.783 221.037 283.203 221.037 cv
283.512 221.037 283.786 221.099 284.022 221.222 cv
284.258 221.345 284.451 221.524 284.601 221.757 cv
284.75 221.99 284.869 222.273 284.956 222.608 cv
285.042 222.943 285.085 223.393 285.085 223.96 cv
285.085 224.632 285.016 225.175 284.876 225.59 cv
284.738 226.005 284.529 226.324 284.252 226.546 cv
283.975 226.769 283.626 226.88 283.203 226.88 cv
282.646 226.88 282.208 226.685 281.891 226.294 cv
281.51 225.814 281.32 225.036 281.32 223.96 cv
f
286.488 223.958 mo
286.488 224.904 286.599 225.531 286.824 225.839 cv
287.047 226.148 287.324 226.302 287.652 226.302 cv
287.98 226.302 288.256 226.148 288.48 225.837 cv
288.704 225.528 288.816 224.902 288.816 223.958 cv
288.816 223.016 288.705 222.39 288.482 222.08 cv
288.259 221.77 287.98 221.615 287.644 221.615 cv
287.316 221.615 287.052 221.751 286.853 222.025 cv
286.61 222.375 286.488 223.019 286.488 223.958 cv
cp
285.769 223.96 mo
285.769 223.284 285.839 222.738 285.98 222.323 cv
286.121 221.908 286.329 221.589 286.606 221.369 cv
286.883 221.147 287.232 221.037 287.652 221.037 cv
287.961 221.037 288.235 221.099 288.471 221.222 cv
288.708 221.345 288.9 221.524 289.05 221.757 cv
289.2 221.99 289.318 222.273 289.405 222.608 cv
289.492 222.943 289.535 223.393 289.535 223.96 cv
289.535 224.632 289.465 225.175 289.326 225.59 cv
289.187 226.005 288.978 226.324 288.702 226.546 cv
288.424 226.769 288.075 226.88 287.652 226.88 cv
287.095 226.88 286.658 226.685 286.34 226.294 cv
285.96 225.814 285.769 225.036 285.769 223.96 cv
f
3.17188 159.882 mo
3.17188 158.216 li
3.17188 157.666 3.06934 157.274 2.86524 157.042 cv
2.66016 156.811 2.37256 156.695 2.00147 156.695 cv
1.73243 156.695 1.50245 156.763 1.31104 156.9 cv
1.11963 157.036 0.993165 157.215 0.931641 157.438 cv
0.894044 157.582 0.875 157.847 0.875 158.234 cv
0.875 159.882 li
3.17188 159.882 li
cp
6.5625 160.742 mo
0.109376 160.742 li
0.109376 158.31 li
0.109376 157.881 0.129883 157.554 0.170899 157.329 cv
0.223633 157.012 0.324219 156.747 0.472657 156.533 cv
0.620606 156.319 0.828126 156.146 1.09473 156.016 cv
1.36231 155.885 1.65528 155.82 1.9751 155.82 cv
2.52344 155.82 2.9878 155.995 3.36768 156.343 cv
3.74756 156.691 3.9375 157.321 3.9375 158.231 cv
3.9375 159.882 li
6.5625 159.882 li
6.5625 160.742 li
f
6.5625 154.754 mo
0.109376 154.754 li
0.109376 153.469 li
4.6709 151.945 li
5.09571 151.804 5.41358 151.702 5.62452 151.637 cv
5.39014 151.563 5.0459 151.448 4.5918 151.291 cv
0.109376 149.728 li
0.109376 148.598 li
6.5625 148.598 li
6.5625 149.426 li
1.15626 149.426 li
6.5625 151.31 li
6.5625 152.07 li
1.0625 153.926 li
6.5625 153.926 li
6.5625 154.754 li
f
6.5625 145.601 mo
0.875 145.601 li
0.875 147.726 li
0.109376 147.726 li
0.109376 142.617 li
0.875 142.617 li
0.875 144.742 li
6.5625 144.742 li
6.5625 145.601 li
f
4.77735 136.392 mo
4.91504 135.9 5.12012 135.494 5.39258 135.174 cv
4.93555 134.673 4.24854 134.422 3.33155 134.422 cv
2.81006 134.422 2.3545 134.511 1.96485 134.688 cv
1.5752 134.866 1.27247 135.125 1.05762 135.466 cv
0.841797 135.808 0.734376 136.191 0.734376 136.617 cv
0.734376 137.252 0.952149 137.781 1.38672 138.2 cv
1.82227 138.619 2.47168 138.829 3.33594 138.829 cv
4.17383 138.829 4.8169 138.621 5.26514 138.207 cv
5.71338 137.792 5.9375 137.261 5.9375 136.617 cv
5.9375 136.312 5.88038 136.025 5.76612 135.754 cv
5.59327 136.021 5.47022 136.303 5.39698 136.599 cv
4.77735 136.392 li
cp
5.86719 134.514 mo
6.1421 134.12 6.34278 133.755 6.46973 133.422 cv
7.06299 133.674 li
6.89551 134.136 6.63086 134.596 6.26954 135.055 cv
6.53809 135.533 6.67188 136.06 6.67188 136.637 cv
6.67188 137.22 6.53126 137.749 6.25 138.223 cv
5.96827 138.698 5.57227 139.063 5.0625 139.319 cv
4.55176 139.576 3.97754 139.704 3.3379 139.704 cv
2.70215 139.704 2.12305 139.575 1.60108 139.317 cv
1.07911 139.06 0.681641 138.693 0.40918 138.217 cv
0.136719 137.742 0 137.209 0 136.621 cv
0 136.027 0.141602 135.491 0.423829 135.014 cv
0.707032 134.537 1.10254 134.173 1.61084 133.922 cv
2.11915 133.672 2.69239 133.547 3.33106 133.547 cv
3.86133 133.547 4.33887 133.627 4.76172 133.788 cv
5.18555 133.949 5.55372 134.191 5.86719 134.514 cv
f
6.5625 129.453 mo
5.87452 129.453 li
6.40626 129.815 6.67188 130.306 6.67188 130.927 cv
6.67188 131.202 6.61915 131.458 6.51368 131.695 cv
6.40821 131.933 6.2754 132.109 6.11524 132.224 cv
5.95508 132.339 5.75879 132.42 5.52735 132.467 cv
5.37208 132.5 5.125 132.515 4.7876 132.515 cv
1.89063 132.515 li
1.89063 131.718 li
4.48047 131.718 li
4.89405 131.718 5.17237 131.703 5.31592 131.67 cv
5.52442 131.621 5.6875 131.516 5.80665 131.356 cv
5.92481 131.196 5.98438 130.998 5.98438 130.762 cv
5.98438 130.527 5.92383 130.305 5.80176 130.099 cv
5.68067 129.892 5.51465 129.746 5.30469 129.66 cv
5.09571 129.574 4.79102 129.531 4.39258 129.531 cv
1.89063 129.531 li
1.89063 128.734 li
6.5625 128.734 li
6.5625 129.453 li
f
4.21876 124.479 mo
4.33594 124.77 4.43555 125.207 4.51758 125.789 cv
4.56446 126.119 4.61719 126.352 4.67579 126.489 cv
4.73438 126.626 4.82032 126.731 4.93262 126.805 cv
5.0459 126.879 5.1709 126.917 5.3086 126.917 cv
5.51954 126.917 5.69532 126.835 5.83594 126.673 cv
5.97657 126.512 6.04688 126.276 6.04688 125.964 cv
6.04688 125.656 5.98047 125.382 5.84668 125.142 cv
5.71338 124.902 5.53077 124.725 5.29932 124.612 cv
5.1211 124.526 4.85743 124.483 4.50879 124.483 cv
4.21876 124.479 li
cp
5.98438 124.432 mo
6.23584 124.718 6.41309 124.998 6.51661 125.271 cv
6.62012 125.544 6.67188 125.838 6.67188 126.151 cv
6.67188 126.668 6.54639 127.066 6.29493 127.343 cv
6.04346 127.622 5.72266 127.76 5.33106 127.76 cv
5.10206 127.76 4.89258 127.708 4.70313 127.603 cv
4.51368 127.498 4.36133 127.36 4.24659 127.19 cv
4.13184 127.02 4.04493 126.829 3.98633 126.616 cv
3.94532 126.459 3.90528 126.223 3.86719 125.907 cv
3.79102 125.262 3.69971 124.788 3.59376 124.483 cv
3.48536 124.48 3.41651 124.479 3.38721 124.479 cv
3.06495 124.479 2.8379 124.554 2.70557 124.703 cv
2.52686 124.906 2.4375 125.206 2.4375 125.605 cv
2.4375 125.977 2.50293 126.251 2.63379 126.429 cv
2.76465 126.607 2.9961 126.738 3.32813 126.823 cv
3.21876 127.62 li
2.8877 127.549 2.62012 127.433 2.41651 127.271 cv
2.2129 127.11 2.05567 126.876 1.94629 126.571 cv
1.83594 126.265 1.78126 125.912 1.78126 125.508 cv
1.78126 125.109 1.82813 124.785 1.92188 124.535 cv
2.01563 124.285 2.13379 124.101 2.27637 123.984 cv
2.41797 123.867 2.59766 123.785 2.81446 123.737 cv
2.94922 123.71 3.19336 123.698 3.54542 123.698 cv
4.60254 123.698 li
5.33985 123.698 5.80567 123.682 6.00098 123.65 cv
6.19629 123.619 6.38379 123.556 6.5625 123.463 cv
6.5625 124.276 li
6.39795 124.357 6.20508 124.409 5.98438 124.432 cv
f
6.5625 122.489 mo
1.89063 122.489 li
1.89063 121.77 li
2.5542 121.77 li
2.03907 121.429 1.78126 120.937 1.78126 120.293 cv
1.78126 120.014 1.83204 119.757 1.93311 119.523 cv
2.03418 119.289 2.167 119.113 2.33155 118.996 cv
2.4961 118.879 2.69141 118.798 2.917 118.751 cv
3.06397 118.722 3.32081 118.708 3.6875 118.708 cv
6.5625 118.708 li
6.5625 119.504 li
3.71876 119.504 li
3.39649 119.504 3.15479 119.535 2.99512 119.596 cv
2.83497 119.657 2.70704 119.765 2.61182 119.919 cv
2.51661 120.076 2.46876 120.257 2.46876 120.466 cv
2.46876 120.799 2.57618 121.087 2.79004 121.33 cv
3.0044 121.572 3.41065 121.692 4.00928 121.692 cv
6.5625 121.692 li
6.5625 122.489 li
f
5.85645 115.75 mo
6.55518 115.64 li
6.60157 115.864 6.625 116.064 6.625 116.24 cv
6.625 116.529 6.57911 116.751 6.48829 116.911 cv
6.39747 117.07 6.27784 117.181 6.1294 117.246 cv
5.98096 117.311 5.66895 117.343 5.19239 117.343 cv
2.5 117.343 li
2.5 117.921 li
1.89063 117.921 li
1.89063 117.343 li
0.734864 117.343 li
0.260254 116.546 li
1.89063 116.546 li
1.89063 115.75 li
2.5 115.75 li
2.5 116.546 li
5.2417 116.546 li
5.46827 116.546 5.61426 116.533 5.67872 116.504 cv
5.74366 116.476 5.79493 116.431 5.83301 116.368 cv
5.87159 116.305 5.89063 116.214 5.89063 116.097 cv
5.89063 116.009 5.8794 115.893 5.85645 115.75 cv
f
6.5625 111.936 mo
5.87452 111.936 li
6.40626 112.298 6.67188 112.79 6.67188 113.411 cv
6.67188 113.685 6.61915 113.941 6.51368 114.178 cv
6.40821 114.417 6.2754 114.592 6.11524 114.708 cv
5.95508 114.823 5.75879 114.904 5.52735 114.951 cv
5.37208 114.983 5.125 114.999 4.7876 114.999 cv
1.89063 114.999 li
1.89063 114.202 li
4.48047 114.202 li
4.89405 114.202 5.17237 114.186 5.31592 114.154 cv
5.52442 114.105 5.6875 114 5.80665 113.839 cv
5.92481 113.679 5.98438 113.482 5.98438 113.246 cv
5.98438 113.01 5.92383 112.789 5.80176 112.582 cv
5.68067 112.376 5.51465 112.229 5.30469 112.143 cv
5.09571 112.057 4.79102 112.014 4.39258 112.014 cv
1.89063 112.014 li
1.89063 111.217 li
6.5625 111.217 li
6.5625 111.936 li
f
6.5625 109.978 mo
1.89063 109.978 li
1.89063 109.259 li
2.54395 109.259 li
2.31446 109.114 2.13038 108.92 1.99073 108.678 cv
1.85108 108.436 1.78126 108.161 1.78126 107.851 cv
1.78126 107.507 1.85352 107.226 1.99708 107.005 cv
2.14161 106.786 2.34278 106.63 2.60059 106.54 cv
2.05469 106.169 1.78126 105.688 1.78126 105.095 cv
1.78126 104.631 1.90967 104.274 2.16651 104.025 cv
2.42334 103.775 2.81885 103.65 3.35303 103.65 cv
6.5625 103.65 li
6.5625 104.447 li
3.61768 104.447 li
3.30079 104.447 3.07276 104.472 2.9336 104.524 cv
2.79395 104.576 2.68165 104.667 2.59668 104.802 cv
2.51172 104.937 2.46876 105.094 2.46876 105.276 cv
2.46876 105.603 2.57813 105.875 2.79688 106.091 cv
3.01563 106.308 3.36524 106.416 3.84668 106.416 cv
6.5625 106.416 li
6.5625 107.212 li
3.5254 107.212 li
3.17286 107.212 2.90918 107.277 2.73292 107.405 cv
2.55665 107.533 2.46876 107.743 2.46876 108.034 cv
2.46876 108.254 2.52735 108.459 2.64454 108.647 cv
2.76221 108.834 2.9336 108.97 3.16016 109.055 cv
3.38575 109.139 3.71192 109.181 4.13672 109.181 cv
6.5625 109.181 li
6.5625 109.978 li
f
6.5625 99.8545 mo
0.109376 99.8545 li
0.109376 95.2139 li
0.875 95.2139 li
0.875 98.9952 li
2.84376 98.9952 li
2.84376 95.4483 li
3.60938 95.4483 li
3.60938 98.9952 li
5.79688 98.9952 li
5.79688 95.0577 li
6.5625 95.0577 li
6.5625 99.8545 li
f
6.5625 93.7881 mo
2.5 93.7881 li
2.5 94.4913 li
1.89063 94.4913 li
1.89063 93.7881 li
1.39258 93.7881 li
1.07813 93.7881 0.844727 93.7608 0.691895 93.7051 cv
0.486329 93.6299 0.319336 93.4971 0.191407 93.3057 cv
0.0639649 93.1163 0 92.8477 0 92.502 cv
0 92.2794 0.0263672 92.0332 0.078125 91.7637 cv
0.763184 91.8819 li
0.733399 92.046 0.71875 92.2012 0.71875 92.3477 cv
0.71875 92.5879 0.770508 92.7579 0.874024 92.8575 cv
0.97754 92.9571 1.17188 93.0069 1.45557 93.0069 cv
1.89063 93.0069 li
1.89063 92.085 li
2.5 92.085 li
2.5 92.9913 li
6.5625 92.9913 li
6.5625 93.7881 li
f
6.5625 91.4502 mo
2.5 91.4502 li
2.5 92.1534 li
1.89063 92.1534 li
1.89063 91.4502 li
1.39258 91.4502 li
1.07813 91.4502 0.844727 91.4229 0.691895 91.3672 cv
0.486329 91.292 0.319336 91.1592 0.191407 90.9678 cv
0.0639649 90.7784 0 90.5098 0 90.1641 cv
0 89.9415 0.0263672 89.6954 0.078125 89.4258 cv
0.763184 89.544 li
0.733399 89.7081 0.71875 89.8633 0.71875 90.0098 cv
0.71875 90.25 0.770508 90.42 0.874024 90.5196 cv
0.97754 90.6192 1.17188 90.669 1.45557 90.669 cv
1.89063 90.669 li
1.89063 89.7471 li
2.5 89.7471 li
2.5 90.6534 li
6.5625 90.6534 li
6.5625 91.4502 li
f
6.5625 89.1387 mo
1.89063 89.1387 li
1.89063 88.3418 li
6.5625 88.3418 li
6.5625 89.1387 li
cp
1.01563 89.1387 mo
0.109376 89.1387 li
0.109376 88.3418 li
1.01563 88.3418 li
1.01563 89.1387 li
f
4.85938 84.0918 mo
4.96876 83.3106 li
5.50147 83.3956 5.91895 83.6133 6.21973 83.9629 cv
6.52149 84.3135 6.67188 84.7432 6.67188 85.252 cv
6.67188 85.8907 6.4629 86.4034 6.04395 86.792 cv
5.62598 87.1797 5.0254 87.3731 4.24415 87.3731 cv
3.73926 87.3731 3.29688 87.2901 2.91797 87.1231 cv
2.53907 86.9561 2.25489 86.7022 2.06543 86.3624 cv
1.87598 86.0206 1.78126 85.6504 1.78126 85.2491 cv
1.78126 84.7432 1.91016 84.3292 2.16797 84.0079 cv
2.42579 83.6856 2.79151 83.4795 3.26563 83.3887 cv
3.375 84.1544 li
3.06397 84.2276 2.83008 84.3575 2.67286 84.543 cv
2.51612 84.7295 2.4375 84.9542 2.4375 85.2168 cv
2.4375 85.6153 2.58057 85.9385 2.86622 86.1876 cv
3.15186 86.4366 3.60401 86.5606 4.22217 86.5606 cv
4.84961 86.5606 5.30518 86.4405 5.58936 86.2012 cv
5.87354 85.962 6.01563 85.6485 6.01563 85.2627 cv
6.01563 84.9532 5.9209 84.6944 5.73243 84.4874 cv
5.54297 84.2794 5.25196 84.1475 4.85938 84.0918 cv
f
6.5625 82.6387 mo
1.89063 82.6387 li
1.89063 81.8418 li
6.5625 81.8418 li
6.5625 82.6387 li
cp
1.01563 82.6387 mo
0.109376 82.6387 li
0.109376 81.8418 li
1.01563 81.8418 li
1.01563 82.6387 li
f
3.76563 80.046 mo
3.76563 77.4366 li
3.37696 77.4717 3.08497 77.5713 2.89063 77.7354 cv
2.58887 77.9883 2.4375 78.3155 2.4375 78.7168 cv
2.4375 79.0811 2.55811 79.3868 2.79883 79.6338 cv
3.04004 79.8819 3.36231 80.0196 3.76563 80.046 cv
cp
5.0625 77.4454 mo
5.17188 76.6338 li
5.64747 76.7627 6.01612 77.002 6.27832 77.3497 cv
6.54102 77.6983 6.67188 78.1426 6.67188 78.6846 cv
6.67188 79.3663 6.46094 79.9063 6.04004 80.3057 cv
5.61817 80.7051 5.02735 80.9053 4.26612 80.9053 cv
3.47901 80.9053 2.86817 80.7032 2.4336 80.2999 cv
1.99903 79.8956 1.78126 79.3721 1.78126 78.7276 cv
1.78126 78.1045 1.99366 77.5958 2.41846 77.2002 cv
2.84327 76.8057 3.44043 76.6084 4.21094 76.6084 cv
4.25782 76.6084 4.32813 76.6094 4.42188 76.6124 cv
4.42188 80.0928 li
4.93702 80.0635 5.33155 79.918 5.60547 79.6563 cv
5.87891 79.3956 6.01563 79.0694 6.01563 78.6788 cv
6.01563 78.3877 5.93995 78.1397 5.78809 77.9346 cv
5.63672 77.7286 5.39502 77.5655 5.0625 77.4454 cv
f
6.5625 75.6338 mo
1.89063 75.6338 li
1.89063 74.9151 li
2.5542 74.9151 li
2.03907 74.5743 1.78126 74.0821 1.78126 73.4385 cv
1.78126 73.1592 1.83204 72.9024 1.93311 72.668 cv
2.03418 72.4336 2.167 72.2579 2.33155 72.1416 cv
2.4961 72.0245 2.69141 71.9434 2.917 71.8965 cv
3.06397 71.8672 3.32081 71.8526 3.6875 71.8526 cv
6.5625 71.8526 li
6.5625 72.6495 li
3.71876 72.6495 li
3.39649 72.6495 3.15479 72.6807 2.99512 72.7413 cv
2.83497 72.8018 2.70704 72.9102 2.61182 73.0655 cv
2.51661 73.2198 2.46876 73.4024 2.46876 73.6104 cv
2.46876 73.9444 2.57618 74.2315 2.79004 74.4737 cv
3.0044 74.7159 3.41065 74.837 4.00928 74.837 cv
6.5625 74.837 li
6.5625 75.6338 li
f
4.85938 67.5821 mo
4.96876 66.8008 li
5.50147 66.8858 5.91895 67.1026 6.21973 67.4532 cv
6.52149 67.8028 6.67188 68.2325 6.67188 68.7413 cv
6.67188 69.3799 6.4629 69.8936 6.04395 70.2813 cv
5.62598 70.669 5.0254 70.8633 4.24415 70.8633 cv
3.73926 70.8633 3.29688 70.7803 2.91797 70.6133 cv
2.53907 70.4463 2.25489 70.1924 2.06543 69.8516 cv
1.87598 69.5108 1.78126 69.1397 1.78126 68.7393 cv
1.78126 68.2334 1.91016 67.8194 2.16797 67.4971 cv
2.42579 67.1758 2.79151 66.9698 3.26563 66.879 cv
3.375 67.6446 li
3.06397 67.7178 2.83008 67.8467 2.67286 68.0332 cv
2.51612 68.2188 2.4375 68.4434 2.4375 68.7071 cv
2.4375 69.1045 2.58057 69.4288 2.86622 69.6768 cv
3.15186 69.9268 3.60401 70.0508 4.22217 70.0508 cv
4.84961 70.0508 5.30518 69.9307 5.58936 69.6905 cv
5.87354 69.4512 6.01563 69.1387 6.01563 68.753 cv
6.01563 68.4424 5.9209 68.1846 5.73243 67.9766 cv
5.54297 67.7686 5.25196 67.6377 4.85938 67.5821 cv
f
8.35694 66.1602 mo
7.61719 66.2696 li
7.66407 66.0958 7.6875 65.9444 7.6875 65.8145 cv
7.6875 65.6377 7.65821 65.4961 7.59961 65.3907 cv
7.54102 65.2842 7.45899 65.1973 7.35352 65.1299 cv
7.27393 65.0801 7.07715 64.9991 6.76368 64.8868 cv
6.71973 64.8721 6.65528 64.8487 6.57032 64.8165 cv
1.89063 66.5821 li
1.89063 65.7315 li
4.57715 64.7657 li
4.91797 64.6397 5.27637 64.5284 5.65137 64.4288 cv
5.30469 64.335 4.9585 64.2237 4.61329 64.0967 cv
1.89063 63.0977 li
1.89063 62.3057 li
6.64649 64.0694 li
7.15626 64.2598 7.50782 64.4082 7.70069 64.5137 cv
7.95997 64.6544 8.1504 64.8155 8.27149 64.9981 cv
8.39258 65.1797 8.45313 65.3975 8.45313 65.6495 cv
8.45313 65.8018 8.4209 65.9717 8.35694 66.1602 cv
f
278.207 11.0059 mo
282.687 11.0059 li
278.207 11.0059 mo
282.687 11.0059 li
280.447 21.315 mo
282.687 21.315 li
280.447 31.6241 mo
282.687 31.6241 li
280.447 41.9327 mo
282.687 41.9327 li
280.447 52.1192 mo
282.687 52.1192 li
278.207 62.4288 mo
282.687 62.4288 li
280.447 72.7374 mo
282.687 72.7374 li
280.447 83.0469 mo
282.687 83.0469 li
280.447 93.3565 mo
282.687 93.3565 li
280.447 103.543 mo
282.687 103.543 li
278.207 113.852 mo
282.687 113.852 li
280.447 124.161 mo
282.687 124.161 li
280.447 134.469 mo
282.687 134.469 li
280.447 144.779 mo
282.687 144.779 li
280.447 154.965 mo
282.687 154.965 li
278.207 165.274 mo
282.687 165.274 li
280.447 175.584 mo
282.687 175.584 li
280.447 185.893 mo
282.687 185.893 li
280.447 196.203 mo
282.687 196.203 li
280.447 206.511 mo
282.687 206.511 li
278.207 216.698 mo
282.687 216.698 li
@
286.615 215.683 mo
286.615 216.628 286.726 217.255 286.951 217.564 cv
287.174 217.873 287.451 218.027 287.779 218.027 cv
288.107 218.027 288.383 217.873 288.607 217.562 cv
288.831 217.252 288.943 216.626 288.943 215.683 cv
288.943 214.741 288.832 214.115 288.609 213.804 cv
288.386 213.495 288.107 213.339 287.771 213.339 cv
287.443 213.339 287.179 213.476 286.98 213.75 cv
286.737 214.099 286.615 214.744 286.615 215.683 cv
cp
285.896 215.685 mo
285.896 215.008 285.966 214.462 286.107 214.047 cv
286.248 213.632 286.456 213.314 286.733 213.093 cv
287.01 212.872 287.359 212.761 287.779 212.761 cv
288.088 212.761 288.362 212.824 288.598 212.947 cv
288.834 213.07 289.027 213.249 289.177 213.482 cv
289.327 213.714 289.445 213.998 289.532 214.333 cv
289.619 214.668 289.662 215.118 289.662 215.685 cv
289.662 216.357 289.592 216.9 289.453 217.315 cv
289.314 217.73 289.105 218.048 288.829 218.271 cv
288.551 218.494 288.202 218.605 287.779 218.605 cv
287.222 218.605 286.785 218.41 286.467 218.019 cv
286.086 217.539 285.896 216.76 285.896 215.685 cv
f
286.615 165.269 mo
286.615 166.214 286.726 166.841 286.951 167.15 cv
287.174 167.458 287.451 167.613 287.779 167.613 cv
288.107 167.613 288.383 167.458 288.607 167.148 cv
288.831 166.838 288.943 166.212 288.943 165.269 cv
288.943 164.327 288.832 163.701 288.609 163.39 cv
288.386 163.081 288.107 162.925 287.771 162.925 cv
287.443 162.925 287.179 163.062 286.98 163.335 cv
286.737 163.685 286.615 164.33 286.615 165.269 cv
cp
285.896 165.271 mo
285.896 164.594 285.966 164.048 286.107 163.633 cv
286.248 163.218 286.456 162.9 286.733 162.679 cv
287.01 162.458 287.359 162.347 287.779 162.347 cv
288.088 162.347 288.362 162.41 288.598 162.533 cv
288.834 162.656 289.027 162.834 289.177 163.068 cv
289.327 163.3 289.445 163.584 289.532 163.918 cv
289.619 164.253 289.662 164.704 289.662 165.271 cv
289.662 165.943 289.592 166.486 289.453 166.901 cv
289.314 167.316 289.105 167.634 288.829 167.857 cv
288.551 168.08 288.202 168.191 287.779 168.191 cv
287.222 168.191 286.785 167.996 286.467 167.605 cv
286.086 167.125 285.896 166.346 285.896 165.271 cv
f
290.736 168.097 mo
290.736 167.3 li
291.533 167.3 li
291.533 168.097 li
290.736 168.097 li
f
296.271 167.425 mo
296.271 168.097 li
292.474 168.097 li
292.468 167.928 292.497 167.765 292.557 167.609 cv
292.654 167.351 292.81 167.098 293.024 166.849 cv
293.238 166.601 293.544 166.312 293.944 165.985 cv
294.564 165.468 294.984 165.062 295.205 164.764 cv
295.426 164.466 295.537 164.184 295.537 163.916 cv
295.537 163.638 295.437 163.403 295.238 163.212 cv
295.038 163.021 294.777 162.925 294.457 162.925 cv
294.117 162.925 293.846 163.029 293.642 163.236 cv
293.439 163.444 293.335 163.73 293.334 164.097 cv
292.615 164.003 li
292.664 163.464 292.85 163.054 293.172 162.771 cv
293.496 162.489 293.928 162.347 294.472 162.347 cv
295.021 162.347 295.456 162.5 295.775 162.804 cv
296.095 163.109 296.255 163.487 296.255 163.937 cv
296.255 164.167 296.208 164.392 296.116 164.614 cv
296.022 164.835 295.868 165.068 295.651 165.313 cv
295.435 165.558 295.075 165.894 294.57 166.322 cv
294.147 166.677 293.876 166.918 293.755 167.044 cv
293.636 167.17 293.537 167.297 293.458 167.425 cv
296.271 167.425 li
f
297.017 166.597 mo
297.736 166.535 li
297.791 166.893 297.918 167.162 298.115 167.342 cv
298.313 167.523 298.556 167.613 298.845 167.613 cv
299.193 167.613 299.484 167.486 299.716 167.231 cv
299.948 166.977 300.064 166.639 300.064 166.218 cv
300.064 165.819 299.953 165.503 299.732 165.272 cv
299.51 165.041 299.213 164.925 298.841 164.925 cv
298.609 164.925 298.404 164.976 298.224 165.078 cv
298.044 165.179 297.902 165.31 297.798 165.472 cv
297.142 165.378 li
297.705 162.441 li
300.548 162.441 li
300.548 163.113 li
298.263 163.113 li
297.951 164.662 li
298.294 164.421 298.655 164.3 299.033 164.3 cv
299.533 164.3 299.955 164.473 300.298 164.82 cv
300.642 165.166 300.814 165.611 300.814 166.154 cv
300.814 166.671 300.663 167.119 300.361 167.497 cv
299.994 167.959 299.492 168.191 298.857 168.191 cv
298.335 168.191 297.911 168.045 297.582 167.754 cv
297.251 167.463 297.064 167.078 297.017 166.597 cv
f
286.615 113.847 mo
286.615 114.792 286.726 115.419 286.951 115.728 cv
287.174 116.037 287.451 116.191 287.779 116.191 cv
288.107 116.191 288.383 116.037 288.607 115.726 cv
288.831 115.417 288.943 114.791 288.943 113.847 cv
288.943 112.905 288.832 112.279 288.609 111.968 cv
288.386 111.659 288.107 111.503 287.771 111.503 cv
287.443 111.503 287.179 111.64 286.98 111.914 cv
286.737 112.263 286.615 112.908 286.615 113.847 cv
cp
285.896 113.849 mo
285.896 113.172 285.966 112.626 286.107 112.211 cv
286.248 111.796 286.456 111.478 286.733 111.257 cv
287.01 111.036 287.359 110.925 287.779 110.925 cv
288.088 110.925 288.362 110.988 288.598 111.111 cv
288.834 111.234 289.027 111.413 289.177 111.646 cv
289.327 111.878 289.445 112.162 289.532 112.497 cv
289.619 112.832 289.662 113.282 289.662 113.849 cv
289.662 114.521 289.592 115.064 289.453 115.479 cv
289.314 115.894 289.105 116.212 288.829 116.435 cv
288.551 116.658 288.202 116.769 287.779 116.769 cv
287.222 116.769 286.785 116.574 286.467 116.183 cv
286.086 115.703 285.896 114.924 285.896 113.849 cv
f
290.736 116.675 mo
290.736 115.878 li
291.533 115.878 li
291.533 116.675 li
290.736 116.675 li
f
292.568 115.175 mo
293.287 115.113 li
293.341 115.471 293.468 115.74 293.666 115.92 cv
293.864 116.101 294.107 116.191 294.396 116.191 cv
294.744 116.191 295.035 116.064 295.267 115.809 cv
295.499 115.555 295.615 115.217 295.615 114.796 cv
295.615 114.397 295.503 114.082 295.283 113.85 cv
295.061 113.619 294.764 113.503 294.392 113.503 cv
294.16 113.503 293.955 113.554 293.775 113.656 cv
293.595 113.757 293.453 113.888 293.349 114.05 cv
292.693 113.957 li
293.255 111.019 li
296.099 111.019 li
296.099 111.691 li
293.814 111.691 li
293.501 113.24 li
293.845 113 294.206 112.878 294.584 112.878 cv
295.084 112.878 295.505 113.051 295.849 113.398 cv
296.193 113.744 296.365 114.189 296.365 114.732 cv
296.365 115.25 296.213 115.697 295.912 116.075 cv
295.544 116.538 295.042 116.769 294.408 116.769 cv
293.886 116.769 293.461 116.624 293.132 116.333 cv
292.802 116.042 292.615 115.656 292.568 115.175 cv
f
286.615 62.4229 mo
286.615 63.3682 286.726 63.9952 286.951 64.3038 cv
287.174 64.6124 287.451 64.7666 287.779 64.7666 cv
288.107 64.7666 288.383 64.6124 288.607 64.3018 cv
288.831 63.9922 288.943 63.3663 288.943 62.4229 cv
288.943 61.4805 288.832 60.8545 288.609 60.544 cv
288.386 60.2344 288.107 60.0792 287.771 60.0792 cv
287.443 60.0792 287.179 60.2159 286.98 60.4893 cv
286.737 60.8389 286.615 61.4834 286.615 62.4229 cv
cp
285.896 62.4249 mo
285.896 61.7481 285.966 61.2022 286.107 60.7872 cv
286.248 60.3721 286.456 60.0538 286.733 59.8331 cv
287.01 59.6114 287.359 59.501 287.779 59.501 cv
288.088 59.501 288.362 59.5635 288.598 59.6866 cv
288.834 59.8096 289.027 59.9883 289.177 60.2217 cv
289.327 60.4542 289.445 60.7374 289.532 61.0723 cv
289.619 61.4073 289.662 61.8575 289.662 62.4249 cv
289.662 63.0967 289.592 63.6397 289.453 64.0547 cv
289.314 64.4698 289.105 64.7881 288.829 65.0108 cv
288.551 65.2334 288.202 65.3448 287.779 65.3448 cv
287.222 65.3448 286.785 65.1495 286.467 64.7588 cv
286.086 64.2784 285.896 63.5 285.896 62.4249 cv
f
290.736 65.251 mo
290.736 64.4542 li
291.533 64.4542 li
291.533 65.251 li
290.736 65.251 li
f
292.615 60.2666 mo
292.615 59.5948 li
296.318 59.5948 li
296.318 60.1387 li
295.953 60.5264 295.59 61.043 295.232 61.6866 cv
294.873 62.3311 294.596 62.9932 294.4 63.6749 cv
294.259 64.1544 294.169 64.6797 294.13 65.251 cv
293.412 65.251 li
293.419 64.7999 293.507 64.2549 293.677 63.6163 cv
293.845 62.9766 294.087 62.3604 294.404 61.7666 cv
294.719 61.1739 295.055 60.6739 295.412 60.2666 cv
292.615 60.2666 li
f
297.017 63.751 mo
297.736 63.6885 li
297.791 64.0469 297.918 64.3155 298.115 64.4961 cv
298.313 64.6768 298.556 64.7666 298.845 64.7666 cv
299.193 64.7666 299.484 64.6397 299.716 64.3848 cv
299.948 64.1309 300.064 63.793 300.064 63.3721 cv
300.064 62.9727 299.953 62.6573 299.732 62.4258 cv
299.51 62.1944 299.213 62.0792 298.841 62.0792 cv
298.609 62.0792 298.404 62.1299 298.224 62.2315 cv
298.044 62.3331 297.902 62.4639 297.798 62.626 cv
297.142 62.5323 li
297.705 59.5948 li
300.548 59.5948 li
300.548 60.2666 li
298.263 60.2666 li
297.951 61.8155 li
298.294 61.5752 298.655 61.4542 299.033 61.4542 cv
299.533 61.4542 299.955 61.627 300.298 61.9737 cv
300.642 62.3194 300.814 62.7647 300.814 63.3077 cv
300.814 63.8252 300.663 64.2725 300.361 64.6504 cv
299.994 65.1133 299.492 65.3448 298.857 65.3448 cv
298.335 65.3448 297.911 65.1993 297.582 64.9082 cv
297.251 64.6172 297.064 64.2315 297.017 63.751 cv
f
288.552 13.8287 mo
287.849 13.8287 li
287.849 9.34815 li
287.679 9.50977 287.458 9.6709 287.183 9.83252 cv
286.908 9.99415 286.662 10.1153 286.443 10.1959 cv
286.443 9.51612 li
286.835 9.33106 287.179 9.10743 287.474 8.84424 cv
287.768 8.58106 287.976 8.32618 288.099 8.07862 cv
288.552 8.07862 li
288.552 13.8287 li
f
79.9732 131.775 mo
79.9732 126.041 li
80.7388 126.041 li
80.7388 131.103 li
83.5513 131.103 li
83.5513 131.775 li
79.9732 131.775 li
f
84.188 129.931 mo
84.9068 129.869 li
84.9405 130.157 85.0186 130.393 85.1416 130.578 cv
85.2647 130.763 85.4551 130.912 85.7139 131.026 cv
85.9727 131.14 86.2637 131.197 86.5879 131.197 cv
86.875 131.197 87.128 131.154 87.3482 131.067 cv
87.5684 130.981 87.732 130.863 87.8394 130.711 cv
87.9468 130.561 88.0005 130.398 88.0005 130.22 cv
88.0005 130.042 87.9478 129.885 87.8428 129.751 cv
87.7378 129.618 87.5665 129.505 87.3292 129.414 cv
87.1768 129.354 86.8399 129.261 86.3184 129.134 cv
85.7969 129.008 85.4307 128.889 85.2198 128.777 cv
84.9463 128.633 84.7422 128.455 84.608 128.243 cv
84.4737 128.03 84.4068 127.792 84.4068 127.528 cv
84.4068 127.239 84.4883 126.968 84.6524 126.716 cv
84.8155 126.464 85.0547 126.273 85.3687 126.142 cv
85.6827 126.012 86.0323 125.947 86.417 125.947 cv
86.8399 125.947 87.2129 126.015 87.5362 126.153 cv
87.8594 126.291 88.1084 126.493 88.2823 126.759 cv
88.4561 127.026 88.5499 127.328 88.563 127.666 cv
87.8287 127.728 li
87.7901 127.363 87.6587 127.085 87.4356 126.899 cv
87.212 126.712 86.8824 126.619 86.4463 126.619 cv
85.9918 126.619 85.6607 126.703 85.4532 126.871 cv
85.2452 127.039 85.1412 127.242 85.1412 127.479 cv
85.1412 127.685 85.2149 127.854 85.3619 127.987 cv
85.5064 128.12 85.8838 128.256 86.4942 128.396 cv
87.105 128.535 87.5254 128.657 87.7549 128.761 cv
88.0899 128.914 88.3365 129.109 88.4961 129.343 cv
88.6553 129.58 88.7349 129.85 88.7349 130.157 cv
88.7349 130.46 88.6475 130.748 88.4737 131.017 cv
88.2999 131.286 88.0499 131.496 87.7237 131.644 cv
87.3975 131.793 87.0308 131.869 86.6231 131.869 cv
86.106 131.869 85.6729 131.792 85.3238 131.642 cv
84.9747 131.492 84.7002 131.264 84.502 130.96 cv
84.3028 130.658 84.1983 130.314 84.188 129.931 cv
f
90.3365 128.994 mo
90.3365 129.681 90.5206 130.223 90.8897 130.619 cv
91.2588 131.015 91.7212 131.212 92.2779 131.212 cv
92.8448 131.212 93.3116 131.013 93.6778 130.613 cv
94.044 130.213 94.2271 129.646 94.2271 128.912 cv
94.2271 128.447 94.1485 128.042 93.9922 127.695 cv
93.8355 127.349 93.6065 127.08 93.3047 126.889 cv
93.003 126.699 92.6651 126.603 92.2896 126.603 cv
91.7564 126.603 91.2974 126.787 90.9131 127.154 cv
90.5284 127.521 90.3365 128.134 90.3365 128.994 cv
cp
89.5552 128.984 mo
89.5552 128.035 89.8091 127.291 90.3174 126.753 cv
90.8257 126.215 91.4815 125.947 92.2857 125.947 cv
92.8121 125.947 93.2862 126.073 93.709 126.326 cv
94.1319 126.578 94.4542 126.93 94.6758 127.381 cv
94.8975 127.834 95.0084 128.345 95.0084 128.917 cv
95.0084 129.498 94.8916 130.017 94.6582 130.475 cv
94.4249 130.933 94.0938 131.28 93.6661 131.515 cv
93.2383 131.751 92.7769 131.869 92.2818 131.869 cv
91.7452 131.869 91.2652 131.739 90.8428 131.478 cv
90.42 131.218 90.0997 130.863 89.8819 130.413 cv
89.6641 129.962 89.5552 129.486 89.5552 128.984 cv
f
79.9732 140.912 mo
79.9732 135.177 li
80.7388 135.177 li
80.7388 140.24 li
83.5513 140.24 li
83.5513 140.912 li
79.9732 140.912 li
f
85.4654 140.912 mo
85.4654 138.482 li
83.2623 135.177 li
84.1792 135.177 li
85.2979 136.918 li
85.5118 137.238 85.71 137.561 85.8921 137.888 cv
86.0713 137.589 86.2823 137.25 86.5245 136.874 cv
87.6304 135.177 li
88.5123 135.177 li
86.231 138.482 li
86.231 140.912 li
85.4654 140.912 li
f
88.9302 139.068 mo
89.649 139.005 li
89.6827 139.293 89.7608 139.53 89.8838 139.714 cv
90.0069 139.9 90.1973 140.048 90.4561 140.163 cv
90.7149 140.277 91.0059 140.334 91.3301 140.334 cv
91.6172 140.334 91.8702 140.291 92.0904 140.204 cv
92.3106 140.118 92.4742 140 92.5816 139.848 cv
92.689 139.698 92.7427 139.535 92.7427 139.357 cv
92.7427 139.178 92.69 139.022 92.585 138.888 cv
92.48 138.754 92.3086 138.642 92.0713 138.55 cv
91.919 138.491 91.5821 138.398 91.0606 138.271 cv
90.5391 138.145 90.1729 138.026 89.962 137.914 cv
89.6885 137.77 89.4844 137.591 89.3502 137.379 cv
89.2159 137.167 89.149 136.928 89.149 136.665 cv
89.149 136.376 89.2305 136.105 89.3946 135.853 cv
89.5577 135.601 89.7969 135.41 90.1109 135.279 cv
90.4249 135.149 90.7745 135.084 91.1592 135.084 cv
91.5821 135.084 91.9551 135.152 92.2784 135.29 cv
92.6016 135.427 92.8506 135.629 93.0245 135.896 cv
93.1983 136.163 93.292 136.464 93.3052 136.802 cv
92.5708 136.865 li
92.5323 136.5 92.4009 136.222 92.1778 136.036 cv
91.9542 135.849 91.6246 135.755 91.1885 135.755 cv
90.7339 135.755 90.4029 135.839 90.1954 136.007 cv
89.9874 136.175 89.8834 136.378 89.8834 136.616 cv
89.8834 136.822 89.9571 136.991 90.1041 137.124 cv
90.2486 137.256 90.626 137.393 91.2364 137.533 cv
91.8472 137.671 92.2676 137.793 92.4971 137.898 cv
92.8321 138.05 93.0787 138.246 93.2383 138.48 cv
93.3975 138.716 93.4771 138.987 93.4771 139.293 cv
93.4771 139.597 93.3897 139.884 93.2159 140.154 cv
93.042 140.422 92.792 140.632 92.4659 140.781 cv
92.1397 140.93 91.773 141.005 91.3653 141.005 cv
90.8482 141.005 90.4151 140.929 90.066 140.779 cv
89.7168 140.628 89.4424 140.401 89.2442 140.097 cv
89.045 139.794 88.9405 139.451 88.9302 139.068 cv
f
95.0787 138.13 mo
95.0787 138.818 95.2627 139.36 95.6319 139.755 cv
96.001 140.152 96.4634 140.349 97.0201 140.349 cv
97.587 140.349 98.0538 140.15 98.42 139.75 cv
98.7862 139.35 98.9693 138.783 98.9693 138.048 cv
98.9693 137.584 98.8907 137.178 98.7344 136.832 cv
98.5777 136.486 98.3487 136.216 98.0469 136.026 cv
97.7452 135.835 97.4073 135.74 97.0318 135.74 cv
96.4986 135.74 96.0396 135.923 95.6553 136.291 cv
95.2706 136.658 95.0787 137.271 95.0787 138.13 cv
cp
94.2974 138.121 mo
94.2974 137.171 94.5513 136.427 95.0596 135.89 cv
95.5679 135.352 96.2237 135.084 97.0279 135.084 cv
97.5542 135.084 98.0284 135.209 98.4512 135.462 cv
98.8741 135.714 99.1963 136.067 99.418 136.518 cv
99.6397 136.97 99.7505 137.482 99.7505 138.054 cv
99.7505 138.634 99.6338 139.154 99.4004 139.612 cv
99.167 140.07 98.836 140.417 98.4082 140.652 cv
97.9805 140.888 97.5191 141.005 97.024 141.005 cv
96.4874 141.005 96.0074 140.876 95.585 140.615 cv
95.1622 140.355 94.8418 140 94.6241 139.549 cv
94.4063 139.099 94.2974 138.623 94.2974 138.121 cv
f
107.711 209.888 mo
109.137 209.888 li
109.382 209.888 109.554 209.879 109.653 209.861 cv
109.827 209.83 109.973 209.778 110.09 209.705 cv
110.208 209.632 110.304 209.526 110.379 209.386 cv
110.455 209.248 110.493 209.086 110.493 208.904 cv
110.493 208.691 110.436 208.505 110.323 208.347 cv
110.209 208.19 110.057 208.08 109.864 208.015 cv
109.67 207.952 109.392 207.919 109.03 207.919 cv
107.711 207.919 li
107.711 209.888 li
cp
107.711 207.248 mo
108.944 207.248 li
109.278 207.248 109.518 207.225 109.664 207.18 cv
109.855 207.123 110 207.027 110.097 206.892 cv
110.194 206.757 110.243 206.589 110.243 206.386 cv
110.243 206.194 110.197 206.025 110.106 205.878 cv
110.016 205.733 109.886 205.632 109.718 205.579 cv
109.549 205.525 109.26 205.498 108.851 205.498 cv
107.711 205.498 li
107.711 207.248 li
cp
106.946 210.56 mo
106.946 204.826 li
109.094 204.826 li
109.532 204.826 109.882 204.884 110.147 205 cv
110.411 205.117 110.618 205.295 110.768 205.537 cv
110.917 205.779 110.993 206.031 110.993 206.294 cv
110.993 206.541 110.926 206.771 110.792 206.988 cv
110.659 207.205 110.458 207.38 110.188 207.513 cv
110.537 207.615 110.805 207.789 110.993 208.033 cv
111.18 208.278 111.274 208.567 111.274 208.9 cv
111.274 209.168 111.217 209.418 111.104 209.648 cv
110.991 209.878 110.85 210.056 110.684 210.181 cv
110.517 210.306 110.307 210.401 110.056 210.464 cv
109.804 210.529 109.496 210.56 109.131 210.56 cv
106.946 210.56 li
f
114.985 208.31 mo
114.985 207.638 li
117.407 207.638 li
117.407 209.76 li
117.034 210.057 116.65 210.28 116.254 210.429 cv
115.858 210.579 115.452 210.654 115.036 210.654 cv
114.473 210.654 113.962 210.534 113.502 210.292 cv
113.042 210.052 112.696 209.704 112.461 209.248 cv
112.227 208.792 112.11 208.283 112.11 207.72 cv
112.11 207.164 112.226 206.643 112.459 206.16 cv
112.692 205.677 113.027 205.318 113.464 205.084 cv
113.902 204.849 114.406 204.732 114.976 204.732 cv
115.389 204.732 115.764 204.799 116.098 204.934 cv
116.433 205.069 116.695 205.256 116.885 205.497 cv
117.075 205.737 117.219 206.05 117.318 206.437 cv
116.614 206.625 li
116.529 206.334 116.422 206.105 116.296 205.938 cv
116.169 205.772 115.988 205.638 115.752 205.539 cv
115.517 205.438 115.255 205.388 114.968 205.388 cv
114.624 205.388 114.326 205.441 114.075 205.546 cv
113.824 205.652 113.622 205.791 113.467 205.962 cv
113.313 206.135 113.194 206.324 113.109 206.53 cv
112.963 206.884 112.891 207.269 112.891 207.683 cv
112.891 208.194 112.978 208.622 113.153 208.965 cv
113.328 209.31 113.582 209.565 113.916 209.732 cv
114.25 209.899 114.604 209.982 114.98 209.982 cv
115.306 209.982 115.624 209.918 115.935 209.792 cv
116.245 209.664 116.48 209.529 116.641 209.384 cv
116.641 208.31 li
114.985 208.31 li
f
119.083 207.779 mo
119.083 208.466 119.267 209.008 119.636 209.404 cv
120.004 209.8 120.467 209.998 121.024 209.998 cv
121.591 209.998 122.057 209.798 122.423 209.398 cv
122.79 208.999 122.973 208.431 122.973 207.697 cv
122.973 207.232 122.895 206.827 122.738 206.48 cv
122.582 206.134 122.353 205.865 122.051 205.674 cv
121.75 205.484 121.411 205.388 121.036 205.388 cv
120.502 205.388 120.043 205.572 119.659 205.939 cv
119.275 206.306 119.083 206.919 119.083 207.779 cv
cp
118.301 207.769 mo
118.301 206.82 118.555 206.076 119.063 205.539 cv
119.572 205 120.228 204.732 121.032 204.732 cv
121.558 204.732 122.033 204.858 122.456 205.111 cv
122.878 205.363 123.2 205.715 123.422 206.167 cv
123.644 206.619 123.754 207.13 123.754 207.703 cv
123.754 208.283 123.638 208.802 123.404 209.26 cv
123.171 209.718 122.84 210.065 122.413 210.3 cv
121.985 210.537 121.523 210.654 121.028 210.654 cv
120.491 210.654 120.011 210.524 119.588 210.263 cv
119.166 210.003 118.846 209.648 118.628 209.198 cv
118.41 208.748 118.301 208.271 118.301 207.769 cv
f
155.029 153.487 mo
155.794 153.677 li
155.635 154.301 155.35 154.777 154.937 155.104 cv
154.524 155.431 154.02 155.595 153.423 155.595 cv
152.806 155.595 152.304 155.47 151.918 155.218 cv
151.531 154.967 151.236 154.603 151.035 154.126 cv
150.833 153.65 150.732 153.138 150.732 152.591 cv
150.732 151.996 150.846 151.475 151.074 151.031 cv
151.302 150.587 151.626 150.25 152.047 150.019 cv
152.468 149.789 152.931 149.673 153.437 149.673 cv
154.01 149.673 154.493 149.82 154.883 150.112 cv
155.274 150.405 155.547 150.816 155.701 151.345 cv
154.951 151.521 li
154.818 151.106 154.625 150.803 154.373 150.614 cv
154.12 150.424 153.802 150.33 153.419 150.33 cv
152.979 150.33 152.611 150.435 152.316 150.645 cv
152.02 150.855 151.813 151.137 151.693 151.492 cv
151.573 151.846 151.513 152.211 151.513 152.587 cv
151.513 153.073 151.584 153.497 151.726 153.859 cv
151.867 154.22 152.087 154.492 152.386 154.67 cv
152.685 154.849 153.008 154.939 153.357 154.939 cv
153.78 154.939 154.139 154.817 154.432 154.573 cv
154.726 154.33 154.925 153.967 155.029 153.487 cv
f
156.369 154.251 mo
157.072 154.158 li
157.111 154.435 157.219 154.648 157.396 154.795 cv
157.573 154.943 157.821 155.017 158.14 155.017 cv
158.46 155.017 158.699 154.951 158.854 154.82 cv
159.009 154.687 159.087 154.533 159.087 154.355 cv
159.087 154.196 159.018 154.07 158.88 153.979 cv
158.783 153.917 158.546 153.836 158.168 153.74 cv
157.659 153.609 157.304 153.497 157.104 153.402 cv
156.904 153.306 156.752 153.174 156.649 153.006 cv
156.545 152.838 156.494 152.652 156.494 152.449 cv
156.494 152.263 156.536 152.092 156.62 151.934 cv
156.704 151.777 156.819 151.646 156.964 151.541 cv
157.073 151.46 157.221 151.392 157.409 151.335 cv
157.597 151.28 157.798 151.251 158.013 151.251 cv
158.337 151.251 158.622 151.298 158.867 151.393 cv
159.111 151.488 159.292 151.616 159.409 151.777 cv
159.525 151.938 159.606 152.154 159.65 152.423 cv
158.962 152.517 li
158.931 152.301 158.842 152.132 158.694 152.011 cv
158.546 151.89 158.337 151.83 158.068 151.83 cv
157.749 151.83 157.522 151.883 157.385 151.99 cv
157.25 152.097 157.181 152.223 157.181 152.367 cv
157.181 152.458 157.209 152.541 157.266 152.613 cv
157.323 152.689 157.411 152.751 157.532 152.801 cv
157.601 152.828 157.806 152.888 158.145 152.982 cv
158.636 153.115 158.98 153.224 159.176 153.308 cv
159.372 153.393 159.526 153.517 159.638 153.678 cv
159.75 153.839 159.806 154.041 159.806 154.281 cv
159.806 154.515 159.738 154.737 159.602 154.944 cv
159.465 155.152 159.268 155.312 159.011 155.425 cv
158.753 155.539 158.463 155.595 158.138 155.595 cv
157.6 155.595 157.19 155.482 156.909 155.256 cv
156.626 155.031 156.447 154.696 156.369 154.251 cv
f
160.853 155.501 mo
160.853 149.767 li
161.619 149.767 li
161.619 155.501 li
160.853 155.501 li
f
164.216 157.189 mo
163.827 156.699 163.498 156.126 163.229 155.468 cv
162.96 154.812 162.826 154.131 162.826 153.427 cv
162.826 152.807 162.926 152.212 163.127 151.644 cv
163.362 150.985 163.725 150.328 164.216 149.673 cv
164.716 149.673 li
164.4 150.215 164.191 150.603 164.089 150.834 cv
163.93 151.195 163.804 151.57 163.713 151.96 cv
163.601 152.449 163.544 152.939 163.544 153.431 cv
163.544 154.685 163.935 155.937 164.716 157.189 cv
164.216 157.189 li
f
167.068 155.501 mo
167.068 150.439 li
165.177 150.439 li
165.177 149.767 li
169.724 149.767 li
169.724 150.439 li
167.834 150.439 li
167.834 155.501 li
167.068 155.501 li
f
170.392 155.501 mo
170.392 149.767 li
171.095 149.767 li
171.095 155.501 li
170.392 155.501 li
f
172.638 157.189 mo
172.138 157.189 li
172.919 155.937 173.31 154.685 173.31 153.431 cv
173.31 152.941 173.254 152.455 173.142 151.972 cv
173.053 151.582 172.928 151.207 172.769 150.846 cv
172.668 150.612 172.457 150.22 172.138 149.673 cv
172.638 149.673 li
173.129 150.328 173.492 150.985 173.727 151.644 cv
173.928 152.212 174.029 152.807 174.029 153.427 cv
174.029 154.131 173.894 154.812 173.624 155.468 cv
173.353 156.126 173.025 156.699 172.638 157.189 cv
f
124.165 235.878 mo
122.478 229.425 li
123.367 229.425 li
124.332 233.66 li
124.441 234.101 124.535 234.54 124.611 234.976 cv
124.778 234.291 124.876 233.895 124.905 233.789 cv
126.135 229.425 li
127.164 229.425 li
128.079 232.695 li
128.307 233.505 128.474 234.265 128.58 234.976 cv
128.667 234.572 128.773 234.106 128.901 233.578 cv
129.918 229.425 li
130.775 229.425 li
129.01 235.878 li
128.171 235.878 li
126.834 230.965 li
126.722 230.554 126.653 230.3 126.626 230.205 cv
126.554 230.507 126.489 230.763 126.432 230.972 cv
125.069 235.878 li
124.165 235.878 li
f
134.139 233.535 mo
133.848 233.652 133.411 233.751 132.829 233.834 cv
132.499 233.88 132.266 233.933 132.129 233.992 cv
131.993 234.05 131.887 234.136 131.813 234.249 cv
131.739 234.362 131.702 234.487 131.702 234.625 cv
131.702 234.835 131.782 235.011 131.944 235.152 cv
132.105 235.292 132.342 235.363 132.653 235.363 cv
132.961 235.363 133.236 235.296 133.476 235.163 cv
133.716 235.029 133.893 234.847 134.005 234.615 cv
134.091 234.437 134.134 234.173 134.134 233.825 cv
134.139 233.535 li
cp
134.186 235.3 mo
133.899 235.552 133.62 235.729 133.346 235.833 cv
133.073 235.936 132.78 235.988 132.466 235.988 cv
131.95 235.988 131.552 235.863 131.274 235.611 cv
130.997 235.359 130.858 235.039 130.858 234.647 cv
130.858 234.418 130.91 234.208 131.015 234.019 cv
131.12 233.83 131.257 233.677 131.427 233.562 cv
131.597 233.448 131.789 233.361 132.001 233.302 cv
132.159 233.261 132.395 233.221 132.711 233.183 cv
133.355 233.107 133.83 233.015 134.134 232.91 cv
134.137 232.801 134.139 232.732 134.139 232.703 cv
134.139 232.38 134.064 232.154 133.915 232.021 cv
133.712 231.843 133.412 231.753 133.013 231.753 cv
132.641 231.753 132.366 231.819 132.189 231.95 cv
132.011 232.081 131.88 232.312 131.795 232.644 cv
130.999 232.535 li
131.069 232.204 131.185 231.936 131.346 231.732 cv
131.508 231.529 131.742 231.372 132.047 231.262 cv
132.353 231.152 132.707 231.097 133.109 231.097 cv
133.508 231.097 133.833 231.144 134.083 231.238 cv
134.333 231.332 134.516 231.45 134.634 231.592 cv
134.751 231.734 134.834 231.914 134.88 232.13 cv
134.907 232.265 134.92 232.509 134.92 232.861 cv
134.92 233.918 li
134.92 234.656 134.936 235.122 134.967 235.317 cv
134.999 235.512 135.061 235.7 135.155 235.878 cv
134.342 235.878 li
134.261 235.714 134.208 235.521 134.186 235.3 cv
f
137.406 235.878 mo
135.644 231.207 li
136.496 231.207 li
137.492 234.004 li
137.601 234.306 137.702 234.621 137.792 234.946 cv
137.863 234.7 137.961 234.404 138.087 234.057 cv
139.128 231.207 li
139.941 231.207 li
138.17 235.878 li
137.406 235.878 li
f
141.222 233.082 mo
143.832 233.082 li
143.796 232.693 143.697 232.401 143.533 232.207 cv
143.28 231.905 142.953 231.753 142.551 231.753 cv
142.188 231.753 141.881 231.875 141.634 232.115 cv
141.386 232.356 141.249 232.678 141.222 233.082 cv
cp
143.823 234.378 mo
144.634 234.488 li
144.505 234.963 144.266 235.332 143.918 235.594 cv
143.57 235.857 143.126 235.988 142.584 235.988 cv
141.902 235.988 141.362 235.777 140.962 235.356 cv
140.563 234.934 140.363 234.343 140.363 233.582 cv
140.363 232.794 140.565 232.184 140.969 231.75 cv
141.373 231.315 141.896 231.097 142.54 231.097 cv
143.163 231.097 143.672 231.31 144.067 231.734 cv
144.462 232.16 144.66 232.756 144.66 233.527 cv
144.66 233.574 144.659 233.644 144.656 233.738 cv
141.175 233.738 li
141.205 234.253 141.35 234.648 141.612 234.921 cv
141.873 235.195 142.199 235.332 142.589 235.332 cv
142.88 235.332 143.128 235.255 143.334 235.104 cv
143.54 234.953 143.703 234.71 143.823 234.378 cv
f
145.619 235.878 mo
145.619 229.425 li
146.416 229.425 li
146.416 235.878 li
145.619 235.878 li
f
148.227 233.082 mo
150.836 233.082 li
150.801 232.693 150.702 232.401 150.538 232.207 cv
150.285 231.905 149.958 231.753 149.556 231.753 cv
149.192 231.753 148.886 231.875 148.639 232.115 cv
148.391 232.356 148.253 232.678 148.227 233.082 cv
cp
150.828 234.378 mo
151.639 234.488 li
151.51 234.963 151.271 235.332 150.923 235.594 cv
150.575 235.857 150.13 235.988 149.589 235.988 cv
148.907 235.988 148.367 235.777 147.967 235.356 cv
147.568 234.934 147.368 234.343 147.368 233.582 cv
147.368 232.794 147.57 232.184 147.974 231.75 cv
148.377 231.315 148.901 231.097 149.545 231.097 cv
150.168 231.097 150.677 231.31 151.072 231.734 cv
151.467 232.16 151.665 232.756 151.665 233.527 cv
151.665 233.574 151.664 233.644 151.661 233.738 cv
148.18 233.738 li
148.209 234.253 148.355 234.648 148.617 234.921 cv
148.877 235.195 149.204 235.332 149.594 235.332 cv
149.885 235.332 150.133 235.255 150.339 235.104 cv
150.544 234.953 150.708 234.71 150.828 234.378 cv
f
152.639 235.878 mo
152.639 231.207 li
153.358 231.207 li
153.358 231.871 li
153.699 231.355 154.191 231.097 154.834 231.097 cv
155.114 231.097 155.371 231.148 155.605 231.25 cv
155.839 231.35 156.015 231.483 156.132 231.648 cv
156.249 231.812 156.33 232.007 156.376 232.233 cv
156.406 232.38 156.42 232.636 156.42 233.003 cv
156.42 235.878 li
155.624 235.878 li
155.624 233.035 li
155.624 232.712 155.593 232.47 155.532 232.311 cv
155.471 232.151 155.363 232.023 155.208 231.927 cv
155.053 231.833 154.871 231.785 154.662 231.785 cv
154.329 231.785 154.041 231.892 153.799 232.106 cv
153.557 232.32 153.436 232.726 153.436 233.326 cv
153.436 235.878 li
152.639 235.878 li
f
158.155 233.457 mo
158.155 234.07 158.277 234.518 158.52 234.799 cv
158.763 235.082 159.068 235.222 159.434 235.222 cv
159.797 235.222 160.102 235.082 160.348 234.802 cv
160.594 234.521 160.717 234.082 160.717 233.484 cv
160.717 232.912 160.59 232.48 160.337 232.189 cv
160.084 231.899 159.778 231.753 159.421 231.753 cv
159.069 231.753 158.77 231.896 158.524 232.183 cv
158.278 232.468 158.155 232.894 158.155 233.457 cv
cp
157.499 236.269 mo
158.264 236.378 li
158.296 236.615 158.386 236.787 158.534 236.894 cv
158.73 237.04 159 237.113 159.34 237.113 cv
159.708 237.113 159.992 237.04 160.192 236.894 cv
160.392 236.748 160.527 236.543 160.598 236.281 cv
160.639 236.121 160.658 235.783 160.655 235.269 cv
160.309 235.675 159.878 235.878 159.362 235.878 cv
158.719 235.878 158.222 235.647 157.871 235.183 cv
157.518 234.719 157.342 234.164 157.342 233.514 cv
157.342 233.068 157.423 232.657 157.584 232.279 cv
157.746 231.902 157.98 231.611 158.287 231.406 cv
158.594 231.2 158.954 231.097 159.368 231.097 cv
159.92 231.097 160.375 231.322 160.733 231.769 cv
160.733 231.207 li
161.452 231.207 li
161.452 235.242 li
161.452 235.968 161.378 236.484 161.23 236.787 cv
161.082 237.089 160.848 237.33 160.527 237.505 cv
160.207 237.681 159.812 237.769 159.343 237.769 cv
158.787 237.769 158.337 237.644 157.995 237.395 cv
157.652 237.146 157.487 236.771 157.499 236.269 cv
f
164.384 235.172 mo
164.494 235.871 li
164.27 235.918 164.07 235.941 163.893 235.941 cv
163.605 235.941 163.381 235.895 163.223 235.804 cv
163.064 235.713 162.952 235.593 162.887 235.445 cv
162.823 235.296 162.791 234.985 162.791 234.508 cv
162.791 231.816 li
162.212 231.816 li
162.212 231.207 li
162.791 231.207 li
162.791 230.05 li
163.587 229.576 li
163.587 231.207 li
164.384 231.207 li
164.384 231.816 li
163.587 231.816 li
163.587 234.558 li
163.587 234.785 163.601 234.93 163.629 234.995 cv
163.657 235.06 163.703 235.111 163.765 235.149 cv
163.829 235.187 163.918 235.207 164.036 235.207 cv
164.124 235.207 164.24 235.195 164.384 235.172 cv
f
165.15 235.878 mo
165.15 229.425 li
165.947 229.425 li
165.947 231.745 li
166.313 231.313 166.775 231.097 167.333 231.097 cv
167.675 231.097 167.973 231.166 168.226 231.302 cv
168.478 231.439 168.659 231.626 168.768 231.868 cv
168.877 232.109 168.931 232.458 168.931 232.916 cv
168.931 235.878 li
168.134 235.878 li
168.134 232.919 li
168.134 232.523 168.05 232.236 167.881 232.055 cv
167.712 231.875 167.473 231.785 167.165 231.785 cv
166.933 231.785 166.716 231.845 166.512 231.967 cv
166.309 232.089 166.164 232.253 166.077 232.462 cv
165.99 232.67 165.947 232.958 165.947 233.324 cv
165.947 235.878 li
165.15 235.878 li
f
174.187 237.769 mo
173.75 237.218 173.38 236.575 173.078 235.837 cv
172.776 235.1 172.625 234.336 172.625 233.546 cv
172.625 232.849 172.738 232.182 172.963 231.544 cv
173.228 230.804 173.635 230.066 174.187 229.332 cv
174.75 229.332 li
174.396 229.941 174.162 230.375 174.047 230.635 cv
173.869 231.04 173.728 231.46 173.626 231.9 cv
173.5 232.447 173.437 232.998 173.437 233.55 cv
173.437 234.958 173.875 236.365 174.75 237.769 cv
174.187 237.769 li
f
175.653 235.878 mo
175.653 231.207 li
176.372 231.207 li
176.372 231.871 li
176.712 231.355 177.205 231.097 177.848 231.097 cv
178.128 231.097 178.385 231.148 178.62 231.25 cv
178.854 231.35 179.029 231.483 179.146 231.648 cv
179.262 231.812 179.344 232.007 179.391 232.233 cv
179.419 232.38 179.434 232.636 179.434 233.003 cv
179.434 235.878 li
178.637 235.878 li
178.637 233.035 li
178.637 232.712 178.607 232.47 178.546 232.311 cv
178.485 232.151 178.377 232.023 178.222 231.927 cv
178.067 231.833 177.885 231.785 177.676 231.785 cv
177.343 231.785 177.055 231.892 176.813 232.106 cv
176.571 232.32 176.45 232.726 176.45 233.326 cv
176.45 235.878 li
175.653 235.878 li
f
180.658 235.878 mo
180.658 231.207 li
181.376 231.207 li
181.376 231.86 li
181.522 231.63 181.716 231.447 181.958 231.306 cv
182.2 231.168 182.476 231.097 182.785 231.097 cv
183.128 231.097 183.411 231.169 183.63 231.313 cv
183.851 231.458 184.006 231.659 184.096 231.917 cv
184.466 231.371 184.948 231.097 185.542 231.097 cv
186.005 231.097 186.362 231.226 186.612 231.482 cv
186.861 231.74 186.986 232.134 186.986 232.669 cv
186.986 235.878 li
186.189 235.878 li
186.189 232.933 li
186.189 232.617 186.164 232.388 186.112 232.25 cv
186.061 232.11 185.968 231.998 185.834 231.913 cv
185.7 231.828 185.542 231.785 185.361 231.785 cv
185.033 231.785 184.761 231.894 184.545 232.113 cv
184.329 232.332 184.22 232.681 184.22 233.163 cv
184.22 235.878 li
183.423 235.878 li
183.423 232.841 li
183.423 232.489 183.359 232.225 183.231 232.048 cv
183.104 231.873 182.894 231.785 182.603 231.785 cv
182.381 231.785 182.177 231.843 181.99 231.96 cv
181.802 232.078 181.666 232.25 181.582 232.476 cv
181.497 232.702 181.455 233.028 181.455 233.453 cv
181.455 235.878 li
180.658 235.878 li
f
188.671 237.769 mo
188.109 237.769 li
188.984 236.365 189.421 234.958 189.421 233.55 cv
189.421 233 189.358 232.455 189.232 231.913 cv
189.133 231.474 188.994 231.052 188.815 230.648 cv
188.701 230.385 188.465 229.947 188.109 229.332 cv
188.671 229.332 li
189.223 230.066 189.63 230.804 189.895 231.544 cv
190.121 232.182 190.234 232.849 190.234 233.546 cv
190.234 234.336 190.082 235.1 189.778 235.837 cv
189.474 236.575 189.105 237.218 188.671 237.769 cv
f
305.49 156.765 mo
305.49 154.541 li
303.697 155.223 li
303.154 155.425 302.705 155.582 302.349 155.691 cv
302.769 155.782 303.184 155.898 303.593 156.041 cv
305.49 156.765 li
cp
308.13 158.608 mo
301.677 156.135 li
301.677 155.203 li
308.13 152.572 li
308.13 153.542 li
306.177 154.285 li
306.177 157.004 li
308.13 157.699 li
308.13 158.608 li
f
304.74 151.04 mo
304.74 149.374 li
304.74 148.823 304.637 148.431 304.433 148.2 cv
304.228 147.968 303.941 147.852 303.57 147.852 cv
303.3 147.852 303.07 147.92 302.878 148.057 cv
302.687 148.193 302.561 148.373 302.5 148.595 cv
302.462 148.739 302.443 149.004 302.443 149.391 cv
302.443 151.04 li
304.74 151.04 li
cp
308.13 151.899 mo
301.677 151.899 li
301.677 149.466 li
301.677 149.039 301.698 148.712 301.739 148.486 cv
301.792 148.169 301.892 147.904 302.041 147.69 cv
302.189 147.476 302.396 147.303 302.663 147.173 cv
302.93 147.042 303.223 146.977 303.542 146.977 cv
304.091 146.977 304.556 147.152 304.935 147.5 cv
305.316 147.848 305.505 148.478 305.505 149.388 cv
305.505 151.04 li
308.13 151.04 li
308.13 151.899 li
f
307.365 145.037 mo
307.365 143.662 li
307.365 143.237 307.326 142.904 307.246 142.663 cv
307.168 142.42 307.056 142.228 306.912 142.084 cv
306.71 141.882 306.438 141.725 306.097 141.613 cv
305.755 141.5 305.341 141.443 304.855 141.443 cv
304.181 141.443 303.664 141.554 303.302 141.775 cv
302.94 141.996 302.698 142.265 302.575 142.582 cv
302.487 142.81 302.443 143.177 302.443 143.684 cv
302.443 145.037 li
307.365 145.037 li
cp
308.13 145.896 mo
301.677 145.896 li
301.677 143.676 li
301.677 143.175 301.708 142.792 301.77 142.529 cv
301.855 142.16 302.009 141.844 302.232 141.584 cv
302.519 141.244 302.887 140.99 303.334 140.821 cv
303.783 140.653 304.293 140.568 304.869 140.568 cv
305.359 140.568 305.793 140.626 306.171 140.74 cv
306.55 140.854 306.864 141 307.112 141.179 cv
307.36 141.358 307.554 141.554 307.697 141.766 cv
307.839 141.978 307.947 142.235 308.02 142.536 cv
308.093 142.835 308.13 143.181 308.13 143.571 cv
308.13 145.896 li
f
306.345 133.882 mo
306.483 133.389 306.688 132.984 306.96 132.664 cv
306.503 132.163 305.816 131.912 304.9 131.912 cv
304.378 131.912 303.922 132 303.533 132.178 cv
303.143 132.355 302.84 132.615 302.626 132.957 cv
302.41 133.298 302.302 133.681 302.302 134.106 cv
302.302 134.743 302.52 135.27 302.955 135.689 cv
303.39 136.109 304.04 136.318 304.904 136.318 cv
305.742 136.318 306.384 136.111 306.834 135.696 cv
307.281 135.281 307.505 134.751 307.505 134.106 cv
307.505 133.801 307.449 133.514 307.334 133.245 cv
307.162 133.511 307.039 133.792 306.964 134.088 cv
306.345 133.882 li
cp
307.435 132.004 mo
307.71 131.609 307.911 131.246 308.038 130.912 cv
308.63 131.164 li
308.463 131.626 308.199 132.086 307.837 132.545 cv
308.106 133.023 308.24 133.55 308.24 134.126 cv
308.24 134.709 308.099 135.238 307.818 135.712 cv
307.537 136.187 307.14 136.552 306.63 136.809 cv
306.12 137.065 305.545 137.193 304.906 137.193 cv
304.27 137.193 303.691 137.064 303.169 136.807 cv
302.647 136.549 302.25 136.183 301.977 135.707 cv
301.705 135.231 301.568 134.699 301.568 134.111 cv
301.568 133.516 301.71 132.981 301.992 132.503 cv
302.275 132.027 302.67 131.663 303.179 131.413 cv
303.687 131.162 304.26 131.037 304.899 131.037 cv
305.429 131.037 305.907 131.117 306.33 131.278 cv
306.753 131.438 307.122 131.68 307.435 132.004 cv
f
308.13 126.943 mo
307.443 126.943 li
307.974 127.304 308.24 127.796 308.24 128.417 cv
308.24 128.691 308.187 128.947 308.082 129.185 cv
307.976 129.422 307.843 129.599 307.683 129.714 cv
307.523 129.83 307.327 129.911 307.095 129.957 cv
306.94 129.99 306.693 130.005 306.355 130.005 cv
303.458 130.005 li
303.458 129.209 li
306.048 129.209 li
306.462 129.209 306.74 129.193 306.884 129.16 cv
307.092 129.111 307.255 129.006 307.375 128.846 cv
307.493 128.686 307.552 128.488 307.552 128.251 cv
307.552 128.016 307.492 127.795 307.37 127.588 cv
307.249 127.382 307.083 127.236 306.873 127.15 cv
306.664 127.064 306.359 127.021 305.96 127.021 cv
303.458 127.021 li
303.458 126.224 li
308.13 126.224 li
308.13 126.943 li
f
305.787 121.968 mo
305.904 122.259 306.003 122.697 306.085 123.279 cv
306.132 123.609 306.185 123.841 306.244 123.978 cv
306.302 124.115 306.388 124.22 306.5 124.294 cv
306.614 124.369 306.739 124.406 306.876 124.406 cv
307.087 124.406 307.263 124.326 307.404 124.164 cv
307.544 124.001 307.615 123.765 307.615 123.455 cv
307.615 123.146 307.548 122.872 307.415 122.631 cv
307.281 122.391 307.099 122.214 306.867 122.102 cv
306.689 122.016 306.425 121.973 306.077 121.973 cv
305.787 121.968 li
cp
307.552 121.921 mo
307.804 122.209 307.981 122.488 308.084 122.761 cv
308.188 123.035 308.24 123.328 308.24 123.641 cv
308.24 124.158 308.115 124.555 307.863 124.834 cv
307.611 125.111 307.291 125.25 306.899 125.25 cv
306.669 125.25 306.46 125.197 306.271 125.092 cv
306.082 124.988 305.929 124.85 305.814 124.68 cv
305.7 124.51 305.613 124.319 305.554 124.106 cv
305.513 123.949 305.473 123.712 305.435 123.396 cv
305.359 122.751 305.267 122.278 305.162 121.973 cv
305.053 121.97 304.984 121.968 304.955 121.968 cv
304.632 121.968 304.406 122.043 304.273 122.193 cv
304.095 122.395 304.005 122.696 304.005 123.094 cv
304.005 123.466 304.071 123.742 304.202 123.918 cv
304.333 124.096 304.564 124.227 304.896 124.312 cv
304.787 125.109 li
304.456 125.039 304.188 124.922 303.984 124.761 cv
303.781 124.599 303.624 124.366 303.514 124.06 cv
303.404 123.755 303.349 123.401 303.349 122.999 cv
303.349 122.599 303.396 122.275 303.49 122.025 cv
303.584 121.775 303.702 121.591 303.844 121.474 cv
303.986 121.356 304.166 121.274 304.382 121.227 cv
304.517 121.201 304.761 121.187 305.113 121.187 cv
306.17 121.187 li
306.908 121.187 307.374 121.171 307.569 121.14 cv
307.764 121.109 307.952 121.046 308.13 120.953 cv
308.13 121.765 li
307.966 121.846 307.773 121.899 307.552 121.921 cv
f
308.13 119.979 mo
303.458 119.979 li
303.458 119.26 li
304.123 119.26 li
303.607 118.919 303.349 118.427 303.349 117.784 cv
303.349 117.503 303.4 117.247 303.501 117.012 cv
303.602 116.778 303.735 116.603 303.9 116.486 cv
304.064 116.37 304.259 116.288 304.485 116.242 cv
304.632 116.212 304.888 116.198 305.255 116.198 cv
308.13 116.198 li
308.13 116.995 li
305.287 116.995 li
304.964 116.995 304.722 117.025 304.563 117.085 cv
304.403 117.147 304.275 117.254 304.179 117.41 cv
304.084 117.565 304.037 117.747 304.037 117.956 cv
304.037 118.289 304.144 118.577 304.358 118.819 cv
304.572 119.061 304.978 119.182 305.578 119.182 cv
308.13 119.182 li
308.13 119.979 li
f
307.424 113.239 mo
308.123 113.129 li
308.169 113.353 308.193 113.553 308.193 113.73 cv
308.193 114.018 308.147 114.242 308.056 114.4 cv
307.965 114.559 307.845 114.671 307.697 114.736 cv
307.548 114.8 307.237 114.833 306.76 114.833 cv
304.068 114.833 li
304.068 115.411 li
303.458 115.411 li
303.458 114.833 li
302.302 114.833 li
301.828 114.036 li
303.458 114.036 li
303.458 113.239 li
304.068 113.239 li
304.068 114.036 li
306.81 114.036 li
307.037 114.036 307.182 114.022 307.247 113.994 cv
307.312 113.966 307.363 113.92 307.401 113.858 cv
307.439 113.794 307.458 113.705 307.458 113.587 cv
307.458 113.5 307.447 113.383 307.424 113.239 cv
f
308.13 109.426 mo
307.443 109.426 li
307.974 109.788 308.24 110.279 308.24 110.9 cv
308.24 111.175 308.187 111.431 308.082 111.668 cv
307.976 111.906 307.843 112.083 307.683 112.198 cv
307.523 112.313 307.327 112.394 307.095 112.441 cv
306.94 112.472 306.693 112.489 306.355 112.489 cv
303.458 112.489 li
303.458 111.692 li
306.048 111.692 li
306.462 111.692 306.74 111.675 306.884 111.644 cv
307.092 111.594 307.255 111.49 307.375 111.33 cv
307.493 111.169 307.552 110.971 307.552 110.736 cv
307.552 110.5 307.492 110.279 307.37 110.072 cv
307.249 109.865 307.083 109.719 306.873 109.633 cv
306.664 109.547 306.359 109.504 305.96 109.504 cv
303.458 109.504 li
303.458 108.708 li
308.13 108.708 li
308.13 109.426 li
f
308.13 107.468 mo
303.458 107.468 li
303.458 106.75 li
304.112 106.75 li
303.882 106.604 303.699 106.41 303.558 106.167 cv
303.419 105.925 303.349 105.65 303.349 105.341 cv
303.349 104.998 303.421 104.715 303.565 104.496 cv
303.71 104.275 303.911 104.12 304.168 104.03 cv
303.623 103.66 303.349 103.178 303.349 102.584 cv
303.349 102.121 303.478 101.764 303.734 101.514 cv
303.992 101.265 304.386 101.14 304.921 101.14 cv
308.13 101.14 li
308.13 101.937 li
305.185 101.937 li
304.869 101.937 304.64 101.962 304.501 102.013 cv
304.362 102.065 304.25 102.158 304.165 102.292 cv
304.08 102.426 304.037 102.584 304.037 102.765 cv
304.037 103.093 304.146 103.365 304.365 103.582 cv
304.584 103.797 304.933 103.906 305.415 103.906 cv
308.13 103.906 li
308.13 104.703 li
305.093 104.703 li
304.741 104.703 304.477 104.767 304.3 104.894 cv
304.125 105.023 304.037 105.232 304.037 105.523 cv
304.037 105.745 304.095 105.949 304.212 106.136 cv
304.33 106.324 304.501 106.46 304.728 106.544 cv
304.954 106.629 305.28 106.671 305.705 106.671 cv
308.13 106.671 li
308.13 107.468 li
f
308.13 97.3448 mo
301.677 97.3448 li
301.677 92.7042 li
302.443 92.7042 li
302.443 96.4854 li
304.412 96.4854 li
304.412 92.9385 li
305.177 92.9385 li
305.177 96.4854 li
307.365 96.4854 li
307.365 92.5479 li
308.13 92.5479 li
308.13 97.3448 li
f
308.13 91.2784 mo
304.068 91.2784 li
304.068 91.9815 li
303.458 91.9815 li
303.458 91.2784 li
302.96 91.2784 li
302.646 91.2784 302.413 91.251 302.259 91.1954 cv
302.054 91.1202 301.887 90.9864 301.759 90.796 cv
301.632 90.6055 301.568 90.337 301.568 89.9913 cv
301.568 89.7686 301.594 89.5225 301.646 89.253 cv
302.332 89.3721 li
302.301 89.5362 302.287 89.6915 302.287 89.8379 cv
302.287 90.0782 302.338 90.2481 302.442 90.3477 cv
302.545 90.4473 302.74 90.4971 303.023 90.4971 cv
303.458 90.4971 li
303.458 89.5752 li
304.068 89.5752 li
304.068 90.4815 li
308.13 90.4815 li
308.13 91.2784 li
f
308.13 88.9405 mo
304.068 88.9405 li
304.068 89.6436 li
303.458 89.6436 li
303.458 88.9405 li
302.96 88.9405 li
302.646 88.9405 302.413 88.9131 302.259 88.8575 cv
302.054 88.7823 301.887 88.6485 301.759 88.4581 cv
301.632 88.2676 301.568 87.9991 301.568 87.6534 cv
301.568 87.4307 301.594 87.1846 301.646 86.9151 cv
302.332 87.0342 li
302.301 87.1983 302.287 87.3536 302.287 87.5 cv
302.287 87.7403 302.338 87.9102 302.442 88.0098 cv
302.545 88.1094 302.74 88.1592 303.023 88.1592 cv
303.458 88.1592 li
303.458 87.2374 li
304.068 87.2374 li
304.068 88.1436 li
308.13 88.1436 li
308.13 88.9405 li
f
308.13 86.628 mo
303.458 86.628 li
303.458 85.8311 li
308.13 85.8311 li
308.13 86.628 li
cp
302.584 86.628 mo
301.677 86.628 li
301.677 85.8311 li
302.584 85.8311 li
302.584 86.628 li
f
306.427 81.5821 mo
306.537 80.8008 li
307.07 80.8858 307.487 81.1026 307.788 81.4532 cv
308.089 81.8028 308.24 82.2325 308.24 82.7413 cv
308.24 83.3799 308.031 83.8936 307.612 84.2813 cv
307.194 84.669 306.593 84.8633 305.812 84.8633 cv
305.307 84.8633 304.865 84.7803 304.486 84.6133 cv
304.107 84.4463 303.823 84.1924 303.633 83.8516 cv
303.444 83.5108 303.349 83.1397 303.349 82.7393 cv
303.349 82.2334 303.478 81.8194 303.736 81.4971 cv
303.994 81.1758 304.359 80.9698 304.834 80.879 cv
304.943 81.6446 li
304.632 81.7178 304.398 81.8467 304.241 82.0332 cv
304.084 82.2188 304.005 82.4434 304.005 82.7071 cv
304.005 83.1045 304.148 83.4288 304.434 83.6768 cv
304.72 83.9268 305.171 84.0508 305.791 84.0508 cv
306.418 84.0508 306.873 83.9307 307.158 83.6905 cv
307.441 83.4512 307.584 83.1387 307.584 82.753 cv
307.584 82.4424 307.489 82.1846 307.3 81.9766 cv
307.111 81.7686 306.82 81.6377 306.427 81.5821 cv
f
308.13 80.129 mo
303.458 80.129 li
303.458 79.3321 li
308.13 79.3321 li
308.13 80.129 li
cp
302.584 80.129 mo
301.677 80.129 li
301.677 79.3321 li
302.584 79.3321 li
302.584 80.129 li
f
305.334 77.5352 mo
305.334 74.9258 li
304.945 74.961 304.653 75.0616 304.458 75.2256 cv
304.157 75.4776 304.005 75.8047 304.005 76.2061 cv
304.005 76.5704 304.126 76.876 304.367 77.1241 cv
304.608 77.3721 304.93 77.5088 305.334 77.5352 cv
cp
306.63 74.9346 mo
306.74 74.1241 li
307.215 74.253 307.584 74.4913 307.846 74.8399 cv
308.109 75.1876 308.24 75.6329 308.24 76.1739 cv
308.24 76.8555 308.029 77.3965 307.608 77.796 cv
307.186 78.1954 306.595 78.3946 305.834 78.3946 cv
305.046 78.3946 304.436 78.1924 304.001 77.7891 cv
303.567 77.3858 303.349 76.8614 303.349 76.2178 cv
303.349 75.5948 303.562 75.085 303.986 74.6905 cv
304.412 74.296 305.008 74.0977 305.779 74.0977 cv
305.826 74.0977 305.896 74.0997 305.99 74.1026 cv
305.99 77.5821 li
306.505 77.5528 306.9 77.4073 307.173 77.1465 cv
307.447 76.8848 307.584 76.5586 307.584 76.168 cv
307.584 75.878 307.507 75.6299 307.356 75.4239 cv
307.205 75.2178 306.962 75.0557 306.63 74.9346 cv
f
308.13 73.1241 mo
303.458 73.1241 li
303.458 72.4053 li
304.123 72.4053 li
303.607 72.0645 303.349 71.5723 303.349 70.9288 cv
303.349 70.6495 303.4 70.3916 303.501 70.1573 cv
303.602 69.9229 303.735 69.7471 303.9 69.6309 cv
304.064 69.5147 304.259 69.4327 304.485 69.3858 cv
304.632 69.3575 304.888 69.3428 305.255 69.3428 cv
308.13 69.3428 li
308.13 70.1397 li
305.287 70.1397 li
304.964 70.1397 304.722 70.17 304.563 70.2305 cv
304.403 70.292 304.275 70.3995 304.179 70.5547 cv
304.084 70.71 304.037 70.8916 304.037 71.1006 cv
304.037 71.4346 304.144 71.7217 304.358 71.9639 cv
304.572 72.2061 304.978 72.3272 305.578 72.3272 cv
308.13 72.3272 li
308.13 73.1241 li
f
306.427 65.0713 mo
306.537 64.2901 li
307.07 64.375 307.487 64.5928 307.788 64.9424 cv
308.089 65.292 308.24 65.7217 308.24 66.2315 cv
308.24 66.8702 308.031 67.3829 307.612 67.7706 cv
307.194 68.1592 306.593 68.3526 305.812 68.3526 cv
305.307 68.3526 304.865 68.2696 304.486 68.1026 cv
304.107 67.9366 303.823 67.6827 303.633 67.3409 cv
303.444 67.001 303.349 66.6299 303.349 66.2295 cv
303.349 65.7227 303.478 65.3086 303.736 64.9874 cv
303.994 64.6651 304.359 64.459 304.834 64.3682 cv
304.943 65.1338 li
304.632 65.2071 304.398 65.337 304.241 65.5225 cv
304.084 65.709 304.005 65.9336 304.005 66.1963 cv
304.005 66.5948 304.148 66.918 304.434 67.167 cv
304.72 67.4161 305.171 67.5401 305.791 67.5401 cv
306.418 67.5401 306.873 67.421 307.158 67.1807 cv
307.441 66.9405 307.584 66.628 307.584 66.2422 cv
307.584 65.9327 307.489 65.6739 307.3 65.4659 cv
307.111 65.2588 306.82 65.127 306.427 65.0713 cv
f
309.925 63.6495 mo
309.185 63.7588 li
309.232 63.585 309.255 63.4336 309.255 63.3038 cv
309.255 63.128 309.226 62.9864 309.168 62.8799 cv
309.109 62.7745 309.027 62.6876 308.921 62.6192 cv
308.841 62.5694 308.645 62.4883 308.332 62.376 cv
308.288 62.3624 308.223 62.3389 308.138 62.3057 cv
303.458 64.0713 li
303.458 63.2217 li
306.145 62.2549 li
306.486 62.1299 306.844 62.0176 307.219 61.919 cv
306.873 61.8243 306.527 61.7139 306.181 61.587 cv
303.458 60.587 li
303.458 59.796 li
308.214 61.5586 li
308.724 61.75 309.076 61.8975 309.269 62.003 cv
309.528 62.1446 309.718 62.3057 309.839 62.4874 cv
309.96 62.67 310.021 62.8868 310.021 63.1397 cv
310.021 63.292 309.989 63.462 309.925 63.6495 cv
f
282.687 216.698 mo
30.6651 216.698 li
@
282.687 0.200196 mo
282.687 216.201 li
@
30.6651 0.200196 mo
282.687 0.200196 li
@
30.6651 216.201 mo
30.6651 0.200196 li
@
49.1397 13.4639 mo
49.1397 7.83887 li
49.8897 7.83887 li
49.8897 10.1514 li
52.7803 10.1514 li
52.7803 7.83887 li
53.5303 7.83887 li
53.5303 13.4639 li
52.7803 13.4639 li
52.7803 10.8077 li
49.8897 10.8077 li
49.8897 13.4639 li
49.1397 13.4639 li
f
57.3277 11.417 mo
57.0718 11.5196 56.688 11.6065 56.1768 11.6778 cv
55.8873 11.7188 55.6827 11.7647 55.5626 11.8155 cv
55.4424 11.8667 55.3497 11.9415 55.2847 12.0396 cv
55.2193 12.1377 55.1871 12.2471 55.1871 12.3672 cv
55.1871 12.5513 55.2579 12.7042 55.4 12.8272 cv
55.5416 12.9493 55.7496 13.0108 56.023 13.0108 cv
56.2935 13.0108 56.5347 12.9527 56.7457 12.836 cv
56.9566 12.7198 57.1114 12.5606 57.2105 12.3584 cv
57.2857 12.2032 57.3238 11.9737 57.3238 11.67 cv
57.3277 11.417 li
cp
57.3746 12.9483 mo
57.1192 13.1709 56.8716 13.3282 56.6324 13.42 cv
56.3931 13.5118 56.1363 13.5577 55.8619 13.5577 cv
55.4087 13.5577 55.0606 13.4483 54.8174 13.2286 cv
54.5743 13.0088 54.4527 12.7286 54.4527 12.3873 cv
54.4527 12.1871 54.4986 12.004 54.5904 11.8389 cv
54.6822 11.6729 54.8028 11.5401 54.9517 11.44 cv
55.1006 11.3399 55.2686 11.2642 55.4551 11.2129 cv
55.5923 11.1768 55.7994 11.1426 56.0767 11.1089 cv
56.6412 11.042 57.0567 10.9629 57.3238 10.8702 cv
57.3262 10.7764 57.3277 10.7168 57.3277 10.6915 cv
57.3277 10.4126 57.2618 10.2164 57.1304 10.1021 cv
56.9522 9.94727 56.6876 9.87012 56.337 9.87012 cv
56.0093 9.87012 55.7671 9.92676 55.6114 10.0391 cv
55.4551 10.1514 55.3399 10.3506 55.2652 10.6358 cv
54.5777 10.542 li
54.6392 10.254 54.7413 10.0215 54.8829 9.84473 cv
55.0245 9.667 55.2291 9.53126 55.4966 9.43555 cv
55.7647 9.33985 56.0748 9.292 56.4278 9.292 cv
56.7779 9.292 57.0621 9.33301 57.2813 9.41456 cv
57.5 9.4961 57.6607 9.59913 57.7637 9.72266 cv
57.8668 9.84668 57.939 10.003 57.9805 10.1924 cv
58.0035 10.3096 58.0152 10.5225 58.0152 10.8292 cv
58.0152 11.751 li
58.0152 12.3936 58.0298 12.8008 58.0591 12.9717 cv
58.0884 13.1426 58.147 13.3067 58.2339 13.4639 cv
57.5308 13.4639 li
57.4498 13.3169 57.3975 13.1451 57.3746 12.9483 cv
f
59.0577 13.4639 mo
59.0577 9.38575 li
59.667 9.38575 li
59.667 9.95118 li
59.7955 9.75294 59.9659 9.59376 60.1788 9.47315 cv
60.3916 9.35254 60.6338 9.292 60.9058 9.292 cv
61.2085 9.292 61.4566 9.3545 61.6504 9.47901 cv
61.8438 9.60352 61.9805 9.77735 62.0601 10.001 cv
62.3838 9.52832 62.8052 9.292 63.3248 9.292 cv
63.7305 9.292 64.043 9.4043 64.2613 9.62794 cv
64.4795 9.85254 64.5889 10.1973 64.5889 10.6631 cv
64.5889 13.4639 li
63.9014 13.4639 li
63.9014 10.8897 li
63.9014 10.6133 63.879 10.4136 63.834 10.292 cv
63.7886 10.17 63.7071 10.0718 63.5884 9.99708 cv
63.4703 9.92286 63.3311 9.88575 63.1714 9.88575 cv
62.8829 9.88575 62.6436 9.98145 62.4532 10.1724 cv
62.2623 10.3633 62.167 10.6695 62.167 11.0899 cv
62.167 13.4639 li
61.4795 13.4639 li
61.4795 10.8091 li
61.4795 10.5015 61.4234 10.2706 61.3106 10.1167 cv
61.1978 9.9629 61.0132 9.88575 60.7569 9.88575 cv
60.5621 9.88575 60.3819 9.9375 60.2164 10.0401 cv
60.0508 10.1426 59.9312 10.2925 59.857 10.4903 cv
59.7823 10.6876 59.7452 10.9722 59.7452 11.3438 cv
59.7452 13.4639 li
59.0577 13.4639 li
f
68.2388 11.417 mo
67.983 11.5196 67.5992 11.6065 67.0879 11.6778 cv
66.7984 11.7188 66.5938 11.7647 66.4737 11.8155 cv
66.3536 11.8667 66.2608 11.9415 66.1958 12.0396 cv
66.1304 12.1377 66.0982 12.2471 66.0982 12.3672 cv
66.0982 12.5513 66.169 12.7042 66.3111 12.8272 cv
66.4527 12.9493 66.6607 13.0108 66.9341 13.0108 cv
67.2046 13.0108 67.4458 12.9527 67.6568 12.836 cv
67.8677 12.7198 68.0225 12.5606 68.1216 12.3584 cv
68.1968 12.2032 68.2349 11.9737 68.2349 11.67 cv
68.2388 11.417 li
cp
68.2857 12.9483 mo
68.0303 13.1709 67.7828 13.3282 67.5435 13.42 cv
67.3042 13.5118 67.0474 13.5577 66.773 13.5577 cv
66.3199 13.5577 65.9717 13.4483 65.7286 13.2286 cv
65.4854 13.0088 65.3638 12.7286 65.3638 12.3873 cv
65.3638 12.1871 65.4097 12.004 65.5015 11.8389 cv
65.5933 11.6729 65.7139 11.5401 65.8628 11.44 cv
66.0118 11.3399 66.1797 11.2642 66.3663 11.2129 cv
66.5035 11.1768 66.7105 11.1426 66.9878 11.1089 cv
67.5523 11.042 67.9678 10.9629 68.2349 10.8702 cv
68.2374 10.7764 68.2388 10.7168 68.2388 10.6915 cv
68.2388 10.4126 68.1729 10.2164 68.0416 10.1021 cv
67.8633 9.94727 67.5987 9.87012 67.2481 9.87012 cv
66.9205 9.87012 66.6783 9.92676 66.5225 10.0391 cv
66.3663 10.1514 66.251 10.3506 66.1763 10.6358 cv
65.4888 10.542 li
65.5503 10.254 65.6524 10.0215 65.794 9.84473 cv
65.9356 9.667 66.1402 9.53126 66.4078 9.43555 cv
66.6758 9.33985 66.9859 9.292 67.3389 9.292 cv
67.689 9.292 67.9732 9.33301 68.1924 9.41456 cv
68.4112 9.4961 68.5718 9.59913 68.6749 9.72266 cv
68.7779 9.84668 68.8502 10.003 68.8916 10.1924 cv
68.9146 10.3096 68.9263 10.5225 68.9263 10.8292 cv
68.9263 11.751 li
68.9263 12.3936 68.941 12.8008 68.9703 12.9717 cv
68.9996 13.1426 69.0582 13.3067 69.1451 13.4639 cv
68.4419 13.4639 li
68.3609 13.3169 68.3086 13.1451 68.2857 12.9483 cv
f
69.9688 13.4639 mo
69.9688 9.38575 li
70.5782 9.38575 li
70.5782 9.95118 li
70.7066 9.75294 70.877 9.59376 71.0899 9.47315 cv
71.3028 9.35254 71.545 9.292 71.8169 9.292 cv
72.1197 9.292 72.3677 9.3545 72.5616 9.47901 cv
72.7549 9.60352 72.8916 9.77735 72.9712 10.001 cv
73.295 9.52832 73.7164 9.292 74.2359 9.292 cv
74.6416 9.292 74.9542 9.4043 75.1724 9.62794 cv
75.3907 9.85254 75.5 10.1973 75.5 10.6631 cv
75.5 13.4639 li
74.8126 13.4639 li
74.8126 10.8897 li
74.8126 10.6133 74.7901 10.4136 74.7452 10.292 cv
74.6998 10.17 74.6182 10.0718 74.4996 9.99708 cv
74.3814 9.92286 74.2422 9.88575 74.0826 9.88575 cv
73.794 9.88575 73.5547 9.98145 73.3643 10.1724 cv
73.1734 10.3633 73.0782 10.6695 73.0782 11.0899 cv
73.0782 13.4639 li
72.3907 13.4639 li
72.3907 10.8091 li
72.3907 10.5015 72.3345 10.2706 72.2217 10.1167 cv
72.1089 9.9629 71.9244 9.88575 71.668 9.88575 cv
71.4732 9.88575 71.293 9.9375 71.1275 10.0401 cv
70.962 10.1426 70.8423 10.2925 70.7681 10.4903 cv
70.6934 10.6876 70.6563 10.9722 70.6563 11.3438 cv
70.6563 13.4639 li
69.9688 13.4639 li
f
79.15 11.417 mo
78.8941 11.5196 78.5103 11.6065 77.9991 11.6778 cv
77.7095 11.7188 77.5049 11.7647 77.3848 11.8155 cv
77.2647 11.8667 77.1719 11.9415 77.107 12.0396 cv
77.0416 12.1377 77.0093 12.2471 77.0093 12.3672 cv
77.0093 12.5513 77.0801 12.7042 77.2222 12.8272 cv
77.3638 12.9493 77.5718 13.0108 77.8453 13.0108 cv
78.1158 13.0108 78.357 12.9527 78.5679 12.836 cv
78.7789 12.7198 78.9336 12.5606 79.0328 12.3584 cv
79.108 12.2032 79.146 11.9737 79.146 11.67 cv
79.15 11.417 li
cp
79.1968 12.9483 mo
78.9415 13.1709 78.6939 13.3282 78.4546 13.42 cv
78.2154 13.5118 77.9585 13.5577 77.6841 13.5577 cv
77.231 13.5577 76.8829 13.4483 76.6397 13.2286 cv
76.3965 13.0088 76.275 12.7286 76.275 12.3873 cv
76.275 12.1871 76.3208 12.004 76.4126 11.8389 cv
76.5044 11.6729 76.625 11.5401 76.774 11.44 cv
76.9229 11.3399 77.0909 11.2642 77.2774 11.2129 cv
77.4146 11.1768 77.6216 11.1426 77.899 11.1089 cv
78.4634 11.042 78.879 10.9629 79.146 10.8702 cv
79.1485 10.7764 79.15 10.7168 79.15 10.6915 cv
79.15 10.4126 79.084 10.2164 78.9527 10.1021 cv
78.7745 9.94727 78.5098 9.87012 78.1592 9.87012 cv
77.8316 9.87012 77.5894 9.92676 77.4336 10.0391 cv
77.2774 10.1514 77.1622 10.3506 77.0874 10.6358 cv
76.4 10.542 li
76.4615 10.254 76.5635 10.0215 76.7051 9.84473 cv
76.8467 9.667 77.0513 9.53126 77.3189 9.43555 cv
77.587 9.33985 77.897 9.292 78.25 9.292 cv
78.6002 9.292 78.8843 9.33301 79.1036 9.41456 cv
79.3223 9.4961 79.483 9.59913 79.586 9.72266 cv
79.689 9.84668 79.7613 10.003 79.8028 10.1924 cv
79.8257 10.3096 79.8374 10.5225 79.8374 10.8292 cv
79.8374 11.751 li
79.8374 12.3936 79.8521 12.8008 79.8814 12.9717 cv
79.9107 13.1426 79.9693 13.3067 80.0562 13.4639 cv
79.3531 13.4639 li
79.272 13.3169 79.2198 13.1451 79.1968 12.9483 cv
f
82.3931 12.8379 mo
82.4869 13.4483 li
82.292 13.4898 82.1177 13.5108 81.9639 13.5108 cv
81.7124 13.5108 81.5176 13.4708 81.3794 13.3917 cv
81.2408 13.3126 81.1436 13.2081 81.087 13.0792 cv
81.0308 12.9498 81.0025 12.6778 81.0025 12.2627 cv
81.0025 9.917 li
80.4869 9.917 li
80.4869 9.38575 li
81.0025 9.38575 li
81.0025 8.37647 li
81.69 7.96192 li
81.69 9.38575 li
82.3931 9.38575 li
82.3931 9.917 li
81.69 9.917 li
81.69 12.292 li
81.69 12.4883 81.7022 12.6148 81.7271 12.6709 cv
81.7515 12.7271 81.7916 12.7715 81.8472 12.8047 cv
81.9029 12.8379 81.983 12.8545 82.0865 12.8545 cv
82.1641 12.8545 82.2662 12.8492 82.3931 12.8379 cv
f
82.7784 12.2295 mo
83.4659 12.1358 li
83.5049 12.4131 83.6128 12.626 83.7901 12.7735 cv
83.9673 12.9214 84.2154 12.9952 84.5342 12.9952 cv
84.855 12.9952 85.0933 12.9297 85.2486 12.7999 cv
85.4039 12.669 85.4815 12.5167 85.4815 12.3409 cv
85.4815 12.1836 85.4122 12.0596 85.273 11.9688 cv
85.1758 11.9073 84.9366 11.8287 84.5552 11.733 cv
84.042 11.605 83.6866 11.4942 83.4893 11.4009 cv
83.292 11.3077 83.1426 11.1788 83.0406 11.0137 cv
82.9385 10.8487 82.8877 10.6661 82.8877 10.4664 cv
82.8877 10.2847 82.9297 10.1163 83.0137 9.96192 cv
83.0972 9.80665 83.2115 9.67872 83.356 9.57618 cv
83.4639 9.49708 83.6114 9.42969 83.7984 9.37452 cv
83.9854 9.31934 84.1861 9.292 84.4 9.292 cv
84.7222 9.292 85.0054 9.3379 85.2491 9.42969 cv
85.4927 9.52149 85.6724 9.64649 85.7886 9.80274 cv
85.9048 9.95997 85.9844 10.17 86.0284 10.4327 cv
85.3565 10.5264 li
85.3252 10.3155 85.2354 10.1504 85.0865 10.0323 cv
84.9371 9.91407 84.7266 9.8545 84.4542 9.8545 cv
84.1329 9.8545 83.9034 9.90723 83.7657 10.0137 cv
83.6285 10.1192 83.5596 10.2432 83.5596 10.3853 cv
83.5596 10.4756 83.5884 10.5567 83.6456 10.629 cv
83.7022 10.7042 83.7916 10.7667 83.9136 10.8155 cv
83.9834 10.8409 84.19 10.9004 84.5323 10.9932 cv
85.0274 11.1241 85.3711 11.231 85.5645 11.314 cv
85.7579 11.3975 85.9097 11.5181 86.0196 11.6768 cv
86.1294 11.8355 86.1846 12.0323 86.1846 12.2676 cv
86.1846 12.4981 86.1172 12.7149 85.982 12.9185 cv
85.8467 13.1221 85.6519 13.2793 85.397 13.3907 cv
85.1421 13.502 84.8536 13.5577 84.5318 13.5577 cv
83.9986 13.5577 83.5928 13.4463 83.3135 13.2227 cv
83.0342 12.9996 82.8555 12.6685 82.7784 12.2295 cv
f
89.6744 13.4639 mo
89.6744 12.8677 li
89.355 13.3277 88.9214 13.5577 88.3731 13.5577 cv
88.1309 13.5577 87.9053 13.5118 87.6954 13.4195 cv
87.4854 13.3272 87.3296 13.2115 87.2281 13.0718 cv
87.1265 12.9322 87.0547 12.7613 87.0137 12.5586 cv
86.9854 12.4229 86.9712 12.2081 86.9712 11.9136 cv
86.9712 9.38575 li
87.6587 9.38575 li
87.6587 11.6495 li
87.6587 12.0108 87.6729 12.254 87.7012 12.3799 cv
87.7452 12.5616 87.8379 12.7046 87.98 12.8086 cv
88.1216 12.9122 88.2969 12.9639 88.5059 12.9639 cv
88.7144 12.9639 88.9102 12.9112 89.0933 12.8047 cv
89.2764 12.6983 89.4058 12.5533 89.482 12.3702 cv
89.5582 12.1871 89.5962 11.9209 89.5962 11.5723 cv
89.5962 9.38575 li
90.2837 9.38575 li
90.2837 13.4639 li
89.6744 13.4639 li
f
94.3814 10.5108 mo
95.835 10.5108 li
96.316 10.5108 96.6573 10.4209 96.8594 10.2413 cv
97.0616 10.0621 97.1626 9.80958 97.1626 9.4834 cv
97.1626 9.24805 97.1031 9.0459 96.9839 8.87794 cv
96.8653 8.70997 96.7085 8.59913 96.5142 8.54493 cv
96.3887 8.51172 96.1573 8.49512 95.8199 8.49512 cv
94.3814 8.49512 li
94.3814 10.5108 li
cp
93.6314 13.4639 mo
93.6314 7.83887 li
95.7549 7.83887 li
96.1285 7.83887 96.4136 7.85645 96.6109 7.89258 cv
96.8873 7.93848 97.1192 8.0254 97.3062 8.1543 cv
97.4927 8.28321 97.6431 8.46387 97.7574 8.69581 cv
97.8711 8.92774 97.9283 9.18311 97.9283 9.46094 cv
97.9283 9.93799 97.7759 10.3418 97.4717 10.6719 cv
97.1675 11.002 96.6177 11.167 95.8228 11.167 cv
94.3814 11.167 li
94.3814 13.4639 li
93.6314 13.4639 li
f
98.8389 13.4639 mo
98.8389 7.83887 li
99.9493 7.83887 li
101.294 11.8223 li
101.418 12.1934 101.509 12.4708 101.566 12.6553 cv
101.63 12.4502 101.731 12.15 101.869 11.753 cv
103.235 7.83887 li
104.214 7.83887 li
104.214 13.4639 li
103.496 13.4639 li
103.496 8.76075 li
101.849 13.4639 li
101.19 13.4639 li
99.5577 8.69825 li
99.5577 13.4639 li
98.8389 13.4639 li
f
106.835 13.4639 mo
106.835 8.49512 li
104.976 8.49512 li
104.976 7.83887 li
109.445 7.83887 li
109.445 8.49512 li
107.585 8.49512 li
107.585 13.4639 li
106.835 13.4639 li
f
113.033 10.3077 mo
114.619 10.3077 li
114.956 10.3077 115.219 10.273 115.408 10.2032 cv
115.597 10.1338 115.74 10.022 115.838 9.86866 cv
115.937 9.71534 115.986 9.54883 115.986 9.36866 cv
115.986 9.10547 115.891 8.88868 115.7 8.71876 cv
115.51 8.54883 115.209 8.46387 114.797 8.46387 cv
113.033 8.46387 li
113.033 10.3077 li
cp
112.283 13.4639 mo
112.283 7.83887 li
114.767 7.83887 li
115.264 7.83887 115.641 7.88965 115.9 7.99024 cv
116.158 8.09131 116.365 8.26954 116.52 8.52491 cv
116.674 8.78028 116.751 9.06299 116.751 9.37208 cv
116.751 9.77051 116.624 10.1065 116.368 10.3799 cv
116.111 10.6534 115.716 10.8272 115.181 10.9014 cv
115.377 10.9961 115.526 11.0889 115.628 11.1807 cv
115.845 11.3794 116.049 11.6299 116.242 11.9307 cv
117.208 13.4639 li
116.28 13.4639 li
115.542 12.292 li
115.327 11.9542 115.149 11.6954 115.01 11.5162 cv
114.871 11.337 114.746 11.2115 114.635 11.1397 cv
114.525 11.0684 114.413 11.0186 114.299 10.9908 cv
114.215 10.9727 114.078 10.9639 113.888 10.9639 cv
113.033 10.9639 li
113.033 13.4639 li
112.283 13.4639 li
f
121.268 12.8077 mo
121.268 13.4639 li
117.549 13.4639 li
117.543 13.2979 117.57 13.1387 117.63 12.9854 cv
117.725 12.7325 117.878 12.4844 118.088 12.2403 cv
118.298 11.9966 118.598 11.7149 118.989 11.3946 cv
119.594 10.8902 120.008 10.4922 120.231 10.2012 cv
120.453 9.90967 120.564 9.63282 120.564 9.37061 cv
120.564 9.09864 120.465 8.86915 120.267 8.68165 cv
120.069 8.49512 119.811 8.40137 119.492 8.40137 cv
119.155 8.40137 118.886 8.50245 118.684 8.70411 cv
118.481 8.90577 118.379 9.18506 118.377 9.542 cv
117.674 9.44825 li
117.723 8.91944 117.906 8.51661 118.225 8.23926 cv
118.543 7.96192 118.97 7.82325 119.507 7.82325 cv
120.049 7.82325 120.478 7.97315 120.793 8.27247 cv
121.109 8.57227 121.268 8.94336 121.268 9.38624 cv
121.268 9.61133 121.221 9.83301 121.128 10.0508 cv
121.035 10.2686 120.881 10.4971 120.666 10.7383 cv
120.45 10.9786 120.096 11.3086 119.602 11.7276 cv
119.188 12.0748 118.92 12.3106 118.8 12.4341 cv
118.679 12.5582 118.58 12.6827 118.501 12.8077 cv
121.268 12.8077 li
f
122.714 10.6983 mo
122.714 11.625 122.824 12.2393 123.043 12.5416 cv
123.262 12.8438 123.533 12.9952 123.854 12.9952 cv
124.176 12.9952 124.447 12.8438 124.666 12.5401 cv
124.885 12.2364 124.995 11.6221 124.995 10.6983 cv
124.995 9.77442 124.886 9.16065 124.668 8.85694 cv
124.45 8.55323 124.176 8.40137 123.847 8.40137 cv
123.525 8.40137 123.267 8.53516 123.072 8.80323 cv
122.834 9.14551 122.714 9.77735 122.714 10.6983 cv
cp
122.011 10.6924 mo
122.011 10.0284 122.08 9.49268 122.217 9.08545 cv
122.355 8.67823 122.559 8.36622 122.831 8.14893 cv
123.102 7.93165 123.443 7.82325 123.854 7.82325 cv
124.158 7.82325 124.425 7.88379 124.657 8.00538 cv
124.888 8.12696 125.078 8.30176 125.224 8.53028 cv
125.371 8.75879 125.486 9.03711 125.571 9.36524 cv
125.656 9.69336 125.698 10.1358 125.698 10.6924 cv
125.698 11.3516 125.63 11.8848 125.494 12.292 cv
125.357 12.6993 125.154 13.0118 124.882 13.2305 cv
124.611 13.4483 124.269 13.5577 123.854 13.5577 cv
123.31 13.5577 122.881 13.3663 122.57 12.9834 cv
122.197 12.5108 122.011 11.7471 122.011 10.6924 cv
f
126.379 11.9952 mo
127.082 11.9483 li
127.136 12.2959 127.261 12.5577 127.457 12.7325 cv
127.652 12.9078 127.892 12.9952 128.176 12.9952 cv
128.52 12.9952 128.807 12.8692 129.036 12.6182 cv
129.265 12.3663 129.379 12.0328 129.379 11.6172 cv
129.379 11.2217 129.271 10.9102 129.054 10.6817 cv
128.837 10.4532 128.546 10.3389 128.182 10.3389 cv
127.955 10.3389 127.753 10.3912 127.577 10.4952 cv
127.401 10.5997 127.262 10.7354 127.16 10.9014 cv
126.504 10.8077 li
127.051 7.917 li
129.848 7.917 li
129.848 8.57325 li
127.602 8.57325 li
127.301 10.0821 li
127.638 9.84717 127.993 9.7295 128.364 9.7295 cv
128.855 9.7295 129.269 9.89991 129.607 10.2403 cv
129.944 10.5806 130.113 11.0186 130.113 11.5533 cv
130.113 12.0626 129.965 12.503 129.668 12.8741 cv
129.307 13.3301 128.813 13.5577 128.188 13.5577 cv
127.676 13.5577 127.258 13.4151 126.934 13.1299 cv
126.61 12.8448 126.425 12.4664 126.379 11.9952 cv
f
133.669 9.68848 mo
133.669 9.29395 133.565 8.98047 133.357 8.74903 cv
133.149 8.51758 132.894 8.40137 132.592 8.40137 cv
132.281 8.40137 132.012 8.52637 131.788 8.7754 cv
131.563 9.0254 131.451 9.34864 131.451 9.74512 cv
131.451 10.1016 131.557 10.3917 131.771 10.6143 cv
131.984 10.837 132.251 10.9483 132.573 10.9483 cv
132.893 10.9483 133.155 10.837 133.361 10.6143 cv
133.566 10.3917 133.669 10.0831 133.669 9.68848 cv
cp
130.841 12.167 mo
131.498 12.1202 li
131.554 12.4268 131.661 12.6495 131.819 12.7881 cv
131.977 12.9258 132.18 12.9952 132.427 12.9952 cv
132.639 12.9952 132.826 12.9463 132.988 12.8492 cv
133.15 12.752 133.28 12.6221 133.38 12.459 cv
133.479 12.2964 133.563 12.0767 133.632 11.7999 cv
133.701 11.5235 133.735 11.2417 133.735 10.9551 cv
133.735 10.9244 133.734 10.8785 133.732 10.8169 cv
133.595 11.0372 133.408 11.2159 133.17 11.3526 cv
132.933 11.4893 132.676 11.5577 132.399 11.5577 cv
131.938 11.5577 131.547 11.3892 131.227 11.0518 cv
130.907 10.7149 130.748 10.2706 130.748 9.71924 cv
130.748 9.14991 130.915 8.69141 131.25 8.34424 cv
131.586 7.99708 132.006 7.82325 132.511 7.82325 cv
132.876 7.82325 133.209 7.92188 133.511 8.11817 cv
133.813 8.31495 134.043 8.59522 134.2 8.95899 cv
134.356 9.32325 134.435 9.84961 134.435 10.5391 cv
134.435 11.2569 134.357 11.8282 134.201 12.2535 cv
134.045 12.6788 133.813 13.002 133.505 13.2247 cv
133.197 13.4463 132.835 13.5577 132.421 13.5577 cv
131.981 13.5577 131.622 13.4361 131.344 13.1929 cv
131.065 12.9498 130.897 12.6075 130.841 12.167 cv
f
49.7129 21.7686 mo
50.8262 21.7686 li
51.0176 21.7686 51.1514 21.7618 51.2291 21.7471 cv
51.3653 21.7227 51.4791 21.6822 51.5704 21.625 cv
51.6622 21.5684 51.7374 21.4854 51.7964 21.376 cv
51.8555 21.2676 51.8848 21.1417 51.8848 20.9991 cv
51.8848 20.8321 51.8409 20.6871 51.752 20.564 cv
51.6641 20.441 51.544 20.3545 51.3936 20.3042 cv
51.2427 20.2544 51.0254 20.2295 50.7422 20.2295 cv
49.7129 20.2295 li
49.7129 21.7686 li
cp
49.7129 19.6983 mo
50.6753 19.6983 li
50.9366 19.6983 51.1236 19.6812 51.2374 19.6465 cv
51.3868 19.6016 51.4996 19.5274 51.5757 19.4239 cv
51.6514 19.3199 51.6895 19.19 51.6895 19.0333 cv
51.6895 18.8848 51.6539 18.754 51.5831 18.6412 cv
51.5123 18.5284 51.4112 18.4512 51.2793 18.4092 cv
51.148 18.3677 50.9224 18.3467 50.6026 18.3467 cv
49.7129 18.3467 li
49.7129 19.6983 li
cp
49.1192 22.2999 mo
49.1192 17.8155 li
50.795 17.8155 li
51.1358 17.8155 51.4097 17.8609 51.6158 17.9517 cv
51.8218 18.043 51.9834 18.1827 52.1001 18.3716 cv
52.2168 18.5606 52.2754 18.7579 52.2754 18.9644 cv
52.2754 19.1563 52.2232 19.337 52.1192 19.5064 cv
52.0147 19.6758 51.8575 19.813 51.647 19.917 cv
51.919 19.9966 52.1285 20.1319 52.2745 20.3233 cv
52.421 20.5147 52.4942 20.7408 52.4942 21.0015 cv
52.4942 21.2115 52.4498 21.4063 52.3614 21.5865 cv
52.273 21.7667 52.1641 21.9058 52.0337 22.0035 cv
51.9034 22.1016 51.7403 22.1753 51.5445 22.2251 cv
51.3482 22.275 51.108 22.2999 50.8233 22.2999 cv
49.1192 22.2999 li
f
55.4112 20.5499 mo
55.4112 20.0186 li
57.3096 20.0186 li
57.3096 21.6788 li
57.0186 21.9112 56.7183 22.0855 56.4087 22.2027 cv
56.0992 22.3194 55.7818 22.378 55.4561 22.378 cv
55.0162 22.378 54.6168 22.2837 54.2574 22.0948 cv
53.898 21.9063 53.627 21.6334 53.4439 21.2759 cv
53.2603 20.919 53.169 20.5201 53.169 20.0792 cv
53.169 19.6426 53.2598 19.2349 53.4424 18.8565 cv
53.6246 18.4776 53.8863 18.1963 54.2286 18.0127 cv
54.5704 17.8292 54.9644 17.7374 55.4102 17.7374 cv
55.7339 17.7374 56.0269 17.7901 56.2881 17.8956 cv
56.5499 18.001 56.7549 18.1475 56.9039 18.3355 cv
57.0523 18.524 57.1651 18.7691 57.2427 19.0718 cv
56.71 19.2188 li
56.6426 18.9898 56.5591 18.8096 56.459 18.6788 cv
56.3594 18.5474 56.2168 18.4424 56.0313 18.3633 cv
55.8458 18.2847 55.6402 18.2452 55.4136 18.2452 cv
55.1426 18.2452 54.9082 18.2867 54.7105 18.3692 cv
54.5127 18.4522 54.3536 18.5611 54.2325 18.6958 cv
54.1109 18.8306 54.0166 18.9786 53.9493 19.1402 cv
53.8355 19.418 53.7784 19.7198 53.7784 20.0445 cv
53.7784 20.4449 53.8472 20.7803 53.9844 21.0499 cv
54.1221 21.3194 54.3223 21.5196 54.5855 21.6504 cv
54.8482 21.7813 55.1275 21.8467 55.4229 21.8467 cv
55.6797 21.8467 55.9302 21.7974 56.1749 21.6988 cv
56.4195 21.6001 56.605 21.4947 56.7315 21.3829 cv
56.7315 20.5499 li
55.4112 20.5499 li
f
58.6158 20.125 mo
58.6158 20.6661 58.7608 21.0918 59.0513 21.4034 cv
59.3414 21.7144 59.7056 21.8702 60.1436 21.8702 cv
60.5899 21.8702 60.9571 21.7129 61.2457 21.3985 cv
61.5337 21.0845 61.6783 20.6382 61.6783 20.0606 cv
61.6783 19.6954 61.6163 19.3765 61.4932 19.1041 cv
61.3697 18.8316 61.1895 18.6202 60.9522 18.4703 cv
60.7149 18.3204 60.4483 18.2452 60.1529 18.2452 cv
59.733 18.2452 59.3721 18.3897 59.0694 18.6783 cv
58.7666 18.9673 58.6158 19.4493 58.6158 20.125 cv
cp
58.0064 20.1172 mo
58.0064 19.3731 58.2056 18.7901 58.6045 18.3692 cv
59.0035 17.9478 59.5186 17.7374 60.15 17.7374 cv
60.563 17.7374 60.9356 17.8365 61.2676 18.0342 cv
61.5992 18.232 61.8521 18.5079 62.0264 18.8614 cv
62.2002 19.2154 62.2876 19.6168 62.2876 20.0655 cv
62.2876 20.5201 62.1958 20.9268 62.0127 21.2862 cv
61.8292 21.6446 61.5699 21.9166 61.2339 22.1011 cv
60.898 22.2857 60.5357 22.378 60.147 22.378 cv
59.7256 22.378 59.3487 22.2759 59.0171 22.0723 cv
58.6851 21.8682 58.4336 21.5899 58.2627 21.2369 cv
58.0918 20.8843 58.0064 20.5108 58.0064 20.1172 cv
f
63.1246 22.2999 mo
63.1246 21.6749 li
63.7496 21.6749 li
63.7496 22.2999 li
63.1246 22.2999 li
cp
63.1246 19.6749 mo
63.1246 19.0499 li
63.7496 19.0499 li
63.7496 19.6749 li
63.1246 19.6749 li
f
68.6207 21.0626 mo
68.9639 21.1583 69.2466 21.3008 69.4693 21.4903 cv
69.8184 21.1719 69.9932 20.6934 69.9932 20.0547 cv
69.9932 19.6915 69.9312 19.3741 69.8077 19.1026 cv
69.6841 18.8311 69.5035 18.6202 69.2657 18.4703 cv
69.0274 18.3204 68.7603 18.2452 68.4644 18.2452 cv
68.021 18.2452 67.6534 18.3965 67.3609 18.6998 cv
67.0689 19.003 66.9229 19.4556 66.9229 20.0577 cv
66.9229 20.6417 67.0674 21.0894 67.3565 21.4019 cv
67.6456 21.7139 68.0147 21.8702 68.4644 21.8702 cv
68.6768 21.8702 68.877 21.8301 69.065 21.751 cv
68.879 21.6304 68.6827 21.5445 68.4766 21.4937 cv
68.6207 21.0626 li
cp
69.9288 21.8213 mo
70.2037 22.0108 70.4566 22.15 70.6885 22.2374 cv
70.5142 22.65 li
70.1924 22.5337 69.8716 22.3501 69.5518 22.0997 cv
69.2193 22.2852 68.8521 22.378 68.4502 22.378 cv
68.044 22.378 67.6758 22.2803 67.3453 22.084 cv
67.0147 21.8887 66.7598 21.6133 66.5816 21.2584 cv
66.4029 20.9034 66.3135 20.504 66.3135 20.0591 cv
66.3135 19.6168 66.4034 19.2139 66.5826 18.8506 cv
66.7623 18.4878 67.0176 18.2115 67.3492 18.022 cv
67.6807 17.8321 68.0513 17.7374 68.461 17.7374 cv
68.875 17.7374 69.2486 17.836 69.5811 18.0328 cv
69.9131 18.2295 70.1666 18.5049 70.3409 18.8584 cv
70.5152 19.2125 70.6026 19.6114 70.6026 20.0562 cv
70.6026 20.4253 70.5469 20.7574 70.4351 21.0518 cv
70.3233 21.3467 70.1544 21.6031 69.9288 21.8213 cv
f
71.4244 22.2999 mo
71.4244 17.8155 li
74.6509 17.8155 li
74.6509 18.3467 li
72.0181 18.3467 li
72.0181 19.7139 li
74.4791 19.7139 li
74.4791 20.2452 li
72.0181 20.2452 li
72.0181 21.7686 li
74.7525 21.7686 li
74.7525 22.2999 li
71.4244 22.2999 li
f
80.1348 21.0264 mo
77.1817 21.0264 li
77.1817 20.5108 li
80.1348 20.5108 li
80.1348 21.0264 li
cp
80.1348 19.667 mo
77.1817 19.667 li
77.1817 19.1514 li
80.1348 19.1514 li
80.1348 19.667 li
f
83.2164 18.9297 mo
83.2164 19.1417 83.2842 19.315 83.4205 19.4498 cv
83.5562 19.584 83.7354 19.6514 83.9571 19.6514 cv
84.1724 19.6514 84.3477 19.585 84.483 19.4512 cv
84.6177 19.3174 84.6851 19.1543 84.6851 18.9605 cv
84.6851 18.7588 84.6158 18.5889 84.4766 18.4517 cv
84.3374 18.314 84.1622 18.2452 83.9507 18.2452 cv
83.7374 18.2452 83.5616 18.3126 83.4234 18.4468 cv
83.2857 18.5816 83.2164 18.7422 83.2164 18.9297 cv
cp
83.0367 21.0054 mo
83.0367 21.1631 83.0733 21.315 83.1465 21.462 cv
83.2198 21.6094 83.3306 21.7232 83.4791 21.8038 cv
83.627 21.8848 83.7862 21.9249 83.9556 21.9249 cv
84.2212 21.9249 84.4395 21.8399 84.6099 21.6705 cv
84.7798 21.501 84.8648 21.2852 84.8648 21.024 cv
84.8648 20.7584 84.7774 20.5386 84.6021 20.3653 cv
84.4268 20.1915 84.2051 20.1045 83.9371 20.1045 cv
83.6753 20.1045 83.4595 20.1905 83.2906 20.3619 cv
83.1211 20.5337 83.0367 20.7481 83.0367 21.0054 cv
cp
83.3272 19.8643 mo
83.0987 19.7803 82.9292 19.6612 82.8194 19.5059 cv
82.709 19.3511 82.6539 19.1651 82.6539 18.9488 cv
82.6539 18.6226 82.7715 18.3482 83.0064 18.1255 cv
83.2408 17.9034 83.5533 17.792 83.9434 17.792 cv
84.335 17.792 84.6504 17.9058 84.8897 18.1334 cv
85.1285 18.3609 85.2476 18.6377 85.2476 18.9644 cv
85.2476 19.1724 85.1934 19.3536 85.085 19.5074 cv
84.9761 19.6617 84.8111 19.7803 84.5899 19.8643 cv
84.8628 19.9542 85.0708 20.0992 85.2134 20.2994 cv
85.356 20.5 85.4273 20.7388 85.4273 21.0167 cv
85.4273 21.4009 85.292 21.7242 85.021 21.9854 cv
84.7496 22.2471 84.3931 22.378 83.9507 22.378 cv
83.5088 22.378 83.1519 22.2466 82.8809 21.9839 cv
82.6099 21.7217 82.4742 21.3941 82.4742 21.0015 cv
82.4742 20.709 82.5484 20.4644 82.6958 20.2671 cv
82.8438 20.0699 83.0542 19.9356 83.3272 19.8643 cv
f
86.2759 22.2999 mo
86.2759 21.6749 li
86.9009 21.6749 li
86.9009 22.2999 li
86.2759 22.2999 li
f
88.2647 20.085 mo
88.2647 20.8257 88.3511 21.3174 88.5235 21.5606 cv
88.6963 21.8033 88.9097 21.9249 89.1631 21.9249 cv
89.4166 21.9249 89.6294 21.8028 89.8023 21.5586 cv
89.9752 21.315 90.0616 20.8233 90.0616 20.085 cv
90.0616 19.3448 89.9756 18.8536 89.8033 18.6104 cv
89.6314 18.3668 89.4156 18.2452 89.1568 18.2452 cv
88.9034 18.2452 88.7002 18.3526 88.5479 18.5674 cv
88.3589 18.8409 88.2647 19.3472 88.2647 20.085 cv
cp
87.7022 20.0865 mo
87.7022 19.5557 87.7564 19.1275 87.8658 18.8028 cv
87.9747 18.4776 88.1368 18.2276 88.3516 18.0538 cv
88.5665 17.879 88.837 17.792 89.1631 17.792 cv
89.4034 17.792 89.6148 17.8409 89.7974 17.9376 cv
89.98 18.0347 90.1299 18.1744 90.2471 18.3575 cv
90.3638 18.5401 90.4561 18.7627 90.523 19.025 cv
90.5904 19.2876 90.6241 19.6417 90.6241 20.0865 cv
90.6241 20.6133 90.5699 21.0396 90.462 21.3643 cv
90.3541 21.6895 90.1924 21.9395 89.9776 22.1148 cv
89.7627 22.2901 89.4913 22.378 89.1631 22.378 cv
88.731 22.378 88.3916 22.2242 88.1451 21.9161 cv
87.8497 21.5401 87.7022 20.9302 87.7022 20.0865 cv
f
95.8672 22.2999 mo
92.8985 22.2999 li
92.8985 21.7842 li
95.8672 21.7842 li
95.8672 22.2999 li
cp
94.125 21.503 mo
94.125 20.2764 li
92.8985 20.2764 li
92.8985 19.7686 li
94.125 19.7686 li
94.125 18.542 li
94.6407 18.542 li
94.6407 19.7686 li
95.8672 19.7686 li
95.8672 20.2764 li
94.6407 20.2764 li
94.6407 21.503 li
94.125 21.503 li
f
98.6587 20.085 mo
98.6587 20.8257 98.7452 21.3174 98.918 21.5606 cv
99.0904 21.8033 99.3038 21.9249 99.5572 21.9249 cv
99.8106 21.9249 100.024 21.8028 100.197 21.5586 cv
100.37 21.315 100.456 20.8233 100.456 20.085 cv
100.456 19.3448 100.37 18.8536 100.198 18.6104 cv
100.026 18.3668 99.8101 18.2452 99.5513 18.2452 cv
99.2974 18.2452 99.0948 18.3526 98.9419 18.5674 cv
98.753 18.8409 98.6587 19.3472 98.6587 20.085 cv
cp
98.0962 20.0865 mo
98.0962 19.5557 98.1509 19.1275 98.2598 18.8028 cv
98.3687 18.4776 98.5308 18.2276 98.7457 18.0538 cv
98.9605 17.879 99.231 17.792 99.5572 17.792 cv
99.7974 17.792 100.01 17.8409 100.192 17.9376 cv
100.375 18.0347 100.524 18.1744 100.642 18.3575 cv
100.758 18.5401 100.851 18.7627 100.918 19.025 cv
100.985 19.2876 101.019 19.6417 101.019 20.0865 cv
101.019 20.6133 100.964 21.0396 100.856 21.3643 cv
100.749 21.6895 100.587 21.9395 100.372 22.1148 cv
100.157 22.2901 99.8853 22.378 99.5572 22.378 cv
99.125 22.378 98.7862 22.2242 98.5396 21.9161 cv
98.2442 21.5401 98.0962 20.9302 98.0962 20.0865 cv
f
101.89 22.2999 mo
101.89 21.6749 li
102.515 21.6749 li
102.515 22.2999 li
101.89 22.2999 li
f
105.083 20.7217 mo
105.083 18.7042 li
103.671 20.7217 li
105.083 20.7217 li
cp
105.083 22.2999 mo
105.083 21.2295 li
103.129 21.2295 li
103.129 20.7217 li
105.184 17.8233 li
105.629 17.8233 li
105.629 20.7217 li
106.231 20.7217 li
106.231 21.2295 li
105.629 21.2295 li
105.629 22.2999 li
105.083 22.2999 li
f
112.494 20.4874 mo
112.355 20.4874 112.24 20.5455 112.149 20.6622 cv
112.059 20.7784 112.013 20.9922 112.013 21.3028 cv
112.013 21.584 112.059 21.7823 112.151 21.8985 cv
112.243 22.0152 112.356 22.0733 112.491 22.0733 cv
112.631 22.0733 112.747 22.0152 112.838 21.8985 cv
112.929 21.7823 112.974 21.5699 112.974 21.2608 cv
112.974 20.9756 112.928 20.7759 112.836 20.6602 cv
112.745 20.545 112.63 20.4874 112.494 20.4874 cv
cp
111.537 21.2481 mo
111.537 20.9268 111.617 20.6543 111.777 20.4312 cv
111.938 20.2081 112.171 20.0967 112.479 20.0967 cv
112.759 20.0967 112.991 20.1973 113.175 20.3975 cv
113.359 20.5982 113.451 20.8931 113.451 21.2818 cv
113.451 21.6607 113.358 21.9522 113.172 22.1573 cv
112.986 22.3614 112.756 22.4639 112.481 22.4639 cv
112.211 22.4639 111.986 22.3624 111.806 22.1602 cv
111.626 21.9576 111.537 21.6534 111.537 21.2481 cv
cp
109.604 22.4639 mo
112.047 17.7374 li
112.493 17.7374 li
110.06 22.4639 li
109.604 22.4639 li
cp
109.602 18.128 mo
109.464 18.128 109.35 18.1861 109.259 18.3028 cv
109.168 18.419 109.123 18.6329 109.123 18.9434 cv
109.123 19.2266 109.168 19.4258 109.261 19.5411 cv
109.353 19.6563 109.466 19.7139 109.602 19.7139 cv
109.741 19.7139 109.856 19.6558 109.947 19.5391 cv
110.038 19.4229 110.084 19.2105 110.084 18.9014 cv
110.084 18.6163 110.038 18.4166 109.945 18.3008 cv
109.853 18.1856 109.739 18.128 109.602 18.128 cv
cp
108.646 18.8887 mo
108.646 18.5694 108.727 18.2974 108.887 18.0733 cv
109.048 17.8497 109.281 17.7374 109.586 17.7374 cv
109.867 17.7374 110.1 17.8379 110.284 18.0381 cv
110.468 18.2388 110.56 18.5337 110.56 18.9224 cv
110.56 19.3013 110.467 19.5928 110.281 19.7979 cv
110.095 20.002 109.865 20.1045 109.592 20.1045 cv
109.322 20.1045 109.096 20.004 108.916 19.8023 cv
108.736 19.6006 108.646 19.2959 108.646 18.8887 cv
f
49.1192 30.1553 mo
49.1192 25.6709 li
49.7129 25.6709 li
49.7129 29.6241 li
51.9083 29.6241 li
51.9083 30.1553 li
49.1192 30.1553 li
f
52.4283 28.7178 mo
52.9908 28.671 li
53.0171 28.8946 53.0782 29.0782 53.1739 29.2217 cv
53.2701 29.3653 53.419 29.4815 53.6207 29.5694 cv
53.8228 29.6583 54.0499 29.7022 54.3023 29.7022 cv
54.5264 29.7022 54.7242 29.669 54.896 29.6016 cv
55.0674 29.5342 55.1954 29.4424 55.2794 29.3252 cv
55.3628 29.2081 55.4048 29.0811 55.4048 28.9424 cv
55.4048 28.8018 55.3638 28.6788 55.2823 28.5733 cv
55.2007 28.4688 55.0669 28.3799 54.8814 28.3086 cv
54.7623 28.2618 54.4986 28.1895 54.0909 28.0909 cv
53.6832 27.9913 53.397 27.8985 53.233 27.8106 cv
53.0201 27.6983 52.8614 27.5586 52.7569 27.3916 cv
52.6524 27.2247 52.6002 27.0381 52.6002 26.8321 cv
52.6002 26.605 52.6641 26.3926 52.7916 26.1954 cv
52.919 25.9981 53.1055 25.8487 53.3506 25.7461 cv
53.5958 25.6441 53.8682 25.5928 54.168 25.5928 cv
54.4981 25.5928 54.7896 25.6465 55.0416 25.753 cv
55.294 25.8599 55.4878 26.0167 55.6236 26.2242 cv
55.7593 26.4317 55.8321 26.6666 55.8423 26.9288 cv
55.272 26.9678 li
55.2418 26.6895 55.1392 26.4795 54.9649 26.3375 cv
54.7901 26.1954 54.5323 26.1241 54.191 26.1241 cv
53.8355 26.1241 53.5767 26.19 53.4141 26.3213 cv
53.2515 26.4527 53.1705 26.6109 53.1705 26.7964 cv
53.1705 26.9571 53.2281 27.0899 53.3433 27.1934 cv
53.4561 27.2979 53.7515 27.4043 54.2291 27.5127 cv
54.7061 27.6221 55.0342 27.7168 55.2134 27.7989 cv
55.4732 27.919 55.6651 28.0713 55.7891 28.2549 cv
55.9131 28.4395 55.9752 28.6524 55.9752 28.8926 cv
55.9752 29.1309 55.9073 29.3555 55.7715 29.5655 cv
55.6358 29.7764 55.441 29.9405 55.1866 30.0577 cv
54.9322 30.1749 54.646 30.2334 54.3277 30.2334 cv
53.9249 30.2334 53.587 30.1749 53.3145 30.0557 cv
53.0416 29.9385 52.8282 29.7608 52.6729 29.5225 cv
52.5181 29.2862 52.4366 29.0176 52.4283 28.7178 cv
f
57.2281 27.9805 mo
57.2281 28.5215 57.3731 28.9473 57.6636 29.2588 cv
57.9542 29.5704 58.3184 29.7256 58.7564 29.7256 cv
59.2022 29.7256 59.5699 29.5684 59.858 29.254 cv
60.1465 28.9395 60.2906 28.4942 60.2906 27.9161 cv
60.2906 27.5508 60.2291 27.2315 60.1055 26.96 cv
59.9825 26.6871 59.8018 26.4756 59.5645 26.3257 cv
59.3272 26.1758 59.0606 26.1006 58.7657 26.1006 cv
58.3458 26.1006 57.9844 26.2452 57.6817 26.5337 cv
57.3794 26.8228 57.2281 27.3047 57.2281 27.9805 cv
cp
56.6187 27.9727 mo
56.6187 27.2286 56.8184 26.6456 57.2173 26.2247 cv
57.6163 25.8033 58.1314 25.5928 58.7623 25.5928 cv
59.1758 25.5928 59.5479 25.6919 59.8799 25.8897 cv
60.212 26.0875 60.4649 26.3633 60.6387 26.7168 cv
60.813 27.0713 60.9 27.4717 60.9 27.921 cv
60.9 28.376 60.8082 28.7823 60.625 29.1416 cv
60.4419 29.5 60.1822 29.7725 59.8462 29.9561 cv
59.5103 30.1416 59.148 30.2334 58.7593 30.2334 cv
58.3379 30.2334 57.961 30.1319 57.6294 29.9278 cv
57.2979 29.7237 57.046 29.4454 56.875 29.0928 cv
56.7042 28.7393 56.6187 28.3663 56.6187 27.9727 cv
f
61.1827 30.2334 mo
62.4795 25.6006 li
62.9224 25.6006 li
61.6255 30.2334 li
61.1827 30.2334 li
f
63.3824 30.1553 mo
63.3824 25.6709 li
63.9761 25.6709 li
63.9761 29.6241 li
66.1714 29.6241 li
66.1714 30.1553 li
63.3824 30.1553 li
f
67.6827 30.1553 mo
67.6827 28.2559 li
65.9561 25.6709 li
66.6685 25.6709 li
67.5533 27.0313 li
67.7193 27.2823 67.8716 27.5313 68.0108 27.7793 cv
68.148 27.5479 68.3116 27.2852 68.502 26.9913 cv
69.375 25.6709 li
70.0655 25.6709 li
68.2764 28.2559 li
68.2764 30.1553 li
67.6827 30.1553 li
f
70.4019 28.7178 mo
70.9644 28.671 li
70.9903 28.8946 71.0513 29.0782 71.1475 29.2217 cv
71.2432 29.3653 71.3921 29.4815 71.5943 29.5694 cv
71.796 29.6583 72.0235 29.7022 72.2759 29.7022 cv
72.5 29.7022 72.6978 29.669 72.8692 29.6016 cv
73.0411 29.5342 73.169 29.4424 73.2525 29.3252 cv
73.3365 29.2081 73.3785 29.0811 73.3785 28.9424 cv
73.3785 28.8018 73.3374 28.6788 73.2559 28.5733 cv
73.1744 28.4688 73.0406 28.3799 72.855 28.3086 cv
72.7359 28.2618 72.4722 28.1895 72.0645 28.0909 cv
71.6568 27.9913 71.3707 27.8985 71.2061 27.8106 cv
70.9932 27.6983 70.8345 27.5586 70.73 27.3916 cv
70.6255 27.2247 70.5738 27.0381 70.5738 26.8321 cv
70.5738 26.605 70.6373 26.3926 70.7652 26.1954 cv
70.8926 25.9981 71.0792 25.8487 71.3243 25.7461 cv
71.5694 25.6441 71.8418 25.5928 72.1416 25.5928 cv
72.4717 25.5928 72.7627 25.6465 73.0152 25.753 cv
73.2671 25.8599 73.4615 26.0167 73.5972 26.2242 cv
73.733 26.4317 73.8057 26.6666 73.816 26.9288 cv
73.2457 26.9678 li
73.2154 26.6895 73.1128 26.4795 72.938 26.3375 cv
72.7632 26.1954 72.5054 26.1241 72.1646 26.1241 cv
71.8091 26.1241 71.5503 26.19 71.3877 26.3213 cv
71.2252 26.4527 71.1441 26.6109 71.1441 26.7964 cv
71.1441 26.9571 71.2012 27.0899 71.3165 27.1934 cv
71.4297 27.2979 71.7247 27.4043 72.2022 27.5127 cv
72.6797 27.6221 73.0079 27.7168 73.1866 27.7989 cv
73.4468 27.919 73.6387 28.0713 73.7627 28.2549 cv
73.8868 28.4395 73.9488 28.6524 73.9488 28.8926 cv
73.9488 29.1309 73.8809 29.3555 73.7452 29.5655 cv
73.6094 29.7764 73.4141 29.9405 73.1597 30.0577 cv
72.9053 30.1749 72.6192 30.2334 72.3013 30.2334 cv
71.898 30.2334 71.5601 30.1749 71.2876 30.0557 cv
71.0152 29.9385 70.8013 29.7608 70.6465 29.5225 cv
70.4913 29.2862 70.4097 29.0176 70.4019 28.7178 cv
f
75.2017 27.9805 mo
75.2017 28.5215 75.3467 28.9473 75.6373 29.2588 cv
75.9273 29.5704 76.2916 29.7256 76.7295 29.7256 cv
77.1758 29.7256 77.543 29.5684 77.8316 29.254 cv
78.1197 28.9395 78.2642 28.4942 78.2642 27.9161 cv
78.2642 27.5508 78.2022 27.2315 78.0792 26.96 cv
77.9556 26.6871 77.7754 26.4756 77.5381 26.3257 cv
77.3008 26.1758 77.0342 26.1006 76.7388 26.1006 cv
76.3189 26.1006 75.9581 26.2452 75.6553 26.5337 cv
75.3526 26.8228 75.2017 27.3047 75.2017 27.9805 cv
cp
74.5923 27.9727 mo
74.5923 27.2286 74.7916 26.6456 75.1905 26.2247 cv
75.5894 25.8033 76.1045 25.5928 76.7359 25.5928 cv
77.149 25.5928 77.5215 25.6919 77.8536 25.8897 cv
78.1851 26.0875 78.438 26.3633 78.6124 26.7168 cv
78.7862 27.0713 78.8736 27.4717 78.8736 27.921 cv
78.8736 28.376 78.7818 28.7823 78.5987 29.1416 cv
78.4151 29.5 78.1558 29.7725 77.8199 29.9561 cv
77.4839 30.1416 77.1216 30.2334 76.733 30.2334 cv
76.3116 30.2334 75.9346 30.1319 75.6031 29.9278 cv
75.271 29.7237 75.0196 29.4454 74.8487 29.0928 cv
74.6778 28.7393 74.5923 28.3663 74.5923 27.9727 cv
f
79.7105 30.1553 mo
79.7105 29.5303 li
80.3355 29.5303 li
80.3355 30.1553 li
79.7105 30.1553 li
cp
79.7105 27.5303 mo
79.7105 26.9053 li
80.3355 26.9053 li
80.3355 27.5303 li
79.7105 27.5303 li
f
85.2066 28.918 mo
85.5499 29.0137 85.8326 29.1563 86.0552 29.3458 cv
86.4044 29.0274 86.5792 28.5489 86.5792 27.9102 cv
86.5792 27.5469 86.5171 27.2295 86.3936 26.9581 cv
86.2701 26.6866 86.0894 26.4756 85.8516 26.3257 cv
85.6133 26.1758 85.3462 26.1006 85.0503 26.1006 cv
84.607 26.1006 84.2393 26.252 83.9468 26.5552 cv
83.6548 26.8584 83.5088 27.3116 83.5088 27.9131 cv
83.5088 28.4971 83.6534 28.9454 83.9424 29.2569 cv
84.2315 29.5694 84.6006 29.7256 85.0503 29.7256 cv
85.2627 29.7256 85.4629 29.6856 85.6509 29.6065 cv
85.4649 29.4854 85.2686 29.4004 85.0626 29.3487 cv
85.2066 28.918 li
cp
86.5147 29.6768 mo
86.7896 29.8663 87.0425 30.0049 87.2745 30.0928 cv
87.1002 30.5049 li
86.7784 30.3897 86.4576 30.2061 86.1377 29.9551 cv
85.8052 30.1407 85.438 30.2334 85.0362 30.2334 cv
84.6299 30.2334 84.2618 30.1358 83.9312 29.9395 cv
83.6006 29.7442 83.3458 29.4688 83.1675 29.1143 cv
82.9888 28.7588 82.8995 28.3594 82.8995 27.9151 cv
82.8995 27.4717 82.9893 27.0694 83.1685 26.7061 cv
83.3482 26.3433 83.6036 26.0669 83.9351 25.8775 cv
84.2666 25.6876 84.6373 25.5928 85.0469 25.5928 cv
85.461 25.5928 85.8345 25.6915 86.167 25.8882 cv
86.4991 26.085 86.7525 26.3604 86.9268 26.7139 cv
87.1011 27.0674 87.1885 27.4668 87.1885 27.9112 cv
87.1885 28.2803 87.1329 28.6124 87.021 28.9073 cv
86.9092 29.2022 86.7403 29.4581 86.5147 29.6768 cv
f
88.0103 30.1553 mo
88.0103 25.6709 li
91.2369 25.6709 li
91.2369 26.2022 li
88.6041 26.2022 li
88.6041 27.5694 li
91.065 27.5694 li
91.065 28.1006 li
88.6041 28.1006 li
88.6041 29.6241 li
91.3384 29.6241 li
91.3384 30.1553 li
88.0103 30.1553 li
f
96.7208 28.8819 mo
93.7676 28.8819 li
93.7676 28.3663 li
96.7208 28.3663 li
96.7208 28.8819 li
cp
96.7208 27.5225 mo
93.7676 27.5225 li
93.7676 27.0069 li
96.7208 27.0069 li
96.7208 27.5225 li
f
101.139 30.1553 mo
100.592 30.1553 li
100.592 26.6426 li
100.459 26.7696 100.286 26.8956 100.07 27.0225 cv
99.8545 27.1495 99.6612 27.2442 99.4898 27.3077 cv
99.4898 26.7745 li
99.7974 26.6294 100.067 26.4542 100.297 26.2476 cv
100.527 26.0416 100.69 25.8414 100.787 25.6475 cv
101.139 25.6475 li
101.139 30.1553 li
f
102.558 28.9678 mo
103.104 28.8975 li
103.167 29.21 103.274 29.4356 103.424 29.5733 cv
103.574 29.711 103.76 29.7803 103.98 29.7803 cv
104.241 29.7803 104.459 29.6905 104.636 29.5108 cv
104.813 29.3311 104.901 29.1084 104.901 28.8428 cv
104.901 28.5889 104.819 28.3799 104.654 28.2159 cv
104.489 28.0518 104.28 27.9698 104.026 27.9698 cv
103.922 27.9698 103.793 27.9893 103.638 28.0303 cv
103.699 27.546 li
103.736 27.5499 103.765 27.5518 103.788 27.5518 cv
104.023 27.5518 104.235 27.4913 104.423 27.3682 cv
104.612 27.2461 104.706 27.0567 104.706 26.8018 cv
104.706 26.5997 104.637 26.4327 104.5 26.2999 cv
104.364 26.167 104.187 26.1006 103.971 26.1006 cv
103.756 26.1006 103.578 26.1685 103.435 26.3038 cv
103.292 26.4395 103.2 26.6426 103.159 26.9131 cv
102.612 26.8116 li
102.679 26.4419 102.832 26.1553 103.07 25.9522 cv
103.308 25.7491 103.604 25.6475 103.959 25.6475 cv
104.203 25.6475 104.428 25.7002 104.633 25.8052 cv
104.839 25.9102 104.996 26.0538 105.105 26.2354 cv
105.214 26.417 105.269 26.6104 105.269 26.8145 cv
105.269 27.0079 105.216 27.1846 105.112 27.3438 cv
105.009 27.503 104.855 27.6299 104.651 27.7237 cv
104.916 27.7852 105.122 27.9122 105.268 28.1045 cv
105.414 28.2979 105.487 28.5391 105.487 28.8292 cv
105.487 29.2208 105.345 29.5528 105.06 29.8252 cv
104.775 30.0977 104.415 30.2334 103.98 30.2334 cv
103.587 30.2334 103.261 30.1163 103.001 29.8809 cv
102.742 29.6465 102.594 29.3418 102.558 28.9678 cv
f
106.343 30.1553 mo
106.343 29.5303 li
106.968 29.5303 li
106.968 30.1553 li
106.343 30.1553 li
f
108.379 28.6993 mo
108.379 28.8897 108.419 29.0723 108.5 29.2461 cv
108.581 29.42 108.692 29.5528 108.836 29.6436 cv
108.98 29.7344 109.132 29.7803 109.294 29.7803 cv
109.529 29.7803 109.73 29.6866 109.896 29.4981 cv
110.062 29.3096 110.145 29.0538 110.145 28.7295 cv
110.145 28.419 110.063 28.1739 109.898 27.9942 cv
109.735 27.8155 109.526 27.7256 109.272 27.7256 cv
109.023 27.7256 108.813 27.8155 108.639 27.9942 cv
108.466 28.1739 108.379 28.4083 108.379 28.6993 cv
cp
110.637 26.7647 mo
110.09 26.8038 li
110.041 26.5889 109.971 26.4327 109.881 26.335 cv
109.731 26.1788 109.546 26.1006 109.327 26.1006 cv
109.15 26.1006 108.994 26.1495 108.858 26.2471 cv
108.687 26.3741 108.55 26.5586 108.45 26.8008 cv
108.349 27.044 108.297 27.3887 108.293 27.837 cv
108.426 27.6358 108.588 27.4854 108.779 27.3877 cv
108.971 27.2901 109.172 27.2413 109.382 27.2413 cv
109.75 27.2413 110.062 27.377 110.32 27.6475 cv
110.578 27.918 110.707 28.2686 110.707 28.6973 cv
110.707 28.9795 110.646 29.2413 110.525 29.4834 cv
110.404 29.7256 110.237 29.9112 110.025 30.0401 cv
109.813 30.169 109.572 30.2334 109.303 30.2334 cv
108.844 30.2334 108.47 30.0645 108.181 29.7266 cv
107.891 29.3887 107.746 28.8311 107.746 28.0557 cv
107.746 27.1876 107.907 26.5562 108.228 26.1622 cv
108.508 25.8194 108.886 25.6475 109.36 25.6475 cv
109.714 25.6475 110.004 25.7466 110.23 25.9444 cv
110.456 26.1426 110.592 26.4161 110.637 26.7647 cv
f
115.935 30.1553 mo
112.966 30.1553 li
112.966 29.6397 li
115.935 29.6397 li
115.935 30.1553 li
cp
114.193 29.3584 mo
114.193 28.1319 li
112.966 28.1319 li
112.966 27.6241 li
114.193 27.6241 li
114.193 26.3975 li
114.709 26.3975 li
114.709 27.6241 li
115.935 27.6241 li
115.935 28.1319 li
114.709 28.1319 li
114.709 29.3584 li
114.193 29.3584 li
f
118.726 27.9405 mo
118.726 28.6807 118.813 29.1729 118.985 29.4161 cv
119.158 29.6592 119.371 29.7803 119.625 29.7803 cv
119.878 29.7803 120.091 29.6583 120.264 29.4141 cv
120.437 29.17 120.523 28.6788 120.523 27.9405 cv
120.523 27.2002 120.437 26.709 120.265 26.4659 cv
120.093 26.2222 119.877 26.1006 119.619 26.1006 cv
119.365 26.1006 119.162 26.2081 119.009 26.4229 cv
118.82 26.6963 118.726 27.2022 118.726 27.9405 cv
cp
118.164 27.9424 mo
118.164 27.4112 118.218 26.9834 118.327 26.6583 cv
118.436 26.3331 118.598 26.0831 118.813 25.9092 cv
119.028 25.7344 119.298 25.6475 119.625 25.6475 cv
119.865 25.6475 120.077 25.6963 120.259 25.793 cv
120.442 25.8902 120.591 26.0298 120.709 26.2129 cv
120.825 26.3956 120.917 26.6182 120.985 26.8809 cv
121.052 27.1426 121.085 27.4971 121.085 27.9424 cv
121.085 28.4688 121.031 28.8946 120.923 29.2198 cv
120.815 29.545 120.654 29.795 120.439 29.9708 cv
120.224 30.1456 119.953 30.2334 119.625 30.2334 cv
119.192 30.2334 118.854 30.0792 118.607 29.7715 cv
118.312 29.3956 118.164 28.7852 118.164 27.9424 cv
f
121.957 30.1553 mo
121.957 29.5303 li
122.582 29.5303 li
122.582 30.1553 li
121.957 30.1553 li
f
123.423 26.2569 mo
123.423 25.7256 li
126.321 25.7256 li
126.321 26.1553 li
126.036 26.46 125.752 26.8643 125.472 27.3682 cv
125.191 27.8721 124.975 28.3897 124.821 28.9219 cv
124.711 29.2979 124.641 29.7081 124.61 30.1553 cv
124.048 30.1553 li
124.054 29.8028 124.123 29.376 124.256 28.876 cv
124.388 28.376 124.579 27.8946 124.827 27.4307 cv
125.075 26.9659 125.338 26.5752 125.618 26.2569 cv
123.423 26.2569 li
f
132.561 28.3428 mo
132.422 28.3428 132.307 28.4014 132.216 28.5176 cv
132.126 28.6338 132.08 28.8477 132.08 29.1583 cv
132.08 29.4395 132.126 29.6377 132.218 29.754 cv
132.31 29.8702 132.423 29.9288 132.558 29.9288 cv
132.698 29.9288 132.814 29.8702 132.905 29.754 cv
132.996 29.6377 133.041 29.4249 133.041 29.1163 cv
133.041 28.8311 132.995 28.6309 132.903 28.5157 cv
132.812 28.4004 132.697 28.3428 132.561 28.3428 cv
cp
131.604 29.1036 mo
131.604 28.7823 131.684 28.5098 131.844 28.2862 cv
132.005 28.0635 132.238 27.9522 132.545 27.9522 cv
132.826 27.9522 133.058 28.0528 133.242 28.253 cv
133.426 28.4542 133.518 28.7481 133.518 29.1377 cv
133.518 29.5166 133.425 29.8077 133.239 30.0127 cv
133.053 30.2168 132.823 30.3194 132.548 30.3194 cv
132.278 30.3194 132.053 30.2178 131.873 30.0157 cv
131.693 29.8126 131.604 29.5088 131.604 29.1036 cv
cp
129.671 30.3194 mo
132.114 25.5928 li
132.56 25.5928 li
130.126 30.3194 li
129.671 30.3194 li
cp
129.668 25.9834 mo
129.531 25.9834 129.417 26.0416 129.326 26.1583 cv
129.235 26.2745 129.189 26.4883 129.189 26.7989 cv
129.189 27.0821 129.235 27.2813 129.328 27.3965 cv
129.42 27.5118 129.533 27.5694 129.668 27.5694 cv
129.808 27.5694 129.923 27.5108 130.014 27.3946 cv
130.105 27.2784 130.15 27.0655 130.15 26.7569 cv
130.15 26.4717 130.104 26.272 130.012 26.1563 cv
129.92 26.0411 129.806 25.9834 129.668 25.9834 cv
cp
128.713 26.7442 mo
128.713 26.4249 128.793 26.1529 128.954 25.9288 cv
129.115 25.7051 129.348 25.5928 129.653 25.5928 cv
129.934 25.5928 130.167 25.6934 130.351 25.8936 cv
130.535 26.0943 130.627 26.3892 130.627 26.7779 cv
130.627 27.1573 130.534 27.4483 130.348 27.6534 cv
130.162 27.8575 129.932 27.96 129.659 27.96 cv
129.389 27.96 129.163 27.8594 128.983 27.6573 cv
128.803 27.4561 128.713 27.1514 128.713 26.7442 cv
f
52.3301 36.4376 mo
52.9239 36.587 li
52.7999 37.0752 52.5767 37.4463 52.2544 37.7032 cv
51.9322 37.959 51.5381 38.087 51.0723 38.087 cv
50.5904 38.087 50.1983 37.9883 49.8965 37.792 cv
49.5943 37.5948 49.3648 37.3096 49.2071 36.9356 cv
49.0494 36.5626 48.9708 36.1612 48.9708 35.7334 cv
48.9708 35.2657 49.0596 34.8584 49.2374 34.5098 cv
49.4151 34.1622 49.6685 33.8975 49.9966 33.7178 cv
50.3248 33.5362 50.6861 33.4463 51.0806 33.4463 cv
51.5274 33.4463 51.9034 33.5606 52.2085 33.7891 cv
52.5132 34.0176 52.7256 34.3389 52.8458 34.753 cv
52.2598 34.8907 li
52.1563 34.5645 52.0059 34.3272 51.8091 34.1778 cv
51.6124 34.0284 51.3643 33.9542 51.066 33.9542 cv
50.7232 33.9542 50.4366 34.0372 50.2061 34.2022 cv
49.9756 34.3672 49.8135 34.5899 49.7203 34.8682 cv
49.627 35.1465 49.5801 35.4336 49.5801 35.7295 cv
49.5801 36.1114 49.6353 36.4444 49.7461 36.7295 cv
49.857 37.0147 50.0293 37.2276 50.2627 37.3682 cv
50.4966 37.5088 50.75 37.5792 51.022 37.5792 cv
51.3536 37.5792 51.6338 37.4834 51.8633 37.2911 cv
52.0933 37.0997 52.2491 36.8145 52.3301 36.4376 cv
f
53.3736 37.0401 mo
53.9205 36.9542 li
53.9512 37.171 54.0362 37.337 54.1758 37.4532 cv
54.315 37.5684 54.5103 37.626 54.7608 37.626 cv
55.0132 37.626 55.2007 37.5752 55.3233 37.4717 cv
55.4454 37.3692 55.5064 37.2491 55.5064 37.1104 cv
55.5064 36.9864 55.4512 36.8887 55.3409 36.8174 cv
55.2637 36.7686 55.0762 36.7071 54.7779 36.6319 cv
54.376 36.5303 54.0972 36.4424 53.9419 36.3672 cv
53.7862 36.293 53.668 36.1905 53.5879 36.0586 cv
53.5074 35.9278 53.4673 35.7823 53.4673 35.6231 cv
53.4673 35.4786 53.5005 35.3448 53.5665 35.2217 cv
53.6324 35.0987 53.7227 34.9961 53.8365 34.9151 cv
53.9219 34.8516 54.0381 34.7979 54.1856 34.754 cv
54.3331 34.71 54.4913 34.6885 54.6597 34.6885 cv
54.9141 34.6885 55.1373 34.7256 55.3292 34.7989 cv
55.5215 34.8721 55.6631 34.9727 55.7549 35.0977 cv
55.8462 35.2237 55.9092 35.3916 55.9439 35.6026 cv
55.4048 35.6729 li
55.3804 35.5059 55.3101 35.376 55.1934 35.2823 cv
55.0767 35.1885 54.9117 35.1416 54.6988 35.1416 cv
54.4468 35.1416 54.2676 35.1836 54.1597 35.2666 cv
54.0523 35.3497 53.9986 35.4473 53.9986 35.5596 cv
53.9986 35.6309 54.021 35.6944 54.0655 35.751 cv
54.1104 35.8106 54.1802 35.8594 54.2754 35.8975 cv
54.3301 35.918 54.4918 35.9649 54.7593 36.0381 cv
55.147 36.1416 55.418 36.2276 55.5728 36.293 cv
55.7276 36.3594 55.8487 36.4561 55.9371 36.5821 cv
56.025 36.7081 56.0689 36.8653 56.0689 37.0528 cv
56.0689 37.2354 56.0152 37.4083 55.9082 37.5704 cv
55.8013 37.7325 55.647 37.8575 55.4454 37.9463 cv
55.2437 38.0352 55.0157 38.0792 54.7608 38.0792 cv
54.3394 38.0792 54.0176 37.9922 53.7969 37.8174 cv
53.5757 37.6426 53.4346 37.3838 53.3736 37.0401 cv
f
56.8936 38.0088 mo
56.8936 33.5245 li
57.4874 33.5245 li
57.4874 38.0088 li
56.8936 38.0088 li
f
59.5157 39.3292 mo
59.2139 38.9463 58.9585 38.4971 58.75 37.9844 cv
58.5416 37.4708 58.4376 36.9385 58.4376 36.3887 cv
58.4376 35.9034 58.5152 35.4385 58.6714 34.9952 cv
58.8536 34.4795 59.1348 33.9659 59.5157 33.4542 cv
59.9063 33.4542 li
59.6617 33.878 59.5 34.1807 59.4214 34.3624 cv
59.2979 34.6436 59.2012 34.9366 59.1304 35.2422 cv
59.0435 35.6231 59 36.0069 59 36.3916 cv
59 37.3721 59.3018 38.3506 59.9063 39.3292 cv
59.5157 39.3292 li
f
61.7564 38.0088 mo
61.7564 34.0557 li
60.2798 34.0557 li
60.2798 33.5245 li
63.8267 33.5245 li
63.8267 34.0557 li
62.3502 34.0557 li
62.3502 38.0088 li
61.7564 38.0088 li
f
64.3531 38.0088 mo
64.3531 33.5245 li
64.9 33.5245 li
64.9 38.0088 li
64.3531 38.0088 li
f
66.1187 39.3292 mo
65.7281 39.3292 li
66.3374 38.3506 66.6421 37.3721 66.6421 36.3916 cv
66.6421 36.0088 66.5982 35.628 66.5103 35.251 cv
66.441 34.9463 66.3443 34.6524 66.2203 34.3711 cv
66.1407 34.1876 65.9766 33.8819 65.7281 33.4542 cv
66.1187 33.4542 li
66.502 33.9659 66.7852 34.4795 66.9688 34.9952 cv
67.126 35.4385 67.2046 35.9034 67.2046 36.3887 cv
67.2046 36.9385 67.0987 37.4708 66.8877 37.9844 cv
66.6768 38.4971 66.4205 38.9463 66.1187 39.3292 cv
f
67.9839 38.0088 mo
67.9839 37.3838 li
68.6089 37.3838 li
68.6089 38.0088 li
67.9839 38.0088 li
cp
67.9839 35.3838 mo
67.9839 34.7588 li
68.6089 34.7588 li
68.6089 35.3838 li
67.9839 35.3838 li
f
73.48 36.7715 mo
73.8233 36.8672 74.106 37.0098 74.3287 37.1993 cv
74.6778 36.8809 74.8526 36.4024 74.8526 35.7637 cv
74.8526 35.4004 74.7906 35.0831 74.667 34.8116 cv
74.5435 34.5401 74.3628 34.3292 74.125 34.1788 cv
73.8868 34.0293 73.6197 33.9542 73.3238 33.9542 cv
72.8804 33.9542 72.5127 34.1055 72.2203 34.4092 cv
71.9283 34.712 71.7823 35.1651 71.7823 35.7666 cv
71.7823 36.3506 71.9268 36.7989 72.2159 37.1104 cv
72.5049 37.4229 72.8741 37.5792 73.3238 37.5792 cv
73.5362 37.5792 73.7364 37.5391 73.9244 37.46 cv
73.7383 37.3389 73.542 37.254 73.336 37.2022 cv
73.48 36.7715 li
cp
74.7881 37.5303 mo
75.063 37.7198 75.316 37.8584 75.5479 37.9463 cv
75.3736 38.3584 li
75.0518 38.2432 74.731 38.0596 74.4112 37.8086 cv
74.0787 37.9942 73.7115 38.087 73.3096 38.087 cv
72.9034 38.087 72.5352 37.9893 72.2046 37.793 cv
71.8741 37.5977 71.6192 37.3223 71.441 36.9678 cv
71.2623 36.6124 71.1729 36.2129 71.1729 35.7686 cv
71.1729 35.3252 71.2627 34.9229 71.4419 34.5596 cv
71.6216 34.1963 71.877 33.921 72.2085 33.7305 cv
72.5401 33.5411 72.9107 33.4463 73.3204 33.4463 cv
73.7344 33.4463 74.108 33.545 74.4405 33.7413 cv
74.7725 33.9385 75.0259 34.2139 75.2002 34.5674 cv
75.3746 34.921 75.462 35.3204 75.462 35.7647 cv
75.462 36.1338 75.4063 36.4659 75.2945 36.7608 cv
75.1827 37.0557 75.0137 37.3116 74.7881 37.5303 cv
f
76.2837 38.0088 mo
76.2837 33.5245 li
79.5103 33.5245 li
79.5103 34.0557 li
76.8775 34.0557 li
76.8775 35.4229 li
79.3384 35.4229 li
79.3384 35.9542 li
76.8775 35.9542 li
76.8775 37.4776 li
79.6119 37.4776 li
79.6119 38.0088 li
76.2837 38.0088 li
f
84.9942 36.7354 mo
82.0411 36.7354 li
82.0411 36.2198 li
84.9942 36.2198 li
84.9942 36.7354 li
cp
84.9942 35.376 mo
82.0411 35.376 li
82.0411 34.8604 li
84.9942 34.8604 li
84.9942 35.376 li
f
87.3414 36.837 mo
87.9195 36.7979 li
87.9624 37.0752 88.0606 37.2842 88.2149 37.4239 cv
88.3692 37.5635 88.5572 37.6338 88.7794 37.6338 cv
89.0474 37.6338 89.272 37.5342 89.4527 37.334 cv
89.6338 37.1348 89.7242 36.8692 89.7242 36.5391 cv
89.7242 36.2256 89.6377 35.9776 89.4639 35.7969 cv
89.2906 35.6153 89.0596 35.5245 88.7715 35.5245 cv
88.5923 35.5245 88.4322 35.5655 88.2916 35.6465 cv
88.1509 35.7276 88.0401 35.8331 87.9585 35.962 cv
87.4429 35.8916 li
87.8804 33.587 li
90.0992 33.587 li
90.0992 34.1104 li
88.314 34.1104 li
88.0767 35.3204 li
88.3448 35.1338 88.6265 35.0401 88.921 35.0401 cv
89.3106 35.0401 89.6397 35.1758 89.9082 35.4463 cv
90.1763 35.7178 90.3101 36.0655 90.3101 36.4913 cv
90.3101 36.8975 90.1919 37.2471 89.9561 37.543 cv
89.669 37.9053 89.2769 38.087 88.7803 38.087 cv
88.3731 38.087 88.0406 37.9727 87.7828 37.7452 cv
87.5254 37.5166 87.378 37.2139 87.3414 36.837 cv
f
91.1348 38.0088 mo
91.1348 37.3838 li
91.7598 37.3838 li
91.7598 38.0088 li
91.1348 38.0088 li
f
93.1241 35.794 mo
93.1241 36.5342 93.2105 37.0264 93.3829 37.2696 cv
93.5557 37.5127 93.7691 37.6338 94.0225 37.6338 cv
94.2759 37.6338 94.4888 37.5118 94.6617 37.2676 cv
94.8345 37.0235 94.921 36.5323 94.921 35.794 cv
94.921 35.0538 94.835 34.5626 94.6626 34.3194 cv
94.4908 34.0762 94.275 33.9542 94.0162 33.9542 cv
93.7627 33.9542 93.5596 34.0616 93.4073 34.2764 cv
93.2183 34.5499 93.1241 35.0557 93.1241 35.794 cv
cp
92.5616 35.796 mo
92.5616 35.2647 92.6158 34.837 92.7252 34.5118 cv
92.834 34.1866 92.9961 33.9366 93.211 33.7627 cv
93.4258 33.5879 93.6963 33.501 94.0225 33.501 cv
94.2627 33.501 94.4742 33.5499 94.6568 33.6465 cv
94.8394 33.7432 94.9893 33.8838 95.1065 34.0665 cv
95.2232 34.2491 95.3155 34.4717 95.3824 34.7344 cv
95.4498 34.9961 95.4834 35.3506 95.4834 35.796 cv
95.4834 36.3223 95.4292 36.7481 95.3213 37.0733 cv
95.2134 37.3985 95.0518 37.6485 94.837 37.8243 cv
94.6221 37.9991 94.3506 38.087 94.0225 38.087 cv
93.5904 38.087 93.251 37.9327 93.0044 37.625 cv
92.709 37.2491 92.5616 36.6387 92.5616 35.796 cv
f
100.727 38.0088 mo
97.7579 38.0088 li
97.7579 37.4932 li
100.727 37.4932 li
100.727 38.0088 li
cp
98.9844 37.212 mo
98.9844 35.9854 li
97.7579 35.9854 li
97.7579 35.4776 li
98.9844 35.4776 li
98.9844 34.251 li
99.5 34.251 li
99.5 35.4776 li
100.727 35.4776 li
100.727 35.9854 li
99.5 35.9854 li
99.5 37.212 li
98.9844 37.212 li
f
103.519 35.794 mo
103.519 36.5342 103.605 37.0264 103.778 37.2696 cv
103.95 37.5127 104.164 37.6338 104.417 37.6338 cv
104.67 37.6338 104.884 37.5118 105.056 37.2676 cv
105.229 37.0235 105.315 36.5323 105.315 35.794 cv
105.315 35.0538 105.23 34.5626 105.057 34.3194 cv
104.885 34.0762 104.67 33.9542 104.411 33.9542 cv
104.157 33.9542 103.955 34.0616 103.802 34.2764 cv
103.613 34.5499 103.519 35.0557 103.519 35.794 cv
cp
102.956 35.796 mo
102.956 35.2647 103.011 34.837 103.12 34.5118 cv
103.229 34.1866 103.391 33.9366 103.605 33.7627 cv
103.82 33.5879 104.091 33.501 104.417 33.501 cv
104.657 33.501 104.869 33.5499 105.052 33.6465 cv
105.234 33.7432 105.384 33.8838 105.501 34.0665 cv
105.618 34.2491 105.71 34.4717 105.777 34.7344 cv
105.844 34.9961 105.878 35.3506 105.878 35.796 cv
105.878 36.3223 105.824 36.7481 105.716 37.0733 cv
105.608 37.3985 105.446 37.6485 105.231 37.8243 cv
105.017 37.9991 104.745 38.087 104.417 38.087 cv
103.985 38.087 103.646 37.9327 103.399 37.625 cv
103.104 37.2491 102.956 36.6387 102.956 35.796 cv
f
106.75 38.0088 mo
106.75 37.3838 li
107.375 37.3838 li
107.375 38.0088 li
106.75 38.0088 li
f
111.067 37.4776 mo
111.067 38.0088 li
108.098 38.0088 li
108.094 37.876 108.115 37.7481 108.163 37.625 cv
108.239 37.4229 108.36 37.2237 108.527 37.0274 cv
108.695 36.8321 108.935 36.6055 109.248 36.3487 cv
109.733 35.9463 110.063 35.628 110.236 35.3946 cv
110.41 35.1612 110.497 34.9405 110.497 34.7305 cv
110.497 34.5127 110.418 34.3292 110.261 34.1788 cv
110.104 34.0293 109.899 33.9542 109.646 33.9542 cv
109.379 33.9542 109.166 34.0333 109.005 34.1924 cv
108.845 34.3516 108.764 34.5713 108.762 34.8526 cv
108.2 34.7979 li
108.238 34.376 108.384 34.0538 108.638 33.8331 cv
108.891 33.6114 109.231 33.501 109.658 33.501 cv
110.089 33.501 110.431 33.6202 110.682 33.8594 cv
110.933 34.0977 111.059 34.3936 111.059 34.7461 cv
111.059 34.9258 111.022 35.1026 110.949 35.2754 cv
110.876 35.4493 110.754 35.6319 110.584 35.8233 cv
110.414 36.0157 110.131 36.2784 109.736 36.6133 cv
109.405 36.8916 109.192 37.0801 109.096 37.1788 cv
109 37.2784 108.922 37.378 108.859 37.4776 cv
111.067 37.4776 li
f
117.353 36.1963 mo
117.214 36.1963 117.1 36.2549 117.009 36.3711 cv
116.918 36.4874 116.873 36.7012 116.873 37.0118 cv
116.873 37.293 116.918 37.4913 117.01 37.6075 cv
117.102 37.7237 117.215 37.7823 117.35 37.7823 cv
117.491 37.7823 117.606 37.7237 117.697 37.6075 cv
117.788 37.4913 117.834 37.2784 117.834 36.9698 cv
117.834 36.6846 117.788 36.4844 117.696 36.3692 cv
117.604 36.254 117.49 36.1963 117.353 36.1963 cv
cp
116.396 36.9571 mo
116.396 36.6358 116.476 36.3633 116.637 36.1397 cv
116.797 35.917 117.031 35.8057 117.338 35.8057 cv
117.618 35.8057 117.851 35.9063 118.034 36.1065 cv
118.218 36.3077 118.31 36.6016 118.31 36.9913 cv
118.31 37.3702 118.217 37.6612 118.031 37.8663 cv
117.845 38.0704 117.615 38.1729 117.341 38.1729 cv
117.071 38.1729 116.846 38.0713 116.666 37.8692 cv
116.486 37.6661 116.396 37.3624 116.396 36.9571 cv
cp
114.464 38.1729 mo
116.906 33.4463 li
117.352 33.4463 li
114.919 38.1729 li
114.464 38.1729 li
cp
114.461 33.837 mo
114.324 33.837 114.209 33.8956 114.119 34.0118 cv
114.027 34.128 113.982 34.3418 113.982 34.6524 cv
113.982 34.9356 114.028 35.1348 114.12 35.25 cv
114.212 35.3653 114.326 35.4229 114.461 35.4229 cv
114.6 35.4229 114.715 35.3643 114.806 35.2481 cv
114.897 35.1319 114.943 34.919 114.943 34.6104 cv
114.943 34.3252 114.897 34.125 114.805 34.0098 cv
114.712 33.8946 114.598 33.837 114.461 33.837 cv
cp
113.505 34.5977 mo
113.505 34.2784 113.586 34.0069 113.747 33.7823 cv
113.907 33.5586 114.14 33.4463 114.446 33.4463 cv
114.727 33.4463 114.959 33.5469 115.143 33.7471 cv
115.327 33.9483 115.419 34.2422 115.419 34.6319 cv
115.419 35.0108 115.326 35.3018 115.14 35.5069 cv
114.954 35.711 114.725 35.8135 114.452 35.8135 cv
114.181 35.8135 113.956 35.7129 113.775 35.5108 cv
113.595 35.3096 113.505 35.0049 113.505 34.5977 cv
f
65.7823 17.3174 mo
65.7823 16.919 li
69.4229 16.919 li
69.4229 17.3174 li
65.7823 17.3174 li
f
69.2632 17.3174 mo
69.2632 16.919 li
72.9039 16.919 li
72.9039 17.3174 li
69.2632 17.3174 li
f
72.7442 17.3174 mo
72.7442 16.919 li
76.3848 16.919 li
76.3848 17.3174 li
72.7442 17.3174 li
f
82.5323 25.0674 mo
82.5323 24.669 li
86.1729 24.669 li
86.1729 25.0674 li
82.5323 25.0674 li
f
86.0132 25.0674 mo
86.0132 24.669 li
89.6539 24.669 li
89.6539 25.0674 li
86.0132 25.0674 li
f
89.4942 25.0674 mo
89.4942 24.669 li
93.1348 24.669 li
93.1348 25.0674 li
89.4942 25.0674 li
f
70.5323 33.0674 mo
70.5323 32.669 li
74.1729 32.669 li
74.1729 33.0674 li
70.5323 33.0674 li
f
74.0132 33.0674 mo
74.0132 32.669 li
77.6539 32.669 li
77.6539 33.0674 li
74.0132 33.0674 li
f
77.4942 33.0674 mo
77.4942 32.669 li
81.1348 32.669 li
81.1348 33.0674 li
77.4942 33.0674 li
f
46.376 10.8252 mo
46.376 11.792 45.5923 12.5752 44.626 12.5752 cv
43.6597 12.5752 42.876 11.792 42.876 10.8252 cv
42.876 9.8584 43.6597 9.0752 44.626 9.0752 cv
45.5923 9.0752 46.376 9.8584 46.376 10.8252 cv
ef
175.738 52.3135 mo
175.738 46.6885 li
176.488 46.6885 li
176.488 49.001 li
179.378 49.001 li
179.378 46.6885 li
180.128 46.6885 li
180.128 52.3135 li
179.378 52.3135 li
179.378 49.6573 li
176.488 49.6573 li
176.488 52.3135 li
175.738 52.3135 li
f
183.926 50.2666 mo
183.67 50.3692 183.286 50.4561 182.775 50.5274 cv
182.485 50.5684 182.281 50.6143 182.161 50.6651 cv
182.041 50.7159 181.948 50.7911 181.883 50.8897 cv
181.817 50.9874 181.785 51.0967 181.785 51.2168 cv
181.785 51.4014 181.856 51.5538 181.998 51.6768 cv
182.14 51.7989 182.348 51.8604 182.621 51.8604 cv
182.892 51.8604 183.133 51.8018 183.344 51.6856 cv
183.555 51.5694 183.709 51.4102 183.809 51.2081 cv
183.884 51.0528 183.922 50.8233 183.922 50.5196 cv
183.926 50.2666 li
cp
183.973 51.7979 mo
183.717 52.0206 183.47 52.1778 183.23 52.2696 cv
182.991 52.3614 182.734 52.4073 182.46 52.4073 cv
182.007 52.4073 181.659 52.2979 181.416 52.0782 cv
181.172 51.8584 181.051 51.5782 181.051 51.2374 cv
181.051 51.0362 181.097 50.8536 181.188 50.6885 cv
181.28 50.5225 181.401 50.3897 181.55 50.2901 cv
181.699 50.1895 181.867 50.1143 182.053 50.0626 cv
182.19 50.0264 182.397 49.9922 182.675 49.9581 cv
183.239 49.8916 183.655 49.8126 183.922 49.7198 cv
183.924 49.626 183.926 49.5665 183.926 49.5411 cv
183.926 49.2627 183.86 49.0655 183.729 48.9522 cv
183.55 48.7969 183.286 48.7198 182.935 48.7198 cv
182.607 48.7198 182.365 48.7764 182.209 48.8887 cv
182.053 49.001 181.938 49.2002 181.863 49.4854 cv
181.176 49.3916 li
181.237 49.1036 181.339 48.8711 181.481 48.6944 cv
181.623 48.5166 181.827 48.3809 182.095 48.2852 cv
182.363 48.1895 182.673 48.1416 183.026 48.1416 cv
183.376 48.1416 183.66 48.1827 183.879 48.2647 cv
184.098 48.3458 184.259 48.4483 184.362 48.5723 cv
184.465 48.6963 184.537 48.8526 184.579 49.042 cv
184.602 49.1592 184.613 49.3721 184.613 49.6788 cv
184.613 50.6006 li
184.613 51.2432 184.628 51.6504 184.657 51.8213 cv
184.687 51.9922 184.745 52.1563 184.832 52.3135 cv
184.129 52.3135 li
184.048 52.167 183.996 51.9952 183.973 51.7979 cv
f
185.656 52.3135 mo
185.656 48.2354 li
186.265 48.2354 li
186.265 48.8008 li
186.394 48.6026 186.564 48.4434 186.777 48.3233 cv
186.99 48.2022 187.232 48.1416 187.504 48.1416 cv
187.807 48.1416 188.055 48.2042 188.249 48.3292 cv
188.442 48.4532 188.579 48.627 188.658 48.8506 cv
188.982 48.378 189.403 48.1416 189.923 48.1416 cv
190.329 48.1416 190.641 48.254 190.859 48.4776 cv
191.078 48.7022 191.187 49.0469 191.187 49.5127 cv
191.187 52.3135 li
190.5 52.3135 li
190.5 49.7393 li
190.5 49.4629 190.477 49.2627 190.432 49.1416 cv
190.387 49.0196 190.305 48.921 190.187 48.8467 cv
190.068 48.7725 189.929 48.7354 189.77 48.7354 cv
189.481 48.7354 189.242 48.8311 189.051 49.0225 cv
188.86 49.2129 188.765 49.5186 188.765 49.9395 cv
188.765 52.3135 li
188.078 52.3135 li
188.078 49.6592 li
188.078 49.3506 188.022 49.1202 187.909 48.9659 cv
187.796 48.8126 187.611 48.7354 187.355 48.7354 cv
187.16 48.7354 186.98 48.7872 186.814 48.8897 cv
186.649 48.9922 186.529 49.1416 186.455 49.3399 cv
186.38 49.5372 186.343 49.8213 186.343 50.1934 cv
186.343 52.3135 li
185.656 52.3135 li
f
194.837 50.2666 mo
194.581 50.3692 194.197 50.4561 193.686 50.5274 cv
193.396 50.5684 193.192 50.6143 193.072 50.6651 cv
192.952 50.7159 192.859 50.7911 192.794 50.8897 cv
192.729 50.9874 192.696 51.0967 192.696 51.2168 cv
192.696 51.4014 192.767 51.5538 192.909 51.6768 cv
193.051 51.7989 193.259 51.8604 193.532 51.8604 cv
193.803 51.8604 194.044 51.8018 194.255 51.6856 cv
194.466 51.5694 194.621 51.4102 194.72 51.2081 cv
194.795 51.0528 194.833 50.8233 194.833 50.5196 cv
194.837 50.2666 li
cp
194.884 51.7979 mo
194.628 52.0206 194.381 52.1778 194.142 52.2696 cv
193.902 52.3614 193.646 52.4073 193.371 52.4073 cv
192.918 52.4073 192.57 52.2979 192.327 52.0782 cv
192.084 51.8584 191.962 51.5782 191.962 51.2374 cv
191.962 51.0362 192.008 50.8536 192.1 50.6885 cv
192.191 50.5225 192.312 50.3897 192.461 50.2901 cv
192.61 50.1895 192.778 50.1143 192.964 50.0626 cv
193.102 50.0264 193.309 49.9922 193.586 49.9581 cv
194.15 49.8916 194.566 49.8126 194.833 49.7198 cv
194.835 49.626 194.837 49.5665 194.837 49.5411 cv
194.837 49.2627 194.771 49.0655 194.64 48.9522 cv
194.461 48.7969 194.197 48.7198 193.846 48.7198 cv
193.519 48.7198 193.276 48.7764 193.121 48.8887 cv
192.964 49.001 192.849 49.2002 192.774 49.4854 cv
192.087 49.3916 li
192.148 49.1036 192.25 48.8711 192.392 48.6944 cv
192.534 48.5166 192.738 48.3809 193.006 48.2852 cv
193.274 48.1895 193.584 48.1416 193.937 48.1416 cv
194.287 48.1416 194.571 48.1827 194.791 48.2647 cv
195.009 48.3458 195.17 48.4483 195.273 48.5723 cv
195.376 48.6963 195.448 48.8526 195.49 49.042 cv
195.513 49.1592 195.524 49.3721 195.524 49.6788 cv
195.524 50.6006 li
195.524 51.2432 195.539 51.6504 195.568 51.8213 cv
195.598 51.9922 195.656 52.1563 195.743 52.3135 cv
195.04 52.3135 li
194.959 52.167 194.907 51.9952 194.884 51.7979 cv
f
196.567 52.3135 mo
196.567 48.2354 li
197.176 48.2354 li
197.176 48.8008 li
197.305 48.6026 197.475 48.4434 197.688 48.3233 cv
197.901 48.2022 198.143 48.1416 198.415 48.1416 cv
198.718 48.1416 198.966 48.2042 199.16 48.3292 cv
199.353 48.4532 199.49 48.627 199.569 48.8506 cv
199.893 48.378 200.314 48.1416 200.834 48.1416 cv
201.24 48.1416 201.552 48.254 201.771 48.4776 cv
201.989 48.7022 202.098 49.0469 202.098 49.5127 cv
202.098 52.3135 li
201.411 52.3135 li
201.411 49.7393 li
201.411 49.4629 201.388 49.2627 201.343 49.1416 cv
201.298 49.0196 201.216 48.921 201.098 48.8467 cv
200.98 48.7725 200.84 48.7354 200.681 48.7354 cv
200.392 48.7354 200.153 48.8311 199.962 49.0225 cv
199.772 49.2129 199.676 49.5186 199.676 49.9395 cv
199.676 52.3135 li
198.989 52.3135 li
198.989 49.6592 li
198.989 49.3506 198.933 49.1202 198.82 48.9659 cv
198.707 48.8126 198.522 48.7354 198.266 48.7354 cv
198.071 48.7354 197.891 48.7872 197.726 48.8897 cv
197.56 48.9922 197.44 49.1416 197.366 49.3399 cv
197.292 49.5372 197.254 49.8213 197.254 50.1934 cv
197.254 52.3135 li
196.567 52.3135 li
f
205.748 50.2666 mo
205.492 50.3692 205.108 50.4561 204.597 50.5274 cv
204.308 50.5684 204.103 50.6143 203.983 50.6651 cv
203.863 50.7159 203.77 50.7911 203.705 50.8897 cv
203.64 50.9874 203.607 51.0967 203.607 51.2168 cv
203.607 51.4014 203.678 51.5538 203.82 51.6768 cv
203.962 51.7989 204.17 51.8604 204.443 51.8604 cv
204.714 51.8604 204.955 51.8018 205.166 51.6856 cv
205.377 51.5694 205.532 51.4102 205.631 51.2081 cv
205.706 51.0528 205.744 50.8233 205.744 50.5196 cv
205.748 50.2666 li
cp
205.795 51.7979 mo
205.54 52.0206 205.292 52.1778 205.053 52.2696 cv
204.813 52.3614 204.557 52.4073 204.282 52.4073 cv
203.829 52.4073 203.481 52.2979 203.238 52.0782 cv
202.995 51.8584 202.873 51.5782 202.873 51.2374 cv
202.873 51.0362 202.919 50.8536 203.011 50.6885 cv
203.103 50.5225 203.223 50.3897 203.372 50.2901 cv
203.521 50.1895 203.689 50.1143 203.876 50.0626 cv
204.013 50.0264 204.22 49.9922 204.497 49.9581 cv
205.062 49.8916 205.477 49.8126 205.744 49.7198 cv
205.747 49.626 205.748 49.5665 205.748 49.5411 cv
205.748 49.2627 205.682 49.0655 205.551 48.9522 cv
205.373 48.7969 205.108 48.7198 204.757 48.7198 cv
204.43 48.7198 204.188 48.7764 204.032 48.8887 cv
203.876 49.001 203.76 49.2002 203.686 49.4854 cv
202.998 49.3916 li
203.06 49.1036 203.162 48.8711 203.303 48.6944 cv
203.445 48.5166 203.649 48.3809 203.917 48.2852 cv
204.185 48.1895 204.495 48.1416 204.848 48.1416 cv
205.198 48.1416 205.482 48.1827 205.702 48.2647 cv
205.92 48.3458 206.081 48.4483 206.184 48.5723 cv
206.287 48.6963 206.359 48.8526 206.401 49.042 cv
206.424 49.1592 206.436 49.3721 206.436 49.6788 cv
206.436 50.6006 li
206.436 51.2432 206.45 51.6504 206.48 51.8213 cv
206.509 51.9922 206.567 52.1563 206.654 52.3135 cv
205.951 52.3135 li
205.87 52.167 205.818 51.9952 205.795 51.7979 cv
f
208.991 51.6876 mo
209.085 52.2979 li
208.89 52.3389 208.716 52.3604 208.562 52.3604 cv
208.311 52.3604 208.116 52.3204 207.978 52.2413 cv
207.839 52.1622 207.742 52.0577 207.685 51.9288 cv
207.629 51.7999 207.601 51.5274 207.601 51.1124 cv
207.601 48.7666 li
207.085 48.7666 li
207.085 48.2354 li
207.601 48.2354 li
207.601 47.2256 li
208.288 46.8116 li
208.288 48.2354 li
208.991 48.2354 li
208.991 48.7666 li
208.288 48.7666 li
208.288 51.1416 li
208.288 51.3379 208.3 51.4639 208.325 51.5206 cv
208.35 51.5772 208.39 51.6211 208.445 51.6543 cv
208.501 51.6876 208.581 51.7042 208.685 51.7042 cv
208.762 51.7042 208.864 51.6983 208.991 51.6876 cv
f
209.376 51.0792 mo
210.064 50.9854 li
210.103 51.2627 210.211 51.4756 210.388 51.6231 cv
210.565 51.7706 210.813 51.8448 211.132 51.8448 cv
211.453 51.8448 211.691 51.7793 211.847 51.6495 cv
212.002 51.5186 212.08 51.3663 212.08 51.1905 cv
212.08 51.0333 212.01 50.9092 211.871 50.8184 cv
211.774 50.7569 211.535 50.6788 211.153 50.5831 cv
210.64 50.4542 210.285 50.3438 210.087 50.251 cv
209.89 50.1573 209.741 50.0284 209.639 49.8633 cv
209.537 49.6983 209.486 49.5157 209.486 49.3155 cv
209.486 49.1338 209.528 48.9659 209.612 48.8116 cv
209.695 48.6563 209.81 48.5284 209.954 48.4258 cv
210.062 48.3467 210.209 48.2793 210.396 48.2237 cv
210.584 48.169 210.784 48.1416 210.998 48.1416 cv
211.32 48.1416 211.604 48.1876 211.847 48.2793 cv
212.091 48.3711 212.271 48.4961 212.387 48.6524 cv
212.503 48.8096 212.583 49.0196 212.626 49.2823 cv
211.955 49.376 li
211.923 49.1651 211.834 49 211.685 48.8819 cv
211.535 48.7637 211.325 48.7042 211.052 48.7042 cv
210.731 48.7042 210.501 48.7569 210.364 48.8633 cv
210.227 48.9688 210.158 49.0928 210.158 49.2354 cv
210.158 49.3252 210.187 49.4063 210.244 49.4786 cv
210.3 49.5538 210.39 49.6163 210.512 49.6651 cv
210.582 49.6905 210.788 49.75 211.13 49.8428 cv
211.626 49.9737 211.969 50.0811 212.163 50.1631 cv
212.356 50.2471 212.508 50.3682 212.618 50.5264 cv
212.728 50.6846 212.783 50.8819 212.783 51.1172 cv
212.783 51.3477 212.715 51.5645 212.58 51.7686 cv
212.445 51.9717 212.25 52.129 211.995 52.2403 cv
211.74 52.3516 211.452 52.4073 211.13 52.4073 cv
210.597 52.4073 210.191 52.296 209.912 52.0723 cv
209.632 51.8487 209.454 51.5186 209.376 51.0792 cv
f
216.272 52.3135 mo
216.272 51.7178 li
215.953 52.1768 215.52 52.4073 214.971 52.4073 cv
214.729 52.4073 214.503 52.3614 214.293 52.2686 cv
214.084 52.1768 213.928 52.0616 213.826 51.921 cv
213.725 51.7823 213.653 51.6104 213.612 51.4083 cv
213.584 51.2725 213.569 51.0577 213.569 50.7627 cv
213.569 48.2354 li
214.257 48.2354 li
214.257 50.4991 li
214.257 50.8604 214.271 51.1036 214.299 51.2295 cv
214.343 51.4112 214.436 51.5538 214.578 51.6583 cv
214.72 51.7618 214.895 51.8135 215.104 51.8135 cv
215.313 51.8135 215.508 51.7608 215.691 51.6543 cv
215.875 51.5479 216.004 51.4034 216.08 51.2198 cv
216.156 51.0362 216.194 50.7706 216.194 50.4219 cv
216.194 48.2354 li
216.882 48.2354 li
216.882 52.3135 li
216.272 52.3135 li
f
221.226 50.001 mo
223.143 50.001 li
222.553 48.4444 li
222.378 47.9698 222.247 47.5831 222.159 47.2823 cv
222.079 47.6387 221.976 47.9961 221.851 48.3536 cv
221.226 50.001 li
cp
219.608 52.3135 mo
221.772 46.6885 li
222.588 46.6885 li
224.858 52.3135 li
224.011 52.3135 li
223.367 50.6104 li
221.013 50.6104 li
220.401 52.3135 li
219.608 52.3135 li
f
226.218 49.3604 mo
227.672 49.3604 li
228.153 49.3604 228.494 49.2706 228.696 49.0909 cv
228.898 48.9112 229 48.6592 229 48.3331 cv
229 48.0977 228.94 47.8956 228.821 47.7276 cv
228.702 47.5596 228.545 47.4483 228.351 47.3946 cv
228.226 47.3614 227.994 47.3448 227.657 47.3448 cv
226.218 47.3448 li
226.218 49.3604 li
cp
225.468 52.3135 mo
225.468 46.6885 li
227.592 46.6885 li
227.965 46.6885 228.25 46.7061 228.448 46.7422 cv
228.724 46.7881 228.956 46.875 229.143 47.004 cv
229.33 47.1329 229.48 47.3135 229.594 47.546 cv
229.708 47.7774 229.765 48.0323 229.765 48.3106 cv
229.765 48.7881 229.613 49.1915 229.309 49.5215 cv
229.004 49.8516 228.455 50.0166 227.66 50.0166 cv
226.218 50.0166 li
226.218 52.3135 li
225.468 52.3135 li
f
231.458 51.6573 mo
232.653 51.6573 li
233.022 51.6573 233.312 51.6221 233.522 51.5538 cv
233.732 51.4834 233.9 51.3868 234.024 51.2608 cv
234.2 51.0831 234.336 50.8458 234.435 50.546 cv
234.533 50.2471 234.583 49.8848 234.583 49.459 cv
234.583 48.8682 234.486 48.4151 234.293 48.0977 cv
234.101 47.7803 233.868 47.5684 233.592 47.46 cv
233.394 47.3838 233.075 47.3448 232.634 47.3448 cv
231.458 47.3448 li
231.458 51.6573 li
cp
230.707 52.3135 mo
230.707 46.6885 li
232.641 46.6885 li
233.078 46.6885 233.411 46.7159 233.64 46.7686 cv
233.961 46.8428 234.236 46.9776 234.463 47.1719 cv
234.759 47.4229 234.981 47.7432 235.127 48.1329 cv
235.274 48.5235 235.348 48.9688 235.348 49.4698 cv
235.348 49.8975 235.298 50.2764 235.199 50.6065 cv
235.099 50.9366 234.971 51.209 234.816 51.4249 cv
234.66 51.6416 234.49 51.8116 234.304 51.9356 cv
234.12 52.0596 233.896 52.1534 233.634 52.2178 cv
233.373 52.2813 233.072 52.3135 232.733 52.3135 cv
230.707 52.3135 li
f
238.312 50.501 mo
239.015 50.4385 li
239.048 50.7237 239.125 50.9571 239.246 51.1397 cv
239.367 51.3223 239.555 51.4698 239.81 51.5821 cv
240.065 51.6944 240.351 51.751 240.67 51.751 cv
240.953 51.751 241.203 51.7081 241.419 51.6231 cv
241.636 51.5372 241.797 51.421 241.903 51.2715 cv
242.008 51.1221 242.062 50.962 242.062 50.7891 cv
242.062 50.6133 242.009 50.46 241.905 50.3292 cv
241.801 50.1983 241.632 50.0889 241.399 49.9991 cv
241.25 49.9395 240.918 49.8487 240.406 49.7237 cv
239.893 49.5997 239.534 49.4825 239.327 49.3721 cv
239.059 49.2315 238.859 49.0567 238.728 48.8487 cv
238.596 48.6397 238.531 48.4053 238.531 48.1465 cv
238.531 47.8624 238.611 47.5967 238.771 47.3497 cv
238.932 47.1026 239.167 46.9151 239.474 46.7872 cv
239.783 46.6592 240.126 46.5948 240.502 46.5948 cv
240.918 46.5948 241.284 46.6622 241.601 46.7969 cv
241.918 46.9317 242.163 47.1299 242.334 47.3926 cv
242.504 47.6543 242.596 47.9512 242.609 48.2823 cv
241.89 48.3292 li
241.852 47.9737 241.723 47.7051 241.503 47.5235 cv
241.284 47.3418 240.96 47.251 240.532 47.251 cv
240.084 47.251 239.759 47.334 239.555 47.4991 cv
239.351 47.6641 239.25 47.8633 239.25 48.0967 cv
239.25 48.2989 239.322 48.4659 239.466 48.5958 cv
239.608 48.7266 239.979 48.8604 240.579 48.9971 cv
241.179 49.1348 241.591 49.254 241.818 49.3565 cv
242.146 49.5069 242.389 49.6973 242.545 49.9288 cv
242.702 50.1592 242.781 50.4258 242.781 50.7266 cv
242.781 51.0254 242.695 51.3067 242.524 51.5713 cv
242.353 51.835 242.107 52.0401 241.787 52.1876 cv
241.466 52.334 241.106 52.4073 240.705 52.4073 cv
240.197 52.4073 239.771 52.3331 239.428 52.1846 cv
239.084 52.0362 238.815 51.8126 238.62 51.5137 cv
238.424 51.2159 238.322 50.878 238.312 50.501 cv
f
244.425 48.0948 mo
244.425 48.3614 244.511 48.5792 244.682 48.7481 cv
244.853 48.917 245.081 49.001 245.363 49.001 cv
245.638 49.001 245.86 48.917 246.03 48.7491 cv
246.2 48.5821 246.285 48.377 246.285 48.1338 cv
246.285 47.8799 246.197 47.667 246.022 47.4942 cv
245.847 47.3213 245.625 47.2354 245.355 47.2354 cv
245.083 47.2354 244.86 47.3194 244.686 47.4893 cv
244.512 47.6573 244.425 47.8604 244.425 48.0948 cv
cp
244.207 50.6924 mo
244.207 50.8897 244.252 51.0811 244.344 51.2647 cv
244.436 51.4493 244.576 51.5918 244.764 51.6934 cv
244.953 51.794 245.155 51.8448 245.369 51.8448 cv
245.708 51.8448 245.983 51.7383 246.198 51.5264 cv
246.412 51.3135 246.519 51.044 246.519 50.7159 cv
246.519 50.3829 246.409 50.1075 246.188 49.8897 cv
245.967 49.6729 245.686 49.5635 245.345 49.5635 cv
245.012 49.5635 244.739 49.671 244.526 49.8858 cv
244.313 50.1016 244.207 50.3702 244.207 50.6924 cv
cp
244.566 49.2647 mo
244.28 49.1602 244.067 49.0108 243.929 48.8174 cv
243.792 48.6231 243.722 48.3907 243.722 48.1202 cv
243.722 47.712 243.87 47.3682 244.166 47.0909 cv
244.461 46.8116 244.854 46.6729 245.345 46.6729 cv
245.839 46.6729 246.236 46.8155 246.537 47.0997 cv
246.837 47.3848 246.988 47.7315 246.988 48.1397 cv
246.988 48.3995 246.919 48.626 246.784 48.8194 cv
246.648 49.0118 246.441 49.1602 246.165 49.2647 cv
246.509 49.378 246.772 49.5586 246.952 49.8096 cv
247.132 50.0596 247.222 50.3584 247.222 50.7061 cv
247.222 51.1866 247.051 51.5899 246.71 51.917 cv
246.369 52.2442 245.919 52.4073 245.363 52.4073 cv
244.806 52.4073 244.357 52.2432 244.015 51.9151 cv
243.674 51.587 243.503 51.1768 243.503 50.6866 cv
243.503 50.3213 243.595 50.0157 243.78 49.7686 cv
243.963 49.5225 244.225 49.3545 244.566 49.2647 cv
f
248.653 50.4961 mo
248.653 50.7344 248.704 50.962 248.805 51.1788 cv
248.906 51.3956 249.046 51.5606 249.226 51.6749 cv
249.406 51.7881 249.598 51.8448 249.803 51.8448 cv
250.1 51.8448 250.353 51.7276 250.56 51.4922 cv
250.768 51.2579 250.872 50.9385 250.872 50.5342 cv
250.872 50.1465 250.769 49.8409 250.564 49.6172 cv
250.359 49.3936 250.096 49.2823 249.776 49.2823 cv
249.463 49.2823 249.198 49.3936 248.98 49.6172 cv
248.762 49.8409 248.653 50.1338 248.653 50.4961 cv
cp
251.481 48.0792 mo
250.793 48.126 li
250.732 47.8536 250.645 47.6553 250.532 47.5323 cv
250.344 47.335 250.113 47.2354 249.838 47.2354 cv
249.618 47.2354 249.42 47.2969 249.249 47.421 cv
249.036 47.5792 248.866 47.8126 248.741 48.1182 cv
248.615 48.4239 248.549 48.8584 248.543 49.421 cv
248.71 49.168 248.914 48.9795 249.155 48.8575 cv
249.395 48.7344 249.648 48.6729 249.912 48.6729 cv
250.373 48.6729 250.765 48.8418 251.089 49.1797 cv
251.413 49.5176 251.575 49.9542 251.575 50.4903 cv
251.575 50.8428 251.499 51.169 251.346 51.4717 cv
251.194 51.7745 250.985 52.0059 250.718 52.1661 cv
250.452 52.3272 250.15 52.4073 249.812 52.4073 cv
249.236 52.4073 248.765 52.1963 248.402 51.7735 cv
248.038 51.3506 247.856 50.6543 247.856 49.6836 cv
247.856 48.5987 248.058 47.8096 248.46 47.3165 cv
248.812 46.8877 249.286 46.6729 249.88 46.6729 cv
250.325 46.6729 250.688 46.7979 250.971 47.0469 cv
251.254 47.296 251.424 47.6397 251.481 48.0792 cv
f
253.021 50.4961 mo
253.021 50.7344 253.072 50.962 253.173 51.1788 cv
253.274 51.3956 253.415 51.5606 253.594 51.6749 cv
253.774 51.7881 253.966 51.8448 254.171 51.8448 cv
254.468 51.8448 254.721 51.7276 254.928 51.4922 cv
255.136 51.2579 255.24 50.9385 255.24 50.5342 cv
255.24 50.1465 255.137 49.8409 254.932 49.6172 cv
254.727 49.3936 254.464 49.2823 254.144 49.2823 cv
253.832 49.2823 253.566 49.3936 253.348 49.6172 cv
253.13 49.8409 253.021 50.1338 253.021 50.4961 cv
cp
255.849 48.0792 mo
255.162 48.126 li
255.1 47.8536 255.013 47.6553 254.9 47.5323 cv
254.712 47.335 254.481 47.2354 254.207 47.2354 cv
253.986 47.2354 253.789 47.2969 253.617 47.421 cv
253.404 47.5792 253.234 47.8126 253.109 48.1182 cv
252.983 48.4239 252.918 48.8584 252.912 49.421 cv
253.079 49.168 253.282 48.9795 253.523 48.8575 cv
253.763 48.7344 254.016 48.6729 254.28 48.6729 cv
254.741 48.6729 255.133 48.8418 255.458 49.1797 cv
255.781 49.5176 255.943 49.9542 255.943 50.4903 cv
255.943 50.8428 255.867 51.169 255.714 51.4717 cv
255.562 51.7745 255.353 52.0059 255.086 52.1661 cv
254.82 52.3272 254.518 52.4073 254.18 52.4073 cv
253.604 52.4073 253.133 52.1963 252.77 51.7735 cv
252.406 51.3506 252.224 50.6543 252.224 49.6836 cv
252.224 48.5987 252.426 47.8096 252.829 47.3165 cv
253.18 46.8877 253.654 46.6729 254.249 46.6729 cv
254.693 46.6729 255.056 46.7979 255.339 47.0469 cv
255.623 47.296 255.792 47.6397 255.849 48.0792 cv
f
258.843 50.3292 mo
258.843 47.8165 li
257.072 50.3292 li
258.843 50.3292 li
cp
258.843 52.3135 mo
258.843 50.9698 li
256.39 50.9698 li
256.39 50.3292 li
258.984 46.6885 li
259.531 46.6885 li
259.531 50.3292 li
260.296 50.3292 li
260.296 50.9698 li
259.531 50.9698 li
259.531 52.3135 li
258.843 52.3135 li
f
176.252 61.0186 mo
177.366 61.0186 li
177.557 61.0186 177.691 61.0118 177.769 60.9971 cv
177.905 60.9727 178.019 60.9327 178.11 60.875 cv
178.202 60.8184 178.277 60.7354 178.336 60.626 cv
178.395 60.5176 178.424 60.3916 178.424 60.2491 cv
178.424 60.0821 178.38 59.9376 178.292 59.8135 cv
178.204 59.6905 178.084 59.6045 177.933 59.5547 cv
177.782 59.5049 177.565 59.4795 177.282 59.4795 cv
176.252 59.4795 li
176.252 61.0186 li
cp
176.252 58.9483 mo
177.215 58.9483 li
177.476 58.9483 177.663 58.9307 177.777 58.8965 cv
177.926 58.8516 178.039 58.7774 178.115 58.6739 cv
178.191 58.5704 178.229 58.4395 178.229 58.2832 cv
178.229 58.1348 178.193 58.004 178.123 57.8916 cv
178.052 57.7784 177.951 57.7012 177.819 57.6592 cv
177.688 57.6172 177.462 57.5967 177.142 57.5967 cv
176.252 57.5967 li
176.252 58.9483 li
cp
175.659 61.5499 mo
175.659 57.0655 li
177.334 57.0655 li
177.675 57.0655 177.949 57.1114 178.155 57.2022 cv
178.361 57.293 178.523 57.4327 178.64 57.6211 cv
178.756 57.8106 178.815 58.0079 178.815 58.2139 cv
178.815 58.4063 178.763 58.587 178.659 58.7569 cv
178.554 58.9258 178.397 59.0626 178.187 59.167 cv
178.458 59.2461 178.668 59.3819 178.814 59.5733 cv
178.96 59.7647 179.034 59.9913 179.034 60.251 cv
179.034 60.461 178.989 60.6563 178.901 60.837 cv
178.813 61.0166 178.704 61.1553 178.573 61.254 cv
178.443 61.3516 178.28 61.4249 178.084 61.4747 cv
177.888 61.5245 177.647 61.5499 177.363 61.5499 cv
175.659 61.5499 li
f
181.951 59.7999 mo
181.951 59.2686 li
183.849 59.2686 li
183.849 60.9288 li
183.558 61.1612 183.258 61.336 182.948 61.4522 cv
182.639 61.5694 182.321 61.628 181.996 61.628 cv
181.556 61.628 181.156 61.5332 180.797 61.3448 cv
180.438 61.1563 180.167 60.8829 179.983 60.5264 cv
179.8 60.169 179.708 59.7696 179.708 59.3292 cv
179.708 58.8926 179.799 58.4844 179.982 58.1065 cv
180.164 57.7276 180.426 57.4463 180.768 57.2627 cv
181.11 57.0792 181.504 56.9874 181.95 56.9874 cv
182.273 56.9874 182.566 57.0401 182.828 57.1456 cv
183.089 57.251 183.294 57.3975 183.443 57.586 cv
183.592 57.7735 183.705 58.0196 183.782 58.3223 cv
183.25 58.4688 li
183.182 58.2393 183.099 58.0596 182.999 57.9288 cv
182.899 57.7979 182.756 57.6924 182.571 57.6133 cv
182.385 57.5342 182.18 57.4952 181.953 57.4952 cv
181.682 57.4952 181.448 57.5362 181.25 57.6192 cv
181.052 57.7022 180.893 57.8106 180.772 57.9454 cv
180.65 58.0811 180.556 58.2286 180.489 58.3897 cv
180.375 58.668 180.318 58.9698 180.318 59.294 cv
180.318 59.6954 180.387 60.0303 180.524 60.2999 cv
180.662 60.5694 180.862 60.7696 181.125 60.9004 cv
181.388 61.0313 181.667 61.0967 181.962 61.0967 cv
182.219 61.0967 182.47 61.0479 182.714 60.9483 cv
182.959 60.8506 183.145 60.7452 183.271 60.6329 cv
183.271 59.7999 li
181.951 59.7999 li
f
185.155 59.375 mo
185.155 59.9161 185.3 60.3418 185.591 60.6534 cv
185.881 60.9649 186.245 61.1202 186.683 61.1202 cv
187.129 61.1202 187.497 60.9629 187.785 60.6485 cv
188.073 60.334 188.218 59.8887 188.218 59.3106 cv
188.218 58.9454 188.156 58.626 188.033 58.3545 cv
187.909 58.0811 187.729 57.8702 187.492 57.7198 cv
187.254 57.5704 186.988 57.4952 186.692 57.4952 cv
186.272 57.4952 185.912 57.6397 185.609 57.9288 cv
185.306 58.2168 185.155 58.6993 185.155 59.375 cv
cp
184.546 59.3672 mo
184.546 58.6231 184.745 58.0401 185.144 57.6192 cv
185.543 57.1983 186.058 56.9874 186.689 56.9874 cv
187.103 56.9874 187.475 57.086 187.807 57.2842 cv
188.139 57.4815 188.392 57.7579 188.566 58.1114 cv
188.74 58.4659 188.827 58.8663 188.827 59.3155 cv
188.827 59.7706 188.735 60.1768 188.552 60.5362 cv
188.369 60.8946 188.109 61.167 187.773 61.3506 cv
187.438 61.5362 187.075 61.628 186.687 61.628 cv
186.265 61.628 185.888 61.5264 185.557 61.3223 cv
185.225 61.1182 184.973 60.8399 184.802 60.4874 cv
184.631 60.1338 184.546 59.7608 184.546 59.3672 cv
f
189.664 61.5499 mo
189.664 60.9249 li
190.289 60.9249 li
190.289 61.5499 li
189.664 61.5499 li
cp
189.664 58.9249 mo
189.664 58.2999 li
190.289 58.2999 li
190.289 58.9249 li
189.664 58.9249 li
f
195.16 60.3126 mo
195.503 60.4082 195.786 60.5508 196.009 60.7403 cv
196.358 60.4219 196.533 59.9434 196.533 59.3047 cv
196.533 58.9415 196.471 58.6241 196.347 58.3526 cv
196.224 58.0811 196.043 57.8702 195.805 57.7198 cv
195.567 57.5704 195.3 57.4952 195.004 57.4952 cv
194.561 57.4952 194.193 57.6465 193.9 57.9502 cv
193.608 58.253 193.462 58.7061 193.462 59.3077 cv
193.462 59.8916 193.607 60.3399 193.896 60.6514 cv
194.185 60.9639 194.554 61.1202 195.004 61.1202 cv
195.216 61.1202 195.417 61.0801 195.604 61.001 cv
195.418 60.8799 195.222 60.795 195.016 60.7432 cv
195.16 60.3126 li
cp
196.468 61.0713 mo
196.743 61.2608 196.996 61.3995 197.228 61.4874 cv
197.054 61.8995 li
196.732 61.7842 196.411 61.6006 196.091 61.3497 cv
195.759 61.5352 195.392 61.628 194.99 61.628 cv
194.584 61.628 194.215 61.5303 193.885 61.334 cv
193.554 61.1387 193.299 60.8633 193.121 60.5088 cv
192.942 60.1534 192.853 59.754 192.853 59.3096 cv
192.853 58.8663 192.943 58.4639 193.122 58.1006 cv
193.302 57.7374 193.557 57.462 193.889 57.2715 cv
194.22 57.0821 194.591 56.9874 195 56.9874 cv
195.415 56.9874 195.788 57.086 196.121 57.2823 cv
196.453 57.4795 196.706 57.7549 196.88 58.1084 cv
197.055 58.462 197.142 58.8614 197.142 59.3057 cv
197.142 59.6749 197.086 60.0069 196.975 60.3018 cv
196.863 60.5967 196.694 60.8526 196.468 61.0713 cv
f
197.964 61.5499 mo
197.964 57.0655 li
201.19 57.0655 li
201.19 57.5967 li
198.558 57.5967 li
198.558 58.9639 li
201.019 58.9639 li
201.019 59.4952 li
198.558 59.4952 li
198.558 61.0186 li
201.292 61.0186 li
201.292 61.5499 li
197.964 61.5499 li
f
206.674 60.2764 mo
203.721 60.2764 li
203.721 59.7608 li
206.674 59.7608 li
206.674 60.2764 li
cp
206.674 58.917 mo
203.721 58.917 li
203.721 58.4014 li
206.674 58.4014 li
206.674 58.917 li
f
209.756 58.1797 mo
209.756 58.3916 209.824 58.5655 209.96 58.6993 cv
210.096 58.834 210.275 58.9014 210.497 58.9014 cv
210.712 58.9014 210.887 58.835 211.022 58.7012 cv
211.157 58.5674 211.225 58.4044 211.225 58.21 cv
211.225 58.0088 211.155 57.8389 211.016 57.7012 cv
210.877 57.5635 210.702 57.4952 210.49 57.4952 cv
210.277 57.4952 210.101 57.5626 209.963 57.6973 cv
209.825 57.8311 209.756 57.9922 209.756 58.1797 cv
cp
209.576 60.2559 mo
209.576 60.4131 209.613 60.5655 209.686 60.712 cv
209.759 60.8594 209.87 60.9737 210.019 61.0538 cv
210.167 61.1348 210.326 61.1749 210.495 61.1749 cv
210.761 61.1749 210.979 61.0899 211.149 60.921 cv
211.319 60.751 211.404 60.5352 211.404 60.2735 cv
211.404 60.0088 211.317 59.7891 211.142 59.6153 cv
210.966 59.4415 210.745 59.3545 210.477 59.3545 cv
210.215 59.3545 209.999 59.4405 209.83 59.6124 cv
209.661 59.7832 209.576 59.9981 209.576 60.2559 cv
cp
209.867 59.1143 mo
209.638 59.0303 209.469 58.9112 209.359 58.7559 cv
209.249 58.6006 209.193 58.4151 209.193 58.1993 cv
209.193 57.8721 209.311 57.5977 209.546 57.376 cv
209.78 57.1534 210.093 57.042 210.483 57.042 cv
210.875 57.042 211.19 57.1553 211.429 57.3838 cv
211.668 57.6104 211.787 57.8877 211.787 58.2139 cv
211.787 58.4229 211.733 58.6036 211.625 58.7579 cv
211.516 58.9112 211.351 59.0303 211.129 59.1143 cv
211.402 59.2042 211.61 59.3487 211.753 59.5499 cv
211.896 59.75 211.967 59.9893 211.967 60.2666 cv
211.967 60.6514 211.832 60.9737 211.561 61.2354 cv
211.289 61.4971 210.933 61.628 210.49 61.628 cv
210.048 61.628 209.691 61.4971 209.42 61.2344 cv
209.149 60.9717 209.014 60.6436 209.014 60.251 cv
209.014 59.959 209.088 59.7149 209.235 59.5176 cv
209.383 59.3204 209.594 59.1856 209.867 59.1143 cv
f
215.394 61.0186 mo
215.394 61.5499 li
212.425 61.5499 li
212.42 61.417 212.442 61.2891 212.489 61.1661 cv
212.565 60.9639 212.687 60.7647 212.854 60.5684 cv
213.022 60.3731 213.261 60.1465 213.574 59.8897 cv
214.06 59.4874 214.39 59.169 214.563 58.9356 cv
214.736 58.7022 214.823 58.4815 214.823 58.2715 cv
214.823 58.0538 214.745 57.8702 214.587 57.7198 cv
214.43 57.5704 214.226 57.4952 213.973 57.4952 cv
213.706 57.4952 213.492 57.5743 213.332 57.7334 cv
213.172 57.8926 213.091 58.1124 213.089 58.3936 cv
212.526 58.3389 li
212.565 57.917 212.711 57.5948 212.964 57.3741 cv
213.218 57.1524 213.558 57.042 213.985 57.042 cv
214.416 57.042 214.757 57.1612 215.009 57.4004 cv
215.26 57.6387 215.386 57.9346 215.386 58.2872 cv
215.386 58.4668 215.349 58.6436 215.275 58.8165 cv
215.202 58.9903 215.081 59.1729 214.91 59.3643 cv
214.74 59.5567 214.458 59.8194 214.063 60.1544 cv
213.731 60.4327 213.519 60.6211 213.423 60.7198 cv
213.327 60.8194 213.249 60.919 213.186 61.0186 cv
215.394 61.0186 li
f
220.668 61.5499 mo
217.699 61.5499 li
217.699 61.0342 li
220.668 61.0342 li
220.668 61.5499 li
cp
218.926 60.753 mo
218.926 59.5264 li
217.699 59.5264 li
217.699 59.0186 li
218.926 59.0186 li
218.926 57.792 li
219.441 57.792 li
219.441 59.0186 li
220.668 59.0186 li
220.668 59.5264 li
219.441 59.5264 li
219.441 60.753 li
218.926 60.753 li
f
224.663 59.9717 mo
224.663 57.9542 li
223.251 59.9717 li
224.663 59.9717 li
cp
224.663 61.5499 mo
224.663 60.4795 li
222.709 60.4795 li
222.709 59.9717 li
224.764 57.0733 li
225.209 57.0733 li
225.209 59.9717 li
225.811 59.9717 li
225.811 60.4795 li
225.209 60.4795 li
225.209 61.5499 li
224.663 61.5499 li
f
232.074 59.7374 mo
231.935 59.7374 231.82 59.796 231.729 59.9122 cv
231.638 60.0284 231.593 60.2422 231.593 60.5528 cv
231.593 60.834 231.639 61.0323 231.731 61.1485 cv
231.823 61.2647 231.936 61.3233 232.071 61.3233 cv
232.211 61.3233 232.328 61.2647 232.418 61.1485 cv
232.509 61.0323 232.554 60.8194 232.554 60.5108 cv
232.554 60.2256 232.508 60.0254 232.417 59.9102 cv
232.325 59.795 232.21 59.7374 232.074 59.7374 cv
cp
231.117 60.4981 mo
231.117 60.1768 231.197 59.9044 231.358 59.6807 cv
231.518 59.4581 231.751 59.3467 232.058 59.3467 cv
232.339 59.3467 232.571 59.4473 232.755 59.6475 cv
232.939 59.8487 233.031 60.1426 233.031 60.5323 cv
233.031 60.9112 232.938 61.2022 232.751 61.4073 cv
232.566 61.6114 232.335 61.7139 232.062 61.7139 cv
231.792 61.7139 231.566 61.6124 231.386 61.4102 cv
231.207 61.2071 231.117 60.9034 231.117 60.4981 cv
cp
229.185 61.7139 mo
231.627 56.9874 li
232.073 56.9874 li
229.64 61.7139 li
229.185 61.7139 li
cp
229.182 57.378 mo
229.044 57.378 228.93 57.4366 228.839 57.5528 cv
228.748 57.669 228.703 57.8829 228.703 58.1934 cv
228.703 58.4766 228.749 58.6758 228.841 58.7911 cv
228.933 58.9063 229.046 58.9639 229.182 58.9639 cv
229.321 58.9639 229.436 58.9053 229.527 58.7891 cv
229.618 58.6729 229.664 58.46 229.664 58.1514 cv
229.664 57.8663 229.618 57.6661 229.525 57.5508 cv
229.433 57.4356 229.319 57.378 229.182 57.378 cv
cp
228.226 58.1387 mo
228.226 57.8194 228.307 57.5479 228.467 57.3233 cv
228.628 57.0997 228.861 56.9874 229.167 56.9874 cv
229.447 56.9874 229.68 57.0879 229.864 57.2881 cv
230.048 57.4893 230.14 57.7832 230.14 58.1729 cv
230.14 58.5518 230.047 58.8428 229.861 59.0479 cv
229.675 59.252 229.445 59.3545 229.172 59.3545 cv
228.902 59.3545 228.676 59.254 228.496 59.0518 cv
228.316 58.8506 228.226 58.546 228.226 58.1387 cv
f
175.659 69.4053 mo
175.659 64.921 li
176.252 64.921 li
176.252 68.8741 li
178.448 68.8741 li
178.448 69.4053 li
175.659 69.4053 li
f
178.968 67.9678 mo
179.53 67.921 li
179.557 68.1446 179.618 68.3282 179.713 68.4717 cv
179.81 68.6153 179.958 68.7315 180.16 68.8194 cv
180.362 68.9082 180.589 68.9522 180.842 68.9522 cv
181.066 68.9522 181.264 68.919 181.436 68.8516 cv
181.607 68.7842 181.735 68.6924 181.819 68.5752 cv
181.902 68.4581 181.944 68.3311 181.944 68.1924 cv
181.944 68.0518 181.903 67.9288 181.822 67.8233 cv
181.74 67.7188 181.606 67.6299 181.421 67.5586 cv
181.302 67.5118 181.038 67.4395 180.63 67.3409 cv
180.223 67.2413 179.937 67.1485 179.772 67.0606 cv
179.56 66.9483 179.401 66.8086 179.296 66.6416 cv
179.192 66.4747 179.14 66.2881 179.14 66.0821 cv
179.14 65.8545 179.204 65.6426 179.331 65.4454 cv
179.458 65.2481 179.645 65.0987 179.89 64.9961 cv
180.135 64.8936 180.408 64.8428 180.708 64.8428 cv
181.038 64.8428 181.329 64.8965 181.581 65.003 cv
181.834 65.1094 182.027 65.2666 182.163 65.4747 cv
182.299 65.6817 182.372 65.917 182.382 66.1788 cv
181.812 66.2178 li
181.781 65.9395 181.679 65.7295 181.504 65.587 cv
181.33 65.4454 181.072 65.3741 180.73 65.3741 cv
180.375 65.3741 180.116 65.4395 179.954 65.5713 cv
179.791 65.7022 179.71 65.8614 179.71 66.046 cv
179.71 66.2071 179.768 66.3399 179.883 66.4434 cv
179.996 66.5479 180.291 66.6544 180.769 66.7627 cv
181.246 66.8721 181.574 66.9668 181.753 67.0489 cv
182.013 67.169 182.205 67.3213 182.329 67.5049 cv
182.453 67.6895 182.515 67.9024 182.515 68.1426 cv
182.515 68.3809 182.447 68.6055 182.311 68.8155 cv
182.175 69.0264 181.98 69.1905 181.726 69.3077 cv
181.472 69.4249 181.186 69.4834 180.867 69.4834 cv
180.464 69.4834 180.126 69.4249 179.854 69.3057 cv
179.581 69.1885 179.368 69.0108 179.212 68.7725 cv
179.058 68.5362 178.976 68.2676 178.968 67.9678 cv
f
183.768 67.2305 mo
183.768 67.7715 183.913 68.1973 184.203 68.5088 cv
184.494 68.8204 184.858 68.9756 185.296 68.9756 cv
185.742 68.9756 186.109 68.8184 186.397 68.504 cv
186.686 68.1895 186.83 67.7442 186.83 67.1661 cv
186.83 66.8008 186.769 66.4815 186.645 66.21 cv
186.522 65.9366 186.341 65.7256 186.104 65.5752 cv
185.867 65.4258 185.6 65.3506 185.305 65.3506 cv
184.885 65.3506 184.524 65.4952 184.221 65.7842 cv
183.919 66.0723 183.768 66.5547 183.768 67.2305 cv
cp
183.158 67.2227 mo
183.158 66.4786 183.358 65.8956 183.757 65.4747 cv
184.156 65.0538 184.671 64.8428 185.302 64.8428 cv
185.715 64.8428 186.087 64.9415 186.419 65.1397 cv
186.751 65.337 187.004 65.6133 187.178 65.9668 cv
187.353 66.3213 187.439 66.7217 187.439 67.171 cv
187.439 67.626 187.348 68.0323 187.165 68.3916 cv
186.981 68.75 186.722 69.0225 186.386 69.2061 cv
186.05 69.3916 185.688 69.4834 185.299 69.4834 cv
184.877 69.4834 184.5 69.3819 184.169 69.1778 cv
183.837 68.9737 183.585 68.6954 183.415 68.3428 cv
183.244 67.9893 183.158 67.6163 183.158 67.2227 cv
f
187.722 69.4834 mo
189.019 64.8506 li
189.462 64.8506 li
188.165 69.4834 li
187.722 69.4834 li
f
189.922 69.4053 mo
189.922 64.921 li
190.516 64.921 li
190.516 68.8741 li
192.711 68.8741 li
192.711 69.4053 li
189.922 69.4053 li
f
194.222 69.4053 mo
194.222 67.5059 li
192.496 64.921 li
193.208 64.921 li
194.093 66.2813 li
194.259 66.5323 194.411 66.7813 194.55 67.0294 cv
194.688 66.7979 194.851 66.5352 195.042 66.2413 cv
195.915 64.921 li
196.605 64.921 li
194.816 67.5059 li
194.816 69.4053 li
194.222 69.4053 li
f
196.941 67.9678 mo
197.504 67.921 li
197.53 68.1446 197.591 68.3282 197.687 68.4717 cv
197.783 68.6153 197.932 68.7315 198.134 68.8194 cv
198.335 68.9082 198.563 68.9522 198.815 68.9522 cv
199.04 68.9522 199.237 68.919 199.409 68.8516 cv
199.581 68.7842 199.708 68.6924 199.792 68.5752 cv
199.876 68.4581 199.918 68.3311 199.918 68.1924 cv
199.918 68.0518 199.877 67.9288 199.795 67.8233 cv
199.714 67.7188 199.58 67.6299 199.395 67.5586 cv
199.275 67.5118 199.012 67.4395 198.604 67.3409 cv
198.196 67.2413 197.91 67.1485 197.746 67.0606 cv
197.533 66.9483 197.374 66.8086 197.27 66.6416 cv
197.165 66.4747 197.113 66.2881 197.113 66.0821 cv
197.113 65.8545 197.177 65.6426 197.305 65.4454 cv
197.432 65.2481 197.619 65.0987 197.864 64.9961 cv
198.109 64.8936 198.381 64.8428 198.681 64.8428 cv
199.011 64.8428 199.302 64.8965 199.555 65.003 cv
199.807 65.1094 200.001 65.2666 200.137 65.4747 cv
200.272 65.6817 200.345 65.917 200.355 66.1788 cv
199.785 66.2178 li
199.755 65.9395 199.652 65.7295 199.478 65.587 cv
199.303 65.4454 199.045 65.3741 198.704 65.3741 cv
198.349 65.3741 198.09 65.4395 197.927 65.5713 cv
197.765 65.7022 197.684 65.8614 197.684 66.046 cv
197.684 66.2071 197.741 66.3399 197.856 66.4434 cv
197.969 66.5479 198.264 66.6544 198.742 66.7627 cv
199.219 66.8721 199.547 66.9668 199.726 67.0489 cv
199.986 67.169 200.178 67.3213 200.302 67.5049 cv
200.426 67.6895 200.488 67.9024 200.488 68.1426 cv
200.488 68.3809 200.42 68.6055 200.285 68.8155 cv
200.149 69.0264 199.954 69.1905 199.699 69.3077 cv
199.445 69.4249 199.159 69.4834 198.841 69.4834 cv
198.438 69.4834 198.1 69.4249 197.827 69.3057 cv
197.555 69.1885 197.341 69.0108 197.186 68.7725 cv
197.031 68.5362 196.949 68.2676 196.941 67.9678 cv
f
201.741 67.2305 mo
201.741 67.7715 201.886 68.1973 202.177 68.5088 cv
202.467 68.8204 202.831 68.9756 203.269 68.9756 cv
203.715 68.9756 204.083 68.8184 204.371 68.504 cv
204.659 68.1895 204.804 67.7442 204.804 67.1661 cv
204.804 66.8008 204.742 66.4815 204.619 66.21 cv
204.495 65.9366 204.315 65.7256 204.078 65.5752 cv
203.84 65.4258 203.574 65.3506 203.278 65.3506 cv
202.858 65.3506 202.498 65.4952 202.195 65.7842 cv
201.892 66.0723 201.741 66.5547 201.741 67.2305 cv
cp
201.132 67.2227 mo
201.132 66.4786 201.331 65.8956 201.73 65.4747 cv
202.129 65.0538 202.644 64.8428 203.275 64.8428 cv
203.688 64.8428 204.061 64.9415 204.393 65.1397 cv
204.725 65.337 204.978 65.6133 205.152 65.9668 cv
205.326 66.3213 205.413 66.7217 205.413 67.171 cv
205.413 67.626 205.321 68.0323 205.138 68.3916 cv
204.955 68.75 204.695 69.0225 204.359 69.2061 cv
204.023 69.3916 203.661 69.4834 203.272 69.4834 cv
202.851 69.4834 202.474 69.3819 202.143 69.1778 cv
201.811 68.9737 201.559 68.6954 201.388 68.3428 cv
201.217 67.9893 201.132 67.6163 201.132 67.2227 cv
f
206.25 69.4053 mo
206.25 68.7803 li
206.875 68.7803 li
206.875 69.4053 li
206.25 69.4053 li
cp
206.25 66.7803 mo
206.25 66.1553 li
206.875 66.1553 li
206.875 66.7803 li
206.25 66.7803 li
f
211.746 68.168 mo
212.089 68.2637 212.372 68.4063 212.595 68.5958 cv
212.944 68.2774 213.119 67.7989 213.119 67.1602 cv
213.119 66.7969 213.057 66.4795 212.933 66.2081 cv
212.81 65.9366 212.629 65.7256 212.391 65.5752 cv
212.153 65.4258 211.886 65.3506 211.59 65.3506 cv
211.146 65.3506 210.779 65.502 210.486 65.8057 cv
210.194 66.1084 210.048 66.5616 210.048 67.1631 cv
210.048 67.7471 210.193 68.1954 210.482 68.5069 cv
210.771 68.8194 211.14 68.9756 211.59 68.9756 cv
211.802 68.9756 212.002 68.9356 212.19 68.8565 cv
212.004 68.7354 211.808 68.6504 211.602 68.5987 cv
211.746 68.168 li
cp
213.054 68.9268 mo
213.329 69.1163 213.582 69.2549 213.814 69.3428 cv
213.64 69.7549 li
213.318 69.6397 212.997 69.4561 212.677 69.2051 cv
212.345 69.3907 211.978 69.4834 211.576 69.4834 cv
211.169 69.4834 210.801 69.3858 210.471 69.1895 cv
210.14 68.9942 209.885 68.7188 209.707 68.3643 cv
209.528 68.0088 209.439 67.6094 209.439 67.1651 cv
209.439 66.7217 209.529 66.3194 209.708 65.9561 cv
209.888 65.5928 210.143 65.3174 210.475 65.127 cv
210.806 64.9376 211.177 64.8428 211.586 64.8428 cv
212 64.8428 212.374 64.9415 212.707 65.1377 cv
213.039 65.335 213.292 65.6104 213.466 65.9639 cv
213.641 66.3174 213.728 66.7168 213.728 67.1612 cv
213.728 67.5303 213.672 67.8624 213.561 68.1573 cv
213.449 68.4522 213.28 68.7081 213.054 68.9268 cv
f
214.55 69.4053 mo
214.55 64.921 li
217.776 64.921 li
217.776 65.4522 li
215.144 65.4522 li
215.144 66.8194 li
217.604 66.8194 li
217.604 67.3506 li
215.144 67.3506 li
215.144 68.8741 li
217.878 68.8741 li
217.878 69.4053 li
214.55 69.4053 li
f
223.26 68.1319 mo
220.307 68.1319 li
220.307 67.6163 li
223.26 67.6163 li
223.26 68.1319 li
cp
223.26 66.7725 mo
220.307 66.7725 li
220.307 66.2569 li
223.26 66.2569 li
223.26 66.7725 li
f
225.646 65.5069 mo
225.646 64.9756 li
228.545 64.9756 li
228.545 65.4053 li
228.259 65.71 227.976 66.1143 227.696 66.6182 cv
227.415 67.1221 227.198 67.6397 227.045 68.1719 cv
226.935 68.5479 226.865 68.9581 226.834 69.4053 cv
226.272 69.4053 li
226.278 69.0528 226.347 68.626 226.48 68.126 cv
226.612 67.626 226.803 67.1446 227.051 66.6807 cv
227.299 66.2159 227.563 65.8252 227.842 65.5069 cv
225.646 65.5069 li
f
229.089 68.2334 mo
229.667 68.1944 li
229.709 68.4717 229.808 68.6807 229.962 68.8204 cv
230.116 68.96 230.304 69.0303 230.526 69.0303 cv
230.794 69.0303 231.019 68.9307 231.2 68.7305 cv
231.381 68.5313 231.471 68.2657 231.471 67.9356 cv
231.471 67.6221 231.384 67.3741 231.211 67.1934 cv
231.038 67.0118 230.807 66.921 230.519 66.921 cv
230.339 66.921 230.18 66.962 230.039 67.043 cv
229.898 67.1241 229.787 67.2295 229.706 67.3584 cv
229.19 67.2881 li
229.628 64.9834 li
231.846 64.9834 li
231.846 65.5069 li
230.061 65.5069 li
229.824 66.7168 li
230.092 66.5303 230.374 66.4366 230.668 66.4366 cv
231.058 66.4366 231.387 66.5723 231.655 66.8428 cv
231.923 67.1143 232.057 67.462 232.057 67.8877 cv
232.057 68.294 231.939 68.6436 231.704 68.9395 cv
231.417 69.3018 231.024 69.4834 230.527 69.4834 cv
230.12 69.4834 229.788 69.3692 229.53 69.1416 cv
229.272 68.9131 229.126 68.6104 229.089 68.2334 cv
f
237.254 69.4053 mo
234.286 69.4053 li
234.286 68.8897 li
237.254 68.8897 li
237.254 69.4053 li
cp
235.512 68.6084 mo
235.512 67.3819 li
234.286 67.3819 li
234.286 66.8741 li
235.512 66.8741 li
235.512 65.6475 li
236.028 65.6475 li
236.028 66.8741 li
237.254 66.8741 li
237.254 67.3819 li
236.028 67.3819 li
236.028 68.6084 li
235.512 68.6084 li
f
241.249 67.8272 mo
241.249 65.8096 li
239.837 67.8272 li
241.249 67.8272 li
cp
241.249 69.4053 mo
241.249 68.335 li
239.295 68.335 li
239.295 67.8272 li
241.35 64.9288 li
241.795 64.9288 li
241.795 67.8272 li
242.397 67.8272 li
242.397 68.335 li
241.795 68.335 li
241.795 69.4053 li
241.249 69.4053 li
f
248.66 67.5928 mo
248.521 67.5928 248.406 67.6514 248.315 67.7676 cv
248.224 67.8838 248.179 68.0977 248.179 68.4082 cv
248.179 68.6895 248.225 68.8877 248.317 69.004 cv
248.409 69.1202 248.522 69.1788 248.657 69.1788 cv
248.797 69.1788 248.914 69.1202 249.004 69.004 cv
249.095 68.8877 249.14 68.6749 249.14 68.3663 cv
249.14 68.0811 249.094 67.8809 249.002 67.7657 cv
248.911 67.6504 248.796 67.5928 248.66 67.5928 cv
cp
247.703 68.3536 mo
247.703 68.0323 247.783 67.7598 247.944 67.5362 cv
248.104 67.3135 248.337 67.2022 248.644 67.2022 cv
248.925 67.2022 249.157 67.3028 249.341 67.503 cv
249.525 67.7042 249.617 67.9981 249.617 68.3877 cv
249.617 68.7666 249.524 69.0577 249.337 69.2627 cv
249.152 69.4668 248.921 69.5694 248.648 69.5694 cv
248.377 69.5694 248.152 69.4678 247.972 69.2657 cv
247.792 69.0626 247.703 68.7588 247.703 68.3536 cv
cp
245.771 69.5694 mo
248.213 64.8428 li
248.659 64.8428 li
246.225 69.5694 li
245.771 69.5694 li
cp
245.767 65.2334 mo
245.63 65.2334 245.516 65.292 245.425 65.4082 cv
245.334 65.5245 245.289 65.7383 245.289 66.0489 cv
245.289 66.3321 245.334 66.5313 245.427 66.6465 cv
245.519 66.7618 245.632 66.8194 245.767 66.8194 cv
245.907 66.8194 246.022 66.7608 246.113 66.6446 cv
246.204 66.5284 246.25 66.3155 246.25 66.0069 cv
246.25 65.7217 246.204 65.5215 246.112 65.4063 cv
246.019 65.2911 245.905 65.2334 245.767 65.2334 cv
cp
244.812 65.9942 mo
244.812 65.6749 244.892 65.4034 245.053 65.1788 cv
245.214 64.9551 245.447 64.8428 245.752 64.8428 cv
246.033 64.8428 246.266 64.9434 246.45 65.1436 cv
246.634 65.3448 246.726 65.6387 246.726 66.0284 cv
246.726 66.4073 246.633 66.6983 246.447 66.9034 cv
246.26 67.1075 246.031 67.21 245.758 67.21 cv
245.488 67.21 245.262 67.1094 245.083 66.9073 cv
244.902 66.7061 244.812 66.4014 244.812 65.9942 cv
f
178.87 75.6876 mo
179.463 75.837 li
179.339 76.3252 179.116 76.6963 178.794 76.9532 cv
178.472 77.209 178.078 77.337 177.612 77.337 cv
177.13 77.337 176.738 77.2383 176.436 77.042 cv
176.134 76.8448 175.904 76.5596 175.747 76.1856 cv
175.589 75.8126 175.51 75.4112 175.51 74.9834 cv
175.51 74.5157 175.599 74.1084 175.777 73.7598 cv
175.955 73.4122 176.208 73.1475 176.536 72.9678 cv
176.864 72.7862 177.226 72.6963 177.62 72.6963 cv
178.067 72.6963 178.443 72.8106 178.748 73.0391 cv
179.053 73.2676 179.265 73.5889 179.385 74.003 cv
178.799 74.1407 li
178.696 73.8145 178.545 73.5772 178.349 73.4278 cv
178.152 73.2784 177.904 73.2042 177.605 73.2042 cv
177.263 73.2042 176.976 73.2872 176.746 73.4522 cv
176.515 73.6172 176.353 73.8399 176.26 74.1182 cv
176.167 74.3965 176.12 74.6836 176.12 74.9795 cv
176.12 75.3614 176.175 75.6944 176.286 75.9795 cv
176.396 76.2647 176.569 76.4776 176.802 76.6182 cv
177.036 76.7588 177.29 76.8292 177.562 76.8292 cv
177.893 76.8292 178.173 76.7334 178.403 76.5411 cv
178.633 76.3497 178.789 76.0645 178.87 75.6876 cv
f
179.913 76.2901 mo
180.46 76.2042 li
180.491 76.421 180.576 76.587 180.715 76.7032 cv
180.854 76.8184 181.05 76.876 181.3 76.876 cv
181.553 76.876 181.74 76.8252 181.863 76.7217 cv
181.985 76.6192 182.046 76.4991 182.046 76.3604 cv
182.046 76.2364 181.991 76.1387 181.88 76.0674 cv
181.803 76.0186 181.616 75.9571 181.317 75.8819 cv
180.916 75.7803 180.637 75.6924 180.481 75.6172 cv
180.326 75.543 180.208 75.4405 180.127 75.3086 cv
180.047 75.1778 180.007 75.0323 180.007 74.8731 cv
180.007 74.7286 180.04 74.5948 180.106 74.4717 cv
180.172 74.3487 180.262 74.2461 180.376 74.1651 cv
180.461 74.1016 180.578 74.0479 180.725 74.004 cv
180.873 73.96 181.031 73.9385 181.199 73.9385 cv
181.454 73.9385 181.677 73.9756 181.869 74.0489 cv
182.061 74.1221 182.203 74.2227 182.294 74.3477 cv
182.386 74.4737 182.449 74.6416 182.483 74.8526 cv
181.944 74.9229 li
181.92 74.7559 181.85 74.626 181.733 74.5323 cv
181.616 74.4385 181.451 74.3916 181.238 74.3916 cv
180.986 74.3916 180.807 74.4336 180.699 74.5166 cv
180.592 74.5997 180.538 74.6973 180.538 74.8096 cv
180.538 74.8809 180.561 74.9444 180.605 75.001 cv
180.65 75.0606 180.72 75.1094 180.815 75.1475 cv
180.87 75.168 181.031 75.2149 181.299 75.2881 cv
181.687 75.3916 181.958 75.4776 182.112 75.543 cv
182.267 75.6094 182.388 75.7061 182.477 75.8321 cv
182.564 75.9581 182.608 76.1153 182.608 76.3028 cv
182.608 76.4854 182.555 76.6582 182.448 76.8204 cv
182.341 76.9825 182.187 77.1075 181.985 77.1963 cv
181.783 77.2852 181.555 77.3292 181.3 77.3292 cv
180.879 77.3292 180.557 77.2422 180.336 77.0674 cv
180.115 76.8926 179.974 76.6338 179.913 76.2901 cv
f
183.433 77.2588 mo
183.433 72.7745 li
184.027 72.7745 li
184.027 77.2588 li
183.433 77.2588 li
f
186.055 78.5792 mo
185.753 78.1963 185.498 77.7471 185.29 77.2344 cv
185.081 76.7208 184.977 76.1885 184.977 75.6387 cv
184.977 75.1534 185.055 74.6885 185.211 74.2452 cv
185.393 73.7295 185.674 73.2159 186.055 72.7042 cv
186.446 72.7042 li
186.201 73.128 186.04 73.4307 185.961 73.6124 cv
185.837 73.8936 185.741 74.1866 185.67 74.4922 cv
185.583 74.8731 185.54 75.2569 185.54 75.6416 cv
185.54 76.6221 185.841 77.6006 186.446 78.5792 cv
186.055 78.5792 li
f
188.296 77.2588 mo
188.296 73.3057 li
186.819 73.3057 li
186.819 72.7745 li
190.366 72.7745 li
190.366 73.3057 li
188.89 73.3057 li
188.89 77.2588 li
188.296 77.2588 li
f
190.893 77.2588 mo
190.893 72.7745 li
191.439 72.7745 li
191.439 77.2588 li
190.893 77.2588 li
f
192.658 78.5792 mo
192.268 78.5792 li
192.877 77.6006 193.182 76.6221 193.182 75.6416 cv
193.182 75.2588 193.138 74.878 193.05 74.501 cv
192.98 74.1963 192.884 73.9024 192.76 73.6211 cv
192.68 73.4376 192.516 73.1319 192.268 72.7042 cv
192.658 72.7042 li
193.042 73.2159 193.325 73.7295 193.508 74.2452 cv
193.666 74.6885 193.744 75.1534 193.744 75.6387 cv
193.744 76.1885 193.638 76.7208 193.427 77.2344 cv
193.216 77.7471 192.96 78.1963 192.658 78.5792 cv
f
194.523 77.2588 mo
194.523 76.6338 li
195.148 76.6338 li
195.148 77.2588 li
194.523 77.2588 li
cp
194.523 74.6338 mo
194.523 74.0088 li
195.148 74.0088 li
195.148 74.6338 li
194.523 74.6338 li
f
200.02 76.0215 mo
200.363 76.1172 200.646 76.2598 200.868 76.4493 cv
201.217 76.1309 201.392 75.6524 201.392 75.0137 cv
201.392 74.6504 201.33 74.3331 201.207 74.0616 cv
201.083 73.7901 200.902 73.5792 200.665 73.4288 cv
200.426 73.2794 200.159 73.2042 199.863 73.2042 cv
199.42 73.2042 199.052 73.3555 198.76 73.6592 cv
198.468 73.962 198.322 74.4151 198.322 75.0166 cv
198.322 75.6006 198.466 76.0489 198.755 76.3604 cv
199.044 76.6729 199.414 76.8292 199.863 76.8292 cv
200.076 76.8292 200.276 76.7891 200.464 76.71 cv
200.278 76.5889 200.082 76.504 199.876 76.4522 cv
200.02 76.0215 li
cp
201.328 76.7803 mo
201.603 76.9698 201.855 77.1084 202.087 77.1963 cv
201.913 77.6084 li
201.591 77.4932 201.271 77.3096 200.951 77.0586 cv
200.618 77.2442 200.251 77.337 199.849 77.337 cv
199.443 77.337 199.075 77.2393 198.744 77.043 cv
198.414 76.8477 198.159 76.5723 197.98 76.2178 cv
197.802 75.8624 197.712 75.4629 197.712 75.0186 cv
197.712 74.5752 197.802 74.1729 197.981 73.8096 cv
198.161 73.4463 198.417 73.171 198.748 72.9805 cv
199.08 72.7911 199.45 72.6963 199.86 72.6963 cv
200.274 72.6963 200.647 72.795 200.98 72.9913 cv
201.312 73.1885 201.565 73.4639 201.74 73.8174 cv
201.914 74.171 202.001 74.5704 202.001 75.0147 cv
202.001 75.3838 201.946 75.7159 201.834 76.0108 cv
201.722 76.3057 201.553 76.5616 201.328 76.7803 cv
f
202.823 77.2588 mo
202.823 72.7745 li
206.05 72.7745 li
206.05 73.3057 li
203.417 73.3057 li
203.417 74.6729 li
205.878 74.6729 li
205.878 75.2042 li
203.417 75.2042 li
203.417 76.7276 li
206.151 76.7276 li
206.151 77.2588 li
202.823 77.2588 li
f
211.534 75.9854 mo
208.581 75.9854 li
208.581 75.4698 li
211.534 75.4698 li
211.534 75.9854 li
cp
211.534 74.626 mo
208.581 74.626 li
208.581 74.1104 li
211.534 74.1104 li
211.534 74.626 li
f
214.615 73.8887 mo
214.615 74.1006 214.683 74.2745 214.819 74.4082 cv
214.955 74.543 215.134 74.6104 215.356 74.6104 cv
215.571 74.6104 215.747 74.544 215.882 74.4102 cv
216.017 74.2764 216.084 74.1133 216.084 73.919 cv
216.084 73.7178 216.015 73.5479 215.876 73.4102 cv
215.736 73.2725 215.561 73.2042 215.35 73.2042 cv
215.136 73.2042 214.96 73.2715 214.822 73.4063 cv
214.685 73.5401 214.615 73.7012 214.615 73.8887 cv
cp
214.436 75.9649 mo
214.436 76.1221 214.472 76.2745 214.545 76.421 cv
214.619 76.5684 214.73 76.6827 214.878 76.7627 cv
215.026 76.8438 215.185 76.8838 215.354 76.8838 cv
215.62 76.8838 215.838 76.7989 216.009 76.6299 cv
216.179 76.46 216.264 76.2442 216.264 75.9825 cv
216.264 75.7178 216.176 75.4981 216.001 75.3243 cv
215.826 75.1504 215.604 75.0635 215.336 75.0635 cv
215.074 75.0635 214.858 75.1495 214.689 75.3213 cv
214.52 75.4922 214.436 75.7071 214.436 75.9649 cv
cp
214.726 74.8233 mo
214.498 74.7393 214.328 74.6202 214.218 74.4649 cv
214.108 74.3096 214.053 74.1241 214.053 73.9082 cv
214.053 73.5811 214.17 73.3067 214.405 73.085 cv
214.64 72.8624 214.952 72.751 215.342 72.751 cv
215.734 72.751 216.049 72.8643 216.289 73.0928 cv
216.527 73.3194 216.646 73.5967 216.646 73.9229 cv
216.646 74.1319 216.592 74.3126 216.484 74.4668 cv
216.375 74.6202 216.21 74.7393 215.989 74.8233 cv
216.262 74.9131 216.47 75.0577 216.612 75.2588 cv
216.755 75.459 216.826 75.6983 216.826 75.9756 cv
216.826 76.3604 216.691 76.6827 216.42 76.9444 cv
216.148 77.2061 215.792 77.337 215.35 77.337 cv
214.908 77.337 214.551 77.2061 214.28 76.9434 cv
214.009 76.6807 213.873 76.3526 213.873 75.96 cv
213.873 75.668 213.947 75.4239 214.095 75.2266 cv
214.243 75.0294 214.453 74.8946 214.726 74.8233 cv
f
219.127 75.6807 mo
219.127 73.6631 li
217.716 75.6807 li
219.127 75.6807 li
cp
219.127 77.2588 mo
219.127 76.1885 li
217.174 76.1885 li
217.174 75.6807 li
219.229 72.7823 li
219.674 72.7823 li
219.674 75.6807 li
220.276 75.6807 li
220.276 76.1885 li
219.674 76.1885 li
219.674 77.2588 li
219.127 77.2588 li
f
225.527 77.2588 mo
222.559 77.2588 li
222.559 76.7432 li
225.527 76.7432 li
225.527 77.2588 li
cp
223.785 76.462 mo
223.785 75.2354 li
222.559 75.2354 li
222.559 74.7276 li
223.785 74.7276 li
223.785 73.501 li
224.301 73.501 li
224.301 74.7276 li
225.527 74.7276 li
225.527 75.2354 li
224.301 75.2354 li
224.301 76.462 li
223.785 76.462 li
f
229.522 75.6807 mo
229.522 73.6631 li
228.111 75.6807 li
229.522 75.6807 li
cp
229.522 77.2588 mo
229.522 76.1885 li
227.569 76.1885 li
227.569 75.6807 li
229.624 72.7823 li
230.069 72.7823 li
230.069 75.6807 li
230.67 75.6807 li
230.67 76.1885 li
230.069 76.1885 li
230.069 77.2588 li
229.522 77.2588 li
f
236.933 75.4463 mo
236.794 75.4463 236.679 75.5049 236.588 75.6211 cv
236.498 75.7374 236.453 75.9512 236.453 76.2618 cv
236.453 76.543 236.499 76.7413 236.59 76.8575 cv
236.682 76.9737 236.795 77.0323 236.93 77.0323 cv
237.071 77.0323 237.187 76.9737 237.278 76.8575 cv
237.369 76.7413 237.414 76.5284 237.414 76.2198 cv
237.414 75.9346 237.368 75.7344 237.276 75.6192 cv
237.184 75.504 237.07 75.4463 236.933 75.4463 cv
cp
235.976 76.2071 mo
235.976 75.8858 236.056 75.6133 236.217 75.3897 cv
236.377 75.167 236.611 75.0557 236.918 75.0557 cv
237.199 75.0557 237.43 75.1563 237.615 75.3565 cv
237.798 75.5577 237.89 75.8516 237.89 76.2413 cv
237.89 76.6202 237.797 76.9112 237.611 77.1163 cv
237.425 77.3204 237.195 77.4229 236.921 77.4229 cv
236.651 77.4229 236.425 77.3213 236.246 77.1192 cv
236.066 76.9161 235.976 76.6124 235.976 76.2071 cv
cp
234.044 77.4229 mo
236.487 72.6963 li
236.932 72.6963 li
234.499 77.4229 li
234.044 77.4229 li
cp
234.041 73.087 mo
233.904 73.087 233.79 73.1456 233.699 73.2618 cv
233.608 73.378 233.562 73.5918 233.562 73.9024 cv
233.562 74.1856 233.608 74.3848 233.701 74.5 cv
233.792 74.6153 233.906 74.6729 234.041 74.6729 cv
234.18 74.6729 234.295 74.6143 234.386 74.4981 cv
234.477 74.3819 234.523 74.169 234.523 73.8604 cv
234.523 73.5752 234.477 73.375 234.385 73.2598 cv
234.292 73.1446 234.178 73.087 234.041 73.087 cv
cp
233.085 73.8477 mo
233.085 73.5284 233.166 73.2569 233.327 73.0323 cv
233.488 72.8086 233.72 72.6963 234.026 72.6963 cv
234.306 72.6963 234.54 72.7969 234.723 72.9971 cv
234.908 73.1983 235 73.4922 235 73.8819 cv
235 74.2608 234.907 74.5518 234.72 74.7569 cv
234.534 74.961 234.304 75.0635 234.032 75.0635 cv
233.761 75.0635 233.536 74.9629 233.356 74.7608 cv
233.175 74.5596 233.085 74.2549 233.085 73.8477 cv
f
192.322 56.5674 mo
192.322 56.169 li
195.962 56.169 li
195.962 56.5674 li
192.322 56.5674 li
f
195.803 56.5674 mo
195.803 56.169 li
199.443 56.169 li
199.443 56.5674 li
195.803 56.5674 li
f
199.284 56.5674 mo
199.284 56.169 li
202.924 56.169 li
202.924 56.5674 li
199.284 56.5674 li
f
197.072 72.3174 mo
197.072 71.919 li
200.712 71.919 li
200.712 72.3174 li
197.072 72.3174 li
f
200.553 72.3174 mo
200.553 71.919 li
204.193 71.919 li
204.193 72.3174 li
200.553 72.3174 li
f
204.034 72.3174 mo
204.034 71.919 li
207.674 71.919 li
207.674 72.3174 li
204.034 72.3174 li
f
209.322 64.3174 mo
209.322 63.919 li
212.962 63.919 li
212.962 64.3174 li
209.322 64.3174 li
f
212.803 64.3174 mo
212.803 63.919 li
216.443 63.919 li
216.443 64.3174 li
212.803 64.3174 li
f
216.284 64.3174 mo
216.284 63.919 li
219.924 63.919 li
219.924 64.3174 li
216.284 64.3174 li
f
0.8 lw
4 ml
60.7159 216.451 mo
60.7159 216.451 67.0201 216.368 68.5562 215.836 cv
70.0923 215.306 72.5884 215.493 72.5884 204.493 cv
72.5884 193.493 76.188 125.171 80.3848 100.332 cv
80.3848 100.332 80.9737 93.9737 83.6168 93.9737 cv
86.1309 93.9737 85.2652 92.5059 88.587 93.6846 cv
91.9087 94.8633 91.5889 95.4463 92.5967 96.2081 cv
93.4639 96.8653 96.9815 105.511 97.4356 107.519 cv
97.8897 109.528 103.74 134.495 104.809 141.686 cv
105.878 148.877 114.948 187.89 119.403 194.244 cv
123.857 200.595 125.365 209.416 152.89 214.037 cv
152.89 214.037 178.303 216.105 181.609 215.798 cv
@
60.7159 213.265 mo
60.7159 213.265 65.4771 211.4 67.628 209.948 cv
69.7789 208.495 72.5503 206.86 74.0865 205.79 cv
75.6226 204.719 81.271 201.358 90.6763 200.841 cv
100.082 200.326 108.272 195.098 114.192 186.875 cv
120.113 178.653 124.753 172.25 126.034 171.289 cv
127.314 170.327 134.626 162.158 135.138 161.347 cv
135.65 160.537 141.602 153.169 143.059 152.291 cv
144.516 151.411 151.195 144.874 154.728 144.048 cv
158.26 143.222 163.849 140.958 174.704 148.882 cv
174.704 148.882 182.948 153.412 184.599 155.703 cv
186.249 157.993 197.588 167.844 201.278 171.976 cv
204.968 176.107 222.281 190.16 226.932 192.937 cv
231.583 195.715 238.02 199.443 240.912 200.489 cv
246.225 202.41 261.88 205.543 266.366 206.019 cv
270.851 206.496 281.047 206.266 282.54 207.322 cv
@
46.1651 216.201 mo
46.1651 216.201 71.2603 217.653 85.7544 211.323 cv
100.249 204.992 114.512 197.798 139.955 202.584 cv
165.397 207.37 166.101 207.89 175.932 209.549 cv
185.764 211.208 225.775 217.096 258.262 216.211 cv
@
30.6138 174.676 mo
35.521 120.098 li
35.521 120.098 38.2491 114.982 40.1377 112.822 cv
42.0264 110.661 45.0538 107.175 45.9751 106.705 cv
46.8965 106.232 49.6617 103.877 50.8907 103.524 cv
52.1197 103.169 55.5103 102.816 55.5103 102.816 cv
61.0357 100.336 li
66.2584 95.9776 li
70.7071 87.3721 li
70.7071 87.3721 74.5347 79.9581 75.6163 78.6573 cv
76.6978 77.3565 79.3096 74.6573 80.6919 73.4795 cv
82.0743 72.2999 84.8394 68.6309 85.9146 68.0499 cv
86.9898 67.4698 89.46 64.9874 90.3755 64.2852 cv
91.2911 63.5831 95.8995 61.2266 95.8995 61.2266 cv
101.123 58.7413 li
105.731 55.6788 li
110.794 52.9737 li
115.569 50.4991 li
121.399 48.4434 li
126.416 47.4405 li
131.154 45.8604 li
136.454 44.6045 li
141.376 43.5479 li
146.355 42.5469 li
151.815 41.3038 li
157.038 41.4317 li
161.723 40.4805 li
166.254 40.127 li
172.246 39.4795 li
176.553 39.3067 li
181.923 39.6563 li
186.077 39.1895 li
191.914 38.4815 li
196.971 38.7188 li
201.893 39.6065 li
207.27 38.7217 li
212.486 38.9542 li
217.254 38.6055 li
222.202 39.1104 li
227.546 38.9581 li
232.462 38.4874 li
237.071 38.2413 li
242.204 39.8467 li
246.902 39.1944 li
252.739 38.4981 li
257.654 39.3604 li
262.263 39.3604 li
267.326 42.96 li
272.635 40.6055 li
277.566 41.4434 li
282.687 41.9327 li
@
37.3052 120.853 mo
34.2652 120.853 li
34.2652 118.521 li
37.3052 118.521 li
37.3052 120.853 li
ef
42.3052 113.186 mo
39.2652 113.186 li
39.2652 110.855 li
42.3052 110.855 li
42.3052 113.186 li
ef
47.4717 107.686 mo
44.4317 107.686 li
44.4317 105.354 li
47.4717 105.354 li
47.4717 107.686 li
ef
52.3052 104.519 mo
49.2652 104.519 li
49.2652 102.187 li
52.3052 102.187 li
52.3052 104.519 li
ef
57.5557 103.086 mo
54.5157 103.086 li
54.5157 100.755 li
57.5557 100.755 li
57.5557 103.086 li
ef
62.3052 101.52 mo
59.2652 101.52 li
59.2652 99.1876 li
62.3052 99.1876 li
62.3052 101.52 li
ef
67.4717 97.0186 mo
64.4317 97.0186 li
64.4317 94.6866 li
67.4717 94.6866 li
67.4717 97.0186 li
ef
72.4722 88.0196 mo
69.4322 88.0196 li
69.4322 85.6876 li
72.4722 85.6876 li
72.4722 88.0196 li
ef
77.3399 79.3516 mo
74.2999 79.3516 li
74.2999 77.0196 li
77.3399 77.0196 li
77.3399 79.3516 li
ef
82.6382 74.0186 mo
79.5982 74.0186 li
79.5982 71.6866 li
82.6382 71.6866 li
82.6382 74.0186 li
ef
87.7696 69.2159 mo
84.7295 69.2159 li
84.7295 66.8848 li
87.7696 66.8848 li
87.7696 69.2159 li
ef
92.6382 64.6856 mo
89.5982 64.6856 li
89.5982 62.3536 li
92.6382 62.3536 li
92.6382 64.6856 li
ef
97.9351 61.9913 mo
94.8951 61.9913 li
94.8951 59.6592 li
97.9351 59.6592 li
97.9351 61.9913 li
ef
102.769 59.9913 mo
99.7286 59.9913 li
99.7286 57.6592 li
102.769 57.6592 li
102.769 59.9913 li
ef
107.936 56.3252 mo
104.896 56.3252 li
104.896 53.9932 li
107.936 53.9932 li
107.936 56.3252 li
ef
112.714 53.9678 mo
109.674 53.9678 li
109.674 51.6358 li
112.714 51.6358 li
112.714 53.9678 li
ef
117.806 51.0186 mo
114.766 51.0186 li
114.766 48.6866 li
117.806 48.6866 li
117.806 51.0186 li
ef
122.639 49.3526 mo
119.599 49.3526 li
119.599 47.0206 li
122.639 47.0206 li
122.639 49.3526 li
ef
132.806 46.8526 mo
129.766 46.8526 li
129.766 44.5206 li
132.806 44.5206 li
132.806 46.8526 li
ef
127.969 48.002 mo
124.929 48.002 li
124.929 45.67 li
127.969 45.67 li
127.969 48.002 li
ef
138.139 45.8526 mo
135.099 45.8526 li
135.099 43.5206 li
138.139 43.5206 li
138.139 45.8526 li
ef
142.972 44.5186 mo
139.932 44.5186 li
139.932 42.1866 li
142.972 42.1866 li
142.972 44.5186 li
ef
148.139 43.712 mo
145.099 43.712 li
145.099 41.3809 li
148.139 41.3809 li
148.139 43.712 li
ef
153.139 42.5186 mo
150.099 42.5186 li
150.099 40.1866 li
153.139 40.1866 li
153.139 42.5186 li
ef
158.306 42.3526 mo
155.266 42.3526 li
155.266 40.0206 li
158.306 40.0206 li
158.306 42.3526 li
ef
163.306 41.6856 mo
160.266 41.6856 li
160.266 39.3545 li
163.306 39.3545 li
163.306 41.6856 li
ef
168.145 41.1534 mo
165.104 41.1534 li
165.104 38.8223 li
168.145 38.8223 li
168.145 41.1534 li
ef
173.306 40.5196 mo
170.266 40.5196 li
170.266 38.1876 li
173.306 38.1876 li
173.306 40.5196 li
ef
178.139 40.3526 mo
175.099 40.3526 li
175.099 38.0206 li
178.139 38.0206 li
178.139 40.3526 li
ef
183.306 41.0186 mo
180.266 41.0186 li
180.266 38.6866 li
183.306 38.6866 li
183.306 41.0186 li
ef
188.306 40.1856 mo
185.266 40.1856 li
185.266 37.8545 li
188.306 37.8545 li
188.306 40.1856 li
ef
193.639 39.6856 mo
190.599 39.6856 li
190.599 37.3545 li
193.639 37.3545 li
193.639 39.6856 li
ef
198.586 39.7891 mo
195.546 39.7891 li
195.546 37.4571 li
198.586 37.4571 li
198.586 39.7891 li
ef
203.602 40.6583 mo
200.562 40.6583 li
200.562 38.3262 li
203.602 38.3262 li
203.602 40.6583 li
ef
208.639 39.8526 mo
205.599 39.8526 li
205.599 37.5206 li
208.639 37.5206 li
208.639 39.8526 li
ef
213.639 40.0186 mo
210.599 40.0186 li
210.599 37.6866 li
213.639 37.6866 li
213.639 40.0186 li
ef
218.602 39.6583 mo
215.562 39.6583 li
215.562 37.3262 li
218.602 37.3262 li
218.602 39.6583 li
ef
223.639 40.3526 mo
220.599 40.3526 li
220.599 38.0206 li
223.639 38.0206 li
223.639 40.3526 li
ef
228.949 39.9952 mo
225.909 39.9952 li
225.909 37.6641 li
228.949 37.6641 li
228.949 39.9952 li
ef
233.639 39.3526 mo
230.599 39.3526 li
230.599 37.0206 li
233.639 37.0206 li
233.639 39.3526 li
ef
238.769 39.3252 mo
235.729 39.3252 li
235.729 36.9932 li
238.769 36.9932 li
238.769 39.3252 li
ef
243.639 41.0196 mo
240.599 41.0196 li
240.599 38.6876 li
243.639 38.6876 li
243.639 41.0196 li
ef
248.639 40.0196 mo
245.599 40.0196 li
245.599 37.6876 li
248.639 37.6876 li
248.639 40.0196 li
ef
253.805 39.8526 mo
250.765 39.8526 li
250.765 37.5206 li
253.805 37.5206 li
253.805 39.8526 li
ef
258.935 40.6583 mo
255.896 40.6583 li
255.896 38.3262 li
258.935 38.3262 li
258.935 40.6583 li
ef
264.045 40.6856 mo
261.005 40.6856 li
261.005 38.3545 li
264.045 38.3545 li
264.045 40.6856 li
ef
268.856 43.8692 mo
265.816 43.8692 li
265.816 41.5372 li
268.856 41.5372 li
268.856 43.8692 li
ef
274.074 42.2442 mo
271.035 42.2442 li
271.035 39.9131 li
274.074 39.9131 li
274.074 42.2442 li
ef
279.102 42.4913 mo
276.062 42.4913 li
276.062 40.1592 li
279.102 40.1592 li
279.102 42.4913 li
ef
172.186 50.4913 mo
169.146 50.4913 li
169.146 48.1592 li
172.186 48.1592 li
172.186 50.4913 li
ef
60.7159 216.451 mo
60.7159 216.451 67.0201 216.368 68.5562 215.836 cv
70.0923 215.306 72.5884 215.493 72.5884 204.493 cv
72.5884 193.493 76.188 125.171 80.3848 100.332 cv
80.3848 100.332 80.9737 93.9737 83.6168 93.9737 cv
86.1309 93.9737 85.2652 92.5059 88.587 93.6846 cv
91.9087 94.8633 91.5889 95.4463 92.5967 96.2081 cv
93.4639 96.8653 96.9815 105.511 97.4356 107.519 cv
97.8897 109.528 103.74 134.495 104.809 141.686 cv
105.878 148.877 114.948 187.89 119.403 194.244 cv
123.857 200.595 125.365 209.416 152.89 214.037 cv
152.89 214.037 178.303 216.105 181.609 215.798 cv
@
60.7159 213.265 mo
60.7159 213.265 65.4771 211.4 67.628 209.948 cv
69.7789 208.495 72.5503 206.86 74.0865 205.79 cv
75.6226 204.719 81.271 201.358 90.6763 200.841 cv
100.082 200.326 108.272 195.098 114.192 186.875 cv
120.113 178.653 124.753 172.25 126.034 171.289 cv
127.314 170.327 134.626 162.158 135.138 161.347 cv
135.65 160.537 141.602 153.169 143.059 152.291 cv
144.516 151.411 151.195 144.874 154.728 144.048 cv
158.26 143.222 163.849 140.958 174.704 148.882 cv
174.704 148.882 182.948 153.412 184.599 155.703 cv
186.249 157.993 197.588 167.844 201.278 171.976 cv
204.968 176.107 222.281 190.16 226.932 192.937 cv
231.583 195.715 238.02 199.443 240.912 200.489 cv
246.225 202.41 261.88 205.543 266.366 206.019 cv
270.851 206.496 281.047 206.266 282.54 207.322 cv
@
46.1651 216.201 mo
46.1651 216.201 71.2603 217.653 85.7544 211.323 cv
100.249 204.992 114.512 197.798 139.955 202.584 cv
165.397 207.37 166.101 207.89 175.932 209.549 cv
185.764 211.208 225.775 217.096 258.262 216.211 cv
@
30.6138 174.676 mo
35.521 120.098 li
35.521 120.098 38.2491 114.982 40.1377 112.822 cv
42.0264 110.661 45.0538 107.175 45.9751 106.705 cv
46.8965 106.232 49.6617 103.877 50.8907 103.524 cv
52.1197 103.169 55.5103 102.816 55.5103 102.816 cv
61.0357 100.336 li
66.2584 95.9776 li
70.7071 87.3721 li
70.7071 87.3721 74.5347 79.9581 75.6163 78.6573 cv
76.6978 77.3565 79.3096 74.6573 80.6919 73.4795 cv
82.0743 72.2999 84.8394 68.6309 85.9146 68.0499 cv
86.9898 67.4698 89.46 64.9874 90.3755 64.2852 cv
91.2911 63.5831 95.8995 61.2266 95.8995 61.2266 cv
101.123 58.7413 li
105.731 55.6788 li
110.794 52.9737 li
115.569 50.4991 li
121.399 48.4434 li
126.416 47.4405 li
131.154 45.8604 li
136.454 44.6045 li
141.376 43.5479 li
146.355 42.5469 li
151.815 41.3038 li
157.038 41.4317 li
161.723 40.4805 li
166.254 40.127 li
172.246 39.4795 li
176.553 39.3067 li
181.923 39.6563 li
186.077 39.1895 li
191.914 38.4815 li
196.971 38.7188 li
201.893 39.6065 li
207.27 38.7217 li
212.486 38.9542 li
217.254 38.6055 li
222.202 39.1104 li
227.546 38.9581 li
232.462 38.4874 li
237.071 38.2413 li
242.204 39.8467 li
246.902 39.1944 li
252.739 38.4981 li
257.654 39.3604 li
262.263 39.3604 li
267.326 42.96 li
272.635 40.6055 li
277.566 41.4434 li
282.687 41.9327 li
@
30.6138 63.4649 mo
35.3755 59.1055 li
40.4449 55.4434 li
45.6617 53.5635 li
50.8907 53.2042 li
55.9664 54.3292 li
60.7222 56.3956 li
65.7081 59.1006 li
70.8604 61.9229 li
75.7701 65.5811 li
80.8516 69.0567 li
86.0616 73.2393 li
90.9776 77.127 li
96.2066 81.6094 li
101.27 86.0811 li
106.192 90.671 li
111.255 96.3311 li
116.49 101.986 li
121.393 108.574 li
126.354 115.815 li
131.225 124.136 li
136.447 133.857 li
141.683 144.048 li
146.675 153.945 li
151.821 163.488 li
156.725 171.499 li
161.717 177.626 li
166.715 182.932 li
171.625 187.64 li
176.86 192.117 li
182.236 196.594 li
186.993 200.36 li
191.914 203.545 li
196.919 206.019 li
201.886 207.787 li
207.116 208.853 li
211.955 209.324 li
217.101 209.324 li
222.17 209.087 li
227.7 208.735 li
232.308 208.018 li
@
37.3052 120.853 mo
34.2652 120.853 li
34.2652 118.521 li
37.3052 118.521 li
37.3052 120.853 li
ef
42.3052 113.186 mo
39.2652 113.186 li
39.2652 110.855 li
42.3052 110.855 li
42.3052 113.186 li
ef
47.4717 107.686 mo
44.4317 107.686 li
44.4317 105.354 li
47.4717 105.354 li
47.4717 107.686 li
ef
52.3052 104.519 mo
49.2652 104.519 li
49.2652 102.187 li
52.3052 102.187 li
52.3052 104.519 li
ef
57.5557 103.086 mo
54.5157 103.086 li
54.5157 100.755 li
57.5557 100.755 li
57.5557 103.086 li
ef
62.3052 101.52 mo
59.2652 101.52 li
59.2652 99.1876 li
62.3052 99.1876 li
62.3052 101.52 li
ef
67.4717 97.0186 mo
64.4317 97.0186 li
64.4317 94.6866 li
67.4717 94.6866 li
67.4717 97.0186 li
ef
72.4722 88.0196 mo
69.4322 88.0196 li
69.4322 85.6876 li
72.4722 85.6876 li
72.4722 88.0196 li
ef
77.3399 79.3516 mo
74.2999 79.3516 li
74.2999 77.0196 li
77.3399 77.0196 li
77.3399 79.3516 li
ef
82.6382 74.0186 mo
79.5982 74.0186 li
79.5982 71.6866 li
82.6382 71.6866 li
82.6382 74.0186 li
ef
87.7696 69.2159 mo
84.7295 69.2159 li
84.7295 66.8848 li
87.7696 66.8848 li
87.7696 69.2159 li
ef
92.6382 64.6856 mo
89.5982 64.6856 li
89.5982 62.3536 li
92.6382 62.3536 li
92.6382 64.6856 li
ef
97.9351 61.9913 mo
94.8951 61.9913 li
94.8951 59.6592 li
97.9351 59.6592 li
97.9351 61.9913 li
ef
102.769 59.9913 mo
99.7286 59.9913 li
99.7286 57.6592 li
102.769 57.6592 li
102.769 59.9913 li
ef
107.936 56.3252 mo
104.896 56.3252 li
104.896 53.9932 li
107.936 53.9932 li
107.936 56.3252 li
ef
112.714 53.9678 mo
109.674 53.9678 li
109.674 51.6358 li
112.714 51.6358 li
112.714 53.9678 li
ef
117.806 51.0186 mo
114.766 51.0186 li
114.766 48.6866 li
117.806 48.6866 li
117.806 51.0186 li
ef
122.639 49.3526 mo
119.599 49.3526 li
119.599 47.0206 li
122.639 47.0206 li
122.639 49.3526 li
ef
132.806 46.8526 mo
129.766 46.8526 li
129.766 44.5206 li
132.806 44.5206 li
132.806 46.8526 li
ef
127.969 48.002 mo
124.929 48.002 li
124.929 45.67 li
127.969 45.67 li
127.969 48.002 li
ef
138.139 45.8526 mo
135.099 45.8526 li
135.099 43.5206 li
138.139 43.5206 li
138.139 45.8526 li
ef
142.972 44.5186 mo
139.932 44.5186 li
139.932 42.1866 li
142.972 42.1866 li
142.972 44.5186 li
ef
148.139 43.712 mo
145.099 43.712 li
145.099 41.3809 li
148.139 41.3809 li
148.139 43.712 li
ef
153.139 42.5186 mo
150.099 42.5186 li
150.099 40.1866 li
153.139 40.1866 li
153.139 42.5186 li
ef
158.306 42.3526 mo
155.266 42.3526 li
155.266 40.0206 li
158.306 40.0206 li
158.306 42.3526 li
ef
163.306 41.6856 mo
160.266 41.6856 li
160.266 39.3545 li
163.306 39.3545 li
163.306 41.6856 li
ef
168.145 41.1534 mo
165.104 41.1534 li
165.104 38.8223 li
168.145 38.8223 li
168.145 41.1534 li
ef
173.306 40.5196 mo
170.266 40.5196 li
170.266 38.1876 li
173.306 38.1876 li
173.306 40.5196 li
ef
178.139 40.3526 mo
175.099 40.3526 li
175.099 38.0206 li
178.139 38.0206 li
178.139 40.3526 li
ef
183.306 41.0186 mo
180.266 41.0186 li
180.266 38.6866 li
183.306 38.6866 li
183.306 41.0186 li
ef
188.306 40.1856 mo
185.266 40.1856 li
185.266 37.8545 li
188.306 37.8545 li
188.306 40.1856 li
ef
193.639 39.6856 mo
190.599 39.6856 li
190.599 37.3545 li
193.639 37.3545 li
193.639 39.6856 li
ef
198.586 39.7891 mo
195.546 39.7891 li
195.546 37.4571 li
198.586 37.4571 li
198.586 39.7891 li
ef
203.602 40.6583 mo
200.562 40.6583 li
200.562 38.3262 li
203.602 38.3262 li
203.602 40.6583 li
ef
208.639 39.8526 mo
205.599 39.8526 li
205.599 37.5206 li
208.639 37.5206 li
208.639 39.8526 li
ef
213.639 40.0186 mo
210.599 40.0186 li
210.599 37.6866 li
213.639 37.6866 li
213.639 40.0186 li
ef
218.602 39.6583 mo
215.562 39.6583 li
215.562 37.3262 li
218.602 37.3262 li
218.602 39.6583 li
ef
223.639 40.3526 mo
220.599 40.3526 li
220.599 38.0206 li
223.639 38.0206 li
223.639 40.3526 li
ef
228.949 39.9952 mo
225.909 39.9952 li
225.909 37.6641 li
228.949 37.6641 li
228.949 39.9952 li
ef
233.639 39.3526 mo
230.599 39.3526 li
230.599 37.0206 li
233.639 37.0206 li
233.639 39.3526 li
ef
238.769 39.3252 mo
235.729 39.3252 li
235.729 36.9932 li
238.769 36.9932 li
238.769 39.3252 li
ef
243.639 41.0196 mo
240.599 41.0196 li
240.599 38.6876 li
243.639 38.6876 li
243.639 41.0196 li
ef
248.639 40.0196 mo
245.599 40.0196 li
245.599 37.6876 li
248.639 37.6876 li
248.639 40.0196 li
ef
253.805 39.8526 mo
250.765 39.8526 li
250.765 37.5206 li
253.805 37.5206 li
253.805 39.8526 li
ef
258.935 40.6583 mo
255.896 40.6583 li
255.896 38.3262 li
258.935 38.3262 li
258.935 40.6583 li
ef
264.045 40.6856 mo
261.005 40.6856 li
261.005 38.3545 li
264.045 38.3545 li
264.045 40.6856 li
ef
268.856 43.8692 mo
265.816 43.8692 li
265.816 41.5372 li
268.856 41.5372 li
268.856 43.8692 li
ef
274.074 42.2442 mo
271.035 42.2442 li
271.035 39.9131 li
274.074 39.9131 li
274.074 42.2442 li
ef
279.102 42.4913 mo
276.062 42.4913 li
276.062 40.1592 li
279.102 40.1592 li
279.102 42.4913 li
ef
172.186 50.4913 mo
169.146 50.4913 li
169.146 48.1592 li
172.186 48.1592 li
172.186 50.4913 li
ef
37.7222 58.6133 mo
37.7222 59.5342 36.9761 60.2803 36.0557 60.2803 cv
35.1348 60.2803 34.3887 59.5342 34.3887 58.6133 cv
34.3887 57.6924 35.1348 56.9463 36.0557 56.9463 cv
36.9761 56.9463 37.7222 57.6924 37.7222 58.6133 cv
0 0 0 0.49 cmyk
ef
42.3887 55.3975 mo
42.3887 56.3184 41.6426 57.0645 40.7222 57.0645 cv
39.8013 57.0645 39.0552 56.3184 39.0552 55.3975 cv
39.0552 54.4766 39.8013 53.7305 40.7222 53.7305 cv
41.6426 53.7305 42.3887 54.4766 42.3887 55.3975 cv
ef
47.0552 53.6133 mo
47.0552 54.5342 46.3091 55.2803 45.3887 55.2803 cv
44.4678 55.2803 43.7217 54.5342 43.7217 53.6133 cv
43.7217 52.6924 44.4678 51.9463 45.3887 51.9463 cv
46.3091 51.9463 47.0552 52.6924 47.0552 53.6133 cv
ef
52.4151 53.3252 mo
52.4151 54.2452 51.669 54.9913 50.7486 54.9913 cv
49.8277 54.9913 49.0816 54.2452 49.0816 53.3252 cv
49.0816 52.4043 49.8277 51.6583 50.7486 51.6583 cv
51.669 51.6583 52.4151 52.4043 52.4151 53.3252 cv
ef
57.4151 54.3252 mo
57.4151 55.2452 56.669 55.9913 55.7486 55.9913 cv
54.8277 55.9913 54.0816 55.2452 54.0816 54.3252 cv
54.0816 53.4044 54.8277 52.6582 55.7486 52.6582 cv
56.669 52.6582 57.4151 53.4044 57.4151 54.3252 cv
ef
62.7481 56.6592 mo
62.7481 57.5792 62.002 58.3252 61.0816 58.3252 cv
60.1607 58.3252 59.4146 57.5792 59.4146 56.6592 cv
59.4146 55.7374 60.1607 54.9913 61.0816 54.9913 cv
62.002 54.9913 62.7481 55.7374 62.7481 56.6592 cv
ef
67.6885 59.1045 mo
67.6885 60.0245 66.9424 60.7706 66.022 60.7706 cv
65.1011 60.7706 64.355 60.0245 64.355 59.1045 cv
64.355 58.1836 65.1011 57.4376 66.022 57.4376 cv
66.9424 57.4376 67.6885 58.1836 67.6885 59.1045 cv
ef
72.7222 61.9473 mo
72.7222 62.8672 71.9761 63.6133 71.0557 63.6133 cv
70.1348 63.6133 69.3887 62.8672 69.3887 61.9473 cv
69.3887 61.0264 70.1348 60.2803 71.0557 60.2803 cv
71.9761 60.2803 72.7222 61.0264 72.7222 61.9473 cv
ef
77.7222 65.6133 mo
77.7222 66.5342 76.9761 67.2803 76.0557 67.2803 cv
75.1348 67.2803 74.3887 66.5342 74.3887 65.6133 cv
74.3887 64.6924 75.1348 63.9463 76.0557 63.9463 cv
76.9761 63.9463 77.7222 64.6924 77.7222 65.6133 cv
ef
82.7481 69.3252 mo
82.7481 70.2452 82.002 70.9913 81.0816 70.9913 cv
80.1607 70.9913 79.4146 70.2452 79.4146 69.3252 cv
79.4146 68.4044 80.1607 67.6582 81.0816 67.6582 cv
82.002 67.6582 82.7481 68.4044 82.7481 69.3252 cv
ef
87.8892 73.2803 mo
87.8892 74.2002 87.1431 74.9463 86.2227 74.9463 cv
85.3018 74.9463 84.5557 74.2002 84.5557 73.2803 cv
84.5557 72.3594 85.3018 71.6124 86.2227 71.6124 cv
87.1431 71.6124 87.8892 72.3594 87.8892 73.2803 cv
ef
92.896 77.1055 mo
92.896 78.0254 92.15 78.7715 91.2295 78.7715 cv
90.3086 78.7715 89.5626 78.0254 89.5626 77.1055 cv
89.5626 76.1846 90.3086 75.4385 91.2295 75.4385 cv
92.15 75.4385 92.896 76.1846 92.896 77.1055 cv
ef
98.0557 81.6133 mo
98.0557 82.5342 97.3096 83.2803 96.3892 83.2803 cv
95.4683 83.2803 94.7222 82.5342 94.7222 81.6133 cv
94.7222 80.6924 95.4683 79.9463 96.3892 79.9463 cv
97.3096 79.9463 98.0557 80.6924 98.0557 81.6133 cv
ef
102.89 86.1133 mo
102.89 87.0342 102.144 87.7803 101.223 87.7803 cv
100.302 87.7803 99.5557 87.0342 99.5557 86.1133 cv
99.5557 85.1924 100.302 84.4463 101.223 84.4463 cv
102.144 84.4463 102.89 85.1924 102.89 86.1133 cv
ef
107.889 90.9473 mo
107.889 91.8672 107.143 92.6133 106.223 92.6133 cv
105.302 92.6133 104.556 91.8672 104.556 90.9473 cv
104.556 90.0264 105.302 89.2803 106.223 89.2803 cv
107.143 89.2803 107.889 90.0264 107.889 90.9473 cv
ef
112.719 96.2754 mo
112.719 97.1963 111.973 97.9424 111.052 97.9424 cv
110.131 97.9424 109.385 97.1963 109.385 96.2754 cv
109.385 95.3545 110.131 94.6084 111.052 94.6084 cv
111.973 94.6084 112.719 95.3545 112.719 96.2754 cv
ef
118.389 102.281 mo
118.389 103.201 117.643 103.947 116.723 103.947 cv
115.802 103.947 115.056 103.201 115.056 102.281 cv
115.056 101.36 115.802 100.613 116.723 100.613 cv
117.643 100.613 118.389 101.36 118.389 102.281 cv
ef
123.223 108.614 mo
123.223 109.535 122.477 110.281 121.556 110.281 cv
120.635 110.281 119.889 109.535 119.889 108.614 cv
119.889 107.693 120.635 106.947 121.556 106.947 cv
122.477 106.947 123.223 107.693 123.223 108.614 cv
ef
128.056 115.948 mo
128.056 116.868 127.31 117.614 126.39 117.614 cv
125.469 117.614 124.723 116.868 124.723 115.948 cv
124.723 115.027 125.469 114.281 126.39 114.281 cv
127.31 114.281 128.056 115.027 128.056 115.948 cv
ef
133.223 124.447 mo
133.223 125.367 132.477 126.113 131.556 126.113 cv
130.635 126.113 129.889 125.367 129.889 124.447 cv
129.889 123.526 130.635 122.78 131.556 122.78 cv
132.477 122.78 133.223 123.526 133.223 124.447 cv
ef
138.39 133.781 mo
138.39 134.701 137.644 135.447 136.723 135.447 cv
135.802 135.447 135.056 134.701 135.056 133.781 cv
135.056 132.86 135.802 132.113 136.723 132.113 cv
137.644 132.113 138.39 132.86 138.39 133.781 cv
ef
143.223 144.114 mo
143.223 145.035 142.477 145.781 141.556 145.781 cv
140.635 145.781 139.889 145.035 139.889 144.114 cv
139.889 143.193 140.635 142.447 141.556 142.447 cv
142.477 142.447 143.223 143.193 143.223 144.114 cv
ef
148.123 154.16 mo
148.123 155.08 147.376 155.826 146.456 155.826 cv
145.535 155.826 144.789 155.08 144.789 154.16 cv
144.789 153.238 145.535 152.492 146.456 152.492 cv
147.376 152.492 148.123 153.238 148.123 154.16 cv
ef
153.223 163.448 mo
153.223 164.368 152.477 165.114 151.556 165.114 cv
150.635 165.114 149.889 164.368 149.889 163.448 cv
149.889 162.527 150.635 161.781 151.556 161.781 cv
152.477 161.781 153.223 162.527 153.223 163.448 cv
ef
158.389 171.287 mo
158.389 172.208 157.643 172.954 156.723 172.954 cv
155.802 172.954 155.056 172.208 155.056 171.287 cv
155.056 170.366 155.802 169.62 156.723 169.62 cv
157.643 169.62 158.389 170.366 158.389 171.287 cv
ef
163.389 177.281 mo
163.389 178.202 162.643 178.948 161.723 178.948 cv
160.802 178.948 160.056 178.202 160.056 177.281 cv
160.056 176.36 160.802 175.614 161.723 175.614 cv
162.643 175.614 163.389 176.36 163.389 177.281 cv
ef
168.389 182.948 mo
168.389 183.868 167.643 184.614 166.723 184.614 cv
165.802 184.614 165.056 183.868 165.056 182.948 cv
165.056 182.027 165.802 181.281 166.723 181.281 cv
167.643 181.281 168.389 182.027 168.389 182.948 cv
ef
173.389 187.614 mo
173.389 188.535 172.643 189.281 171.723 189.281 cv
170.802 189.281 170.056 188.535 170.056 187.614 cv
170.056 186.693 170.802 185.947 171.723 185.947 cv
172.643 185.947 173.389 186.693 173.389 187.614 cv
ef
178.416 192.16 mo
178.416 193.08 177.669 193.826 176.749 193.826 cv
175.828 193.826 175.082 193.08 175.082 192.16 cv
175.082 191.239 175.828 190.492 176.749 190.492 cv
177.669 190.492 178.416 191.239 178.416 192.16 cv
ef
183.543 196.549 mo
183.543 197.469 182.797 198.215 181.877 198.215 cv
180.956 198.215 180.21 197.469 180.21 196.549 cv
180.21 195.628 180.956 194.882 181.877 194.882 cv
182.797 194.882 183.543 195.628 183.543 196.549 cv
ef
188.556 200.448 mo
188.556 201.368 187.81 202.114 186.889 202.114 cv
185.968 202.114 185.222 201.368 185.222 200.448 cv
185.222 199.527 185.968 198.781 186.889 198.781 cv
187.81 198.781 188.556 199.527 188.556 200.448 cv
ef
193.556 203.614 mo
193.556 204.535 192.81 205.281 191.89 205.281 cv
190.969 205.281 190.223 204.535 190.223 203.614 cv
190.223 202.693 190.969 201.947 191.89 201.947 cv
192.81 201.947 193.556 202.693 193.556 203.614 cv
ef
198.723 206.114 mo
198.723 207.035 197.977 207.781 197.056 207.781 cv
196.135 207.781 195.389 207.035 195.389 206.114 cv
195.389 205.193 196.135 204.447 197.056 204.447 cv
197.977 204.447 198.723 205.193 198.723 206.114 cv
ef
203.664 207.909 mo
203.664 208.829 202.918 209.576 201.997 209.576 cv
201.076 209.576 200.33 208.829 200.33 207.909 cv
200.33 206.988 201.076 206.242 201.997 206.242 cv
202.918 206.242 203.664 206.988 203.664 207.909 cv
ef
208.556 208.781 mo
208.556 209.701 207.81 210.447 206.889 210.447 cv
205.968 210.447 205.222 209.701 205.222 208.781 cv
205.222 207.86 205.968 207.114 206.889 207.114 cv
207.81 207.114 208.556 207.86 208.556 208.781 cv
ef
213.889 209.281 mo
213.889 210.202 213.143 210.948 212.223 210.948 cv
211.302 210.948 210.556 210.202 210.556 209.281 cv
210.556 208.36 211.302 207.614 212.223 207.614 cv
213.143 207.614 213.889 208.36 213.889 209.281 cv
ef
218.89 209.281 mo
218.89 210.202 218.144 210.948 217.223 210.948 cv
216.302 210.948 215.556 210.202 215.556 209.281 cv
215.556 208.36 216.302 207.614 217.223 207.614 cv
218.144 207.614 218.89 208.36 218.89 209.281 cv
ef
223.889 209.114 mo
223.889 210.035 223.143 210.781 222.223 210.781 cv
221.302 210.781 220.556 210.035 220.556 209.114 cv
220.556 208.193 221.302 207.447 222.223 207.447 cv
223.143 207.447 223.889 208.193 223.889 209.114 cv
ef
228.889 208.614 mo
228.889 209.535 228.143 210.281 227.223 210.281 cv
226.302 210.281 225.556 209.535 225.556 208.614 cv
225.556 207.693 226.302 206.947 227.223 206.947 cv
228.143 206.947 228.889 207.693 228.889 208.614 cv
ef
234.056 208.114 mo
234.056 209.035 233.31 209.781 232.389 209.781 cv
231.468 209.781 230.723 209.035 230.723 208.114 cv
230.723 207.193 231.468 206.447 232.389 206.447 cv
233.31 206.447 234.056 207.193 234.056 208.114 cv
ef
37.7222 58.6133 mo
37.7222 59.5342 36.9761 60.2803 36.0557 60.2803 cv
35.1348 60.2803 34.3887 59.5342 34.3887 58.6133 cv
34.3887 57.6924 35.1348 56.9463 36.0557 56.9463 cv
36.9761 56.9463 37.7222 57.6924 37.7222 58.6133 cv
0 0 0 1 cmyk
ef
42.3887 55.3975 mo
42.3887 56.3184 41.6426 57.0645 40.7222 57.0645 cv
39.8013 57.0645 39.0552 56.3184 39.0552 55.3975 cv
39.0552 54.4766 39.8013 53.7305 40.7222 53.7305 cv
41.6426 53.7305 42.3887 54.4766 42.3887 55.3975 cv
ef
47.0552 53.6133 mo
47.0552 54.5342 46.3091 55.2803 45.3887 55.2803 cv
44.4678 55.2803 43.7217 54.5342 43.7217 53.6133 cv
43.7217 52.6924 44.4678 51.9463 45.3887 51.9463 cv
46.3091 51.9463 47.0552 52.6924 47.0552 53.6133 cv
ef
52.4151 53.3252 mo
52.4151 54.2452 51.669 54.9913 50.7486 54.9913 cv
49.8277 54.9913 49.0816 54.2452 49.0816 53.3252 cv
49.0816 52.4043 49.8277 51.6583 50.7486 51.6583 cv
51.669 51.6583 52.4151 52.4043 52.4151 53.3252 cv
ef
57.4151 54.3252 mo
57.4151 55.2452 56.669 55.9913 55.7486 55.9913 cv
54.8277 55.9913 54.0816 55.2452 54.0816 54.3252 cv
54.0816 53.4044 54.8277 52.6582 55.7486 52.6582 cv
56.669 52.6582 57.4151 53.4044 57.4151 54.3252 cv
ef
62.7481 56.6592 mo
62.7481 57.5792 62.002 58.3252 61.0816 58.3252 cv
60.1607 58.3252 59.4146 57.5792 59.4146 56.6592 cv
59.4146 55.7374 60.1607 54.9913 61.0816 54.9913 cv
62.002 54.9913 62.7481 55.7374 62.7481 56.6592 cv
ef
67.6885 59.1045 mo
67.6885 60.0245 66.9424 60.7706 66.022 60.7706 cv
65.1011 60.7706 64.355 60.0245 64.355 59.1045 cv
64.355 58.1836 65.1011 57.4376 66.022 57.4376 cv
66.9424 57.4376 67.6885 58.1836 67.6885 59.1045 cv
ef
72.7222 61.9473 mo
72.7222 62.8672 71.9761 63.6133 71.0557 63.6133 cv
70.1348 63.6133 69.3887 62.8672 69.3887 61.9473 cv
69.3887 61.0264 70.1348 60.2803 71.0557 60.2803 cv
71.9761 60.2803 72.7222 61.0264 72.7222 61.9473 cv
ef
77.7222 65.6133 mo
77.7222 66.5342 76.9761 67.2803 76.0557 67.2803 cv
75.1348 67.2803 74.3887 66.5342 74.3887 65.6133 cv
74.3887 64.6924 75.1348 63.9463 76.0557 63.9463 cv
76.9761 63.9463 77.7222 64.6924 77.7222 65.6133 cv
ef
82.7481 69.3252 mo
82.7481 70.2452 82.002 70.9913 81.0816 70.9913 cv
80.1607 70.9913 79.4146 70.2452 79.4146 69.3252 cv
79.4146 68.4044 80.1607 67.6582 81.0816 67.6582 cv
82.002 67.6582 82.7481 68.4044 82.7481 69.3252 cv
ef
87.8892 73.2803 mo
87.8892 74.2002 87.1431 74.9463 86.2227 74.9463 cv
85.3018 74.9463 84.5557 74.2002 84.5557 73.2803 cv
84.5557 72.3594 85.3018 71.6124 86.2227 71.6124 cv
87.1431 71.6124 87.8892 72.3594 87.8892 73.2803 cv
ef
92.896 77.1055 mo
92.896 78.0254 92.15 78.7715 91.2295 78.7715 cv
90.3086 78.7715 89.5626 78.0254 89.5626 77.1055 cv
89.5626 76.1846 90.3086 75.4385 91.2295 75.4385 cv
92.15 75.4385 92.896 76.1846 92.896 77.1055 cv
ef
98.0557 81.6133 mo
98.0557 82.5342 97.3096 83.2803 96.3892 83.2803 cv
95.4683 83.2803 94.7222 82.5342 94.7222 81.6133 cv
94.7222 80.6924 95.4683 79.9463 96.3892 79.9463 cv
97.3096 79.9463 98.0557 80.6924 98.0557 81.6133 cv
ef
102.89 86.1133 mo
102.89 87.0342 102.144 87.7803 101.223 87.7803 cv
100.302 87.7803 99.5557 87.0342 99.5557 86.1133 cv
99.5557 85.1924 100.302 84.4463 101.223 84.4463 cv
102.144 84.4463 102.89 85.1924 102.89 86.1133 cv
ef
107.889 90.9473 mo
107.889 91.8672 107.143 92.6133 106.223 92.6133 cv
105.302 92.6133 104.556 91.8672 104.556 90.9473 cv
104.556 90.0264 105.302 89.2803 106.223 89.2803 cv
107.143 89.2803 107.889 90.0264 107.889 90.9473 cv
ef
112.719 96.2754 mo
112.719 97.1963 111.973 97.9424 111.052 97.9424 cv
110.131 97.9424 109.385 97.1963 109.385 96.2754 cv
109.385 95.3545 110.131 94.6084 111.052 94.6084 cv
111.973 94.6084 112.719 95.3545 112.719 96.2754 cv
ef
118.389 102.281 mo
118.389 103.201 117.643 103.947 116.723 103.947 cv
115.802 103.947 115.056 103.201 115.056 102.281 cv
115.056 101.36 115.802 100.613 116.723 100.613 cv
117.643 100.613 118.389 101.36 118.389 102.281 cv
ef
123.223 108.614 mo
123.223 109.535 122.477 110.281 121.556 110.281 cv
120.635 110.281 119.889 109.535 119.889 108.614 cv
119.889 107.693 120.635 106.947 121.556 106.947 cv
122.477 106.947 123.223 107.693 123.223 108.614 cv
ef
128.056 115.948 mo
128.056 116.868 127.31 117.614 126.39 117.614 cv
125.469 117.614 124.723 116.868 124.723 115.948 cv
124.723 115.027 125.469 114.281 126.39 114.281 cv
127.31 114.281 128.056 115.027 128.056 115.948 cv
ef
133.223 124.447 mo
133.223 125.367 132.477 126.113 131.556 126.113 cv
130.635 126.113 129.889 125.367 129.889 124.447 cv
129.889 123.526 130.635 122.78 131.556 122.78 cv
132.477 122.78 133.223 123.526 133.223 124.447 cv
ef
138.39 133.781 mo
138.39 134.701 137.644 135.447 136.723 135.447 cv
135.802 135.447 135.056 134.701 135.056 133.781 cv
135.056 132.86 135.802 132.113 136.723 132.113 cv
137.644 132.113 138.39 132.86 138.39 133.781 cv
ef
143.223 144.114 mo
143.223 145.035 142.477 145.781 141.556 145.781 cv
140.635 145.781 139.889 145.035 139.889 144.114 cv
139.889 143.193 140.635 142.447 141.556 142.447 cv
142.477 142.447 143.223 143.193 143.223 144.114 cv
ef
148.123 154.16 mo
148.123 155.08 147.376 155.826 146.456 155.826 cv
145.535 155.826 144.789 155.08 144.789 154.16 cv
144.789 153.238 145.535 152.492 146.456 152.492 cv
147.376 152.492 148.123 153.238 148.123 154.16 cv
ef
153.223 163.448 mo
153.223 164.368 152.477 165.114 151.556 165.114 cv
150.635 165.114 149.889 164.368 149.889 163.448 cv
149.889 162.527 150.635 161.781 151.556 161.781 cv
152.477 161.781 153.223 162.527 153.223 163.448 cv
ef
158.389 171.287 mo
158.389 172.208 157.643 172.954 156.723 172.954 cv
155.802 172.954 155.056 172.208 155.056 171.287 cv
155.056 170.366 155.802 169.62 156.723 169.62 cv
157.643 169.62 158.389 170.366 158.389 171.287 cv
ef
163.389 177.281 mo
163.389 178.202 162.643 178.948 161.723 178.948 cv
160.802 178.948 160.056 178.202 160.056 177.281 cv
160.056 176.36 160.802 175.614 161.723 175.614 cv
162.643 175.614 163.389 176.36 163.389 177.281 cv
ef
168.389 182.948 mo
168.389 183.868 167.643 184.614 166.723 184.614 cv
165.802 184.614 165.056 183.868 165.056 182.948 cv
165.056 182.027 165.802 181.281 166.723 181.281 cv
167.643 181.281 168.389 182.027 168.389 182.948 cv
ef
173.389 187.614 mo
173.389 188.535 172.643 189.281 171.723 189.281 cv
170.802 189.281 170.056 188.535 170.056 187.614 cv
170.056 186.693 170.802 185.947 171.723 185.947 cv
172.643 185.947 173.389 186.693 173.389 187.614 cv
ef
178.416 192.16 mo
178.416 193.08 177.669 193.826 176.749 193.826 cv
175.828 193.826 175.082 193.08 175.082 192.16 cv
175.082 191.239 175.828 190.492 176.749 190.492 cv
177.669 190.492 178.416 191.239 178.416 192.16 cv
ef
183.543 196.549 mo
183.543 197.469 182.797 198.215 181.877 198.215 cv
180.956 198.215 180.21 197.469 180.21 196.549 cv
180.21 195.628 180.956 194.882 181.877 194.882 cv
182.797 194.882 183.543 195.628 183.543 196.549 cv
ef
188.556 200.448 mo
188.556 201.368 187.81 202.114 186.889 202.114 cv
185.968 202.114 185.222 201.368 185.222 200.448 cv
185.222 199.527 185.968 198.781 186.889 198.781 cv
187.81 198.781 188.556 199.527 188.556 200.448 cv
ef
193.556 203.614 mo
193.556 204.535 192.81 205.281 191.89 205.281 cv
190.969 205.281 190.223 204.535 190.223 203.614 cv
190.223 202.693 190.969 201.947 191.89 201.947 cv
192.81 201.947 193.556 202.693 193.556 203.614 cv
ef
198.723 206.114 mo
198.723 207.035 197.977 207.781 197.056 207.781 cv
196.135 207.781 195.389 207.035 195.389 206.114 cv
195.389 205.193 196.135 204.447 197.056 204.447 cv
197.977 204.447 198.723 205.193 198.723 206.114 cv
ef
203.664 207.909 mo
203.664 208.829 202.918 209.576 201.997 209.576 cv
201.076 209.576 200.33 208.829 200.33 207.909 cv
200.33 206.988 201.076 206.242 201.997 206.242 cv
202.918 206.242 203.664 206.988 203.664 207.909 cv
ef
208.556 208.781 mo
208.556 209.701 207.81 210.447 206.889 210.447 cv
205.968 210.447 205.222 209.701 205.222 208.781 cv
205.222 207.86 205.968 207.114 206.889 207.114 cv
207.81 207.114 208.556 207.86 208.556 208.781 cv
ef
213.889 209.281 mo
213.889 210.202 213.143 210.948 212.223 210.948 cv
211.302 210.948 210.556 210.202 210.556 209.281 cv
210.556 208.36 211.302 207.614 212.223 207.614 cv
213.143 207.614 213.889 208.36 213.889 209.281 cv
ef
218.89 209.281 mo
218.89 210.202 218.144 210.948 217.223 210.948 cv
216.302 210.948 215.556 210.202 215.556 209.281 cv
215.556 208.36 216.302 207.614 217.223 207.614 cv
218.144 207.614 218.89 208.36 218.89 209.281 cv
ef
223.889 209.114 mo
223.889 210.035 223.143 210.781 222.223 210.781 cv
221.302 210.781 220.556 210.035 220.556 209.114 cv
220.556 208.193 221.302 207.447 222.223 207.447 cv
223.143 207.447 223.889 208.193 223.889 209.114 cv
ef
228.889 208.614 mo
228.889 209.535 228.143 210.281 227.223 210.281 cv
226.302 210.281 225.556 209.535 225.556 208.614 cv
225.556 207.693 226.302 206.947 227.223 206.947 cv
228.143 206.947 228.889 207.693 228.889 208.614 cv
ef
234.056 208.114 mo
234.056 209.035 233.31 209.781 232.389 209.781 cv
231.468 209.781 230.723 209.035 230.723 208.114 cv
230.723 207.193 231.468 206.447 232.389 206.447 cv
233.31 206.447 234.056 207.193 234.056 208.114 cv
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 11.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Piotr Zyla) (LBNL)
%%Title: (apd_2059_emwqe_05_AI1.eps)
%%CreationDate: 1/30/06 3:19 PM
%AI9_DataStream
%Gb".!pKm^A\c<)P2ir@t"U->%!CBdX80W3g/D)BP;4<_Lp)iJOcci3ZTt'eWmq8,tr-]m/P\9.CAO7PXZ5e&nj$#Et=+2O7lqgi*
%-^i6GUhH2&Kdq^:Bl7XJ+L>dY)3^`7F;hN_&m77)^VEW+bE4Vf<+hDT1nU*^_oZ_dhr0<lc4:LrcdNuq?mpkqfr2=2aWsFP=n2YP
%]:ZS/;LSlL>Q4DFg_h`V;AFR^lCO'PlT'?Tq*=t_98`t@($M1i".-3\Qc;>-Vof[%\WclBq-qoY$mt#DLtm2A)GQ!hKnL5,,ah&H
%-^dWFhtk*QQ=.S.'h*cT,q,4XG1*p+,+H^9Fu!33$2VN8Igi-&k'*ieO2e^Yb)9kEMu)@]_!2c`8L?sNTAD/Tdd2EF=F`9%DK7KX
%Xs[LhR,=UFmu#!u>UP@L9)1+hIjb3BB[-D%!c6@s\:dN!mpo#Oe]i,VebZa3PCWiA\=H7P`oI.p0qMitdSt5lY)?_3E[_!k//eQW
%^G6X[#,L>Zi4%ZheP7n#nl;n1\$JAM0[;&^TqLHu3h$Siq@7*#SZM_sbr_%Fr'.+Y?_/BBlXD#sj]rV@h=>(Zi<j`l`.<=VK2!C^
%qXQ`8hrkLdDE4!FM>mLaR=Nk@0q8>cKAL-'Wl$--FZ,^?Vs!*sKF"p?8R'oJ_EhhpgG/KDf+'`DcG+N@PK>Ma@r@sPP'_a5B+&3b
%cS7[hp\siGf'9m&)@d#N=_mjkkW!_Rn6R'SmCSqlJo-rJH6;?HmD#7MXEP4(SRuSbV024q%IXo.4_dcIKDA(,f^OasDncqd2JOY"
%]5t(nq+lEJ=+c"$+*r.N90GQ2$sSWR'up98L6JS;N7oY]EHgTN24M1"$YS'1N4T'>p#TR)ko2c'9d.4,WIM=Qn7,Zq)++Dt)"Agl
%pHT^1LDq1=T?UQq!C4d):)MCOfZrLnk]l8#I,"d-j7k'r,4lAs-!lBO+c<!:nmYb_6rqNg=YV-V@TlH^8Wac;OVC2L&9sm"DuqQN
%KWL7I(a1K,KVUj@PX+d`0CV)2juK$pF*s;31H`RQq%TI^BqF>+Z<.mbI(<MEb%s(>cB^7tVOT9:b/lDEVTL/3EWX:&AWGeQ0#qP6
%%**=$0#]+sR\Mj*?q"+(H+(q;/Bd2./=U&c2U/,O,YPHX9BO0_OQ1ED*1(/V\Qh%ZaYC>J/sT)lkT#j4ZXQtVo%A&LbHff+2G7R:
%=XKW`VR";pSH[4n,A)T;T.+E_%%G@MZC+C@aeU_l9JStJW!pe(N54pVRGf!KaY?pF__=cQ8MNekAgiBZdUHBNoBC:a9=*kf3h+Ej
%R<1K\8gi)0RS&bm0dWXj<&qpofMjJg9k@3r.\02.OsrF\V9#I"'U!jLSE,iL17-2ta\7jhVN[ui1.`jm,Y<p$5kB)ck%L(+d9/Lt
%1P!NDkTimOO9pf/5k.gAi[C,8;->A90iXT6;+ZYB.#K9@Y`U3`$^)_8^dt\AOs.Z[8C0:e!=j6=O?9-HD?eAhWU[DRr"&S0:4te^
%T5o")e<gmD"S?,?C%r[Tj`p0gX!cKo&=4cnWAF_?<r!!a.AIqa!+Z@I):/rE&D.QL&E",\&Ej\l&F^8'#l"]'E!,#6^eK@6!&oKU
%^g=h4JGT@k7,ATe.r\kRc@ESo]*%d4mL\.u\4cBVJXlj<#&P.2Xu$0oR7s>\KDPjr%dfh"HZ9#C%`1A^]*S-CmNgR\\=7G%jW0&%
%$?h[]$*^[RCZ4Emm=cJf[hs!<gh(i,iE!k@L>*.r*,[b?G-jdg#[p1/1K%n"J[!"I(M:lV\3XfL@7Cb`Js]D'5nX>kbZL#O9Sd.I
%'f3._dD^nq#\?to+Y6/o7N4/CQr0c?+9j:?2@0keJTaZhLG/^L.g1V]Jo<MuK-5mYSGlW?8FlohOnfS?%o30dAUMY/LU0+EjiNo4
%!g#M8PHd6/j[i[JPkcI6h)%@'jftplrW*S*A3*p?1<Ge&g@e?t#HWMR(*dRTTKKmXPgRCBLIG!66!&<L1?b+AK*IATGR+J"+oY@F
%/g<E&17j^b*pX?;4ZVWG.SkeL'LnZ3LT!;QIh%TE822:@6X),djFl_'&QD4sLnlepWe_!YQ%28'_c@4RdH#kKir!>(:WDn&E(hbm
%i[9g:&4kBGOh=&T1Fo1i5a%0Zq`sBNb!307,g/HQ'Vrl;RNt9L5dCY_B_$t<l&W`mYW[s,8K468J_6",HIR`$R#o1@&B:c`8ENAs
%5LMQT`fg[M,&M/<Gk;%0!_3P?)f,d-Psf6pSiuiNcQYK:3HRmPWIQ?466De3&Y4#'$sXi=%[G^e!5:SJC`pe#69p)(O9B2>NQuhS
%S<+^M.id1HG^9Kn"=K'.E)!(5Q3O*p!5rpYo'f00#BBq<lS@*?JJ/&AU;61C_*4a4">aG0=g6@dYie>U"=Ja%B-IWl8K(8c"--;T
%-(,;i&2\)(.(C&6E?PH.,WQ!1#\+-W!-bdT'\X;35B+*ik!@("kc>B'JB1!%"2=j#&gUS@KL&^-W+?Q8KN&SY';VMp]L'ICLbU)R
%'\[YGIY;Qqnc[dG83'F"K?bq\5$.lC5k*8jN.Dre#Y9c-_Em.)P=UXa1)qQ)E.=RO"m%>Wlo?>D6*u8")%ZrW7$QYHiLo\P.3pR^
%!sJii.,[BW&(1Wkdq+3A:`]a[+X6FFTYegf0iR<n!E^d5M,;EI_BfmOTs+jF'#[rp$DM2Y&[58#V\+`k)L0F2YTa,tKg7,+[gkn<
%5nLk.hHg6a:'Oo,!K>Q:,p4U5#X1f_*sP##L'rcE!oTaPK9j>=BJ@N$eX+gOUK,cV]d^>D$sKU@8@V&"@Af!PBnVaS!\k*!+XBHF
%&KrBQcnGV'"u/%=,ao\q`Z1XmODkOE&TD"_S:Dm?$NO'/846T')6m"'iddiC",TSP-PKqh%9A\p0P>o@"_H;U6FA[YRmClqZl.(W
%+=eR8+:R1$(]\@VY7\9Vct\)"E&C!_,RcpqK@C<+"$"Q0Zp6B6QiLh)UCi;o#b'_=1Qk2D65@a%;5&dqYgjhr.&2qAlXLZdP#du"
%V,8K'@hldYC1Vif6C]OUjW#>B5fhYI7[<`d*^ZWVk/SsE.^[Y#fO72#A78(RY(jtf\uj\Y_Jmc"T<@s#*#1\<`Wjm;'^8bcO`Qu\
%WsZBd9m3?I.mT4nN=^tVl_P<jgEF?p$*u(tAr1K472-'?;.MO!`B"[LC(e@eL]AuF3r@25edp`s`:=),d%hRAA93NBn;p?cZI)#t
%HR'?JNfk,lblArW5\))F14p-qQAo](85E40+gOC%2MoMd[qlnD9d<4u?DLO&M5$,j"QIM.SOBoNW4!=>Z'WNIPH:M,0WNq3D6%D4
%8Ld%TfI0(pTI;]4=e1m2.C(No[\h.>'\T4D1J,PTBbsJ]D5p$Gd.ITC`CFZqVWQ'Z"(sBcW9QQEp^'[X=1*M1U11R1R&qj<!C/OD
%W($d+ZpH1,!*[t>'Pd]PW,A]6YV?n4MeX)j9`qD8!1XonZ]:k5[MICg:f^=W:,@Xh()L.1K;g1O:=c-jQJYCG^P(/.];Zg*YZcK7
%[DNPVbO;<O(n&IT)ab='LuW!SM^Ys(E9)1cT'0Q3;4ajFX0m"ZBCgtd&]J-M+flFo#MHrHXQ"&$Tl`'c6BDKdCs``\TRa6Ls$J*+
%B+kj*Uto"0dh\C`'1jMYrLs^gK$B]'FNGk[\AlVWZ>%!Fs/)a8'G*UI$Qs#ts'u.DhuqJBBK4<`'0.PalspO\@^a=F/X+,E/SM/P
%qA&%?1?I^5!$@u@WFRU`\q"fZr(ibJ!2X`D5kQf-\!5JG&-pK3PCr>1R<0'"94sM1U('ccCUo<IiiY-U[jV37&DFn765e$`[KTHp
%O^8[Tn<=gT-*[nTR?:egg[LFFkp<SD:RP'.,duY\1Q$m><A&r2Z35[c%B6clI9ZRl>SWqi+(C_1R6,M#"=l[S[Q8Hsct`5\j0?-)
%i!IaVEZo4EEZPbWnSmb\kl4VRZH'k04N\0XfRH<`a$HiXe6D_le:3i,g>bc95"PSs`0B;Gp37G+#LFhbbd]c<O!eRfA/d+t'a`KJ
%7,V72E/dBkXq_8pLd^0)O`67MctZ<`S'A;=L3(-d3<Cm1*ZT)18Au9NW_(!2dt#PP&G!(3?f9TRd=J.A),$`7!I#AS9U(P5/n-Kj
%K0puo:3Z[r8F?EeGM.Y'RYe?emIYk/<7lmaDtmEroO8D7&$b\,]Jp[O#epSE5&uG3FW[#*-b'!N=*KHoC]p$Wmdo>e+kkOBe0cX2
%M:b4EEmgP8:"1O<m>9I`I<*c-LeZAH-gccC7"$8#AqI[p^Wn<C&Y&X_XHF@(WP?_.Bb?j2l`?6bi?i<A.qoT5U6`Qi,th-\^-(H9
%/#W0c7t)YN_88c'RQ[2MU`Q[)]:70h;<[I,FEAZ=Xt#d1ccP9=pH-eeO.CD:6B'+5[jm\[+?6Kt1cmm-ZD*\OmJ7CNCAI-Z.k:,0
%a$PI8/F@>9ePbiI$b=sNBF!:l@I;D-?sBplq($*YX,dOM[q2+2`@GD%enJ-s,.;'R<lHRu>LmLg]HXdqSQ<][@U%DteMp:EMD'&O
%ATUU9IP<O0Er*(EjO4-]QKkM*]>-Ou+WjB1_k[`9W#VQjaVm52CaJgCk)b'EP>.aETSH#,1E$)[C*iUAVphS5$4R:!XL:Y;qseET
%qN2Sp9GKiiD*]*AjOHljLS>=c))>uA@I2"/d41`e`b[CNFBZSQqJn]b((nFW$0X&pH`BUR_WliBI[Z<"DA"l"1a8k17<Kkuasp7C
%PpOZ5&&-F%3@.p9NIOJ:UXYugQnS\0W0p!/Gs_3u+[&n_,:ijNDW*<bJ;bBj6^uS1"4KUlX)``qW'27hVts6h%oK2YT-W8\+RNUF
%-ggR<*\Wq(*l@I-bk_j$IT_q;k@[Mi.]uaVUAo0idE>JZZ\s^d_&2U$2+V5j#Wbu3gd8r_DF#DR'Ci,-&;]^Ar9>%#@QP1:\cmZS
%G1O0+&<&*4C5C,JO.'OBefH-[:f(U%"^68;g_$L_&kZPqW'%YKV#HUdLJo6pH`Ym]!)eJCMN4.$PN%e[6Q:&g-oGMTOL6=UU9:/c
%n&Qq?lAqCi`+i(CH*Z/!;A,N=BiIkUOt)/cl*4"%eQ=GdZY47qAi[D1"c%lB4XP&4(ijl&&*r`GCerX[&6`nUojJi3[):p3=`uQZ
%4..mpIdBqbNlDjiYWIVj4/[$Zge^(B>X=K+AE#>@9Y@/Y&Pl-?;c7ATP)bhC9c2lCbq[)4pg?a2YU9"pAKJ]2nsH2'2=\\N/Bp80
%!1UiT#tsWgRPo"VS/*Zte)p::ErpKQck>#F>9pmBOkLsuc#?RgP=TAb9fl.*"/?nDIFn-t<LLPeR/F_kQ2ah[asuOm!]T\cb8bCH
%dG$O?Y\@RY#*KBjCtCoRe)e#Q+JF(th*@]EP+(C/-TG^/F*aUQgut!VR+CgH&^rM42=cKt4F9\qP&mV"1E*P:[9Q0&OYCQ#A&aV5
%B22qN%;C1O$q;OmO`4'&7"RY"+K_6Xa-cE59j*BHg+>`qZ>T?*>PU5tm78W`(IfHYS]jULDrmAF6mf&6!cO7d"9;bK-_3g/8nEr)
%p2&l$Vb*d"%$ef:eL3$2(hGPc'W";QVc&@V.V\+f]a<sICCGWgEX@!%oIi;??,ahT0UN9F`K'G+.7+mOJ3=f#pW,R"Ma)-+b*Igh
%4KSAjg-9Yea!kWG.E9XIN^kMtE/rq!Nr)Ip":W_38"?9J8?=s,4uU8#!TH(;<q=_@mPe=s22)dR[!<M;et\86d,>m?7p?L6qS*M!
%lL71n4sh[GMUQ67<hgsTN?lk#*\1p&iX;ZT#8eS\)(!^gD_%fT*`RK=C1Ybo$`ZoeXnSM.&5n0j3Uj':_&LT"XJ*dlD?sX7C*,\X
%,Rg]f;=2sLIO$3H85bZo@jr.6q%T'-80C2R@k4/q(JrM;W5uu-=t?JE'NEJ;WebD('gf_kh;G#s3qNb3`h/d[aVpb0r")JPV=@-H
%Ss8J2=ruDo&.YQD-\^<+O"&%U/.[=2j'!0e8HSR33;k"ZJ(PfconQBCZ*b[johBVCLKO;/ru^Y?.3i'%hE/\@C`6EL7;/b@o&93(
%*NnZ=E-[8ar!EquTI]*j@m0jC%QF;g\['$NFngG,.aBmoKg?"Rb$Gr2E<02M8Qem$JoVS?Vk>.9"XkcY6#fI+%t]t,*-hu>+PGtD
%-BNm*>J*p^QYPncD-a`L991tb)n?A(0#D/Z_MPL?20$`-/jcmb)=:\?V9<2K;QEp!g!WRu7L@%]DQ]dse]NcH9k?ab6Oc\pNBF+>
%?6Q]0(_.i\%CU6rb;c8$``%TnDn*dB3/dZ(F7kn@4&uTHePkMdP;,.,#RA,&>L>qoa,2I,$7E+#R2^JW48L\SPrRZeq9&C:`:ge=
%Wt#RbEXX_:4ae_gGo5;"[Q]B,c;*%4gNEh2e^7)/?/G->B[0&)Q-R2cAH1&id;lq<N>#.4`0%iU!3B#aK\/-[7(3)a%FR\^()aoU
%iW>']3t7XkX!3U0rD$?RZNeZ;AZXBqW7B!?W]@+.j@BY+'_P[gYL@k\]OTckPigu!/6.I9Kb%iLl:)`$=tU#ZQLRpIHY0WoMlM8Y
%2>JYJ.P;@2Jr<)_KjZ>^W4ER@8##9@e0AIb2j(>0(c8c;*M&(ZDFMDkU"NVTDEENjj5'a8(?)ATRGF#*r?[O`X7KqaR9m)FRj03F
%YcuSH4#dd:#Ra&e0X4!a:+Hd(+Z.9m@:P(Q*Bpp1El&DXFspKCir/nHWkK&_E;m_2d=$nTlq*:\1+hD@_^$@igS*)QCl6N:/jl73
%EmQmgAgYqd`orZ2,uO`.%70GhX^p$0i"E89<%>#Y@&QISR8*-(W<=?a)1s$[[jgSsc-W]E&dl&p22>t%9[In(d$o58CRM.q2Sl2g
%N+8t=p"_)M<HJ=89YUHT6C@f.+oh!tPlJ?,L%N"h"n/0!griW$O6nE@!NksISGWRtK!tIK:mr%fQfH1Pa68ST4:u2GPAt-rkb^5#
%G%/BeI5%*"-1rk#Esr!)-hN>CT)K2u\,cR("s<eb-ae$/oC>B=FMXkNGGs=rQT2"R^`7M)`6JrJotZ%t`nUULj"mhH_4Nq1Sc2Eg
%q?;9#=q2?e(s=8RZL9Um>[gK`Eg[=s$K1:7#Jp-k<Ehh)Z&m<XWboW?:-U_73FVflg<mY)j7lY^WD&fk+/5qeUfq])aMO"EA8'$_
%MLhrJa&a_b.cpG_L9G:6/,@UVnD[4.mT^i$6uTs"l8K129;#-/*SQVpJkqinQe!]>ruX-kPA6jLln#:5KqaT@V&?E.7DliQV6>Ol
%C5&+Hbp7#9;a/Kq-C%t^8B[OQL(%d`<?eh<RV/HT9,ZoXTQ`rM[+'7UWDAIN\g$7l>"[^9K\!Qf&HYrfUU>\0;d+b`YE+m8KK:t"
%&DGp(L1q8$7%G648*LIs]gj"78C7b((+<S&S[HIc8VOp!1R#9'eCqd]RCAEhm&APMm?_6c.GMRO:#Q57S"#_I@$FkFTjPs:F"/$g
%8MXm;C2M?\YE'PAQ?"OG$(+n3"=<P4Br]D,$rF&\ROhR4##m2(%CB[GB/u1&=Yu^:I=ga2L,>JcI7if%Pj-ibZV]Q.)I1h[CeDSg
%XO*r@Z>'>T0+Ak4HY;+X_b7.,coX.R;.]e(9qWKe&fbO!0BF6S!lo`*c5\M"oBarr)qsBF$e%5L:`F-+1))\?pmTdVBd(Lc7*f1u
%%CHL%jK<fN@;?>KWH&pC;E<5V'$qA$6Uk[(j,BqQ3hdBYb-0l!/n$^=5NQD%Ol\rscBYr?(Y\G^714p88*\ts7Y#st3fo9.B)e1s
%I_*8)R<0bI7sM5<Zis>sI/uCtmtC]u)NI+93;bW<P",Y2*ha,-p]"n-@Oa=Xm2V[L0hnhfs.1]YO4`-ejYVUPZtOTu`&F:g[GD&K
%]mp%MNBJ8'V"oLZpk%A"o/.A.B@9mr@lYljL91Ur]Y.RcM8moCR.EZ0PNAkjTf]4Q/(\='o"TUN#]J!P\s!+WELS3OT7o@sZQ8c>
%nm.&l'DR(/>5mWjQ@BCUM_Eu\,UmC9,QHM!UeKXZW\8)5s7.PBF@s9;rP*/OlKmp(C/5V'all@^/`^-Tr@r'MLmq*;H^88N5g8[Y
%YuO9&+=d/H5@FuhO67U8.2?)krbnO4]DsK"R@!o6eni]J&#HkEpeS1"f1GnDcf)X%6*@euq0<>dUnHN=+5YYba2#u@%S4Ke2\J/&
%0)lHpjahJ4s)20_>f0ps@Baoo>]10=r*\%rN4\"2p"p!(j!sDN@6!NL86u8gN@/3p./Ya$9qD64#rhj%7[@lnks*[]dII9%+ViY7
%k7k>!))/i,?VYgJ>3#UfeX(HZPNd+&OX/<jW\\?Ac2JmR1o,UQG(f9kd:s2HK8$$Q1$Nd8XUUBHC!@F\8Sco5ktHhqfabDG;\,@9
%b<E:LA%$5i-Nj2dZgLP%I0.,7%285JgU8h;HSb9@L$ohaep'AqJUQq`)[n[hm`Yq9,AGo.Jj$S!D,$iEGWAq;OeYBCc:CZFL5g);
%Ms58eF4Zj6UtO[U:rAhcBg*Cep$Y^kds%skq3TDd8CRR=B5(uY>.#+Y=Lj+K[V+Wm0d&7c0Y.1!U7SFTbI,h?/4YEqh[Gn@F?DuG
%i^+Oc:nV=.fJ1``$VIA<"[HApHq&g;G</8sB%n46k*D&tXne"ZAk%L,[+3\u-%!AD/f,01HKtKn"p?/pHJ4TrW*T<C;J-#j9Y3/u
%NB?jI2LP`oCcE8)3t$RSGV/*:g#PZBIEJC+B/l91,7+OrIfXr\"0hTKA#a#:j<)fd$8&"kGlaT&9P.S0CYsl;URTA7Q.Pm#+6dn6
%B\&a!'=*^5'lIm5>3#-`Trgc?2-V;J?1YUp,2*tg`uUd!J:R_0k[GQHj-Td':$A\)WHZ]s1@6]B)U//+kY032ajL/1"n)YZ1"c&N
%I',TP;Hi?u'p0E4Q@Q3.8PG:hBfWN.bbUdKRaB/rkGRmbHga"/"NZJ2SUnpeRsqcVdS06"Db*/fCFqXf!SAucGj*gm"OV1+,g9$N
%`_mlinpbn.#)$iDK4^-SS[e;&C$=DFDnJWbQgM?(_I/SqE'!;Z1j\,&b2d.Z+MB2Yh@\QAd8+6$Rf1GX]j=%6-=Jj*l"2f3er.Wa
%]BrG[kl>[:%-W>n[E]\c\RF&+XgM;AZo-+^^A"i`P$$F')Y[r)1PCha1n=]aE\QoUr'm7q<oVm;/OX:T4iM:HmRfX`'b/`'B4?f<
%Io"dV_.%(6T\(WJ=A`ujoKk:bE"9RI5&F!k_l6XKekI]GKWRjK:)F,gbWDB#(Ga-MVSg]o%<@=HDK<)7:eLWfZe^tgZ%K/*ZbG.[
%B,dZh-NXgJ9IKF_pE>0k^j](o-F<aBDDdiu3'X#kgDS9LR^gh4is36NWgn)j=a2%uCoNUZk>MR[U5s6n>I4Wn;/9oXOD_2J.U$oh
%9,LANhWJ*Yf2d9\?4FNpI*`u4JU9GK-'1ISF]MnF00mBNb^juEJ)W=AqHQ-Do-GQQOhhKoaX+5q8%JiW%7Yj\R^bXEkMP.3%Og&C
%WQ#>D)X<8(PB1SUKFm2#UB*bX1^Z/*b-;s.,S;m(Qh9I!U!d[:mCJ>aRjfRsmG'c+9d!aPSS[Mu[d`?N1R#;mF*P7/W[&G@9q=`R
%XEQ'92+^kf$_$kp7ZXiiiuP'o3@M[de]J=[iF&dA&#R['-od\hYd^%tJmljucX7)njnQlW^-Q0-7G^&,mpa^/#D.P9Fh1QV1_Qh]
%SQh!rC9iOAD6BO$bg$tcX`7FN=*[t:P]*O0i94CNIDehddCpj[!0/+2h4A]:m?OY$\p?`qP[)tmh=Q!'=W(uFAOVft1MZJ?eeQhi
%LIm1T>+ikK?2*4oN03o9Eb'%eCaVsgD)OmY_4ft(.L6%I*H;3H2gtg(0j?<'T4cV8kdLr[Z:!"Q-6=__,>YrLj[H'p7VXbaqW6SO
%WRKVJPK[O"lkZCEBT2pAS-'X7r4H2SLk4atC&'<+qTqDMl/<i2hDN5@.6i7(1!e)-R0XPfTAfur#0&1;g%t8'b`:HV\al;Th[t52
%..#2j-`uplnDV"(I9tN-2E%Gh$E)B@QJ_!\"hn5eI7%:/:QD?He3"VM78LZ68Mh#'KJA`,-?@mRA(-p*dUd<FP-#E?'B8(5og"1`
%g$:H95E!d@Gg%4QSE=lJN>/9uJ4dIJ#EM+F`3OL2AmR]j9QNg+`VnN>:`6ISmdn,+KOPl:Ml$Cj&X#AlI#9I?58QsVEVib+bu4Ii
%Um^%Ql/A9VPabT^[3\9Xq^iubG&tSV0mZpckAsOibmO%HQuD>]UuL9W*EWL5Xt10YGue04d-m0jIAS>37alp/j>L#>jVuV-46C>P
%7a?pKjAh5#St#uX;fd86%;,3n9cVEaB;t69i>_\4M3-Ql->sstFnU"W>!mpo1M.[DHoLYgcC_j!*!^m&hH[T$ap]oK6;E.GU"QLa
%#g_X4B]c\QH+$>YVKV5%U!o\+K@k>%A^L'N\96.4d%EeJ[anF=2-QgQ29/",`V7m=rH*;G1ajenQR/OqM%CMifaEgQO^i#(Vjd(M
%fXn+E%sf!>mSaoD%ECc\.Wbb%$?=r5@/B\pnVIIH%b\9uhUT["lgj*D%U-+*Bt0RY),_&#BKW.&$:^/=dM9kQCTSWt=9_Kt7it[=
%5sJt"?fQmaTVWEf&VCc0Z4*cRV:3aP[m;O\A@V-o4D6J=2W+CpmOWtl$6p'c.n<?`K;0rp6)0-BrkrBpo[i'dF6V8$cr@>CME153
%S2$qLmY^s:n8:YO3Xn]=Df;AnTZga+B7+!n$joI$LM`/dZ-N[<6-i*q5RM.mNo440`D2[aS+3]d]Vd]fj&\Re<D%N7&P[%h/s9;(
%3!BO=g'4ZM'BZG4Vno$:gq(q7QfjZG:c+'8f$$okI!6No-a+'<EmB</s5lu3Z^X%s60j5W,f!%8[5*)q;E[U_%/LSalQ;6pk<UaO
%d`osV,chMKKFGa^*/sctK@[ePT5D&'ccCmbC!h4QX(7"lh2A,hZ/]"0VAHkIK0F[Qm4R/u]d4ar06qtBYSP-\f-eGUHgU4FER;2L
%T6&UM^ROJjkVD?PTU+ZnHl.'6lco0GFIUH#*=)O&O,mQOSV?@VJ3GCB@RaV9-\]D#_K!rh9melrHA`/=ct("N1s:s(LGEO))6k:n
%&W/\X[1:TgoYF,/@UA@8q0A??iLhQa5s`!;^FIWDNi[lY-i:s,TSq8IfGF-_"0\hnLcd*;Us@5\0K,EXT*4)F,s+g^O/jc_;O0TL
%`!Vc87NV8f\r9ia@;MCDOZ?,kQnMg8#7\sjXnESAb#qe,A#5$.H9#raXK4P_SQ@eqBtfn;!-i]3I5YW-.^_GWo9:a!qsT`]dp'bQ
%e!4O))EkTYqhqP'L6eu\!U8_??/C/RfT2=c$FM.UD^f1AcXa!cFl)_^XS(uUC\PsDD5MWNJ(<H1G!AVAhL2ta48[QS5B)%odeh?2
%VmhNlEto^fd]VKAC>\^lY&A6&47.pKgMCH9;S8X&&F1A7jt,E(Nt,.ZZq'NGX`)r1os*i;#<qu?e)/k%p)%Nd"^Jh@pr_c\?/L*c
%hD7Hq[gL'f(Y*6=p"M\A1fnaH48KObhVI#i:t5ne%:]&*(Nes'an9L`gob"p^"j4cT>)GY6Yp+;YM56+[kHso?-;Od)k_hG]IUqK
%'iI"T<*,V$(G%NdD:I^Gb1gs2BR/A-4?I)5Dc<o&85O',109JXQ@Wk_R(g>#qd5<nDCDd1-b2h\Sufu:U+N!\nh+\7r2K>8]<AQ#
%7d(GH.(4-O9aRrT9.7qWju<-L5d,"KSduC'b>[*0%3fD8_oi)rM",\MJ_7ke4V7MS2?Mj(a:eKQ$BF%?3=rt'8DBEHAtQ1OlWGq-
%EYN2bP92-=an;;RIRj]C^%*a*IOnf0V8AJNjY*?TBm".e,Bgr=K4DKZgSGF@X!bQ%."i/g6$;<YKq`WM6>d+;XdjT.eF"ShIVJYe
%"):q"Gk[uB,=8Ob%n"=O`4&6K%sKTj(X(T&hCs6aNg#/-N-:oL_0$,q/^,8Hl5bg)&'ipd^=mIC,aNcnfq[j@.0KQ3gg`.d_ka@Y
%7f[Vs($0L'cKQM,@)jI:O\Qq>`s.tsJ@:uFFiMVk2H/5EF6C#V1cTACQtPQ]U?KjirL(ZUbO"<a4p!0lI7kdCe!Hd&oUmi8L,6AG
%Z'@"H'jRY,MO2;^AU9BKOh0L9SL0,jV*;TT#M/OmJdfrcc>%^P#+=@cHJ+2?YdhQQH07=NE5pt@]t&O+R@YPVM]1r,[N>;PJduP?
%UVU8#Af;dq[%=P8@4KbmqOR(4p`uAM$8/HZYEXq#;fR64feQ\W0a7e:^Nip,*NqJ:1d>+KE6p$8$V<!E?feK@LU&Que3'/i6DrOF
%<3p%`.<M$,PPgh@a"R8[mP0ff`8r[OW81LJD3<E+hSF[B-2]-7%V?aY&^.*J3neb0Ahf@<S-T@-[e3!I`roT=aY_eD/#F5kJPf`f
%5;Zp>pPtqH5jkrN@:1Dhft/K*e!nX$oVB&_!M_nl`[o!VRI\=)Q^>['0Ji.\9B&>005qCB6"a1edC-i8g6SCCnBf6!R[:i0X9rVY
%+i>rmErP[>RQ%HOe+A)jRN01:cfqj$'rU:V9^^8MEc<VQo]A-^6RNS=8u9RdXP7c^H@P5J].Oru\s&I2gMS!s$^@\Bn)Y1_m)Hm0
%RR]f?agU"bX,c*]mR'CrPGo%5J]-2rlq-X3^'Z]pr=Jfo+.SMWE$FIK=#H96<>j0YKa7JV'VkuXrP^aD'C(\V(.g!Br[oKicVT5J
%%r8V3#2'0l)@EIY;MPTG,*RT""-NVRc.cWq$?9;N&pW&PpA2B-!-N!\!?m\kT/T4N*Ip!@S@a;p9+qS4!h]Wa]5s][)HJb+;_+*S
%l$I\=MC--lSEUS^33k>6c7\kMaENZV0>--o/:3YR*p'Df]gCeN#e:Rm;i_FiN#n6kXX>.kW8bDcmm8d3\@aTae_Yl;?:i\c^9TC%
%&3J.gY."Kf5)Qn7qh.9HSS?!R!"B*m(B1oAP_]m@<!%8A5#VMDCXZui%_U4#:8Hd3-IH=/KKu=u`g7'ol'2o8Se0Z.71gd<,3,L\
%9d8YK^NC'DUeTTG^-D=cI<!24d7LQ_fQ^]1H9j\DN\sab6qHb91b;m@*@1fO\^!4a8?c?e0PadGA/G^2KsT(!T*a#%'@GOIVS/Z/
%n\oSsoVI1Y0@$r$:\DH.NW"LqZc;<TQ__.C5+f?sO6Q(]1c":[I\tR>Ki^>*,]>EgeDo$5S&Z*adm<VmZ[T3<e`A\5jOrR64-H8V
%`I;h.X<*GWLH6J9SQa\@$sNBYX>JVIfl>LLe%U4sD0oW1_/8X6%SOE:ARD`!R@!c,1f+KI5ZPb*1D`[<4k$6.,311ri=IGL]?_NF
%Y+#N,niCIZ?t1s`THll'BK2bj_1TlWTX;co!18!DlmeZEcQO+rQ*OIlbjR-":t,.NF;?6+asEVr>LCDlT/3@&p5ZuobrpJXKha"'
%&-euKH1r,Q=PBPuC0Da'MFB_uPimq,4DtS3k3i4l+EfN\,<_JRAXCbT)$V(9Zhenmc-^Z+/*k:%C'0u(F1TeaA.Pm8Up0%i`frZ!
%=L`;#YhautI`4UOp99Tl)Krf%G!4Z\h%mnEjung!hr\dYr0=6Tq9-rg:3G-\6,1afmQjK2^`Yu=8iV\DE]D?_o<Af,+@6PlWOTb)
%qg?Ar;C=t:_`ZK6/UYL"Q1uC4U>H_0lm(GaAm:R:=0cg^9!5e2L`YJLNkj<W(kZeBWWgJBh3_mHBp`6e&W$)jh\WEj?<?*D/l_i*
%gOs1'P]2]Tl6\>5_7D%N&:hiX[KupGJ^`u-MY-H&Y(WEF(H-C?dtHjsl+O;<dFP\=,_Po3&FC4*A,\qS%."0]-EOj_n'AH>^=YT[
%=P\Ym!\q"nD/G*jIRuW8XCJFP?!s&H#i%ut2_h!T?64AiDFV!uiKUcE$#hVX1N0RaQqfb?)_d5WKU:nqKUgg9S;=*=lGCf&GR;^,
%J8%mQ\)2fO\@9mE),@L5lqB&a2D,fQ^f$R4<e;CMQJ<brU;:3n>U=ZAT+>0"$HSOYVY%qnU&o3DMeic1%X`MlK7/%f9%lG@lOX%M
%V;B&WPO"H,Sj_I-=g8E[8eugs:<LRo?*1BWo!E-2!_sdef9><4o6*t'iUPSO=<r!ZN]kou;0O&$gKAYe$#fDkMp/qj1T(ZDS[-C.
%c?'J]kJDk"KIpJsolN]1$0QPlj')&j?3n"#ksOJLDtj4G(('kBi,S5rSIM&G%sNG6$OKq/2\P/F0\jU&Y./=r`Zd=]\AO.GE4IXe
%&_BZgmE]ak*./js^E1+iZhbN*d1IN1<X3i`Z&-(adud@G>_Q^CHq5UN&)`ALYL'IC#GVKf2^>o86\N\3:)Ql]4=46>KTA7O,:*N@
%j@sW(ro6B([$-I7)$'kJFb'e#`C8j=F7eu6@T'+NLbIN0<T'+9G5J/B8=3hp!_IsJ2R1faVca]c#K(GI>`6?Z9TZikV)&mpdi+ue
%!(B5C*QPm9'8"K\b@>Q3'DSR8KVGO-(pYI^%?kd]-'(P6]JuOcZtjRQA2*IhlRu$E>E'g,1UIu?S>$;Y0LpA9[2MkI_+'*jN]Yn]
%XXGoc^OXdA[j/&d53Dne28=/8g@sN94^@lCXVH3Gba)*12ser2gTZO<!KsZ8@`q0\.?YP[QRbasi36c,e%6(T+e1KF7q(o?o'>a:
%Cmjdt7)1g[2J1,fKmDGd>6\#`40`?5T7o5p[<A`TMk5!tOF["@M_2^C641%.4!F`l.pLS9QrVhF;`pBc>D=,#NUanrb9&MN[[[lg
%;bJ+=$mt`.VlWOLq]eT_aj%*eo]-S:mhr7+j*&,o8s;JO>NblZgZA;SZPE8LS%ZtWh98nWE>UWfUY?aaF0kPU:%gN!BP.Rji$\Er
%rG`o,dacJ)7rqI#(0UTlOPM_meD.4W&&p'_G!D;q]4*0;'HsQRa2'Q`'hW4'(>RBbY4k[@Se5eF,+'d];;#>X";#Wo%Dt1YXH%d[
%6,o$Tagg6HkK#VQ[lq3Vf:J,u?6MoPG"9:+[;p:E9<USJF&*ml7L"3I3eF)omji3IQRTHBi'$ePemhJhp28["jPnk7XUS$/%4uA'
%/:-.``5f7r+p>6MKg;/&^'EX63C-6,^;r/6Z*3U#r0;f)M(mJkN:O)Z"c4F-ru(K_cJrUDY!mjYR8(Cq5IhCOZO/Om"qO-$-b]tp
%W)JSL,UZ\q.ugP?SL=/S:<OW,\'KbO]OXgH]fEdTpWB7:onYHd]t1\Sjf96cB$8Lggo2;+ZFA%V3$[mLmuBQbgNASHf!6fT@u`ZG
%@]]eLa@]t8GS\UCg::e;cK=rdge`dE4cq\roQ@"\-ZD`>/ae@!'7$:t_QY=c!b6Q(@UXBA4#pnkn!@1klCN4o4Q@6j*:8ka!kD2H
%N"dY!#0-</YGAA)IhK,!R2jR[*V8$(C/5\N,DDVR1Q7;>6Dh\NpZ^5Z:5hA!4u/W_m!NW:NEoY#:a0FP5HHfNcCh.-<?>*o/R1H(
%nm\PobX(qK1#lu]<#dH\@,L]FoWXfmDlM2UnC_j6,%>i-A&RKQ=5VW[!I"k,8SP3mO5.T+G[7?@M&\^t9V\uV1R`GNK.#(10Qk\[
%[@'s4-Kh6P<VL?,p.nY-SK+FZ[Y1bW!r.$GKo<EPeut`e<=c>*Eq"*om5!X88&aiRXmT!S@`/;p_b4-mXq5N.F80]1;p5<:He,ZY
%6e_ir.,NB&lPh>sfaiUP'Es.JDr:g*@L4UWaKY79TG'b0`l;m19oplW@VDcd'Wi6o,g<;ni897=%5`)PQ^b`1oXL1%13N>Ff;=V#
%Me/Z"`Z7G:eq)K=4rNNSHg"#:[I![#63@qYJl`X]$.JL+1F^'e$$WG342fo;&Dm8f'DBS\YMsJiT"*a_\-_ji`/q??XRL1F2bH0B
%M]JRKOh)h_]:K\e.J7'h/;=']k*Cgm&PkA;h)BrkaP/#-%%cmTT#'HX1P26?lC4$3FJX3qYS&7e`(EP1bqZBi%'s+JFt+lJCh^lk
%pY95u"@a&!`_eB_qdS_P)t/]7&YN.u"]&Z7Bj^?Z!NhNeCirrJ$csa7R:*J/IjPi6)B*&lY?"J7e`NEa#-T?b"t13("p39*qm\+(
%opdAtSA^[-o>ShT'-#Hm?EK0*IDpSR@V(10B1s!+S^0U:ZBEA(ePrg@IKbqN`FS5mPCEOR784M+%dNZ>b4FWBb3%<1(lHi"$H2F)
%O"QL(*JQSm8ir[=clCl>['G_Y3[q[.&8OlBMkW*Y/@pEf-!b0T`dP1JmGadl:*s2dN3drVU1*qa\XE0HbM9bTqplko,35q\HR(me
%DA.Sh-MqT/3`hc?`Uj(WmN$&RWqZnsK45=.>r]Us/c';rG-A..DH$,Id9_O:pr-FSUuc_M5RuM-9U!f9$,l,P[7DI$eU\_8U.<?]
%#!X@!...+$*u&o&TVDX:mZa9Q+ok?C#8'k>1T?;CRhC1TYmJ[F=\i>We;s:nH84]GXb>N'7t20jJY/JNbZ!(*#A[m8!JpQIADq/f
%j2YI#V&a&Y@<bj5KUL3A8F.NeE)N1GTINl\0qk^GmDQMa(JB*("HQYD/_\c/:@$$XM$R$H0lqWEm.Zi^"u@2C,1IlA$7@k@]+i-H
%IHJ=GlXlu>U6a#.f2;mTjmlZZ)9;(HZ&l0b'f-M,.tqC#n?/1NNIu!L?@)="+j>hX%k!&E"H"&uHKje$=tu2c0lXZaEg>![/a1aj
%<]3,_ikh56KN75>X%EA^pI]<R6]RFIRV7-0\7/[>n5cOi6a2iA\@_272I,,SJX*s^Bg.Y1NMC#oloN,"RGKhJHgNVt;Ip!J5LC;@
%LnEhqaN`gDm"rI6;V:YS"L>XhN0D;[1HLNa]2g'LQ@'&eqmr8-WDB!.NLt-lpZS'\%f/9(Y1r!jUJq0gbXpC5Wggj><LXH@#q`Bu
%7j+9X\;4,lZX04XDBWY/cNqa<]iqQfn@3!9gO1Yh-MJjr;mcoX0AGi_cB7f[l-'&PTNp*H:jtQUff)n344?9r]eeg134?>V%:1+U
%3.71em?`Um(eOe=Qu@igOB51P>TCd46.O<D5cio63,;:@gbl,q\\-@=#[$mE#J]mhUBo#FYreg2!\DQ0:@/h9[HbVo=1T*^2gP4-
%JueG;X`%FOU#\mcS+Uaf1Zj0C!kp"6qP2WQ0?KP40;;d\TRg(P9stHE7==@:q\22&Y[oDE'9b#WG!@Zjk)=-0.oU[SC`.aT]q&>A
%.!aKu/R']#qP>jKad-cZ&sU,C-+;U_^"uZK8H^S/[LDj-eM9>ifN)V-fG;H+=$.9kAG'?RKMdZE@`ok"eaktqf4*#/?7f@..IY_T
%P<mAMcE0P1Hp8]JD3aRB)?'bYq*%9uDj^.06Ja)E-N5a;&)q`Rqc%B[.)-i_o+O4SoAKCpo#L\D,$doD^\6GloeU:t0U6d=<^3%"
%l7RL#%^-^A$5:0[aqYaU,OP^C>`M7"Nb_\6Y!1ImG4iE>*8@QN;m)d`aK0phGU^fdf=Q"ZjAjA<@,O4.rL9*';#%cK[WL5B_UOb8
%h5&Q[L7-4^0hV$*%VVPA<,KC53d_af^l7M=ba?*g6@jA>ro&*!ojNJaf"@s8E_SD'qNHi;/_<rHb.mn5W\*Uod%=QBD7QOtHS'#?
%<:.8_X^4tD\Y^9GUA0A!Wh"&(hYosoQH9`45Im^RC;-P`XQ;)fWjYS2fjM:=;75MSC,Pa&b84/_Y,R.QC4C2"[:N0Z48'b$<"8"u
%\>EH9.W"jRC,>T=>2Zl8;>$rO_`he!/f.MLGS1IKc%[$7]1pSN-/i00NLN0sa33FIn"OPiJ+d':^+'rE7F`pMnD[_Qm=/*r[:!?@
%NLd@k^8BUIh@fSP3F5\P+)e^S7F_kJFM6pc`Sb`S!5b11=N*%8&S0mCa,X)Q*B!n7VA$]o!Bt8%=*jS+]f[q3fbelogPsWcXIlC<
%BB.joi"oP]SXdBN%FuggHQ@oZVduqV3I;FCW03acKr>rLoPBI8TmbTF4W>V+gC7V-)Qd8-Zdg"k[oltPSt,1gPL1lEg"8$:)l71W
%=O^Th4S\0o(s1Gl<j&!bNBuZ2f7KWdNI>U<7d8S9RqPOAG*cW<kg;>5d><d`R%A.S[;O+>*rCPYT"W"TClk7U#Xu)'@4V67/,cVQ
%X4&L\Hh/3/ERM0JKFRl\VR=mZ0p8l&hLnTZh;+:$f;iY(9$bKWV-A?<$L-4\ak81k7IB?m(obMMEIB@7B4E3"qp^>;8^GCIc8J2K
%XHfBj2T/Y?T_(t(p;7]*ZssLs9jg_2`U$7@PdG,Yp!^87;f[[5h`*b<1UDPJoPFQgCh'P(>cVBE*5l0_;ro%emVJd>h8\3UnT36o
%m`rh`:E2H5gl4!jEia5X\)Q5sIZa?Y\N=$YaNh8-YItmP]<eaml"tNd[Z^j[Pt-f[db'lOH8k[:?6L-B7!+Y^NV*0,m!>_gSaBO[
%',uIHJdd*6KeHYB*-V,j+:]:Ur0Mo"1%%r=FitZ_(fn-uA;o8a7K4QAg`9kYbS]5(KgUfXESLnVRq7NtA$5e`@iXZ$K?Z3l$(laC
%m:;11,Dc=C@pI3]F%eLK<lVY@.@e4BZun.Df=f(>[>]*DLi"YP*6'A0T0%ar0lHZtr_:DB@qP\j1WJs#&T!UbDU(lOX,M&%f[9(t
%N3?3-E:&U(fA!U>RPDOI]Hk7NnJ1VX2TQ`E`PDLF`qU=p(e2M)J^8a'a;?k,Ys6DK?ffT0oeXTnm]>;d`]0t(9&k5!f?G-[6M<Le
%\">ChV&V"XN,ca,`_T<53Fc=&osooAgWCA"V2OEC^ugfK[X-fr3Z6u'[Yo!8N,S0DfmVQIg4LoQVQH4?:9:8&XICq^XkEA+)<:.M
%>.9nSY%9g<@+Sai,@c+b=uZ3oirmAUf:*-elE0.b.4lKLN4[ohZe^R[mk\S%(gf/8gJf37n^<3[AW4Mg\=MWU\!o*)hiYKqm$;k8
%\<Xr/9u]0ODi*+5`jeKHW*S1_8_;$#?aDZ?MAbFq(6U7]N!!d!b8L>DN,ce%h/<;HB#_?0"3:gn"g=FNNo:l/6H6NfQLkD"j(S0m
%dttQ!0lG'Y`\gl%OYORVKu6nH``LU,f?P4WW"JP))<3,Tk[Bs),FPW^9#`h&Ek^O^],BX:/R$Hphdqa.H:G?70s5jmYg&&@A;m:n
%51_=Q\!8\NiI3eLq7DT*T1Ji2AW3flIr+M2EL6N3hAP?s3-f%n_q]3U#PVS:L[2M0!;HLE4'Z\/+nf!jiHdR0oQT!IhJ:eFG.?Ch
%#lS%P\=RMP^Zg)lg#76p\=PR^rTnKOEi*'.\""J!QW_(;G.8j)rf=A&I5C2uOr^^'B`je'ca(I]gi/Onr'be=_@hV%-%OX?AV]T'
%TqWk38TqUJ%/b:T__!Xf+(^43D+];A*PT4Vo";9Gf>nb4,<O]Pp<p'SL[2M0CW,jSB8>frFhBSA9A/86&`%qu*UXcl^%L`2h2Ufc
%B<b<W\<E5c[HqiIG#!;uIuk\R",$)+:[;YKgN%Q=,Wcu!IVdL"E+9TuhdqStZ_%1@45;>UEI6BtINIA5A;BK]iBGYt)eFf:6#=0d
%iHfB$:?:oUg#4R2K3QV2f6P&mc1*17iB!V`FVV?R*NfVl&YZt_%X24%<jT^:gi2QsgLbW=]*u$jlu4=)[f,Q3O+#\jG.=+_^>43W
%]=N?AI9GOoD@__Fj6U`5ZQ3TUX_!:RRgjf*J!D&BQc6M+lu8.@p1N(;=EPA"hGrjk'9i^5J[06i+5%2J6%m`!M36kJJM6ci^A8#+
%kH;>PYA>_O(UL,rcKuVu4KuOAX;c[Sl$$gO)H<=WT;0=frE?72YE[1DK@l'\S8JnUX`r_70mi$>'l%o[QKG3aY;@Qd8c6@28+ODJ
%h3D*Qa7[![BuM>qPP/aZe/D?Bg`0V`#'SdL:CNX5Y1+6!"'96#q&M;7G=hfkbg5&irH!mg^@<f!Jh7GVL%=88qlXLPFKGZUVIrhb
%2_d@Fr^&-jbi3D[4EiYDHH3k5n&E198E6HkSZc+XdOVZ\+XCm1/&4#s8;+EK3T8-shJNOjb<<KZ!;$QPFp4P>$j2^FrIVqk!=22H
%am4EPKE=4?%d=NZ3q%FV^*SEB.8FIWSdfjbiO&Jt6j6n5rRS`AmG;LVW.YVbf1UPCj1RC*R.#`YG]l`I4h[[R;D1kbpZ?JUBM&c.
%hG0>>1#V,.B/58/agjNO+^-RFIDbAJ2=%1ife%L'=R[roV<R*1;;TSVf];:Fe62lbSScO$<3N6-9H>a4ce$t"ClO>$Q`C@9]0bjD
%Z5&0!e9nM1"0!q.K#mG!r.L9f,duIcj1BE=D6+$kMq?&)bMsu2_pih!E'Rn*"HBBN^]I2hF[4`i.o&IH&9a3I&b=*o`oFVd*7o9s
%Eof)q27KYo-j$9KX4V4Wn?-o_DX.D&^]T.UMN,T"?&uLE$T$"2haY!Z3G[H0_Wt7Q5[!EXm@CL^\ZZ\8eb'a.@iP<(XUmU$+%)L`
%@Rl*+*iq29In$@)IXUQd%V^&E2Ora":,76/91+bXBca3Cca#T"#bso1gse\LII*7&F73cc=l1#&fH^ZJ,B.T(bZi"GI'/3NH_(B`
%!4]FLY]<YQfrDaZi*,AT%hnEe<7C:4VICXMWBOJOalmh_-T;d;?`V2p:&,1@>5-?;`B@]7>C_CWLu];%i,WJD"5U=&680&61rhSM
%a_I@V!67IY?r9O@/`S75:,W?t[61Ni.a'WC)"[0!Cp+^QJ%&VA%aK(%H4TH<,<r8/0?ZEh>Ks>,\4D6VLm"OQkC:tV3n=P6q^Z+3
%qH?=oS:K^#8(#FHMKp'dm*X)ViH3(?-lLFd4ZddrbE"\gp7[e>D#*bURk:hZ?Wt';3*&a$[d6nI"RJ<)hVk\MPkWngK$=INc'9m8
%GMi/cDJVmO7m0A2r4"Vm%+DB\>M_[]9f["FP:`t[`ia^t4LhV,Y<2'Za-LQX7HeoS\[#d#a*SfVbef\%fCJ"KQE`5IFY2ifjssQe
%mQC6i?`1BXpHN7ok54s.DF',@ackqN?9d;Ne=p(ZIp0Z"U@dXV4,XsZ,O=$T9u?gNJ)&)d@!AjOI0@3aIVltK"Q#S,T%1#G:AF%/
%cjo)6Eks9&q9,u"JiNn!^o1togt8]AX/"kmPI,mDZ0<*D\T[XSPe)n$On#S95Je2>eQa.3[cJ?0Zpqk81[[2Am/3ntP<.0EnWm7U
%KKIq7S+h?RK.5"5\ei5b^#%q5>fXbOR(JBV<RaksNY%4P%AA4")6r3sI);b9bA.Ir5XTNYM'5O2TA*H;E;rrb/ff,-mnG#@HhmGa
%V<p(cP4ZtF"cKJ,5B$2VH=Js:97b48/N:lXW:J2C9bNB$CBCU+0e>e/1gBh<hSV$'790Z#:JX%rm'0_D1ho[N+'m"."8baMOa@M(
%OfQWKnu](Aq%Tj8)*MU7L](BC-m$P"-QfP@Cmp4+^Wqleb8([NW(>UsiTX#)GrK]VL]giMmV'**cK'WNa#uWY1Tk(*870h*;nr2-
%aS^.`qPBh1S$,JaT$,s&<dl.UeF^%Js/HN_pLd"JbD2.b8GM5?*0#>)e).X0C:)>46IY.>Be^"G_[!MN1)SZ78<]e[)>ksPT!(0c
%d9Q<)I.A3r?01=s]47-X(3aDtdsO#lpi^g$TXifc[*VC08<H"t+iVHr8=o3CDTK0=S$1L]E#P?#^J4d:S0,[eg54lj0$i,Cq?JF&
%*3AU/LhEma^U'?Wng-6=e=n@:)m$Eo!-=75;29`2%WN!L:(e_jOpdDg0GfNT;`-O^;Eqa<\ogh"(#tRDSBu`#rSBQPGY"[r?h_Co
%=_Z+8&>?o"c"5B07*EnEn8LVa<"3FI6S;??T3WFaf$BCU\c$:JXGRCiNMH1r9TX0\O,r:]E,q@EiU)'7?\H=pk]Z<)N>*Eh+1$7m
%@ZR=#YBt*JXX*H"UXQ,=Iem*P=RlKP]`&XTfm+cC]r2Aslnt;S^_a"^*@Zf+MAC-^3dW7=iM'HR@W%ZCYNG:)fS`6u5;+1X^9)?=
%HkVitf[oj2XEX4(/d,Y8O&(=G]X8-J>[5'OKg;/&<WhlerHGbG-\;'&p)8a1&ig5X1jdi!4V6=X+bTX:4=80&WdKBs<KQ(<?\%u:
%L;Bn`MQe"<V>%u&ZWW5-9s3Vd<KFoaZ`[Em!kY;t4a'pK[#QPtS:BtumG![@2B/,\U;FfH"Z1\^"li$9+o'CJO%M?#;X\rUDKPcA
%(!GsL<LV44[X-us$.F_;S^-)#WGqA0d/NTVJWqLE?7tqDZb>dcMe@f(,]s[_Zh;V[P-#a:+5"[\E<QNr+OdtC?^C8lj_s*6hHuM)
%Vl:6R>s3;f=u&K:r;='qZ46f$#0/lMbkK1*/F/Fncs#D#T;<_FQpJ*8BV19AOj[7#)ibHgYd8\dPA0IJ2]q$oClmURMs-'9SpXF`
%0E-!M.0!oe*3/E.p=&)LDiYcR=;iMpO2rCW."ApPQMKi[ncbV;9/Lp5]]'a%E;bk5"0jpbr.r!j15kCD($sIb$qqoX5$ND.gL+#W
%.7fXUQI/Uh.KJf"*q&QbQ^&!Sp0PVc:\[32*.A).4r;C?r.Re?`t<Cre3/3eQ+u>Ah9'%JPgT4Cir8-:/suQmMXn%!;@HXPcgs*N
%nqB:m0CA(t(&E%DLTB3kJ*$4aAMXf3g"k2J0[Iu;$[^LkchQ?on3cF+rLBUU^fnMV,,4T(RMQJZYpcrFJ#WmI=>=\sj:)P&ji5A`
%UsG2#\\:-,kMUIeCCudCD<#uu@oh[>cSRUPbpuYa,=$u<J:l_UpaIN"UMos(Wh5]0fp;@@$bC^LRi!K%/H/\sY(80MWKh'gnGjP`
%jo_"[lt6(3m2(gA&]eIq;'F$3!mNo27co<;pmgdTIWt]ZdP5IW0r;ot`*Z)NdMr>:oX&"EWH__%SF3b=p/btF[AD;=n,<n1e:T9S
%eiY/h0[L^'JK;BBe]$._Q,MOF\L)fO*dFp&k`Zeg]8sl"fI,.\\hAp/;R"98&#2(2D_aD:$!4E/hrjj^[>.(e=Y7ODq[.9a,,Ztt
%+VLY03Y!h-ca2Ufg_)grGojQODO!5r*<$5k_=N93/)Pg.VSmQm?scZ]T]bo$`0U_9QIiV+[nG\9n&N=_2ToVD,2[4T!8'%[,eYV1
%\SA)C<4LjIO5fF%X=AZ_1g(qp2,Y!^349k=?C.jVa(9s.FKXb2X`f';FiMUKARDb'rbGDFf:JWdGaVr7RA[BsE0j`V8)U[5/9`1G
%O*n,hs+!N4?50>@OH6eui<l1:r)'N)TC7gOm_QQa@:#CpVA.Yd;E6!*!SK5"?S03WfL$^;Yr/<1i+/=OY9(O=/7d`=<H1M5r5E+2
%Pt)V5?^XR+6454\T[R?PEkiZ9Igi@ZZM46M:Xf[$&p]/f\_r497\ec-cN@S3f3()HXO'Og7PYLlX"tc'1(UdZ#5C&jM8cff1ITI6
%BDJ$G@?;SDB7&P?"kKCj,a\Qb%43`@TsN?hU"p:.H=qc&EVI[UC\iRi)]m9c00Maeg7P"m%t,EoR7QE>Q@A(=_o,gpBL-PKFN/u^
%E9:)N(m[qSfZDb4Tq[,&0=p$o6E?BsS`J)\M%&)'b/7"hFuBEm6fbr#-gj#PH>AiBbE,K6J[P-b)BV5QArdsCft>-P%Z&Ue+KbCS
%;IM=qEjptX]HH<'@p&mqT20dmkLK,gNtTf(e#G9sr/OUQ)B_"O%eBK13X#ZHhhTY-ifK5`d]"Gc=7N#,1nU@k(Y9K$Z;nRA09/iI
%>k"n#I_475+9="a&Dt/:5Hjf;MU?Fd!\MNQVRKsUoMXm8+!]om#ImlU#4Za7pY[%4!m)^n>sO?e+I(%`3_s`g4!ApkoU+\-p:8P1
%Qd4^VNaSP^3GPe-jRa?3Zu_Y#01X,Bf^mu)WYC)cEWIZZ<(6p@_"1MB&CfSI&iPX;:N<+1n&jc>7m4;pQnI(8k=?Ai"WfnGVg%0n
%=/!<Wpea&#9g6_ZnEk.i_qcpU_N:-bptko9:M'"_/-2^IlQ[qhoIGYL^;Bq%'2n(0=[OPJ+>+Nn,!m!rne9AQNWoWj^B`ut_$/KK
%hgHWg1rJ\9E-`pSIXZ?'!b12/Vu^@)!#]7lJGbaWd4%BCKoRC=d/a:V=t\5)iUo_J-/+YGHV_G1(L^AZpdiEQdV>kV)M9`2');]!
%UYRRUT'(_]U""MlV,.ML%dnMng5Y_6E'Ml[G0EGVedKPopl!%V+Qu.\)Pk(W#IlYpIkLEaE`\2_o<0>[A"j2,H$WP>'Z9fd"/0#8
%>RJlZKUaL8L%n=/1F^%]K71-(n1tC_JAM?n_7,!N;!bh1V#/5`lhp1r'P\68SVrWq+<Nbg4B0Iq5MRD8I4h/2O2]_TPSZ\=mDU[i
%![Qmp7&D-R9`GjKA![C6#&$4p7c]=ZR1Vd(k*X-Li`Q*q*X,/]Tho<AL!.!;]<M[(4o.g6*T^dGoqVMgfkS3Xg7YId:QX@T!E&(*
%1fA:pf#N[R9Cp4<X?LiRnbcOemRM=QE*/1eYJ?'&*up#WL1=]B'--:hqk716?@9HS$dl0PB8E"Ka:qVqHo"8XR!N"LB$&2G]6^&2
%!@5q)!Y55FK\j2p9raGmq8mWce`d')48Jj1pFPg.S2$G?ogis[R`8p/eg9eJN^V0)a%*AU*Y<%3QP;ai]doo#!<$In4jbcm2$!fl
%gD(sX.M.EYnIm0n_@saPNBRhP(K-m7ICr]^2fg!pLP5a/F?]b9QsY$?<%>o!>uV=CR1].ARH:hBb-[4223d6T0QD]#>SO4Y4I,4^
%GcWd,s%Hd-Y&r!4V5XA1>3k7rBs%)o!i8-""aSFZegr=ohL0Yean(j];3gA=CDOuhimSdAfqZ&>h*)`BAZc1oMf6Pt&>:45lDsWT
%Kb:'RKmk0:/TdGR1cN',)?G9V,RmJ1*5$FP9)Qn/;IVW+7"ff,1=_YnUHpFAOn:Y8HE;f#^,UT=]dJI5Kt5Fg#A*lB&Rd'qKHX?T
%'md.<F1M2;Gcdp]-UJ5VF?-"(S,k%HaWTL,eWQAQ)hIZi'BcV%H.iXV7Ruo.gWnV=oP__Cf87_Bni,Y!K3@%W+3S$8Go-*O9d;G#
%/AqgIoBFF[H[Ab<L,+6Qr1r#QI)_%td2hj]<Gn0$fchY\Bg2N(G[K[i?3:sCSH'FjCB5((REMp&o"jm\16_er:'iUTbES[e6CZKJ
%%'X.68b)D`a-;>Q2m-('66;>jmZ1W2,Sui\ELi9'N$4;&JU7!o=3AkL'=dQI+aPqY!1i<8OKFQ.IBhS<.mns91IO774?2JtNe?2J
%k]bR7bg6*Cki!SLHDER"PEN.jrd7rUL[&Pe!dZ:%hFEl^h-<(q#E?A7nBRsM%Vdaq7@*E+lN7hj#J(>po@B+RcogCueA]P5qr-#t
%)6CesVs/Y)#HJ>6GieI\$W,7IS:O;R[4Vt_O,#;D.=c*:GKZdi&^sg,Ve_'A=/Y*?1aO7irEQ*H_38])e@X=-/!+_@&hM?(Asj:=
%.JZd)['@,\K+lOp!4?'C;A`>a%ag(Kme[Zn29Ct.m_cO_LXV<.p(>0tO?g`#?X]L3#:cYrA7(XF9cMK%6--O$d]FP5d96OmH/Ucb
%e=&IM]AITFoL[qg\(rpkK/F44;ckU7@WgaQ76T]!YDIYRYo*3^1IUG&(lIEG&L#VsqHC%OW/bR.0(h8*3V#5e]$]d-a02=<'89S9
%[aNrRY,',n[kN-TV;(gKfI't9SHMsp!>2W_<^YNAU$H>58`S)%45W3%E*hb^*4p=Iq64sU>RLPZ[jMo(.eT7(XXGtEOO`oEkp;u.
%R#BEA;ul5L,UN28b^]K)pDRrTjke)sON%;:L!O>"E8tEt!)]m#]b2]]J)XOqDl#l/g>hCZfSZSVb$WQZ4k4S55.fT%'eZ,)#+]#*
%WB`H].!DU^:Y78\T>C[_St5P:0d`A1gjE'r]!#\G@jXc+,=$cSO3>5sY:A%WANP,k[cAOX,%\(h1nV[n]QBGCWA/eM9L8q(UMq)e
%Fu3nQDIW*#jM-&66K^%!#Ce)pJX4L/Km4_hYPss&'>p/ILd1q=(!pU!NdPIRm@c_k)hfX#X5EfIcs\,4meZOKDt)s9,NCq[e(b3(
%oAS/RY"tEj3D]"OEqkQiNpJHH*;=OI4d/TQME:5diJ-0+KP`h67DN6dd>mW3A54WKhN#SL\&aK$(O^@tc3ES^6`mJ:g:L4CJAE<?
%A(0910*(i];#Mp_JZ@]H*/fS^h7"W9pI?CZ,d)P23@gZMA-3:60ZXe<$_DdAF.bNp?pBp\m-G;LeM^2-^QRkYcWQpid5e`62nHS8
%FL"je^g%h&@i3"G-UQO$>]L7r6tJjpnoN0cf=2B-FH3&aCf-L)00T@k"="*aE2rD6dJqEK?F`So-^)uLP##M:Pn1o#JlO0_dTh(L
%h!h-r<=T,XH'IUnO3c.XnP].1AI=dM5@ndtDg,'-(/dLNg08a-Ho^B97jGhDN@OT_F+X*eG+o&s#P>pH4NJS)a*'WjK0s^O.&Nre
%@9`F5R9sKRK;WBhf?j7A]2Y/#WF!<O@rEge(-,V6c/7g6Bg'P9$"J.?riJ':\K<jEFn3Y)h1+erk5Yt'!e9iAb?-*VS]9kRpVS)#
%WUA9.=6,Po<l1cO)>j.$=ABnr:)'o5&/5Z;dQ@*C]Q6<hd3,bGIR#N/(s,[s3fGHq4../AFoREcgN`rYgFM^.op<1;BDB>d-BTcL
%T8HXBIIoY0GSlf\VY_o,G;!Fh5QZ<6NFm2r"$N`@KNKkt?7M$I60'9p!msR\_+q6PK2!u,H9DRtetq@i0GeW2"99sI5`^\3ltqeW
%3/kPc@-c!D;"b.pMY9sue/)+MV[(]CU)K9AhO_'%fOP!E<@&6[Q+rW/O/;dH4X(i;<DUdYo&:MUjVR`9\D_3UY7WS_fpe1$"qJC!
%?VU-/[Sad-EPq-L<l;m^Lildq_W[eSr%!:ET+Amf2b]"P<JSc]':Di8Nu`;K&,J;)njg<S%+W'QO-"HG]O5Y2k82qHA%E#Gr)ldT
%8CLpN`Libq`PHRrM7,jW-,9-h"("%$gZ<*p=Hrog>$:5dG.7;TK\-)SBHjRIq<Sjg1ENm_G3`)i,Xb1HCU*DMQ`UHRf<QJrT%S&`
%pe,Dt%9Q)@:ZZ%rOA3DQ?^]X@Q_iTfZDcPV+h)ef7^if+^TZJ9`5E2]*d^_;9^b8YM1_,:TI4[)?,8$G(6Rha=k;,HDnh_gi]q)C
%#4D[sMsP+RjH,R4k_gi-g`CR>Se+Q`0/Lj/;?/9,0j^;=7e*gHQlMdE`5#g@R7og,P>G/?A=5`)[m6tq2\N[[W4NF*Q.)CL]]Sc]
%kN>W,^3@L)fm<""!oOdf;UR[p?3^7?H3VF/7J]!H3\E1n7$Xh@(OIh[UAWk,[C!q@J![p\A_Q2s6(V!<)HHa2&:=/Fo'm%s#lA?s
%!cVKHSFk/X%=Nujk=7DN4T=,XPXm(b?K+l/jH=AaP=(W2*JB,ICN%%cdf$05[`YG-Ec#.Z^A%`PD'@\iT/('4YO^4DpQqqHWTQ#W
%]RKsGWp3G#!@=W2^/a2HMA$UF'"c>8h:+OAi8XSOb%$t>JguP)Kl6m#"Ak/jj,[A1#"$NfZa]m2,Jd"ATXBkW_s$Gh^-"]R^Vj+j
%OY>BRVt`dq9>j%PkDAO?rI7Ru9K&BsaelD4SYNgY:n$4c#5uA_-Unf+,PIY%m`4.?30U.moWJE_kq#?QGd3Ii3F_;c^u,6Ql:ec%
%BHAoh3BB;dA5J=o_KDG2HFof;dBc/$P[Go:0Sc?j@Bf5!\]rrVdMe_e+26LbkB2bq@q4f+E(W9(q7Z2oi6.D;2g&K*f$ke71\aaW
%Ko$eYg">rZU3)fmT4BIka+QEt:-AUV1jaWtq.Htc&<GN)NmiAT5;\P_'[-DH:k[Q+[gP7I52l^V;F97';X_>>_cE/N)_;ftjj*us
%ImC[]rgOpgGG-VN6Zt'=^Pa]+AGU=VO9a]VMHmZ`?)X[T9J6d-4Rr[ASn'>%n"67/Q4!fO0IZLYQc4T/FMLl7GV;l+\H8eI-jG<4
%W_,[<*,"c,!RrGI_:UY:Eq]fr.Pbf@Oe/b<1@_&/rXHDC&;>Fm`%mZ@Pe@e;O,t-CqM`22=/*Ki=8^oi9V*;QUjn]FUlLI/M@(%`
%)T=l'\W=G#`K(\@jW8_[erGW#_iptESlC6?nN=??o@f>(H/o\6Fmf)BaJQ:=@NW_XLof5rb)l>dS2bkB%Hko4]m=VK?jnZo\s!ap
%K_!`sg8RbRoUUHDSt;_!S!=HH^cq]SIPqNTLuHWp66gIVOfpqj);Nh?&VJNRkSQe"%@^0BaI/io6BE-Y**!p5:2>aAX*:*jkZ0qT
%fTu]PNO%g!'+bGk*u%NVJM/4HEKZ%7N=;%9mX^6TO-O=0:.1Wo46+Z+k?[c,@KJ"F`W^L66YFm+HX)uO(']&2`RI^t*OOhF?XW61
%Hu#-&R)%A'.u>):,;h+P:g9l5JAJ)g4_H--A2nu7'uT31GM;1a.l!ghdQ*J'_!XQ;];f-ng);s1WlbtL5`E](*emu@=+juZld6m@
%lpB5g?5'1a\$r.e7/E%'Ra9=P_+D.GD"<tZnbqZ_9+G`i,.=BK'SXiSgE'IFm)_"/,/i$'VZRc\R,EG1G@Q:Zd'Z_\*_/PK=l/6c
%Ur/QVR+Jh-f:2?9aEID#(i+;);1_W_)RDqrO%7gpT-RU`@uO&4\XF[>NLKcG&4_LGK]cPU(\acCl#NJub!:>=J(1k2PLTUQjbAWk
%+^=@+Y2HtXkY<d:.=""+dNAZi-X7_:M\JcC0^"^)lDnl]>X/%pFWD0"MbM$+4=G8kT=SIQic;3&;Lfu:AVrP&RhqjoKpg^Eo@=AG
%mjJc[0^;@'`%&$6n!AV<`DL1'/G9KN*@_C&K:b`!<!Qgma0b^QQEcq1%3%jQZUCfB(l38E+O)C*$k?fkEZr*[J#Zu+hE0NA1(99F
%1(8DM$:?Ae,;!Np\l<2M%43CmM[Sq#XGI;6(6I?Y)S_AN25+;e0#'8DZ</LFU]Go=?[tR>pBjgYo+!J/f#X<?J[?hjn*?A`ndUEl
%9,I\6SB^9:INVP$8Hn*D#7iL(SIYl!Cf(R75D:aC!jUYI/UVOF,LsDWf_&/hE;7%("8d-;L28:m>$$`&3@-8UM<pg)9pNP5N]J]_
%L1bq>e1\KRoIYr9J(`NV,lh[,\bR\c!6q=-c&*pF62>\A&.f>kq_^&RlGX\)%V1-p_.H;h-^=C4\Qpa@!r.A!]ulmlhAQApQBj,$
%B1U*u963nR/"rNt8k?(IIGo]VcP:#+p2Hl3HZNElkSklq2/FkWYNQBBqt9k0HIA</+Il2+"m^.7AVpj0ZX5_AIj".D?n0*e2+qe0
%HlAB&K?!9"l%@)e35qc,BD87[?@T%W9GflD&ou_"+I8'Th.jeb*eT6b-St._Q7b2a9FslhKM7-rL4[lJ&Z2pBZ6ldOV-^`"44J+O
%WAB&<YGQG1_F@\s-['\2fIN:ZHLIaZ7,D-r^h4U-iE9@NX'DtI.M^Fi"51E^#3Ku3JA>XE"=7K8a:.nR80i;_P]'ie\Za?F=)Pgf
%IL>IG;j/Z[!4Kqo';/=mN^XYe##r'&#DSOEjlgk/]uh$2R1C.Q5C`dL2'LQ7*>rGn0@U*epK*4=66Xr[Nr:LD/*-p#XIt6W._D/T
%qJp:T*Xiqp,(q3N6dV3l>RJuj\JT&+;#7t0/;d`U.aZAMJME(a_FoGo%,t*]o[#R9M*eWtaa(4ep8SYt4FqB<Q*XPuoXtNPrnTWj
%j=YIOa;O.FF(rD_Y(`Y,4,&e_klM'4I5D^X6?JgSf1;9QjAa5[7]`q7eA]'EVpZ<)f4E2_Ep<ZM7SJZn#Qtq%\Td*KH2\^TW/b2f
%d(3f#qJ04_oVu*HMAme+Y3bSJS=Y#/o\O\&Uh;e0.26\(T9W$\kp+fFWk0o;K0-[<$a$Jr=,^9_Ve8jjO^OblX$5NUEZ0N"iXp/l
%PhDf%48Jhg(FU[/[i?9_`I8gSpBrX=3?7G@TN>Ep'*V$.RJpJ9,_$a=\)0GXb3t7)D)BlB:*&Wd]h\^$o0.e9hRO3.5G-,n/J(/8
%TVG_CWH8dDWp3_Q0LY;,A7)88i#g`9i0B$*EH@;"]6BS/f6f^&B&B]/GFODl(JJi9m4e8'6X(`s2K9R$)91kq^@?B,YN$O>`l:X#
%cGjj?L+'L]mb,,sjo`V=@YPL5DgOC@I:ZK(\K8]ooubhEfS4UN7n4\.knP9@00\#6L_<DgXC[;UPc*$MghBAqPhVf6;5,KWlhq\K
%Q*2eoir*hoA;bJ4-eK-a_t,-DhRN"p/:pZX/@b`RM/iCJcMkFkC_t5N7`5'kG<*Wc3T7MIC_u%,R*f3/`-+G,N2!rTiRl/kkDFT>
%m]Uf4g?sMd(_K<n@OU@`-$_m$q&cUq\%j?V8Te4[lLDldmbs/(;m_iJB%uh]_@jINQ;.JB2oSG'\96Q\"L<P)HNdo^M68-tI'7ZE
%,Ob,B8</0?\n.Rm-b.-s^WL>3mhY1AT8Gqu4u?^6c[c6iIpRULhCN;Pgm!lVOjVsSVt$XN#Z*"-HP["@\3p=IR"(6KNCsC&fnS?P
%!]DYC5_LhK"@P1#&V.1?rJC_o>Ts0fe+a[bfXO<LTJ6@6!]DYC!7$s]OarEa"=Q!bhF.K(/eJ(8=2%*)U77GS5Z'Ul705A"&HLiK
%I>\4r2_>UAZZLSQ"Dh<e!3F/C8,uJ:I1l4$WrkV8J$mE%WspNp#12qbmA0il=;X<Fc#tQGYf4HZH@6Z8Bn5F@$3S'N<_@'+#M*Y2
%F1efCi3A&>!r`3qgIs^<7g<?2j[VJ,%*<#*=_JUt1M>;Uq")f$K.6Fd%OoT,p"3&:%sXA!D7e'B[IDr\ooU[@m+#3HFF`gkj]X[Z
%)I'?a%<efL>1gcKAi*!dF/6Dcm'0iW99r/`%bPlimONI3g?TgNBL&Y`I2Xt@4?Su_FghTd"J:2Vr'\%lFMB8KG'Q-&ET!$C%/6pO
%I/G:*oVH[,(IE3rm$GInP;/@c=_?%>,!pT,)J$,o!URl1J3UJAr5cq/462&LH6l=>\E9&Qm_5?(ZN**O5N[-8]V^#(Q^h'(ZiAM(
%>Tm[\aR-_,$3>qj<=T^pB0QH)0-p46rPbTXbfgn9J`9++Lb4Va'<puX$SMf^#65$U3:u6%r4JIDJ`=-8`=4FmF2],t-I+s_r<RV^
%#sLFD!'qpf(W3rQ43XI<6_AU:H>#Q#2*S-5VV@H8&<Ys`3dCSE-^O?O^jR+oo`Z4C)oDRS7=asBK1]#M?a@6KEEL?k7t?3j^QcFt
%WbtIM*V]d7*S)<`j<*-%^W>>NRHc\J<me9b@=^.e[3Q]Z^#c,Q..kR+mMo_)B#\*53qa/@;g#gZEmC)>aN1l&`4u-6s$O*RDs;,k
%SrE^=fDk$Ks7>ass7^I2jDY#^>MnfJZ$:85*:Ho)s8G7^os]FYaQVO#pq-Rln,LDJP(!5&5?c-8r9Z`Hj8Y/EolpGuDu].\rVcVC
%rhmO0rO;R!J&;$es4c^@9]I_T$6T=ts6FTQbf4Sk:Yst.rnAOnmU,tHn,M?*J+rIDJ+qk#r]gG^TAKP]csQbFr@e3,Dr1Kc9l5Bh
%gA\.^5@3.P^K[hlTDes*Cqj1[r8"jOp1N^K^\YjW]KYgt^L.$>kNh#Tq^ko?f&-I@rV1lnJ,Hdbn@cL5@<L]![r;<:5D?S]_39BJ
%/_BO+pK6<NW8D)gh>[6;0>>EP^A%J);I%j&*db7%hc"t#_lmtW0E1J\Hgr]-pc[a.q"*YRIdeZDqj\hCV-(IXd^*_uO_;:*^@tZs
%CU]F=]3N)%O^'[ESukW\?:$3GfgaW^N1uX,.?<B@D<1N,<ka@EUMI?$B=jbMO4sMU2tCcDo(U_!T=p4HgWfZ0biFPkOiKGIYk:0"
%ocL*f5p#L<0n3B7K07nboP)hcnnaZAVc>h"ZX$/K<SP<1'K*!M$?#PInpFY7T2t>%cZVI">.&uFgPtuBeIM.d2rgf9431nOMpBll
%`I?P^jIat?J%)KaeloY)*!G[.`F")ka7[d4ULSA/s*+G=?PdMT_cqE`mC+gaQSLU943WQ3nk`]ZosTAh7g%ZG^=G=IBQYX'4g0S>
%^dENFnAb/b<j\:P6Poks%imo=o1#Ct[G08"o6Y>R&t1OF[$b\:(=9gO[<peCpms8Yf`jXS/Z=re*c9Koo]"Q@Hs77+lhZ)2,;8n!
%&$7i04V?ta%()uY6io6T#[f6MqN=52H>)qR#_a<Tg<A5-&Uc3.R>YTFiU9ZC`&$Y)m/6S:G]A.OK)/*uCpqn:^H(8#`h9_h;eMTm
%)gt<8a$=RpG=%i'8t3G6XX-<-QB'6JCn"DU89/3Y(Th9N2.h1`#/5>Efo2<0?MW^ULVDVlkM#th;X\1'BE9!W$6V!R_b.tKB6pUQ
%eBfsBBFV)FftB5-f:nQ$p-NsFhu:eCb2;,uYo0lR<(qm+d,IR'OgZ$0b'\VC>Rs(/8b8-Df\K<)Yu`_.N]!c[l=TGD0ie@MXVT?[
%c-6/5CC\ho+50\W7ips>g)ap+-4(^K*?MF.nKEPMpJCG1@[0W[[4*;;.2&"XE<PuQAg>\\OPAHr_b//n:s':+/Bh8WKeP)=(*iFY
%WA/PK*X[h'lCg&352A]i$JPWT\+/isNNdYceNagN9=U"U1koUZST3SY(J<CRn)*82pef5dO?NC!oj.%L;\LoTBV'?lLo_!"%-=dt
%"ft.RSolW`o[kh_RM^53QZXlfem:N*RVN4M.@50/TT8BKdea!*bCam/`L(^p[&Kf8a1;'@Oj\JnY-GG0N/ht=-(cL(\;#YQcaXb.
%Y2&iBE=EIZEK"\<lWWJ(F,fX`8@g\([=COQA":a@hONmsRr^/([c09uqJu''_7<V8(1VBTCTKB:0A`3,A'X>T\[iRKE3?o=fWsOB
%B>+o>R\9I7>amSk@?/79Yg>0Acac:_1"=CW/kHrDH6KoF\^hilT#GcR$Q8+O-,jsdfBQ9#AU)M.TKG_a9P74ng2*qQ`k"1^U90q,
%9j04tXd:Teb"p$2=g$R8Y2T3CnA&U?_m9Cu0"e#,a11W4o&*`Q0@@iqYsJ(gC(9XRUGrFM38^NbS1iL2p'^SQE@jk$Z]g_\lV>1(
%f$!o;i`Zm_VH0FLCFp:iZE98@IX*<,Mt-\mf2M_nBle/n%fiu6(1@O<lU-3h\6e@lH>GIU=ZkLa!m.c5%O>F&AE[2_9XTM4>7=&;
%f#sFPOhb]c3mK_%J@*tY9-+*Da^TXDmU1s.kj;BUa3n"S5ca@U1"ZsQqg5#JOU=$'Het4b#o?J!.i6S%m$'Skefe+a]kA0Un(RW%
%#e#\(Zd(1('IUr,et?'W.(#YfE[@VjrPj<_^_/:Q3!`5,8m9NZO%!5.X]5Li5p5\6Z%RhXZc;AR=Ol857o7hPZ_gC/SP)9/9V`e3
%9E#?mlJsb>VY#FR.G37XL.'HoFK%PY9t(=hbj)/s=gUbNjCX>(lPr\G`O;BpCsg%/2t=q'bc,@=f3r=!f?5MJ@Z7i_G%\RJ(Dnm<
%'"C4;Ds!jSd=!N]UMOtI4r4tt(GY_SPt=V.6IB:!i09[sXN=:'De%P`J,,)$PJ?qEhZ!:GhYue)81WEZd!D]j<aIgd/:kIg6"BFu
%]Qqcp)LPWqXCZj<<!8lgZd7YE_A9QsjijIC>d2i]C/i\J>D/fdOIfD(dkPVa2J^_>=i\cjg9BZ(`f737Tm9$FBQgJuD2!VC>H=Dc
%/*+e;eYA1>X4ALr,a]^IV+j\?ls3R(W1>Mn*)ADS@[n>XGWMgYLNe:81A"h&3448lF0`in.2KpeKh0%WL=.!['As5MA&=OrdY:qf
%kGGJl;Q<4.e4(3OA*@P15X,]c:pk(\'-c9/dh50XQ[/eBi?OFN1b0l)p[G#J\ol`*&Pm&K#'limioIfJ<^CA,i`n<M7S.M>Tf#^<
%UtE4=R4+7>Jm8,ceaiE#PZuQYP;,$S4/gBG2L@=hMaN[Pee*"SnS9`EIP8^tfVr#[BJ/JJOn:ZRF1ao"k!\sAeNSQPS!$HBqHiTF
%kj%T$bqEd#4eE8'#,gVmlemT-FuWm7nR@mZ3HfJ#,E$3f@nB/:+dq51I*'U-M=3@DAI$WPEpE&FML.uX@;7qqX*R_./_LnW.B/e9
%4nktLfBM\OUA]#_dVfV2K(Yrn#+%p3Zs.ii[.S>#gSM`l[uSj<W,GV[#;@8R;^\1KdIWfB1)=PC\I"oHAcW(j*C(_"<5Ae;.0k[S
%Kh?"!1D5L:BE1loX;@P$]$>'r/R:9!,TtT)>=Ih8E:>.pYgeJEXH='<#RiIS9cAtP0R2)R#Z*4Ji?[>D"@OsGL(d\P3Gbo\RT:3=
%!`1&Cb1\WHm6YN(rQZ^#:1g\>4Fh,!hLX6l#?qF>dQ&N@?h>,.<uqKZ,6?4r<$J#le\R&2!t[lI(iu(4^lhjeTnFWk:gT,8^LJOs
%+Z\Ed2aCRG&i;7pQ#'GcJLHD`/mT!-(1jb'I$V>-f*#H\>%>B_qa,SR7[)CHAUgAOHm'Ior*[A2N46!U+gn]tVEVI)8_m_DN@&Z0
%1F0-%2NX<W54`81+Q=:a\i/?6mNiH#HaF<K\nN[<lV+"O/ENnW<qk't_^>jr!bSU2fVQ&'!Zh1PT:)Lf29`-l6JM,m,$3'9](QpK
%b8a5M(Z8t9aqs$$9YH,!D+r\njWa5*L98=t'V/cYk0_^9hHj7G`B(>c,gC$-&,YT6'?=gE8PAdR)R9Tt]Y;QlBDS@E1*3(PCW!FC
%VtGbpL+Te@$JB%&ND*Vr`1XN:$0qc<7r8BLMl&2*V=/.3E0*?8?[S/)k_%Srhm3AO2&4-F-]U*BGJ#7H*sK:*;V%b/Q>@R)PFY:b
%1p^'?P%g(2;8[-8_+iB\))NZW.k4&7H/tA7K7:JYf__k7>f$9W3cX*g8WX^:5+oHr!-WYlYuZ`jh!"o%+b1FZ&]0?n0jiGf89_%D
%rGH5nYPL8j=VgmNGj1Zb=_Kj&]<)^=g9H1)aNY*Sgdc:c#rpsA':t(<K.]$CDZuoDXVdNk4iKkqp,.@H5gbl^Tf<$#UDUmTdchkW
%<<E(Z7npg9`oQ/X$3@M-iHE)1`,B:Z&--+5`]PkB]0-/>[2osf\d<L#0CBempd$-d$9U_!1&8DAP9gYp6HMpoA$4cDMSat,,K7&0
%n9^_%`a2\)-_[A1EkYU&#6F7E1Z'/0Hj:]H)o=(V>lgn3dJUUu5WqLW*Y/H+0fhgohBaO_XYT$'8^<k7-#f1?LR`H=(pm),.?bfZ
%:YC^Cl2A;W[ac:n*'gS%A>P-"cqBbArE'A^[NH@@2GbqJ]:?>u#nHf0Z!!nQVV^P/?sh:83R1D>%j1"),"q7R6?2h-PXBnpM)`U9
%j`K`VM_m8_SmlVP-#;o8r8q)oS5C6aKN*:%gjYWtAri>Yc4-42dH!?4lEa050?`s-0J)p4'F%dacO5;#`NU/*Li[rtm)ORf^<%B'
%94!W<"5QI.CjOL<4qP0giWXpC[[F"!&$o]oDfOUAADj7rGg+<nMOEB2^nUr0Sq7e$AdpZ94[if#hX2L]0i*K[M_U9-#$LV1/b5&B
%fpBo'Z.?t:ELgpF)j^me^m84/5UV9U^N,:"4mpGFd#ZfSE`5P.LhM!I.]Hok_%ud%lohW!%gBL\Bi0LO'M+f]R``S*j0H\"e/FAT
%0W\)(Jf3K_0PXCAMu$^M*=HIdf8=mA?3H!21R:m<:2q5betNMPh/#eBD/jgJF@nnEcR;^$2q2p"bIcCYbYY1,ejK,N['m=O@:k^S
%.Nt+4%EG.gSe&s:Us,1-52*pmln)$8W@2K^@2gh9>B\q:"I?N;5,Nj0P%fZToWca39$98WVVX`/TnP$Aq'tE_b`^K.^W)3NhbD]5
%j,!qYhP'NMA74d/H^c=>ds+rWpkl.n3.K$O"DC!*LU7Ds4%#WP:"j)>7PB"GClir4/@K<0eoU(Njb[N9E?,8FLn2JU[mRT7R_(@4
%*]laIjtItu61h`HJf-2P59RN+98%8>.+^IBg8l$Z6^tB92It]Z6O.e,IG2P2<CRK'PgOb*Ragl5K7B/g''D&=:]uI4Sh+Ei+<u2)
%Gc_UWONo93X^,&5%Un(B&L$i`/q\7(Xoa+`iK).%RS3^f'mjVsZZAEjp!Lqq`**2;fbfas_lOZ9C(rg!jXD&I2_*=XV7#QqO`p(_
%T:C3i+cnt5X+S1=RS2=hfaU33%0j*RN;7u>YKE$JC=TOsl[le#(,s%I/-Xls2JV3[PIMcdR5-.7Z*=$(39,<U&;D,Q@8])dYXCDS
%EA0!f_i.Z=X=%.W!7A_Al,s[SBGh5iJf`mDKrmV6!X&<1IT*aY+A]ek%%u,"cAWi1H=_e!?pbJB@!`"&MP<#mCuVAONg1(c@1e#!
%*U@ji.YqHGOIh[6Q6ou*&#Dnh1FQq'K:48bA!26a^tfBkb\VkA"&o7PntHbZGFPgI!]O3`6s^_HD*uQt^P"CDG6<S*(j1BqYqo;I
%(QiG18sU`8J.9U%K!KQ"VFpo-=X*r$9,8P+,*u8GUsG>P;Hl;-QCBFcX9$:^!R="i.c*n`.ca6WloU/i,+XM&Gg/4`X:hisqajhM
%QPFfYr`X*3+o68/3bW7a;:[6LQ`hQZnAjk,*\rZGIJa>)p<u=*2'OfS#sY*UN'9Tq7[qoWB(SC(I%fC`.\K(W6$6i@A2hm1.2trU
%`frR!LuS:_(>,l;_aun>NW@[PYDp;27>:u=MbY2=<`7GBnJP7uB0J.t7&1R/ojG*FZ6B<W8/Z!PN$q"Dck=hF.8_!b*A$LGZU9i8
%,6h_5KAdi4Db4ja(qoNMOecF=)4%QtBMiM3hdBKu[+,m/kK0p2On\+o1^.7U,uKjm"$SpP1S;eC;eJONhh`\JejPW9+d84FXu!'@
%@&TDagR9*61_2.M-[&U4WX`kXs.lm4:3Z7#@GH)Z;Q=nf<!<\hb#R4E:5<jM*iDn+/4Oi##)j&oegS'5*==I7P\DKGEM]\GWA'^$
%a(X,1,"cJI:3r4eCo#EW4QWCmZp'(&eiQOTRC)`jel'tX6@rX]_iS+hP(J(?XYH!IEt/tS6*jF^$n(V=c(8QIJO[:ONY"Y%C\QL[
%pT=rZ@49.6Kr-H-k#T(=0J60Rl=[4_"F7<%Y*E:G3K,Oh#260CC3Q.s]^G])Z>TX&[qYm83<5XjkmVb8?UqX+6?rA+,9dX?iST^S
%oSCSh-jLFg21Bkq[nKU`kmtK[0BQJN7(B&lBR)>iZ=#g,*914/bdX\CUmCoqcc(:T[PUiAp$Ompk$*!3W7C]WGqn2sF@Zq'L'R;:
%YjLMT]aZXW>/Eq@eD]Q1j"T@Gp8)oWa1OLX[nLbZKu\!jbdYfEOo9Is>K_s#Q>8@tTPO5/]U3V?_0XRXN9F`bAK-N'o'a5YDqPqZ
%:ZX='%eD9=W4%6>/7$K/6pMn`:#GMNY%8)dhRF.XbdWN>msWEm_gKWa'F<l+?Hfn&6P`_[nm]=E)=gu-Q5B-E0,qGHH=8D?.Zg5K
%P_(k1q@'7F1%:dP@nhkY)Q$pr)*o)MD(=%F#ua]@VD:Wf5<b,Q<\APt*>#TfA7Y:Wo0lZF5LXQB74]2uk3Q;(R;jE!!H3Q-/*^6g
%]4j=UF,W@Q2oFusFTtAAf)t:%`*O;37DO:L.7+kUamVM8!`HM:5"hILf!DcAE.(/E'O$HQouRcol#G!4>#fg:M1hkT[p3=5_7Oo!
%h3u$An\$)9lasB]'`ln_%Cd#n>8CL?)__p>"5ZeB/;Hc\mM0r)N1OdXmrdS4$B1DZB4W4VLWX"P!]cOZ/-k2=#/5oZ6Q+J7DkPAX
%Qo7Mkb9Z;K8Y6@D?nh=X!/1K+2e#_(!&WR_+b!*<W^`sDg:-X]*&?A'me@N[r.(JVc:rpFfBKOR&-aA129H3p12GAW>H`?lGFTg2
%N1?Ans+9)3O/^eT6VthJigCL"!2PZ)@j65<!6l.o'O7CA:L4]tD!(#AH;P\mcS#1KBa5eN3$#%o32>%LrK9SiQg4ZKk/LXEW$\iA
%7ccJCQ2Emfkfk/1=?r[5?=]k-rP?j8C]p*JYic'4X[&3,7"ugJ!"<HN+0[m?CX.8kPDCAVatO3i6e>(EBJI+58`(PWT7*h-8EX^%
%]#mKZ)Ip"uZ%Fl8$e'QBA&]N$f@@jCQ7c`i=ZHRaEi6K?B03=7ce9P&D'J8N>0'd[^Gf*Q]2'A6R0:2Na@$<[^V)XgE?`,OER7S,
%IQeA7")ceH_Z$.I_:?">,6YOK?"$,c4U.Gnj$mRnm1K1AJCL!H5%$YUi+!c31i>SLj=3e*8M;lGW?E`C)0r7^944AteA!?7ZP!0)
%NqPR,[nf)]bL6)t29N:,$@3U+[`Y8//06gIE3K_&bT4N]76>:)cU#Jnc%;fhc]+m>)/il.;,5.1.Q8W3<a:P3ZG^72X!!pe)e*au
%V]<r*rmX&>CLGJ*b^qe:k&9PcY<6r_%%nkBLsX_t&4DU)1#-Z6JJk@<WH^sm#!e*Q*i":RZrT22*NfE=Nj]3(U2@2d\Q6s50Sj(@
%Z!%hj^7WZ/>qP?%Yn9*<%aD+WcF6ld]E*f7\W`SiO:Zke$rPGmWZQ2S`pGK*U%(s4BX?abRR12fH[6Luc/$OfLGNfqa`LYi*j%mB
%c+duZZPVL<H^a3a=0K36W8s&AkBV<J?O>q(A'5I3P;XP3H2:jR"0/`A8OaNpe+%B<m`s4_Gk&ggCU*$)<?jHaM`P!ml.Oi&_4nWJ
%]<g^nDGR_o6]lJoX7s""J]a=D=eGWU@%/64\HjiQME8mB4'GH#ef1oi#S1E[NZH)HGEFL>MVsaO4*H9mYTTU^BGRn,o))lc&bdf7
%eQ==+pLVC*+s](9r6:6G%YEoSd/k.NEk,%(Z.X2nKr(*!@n-pc(!Fd\(35^SZ_M1G`g7\HR3Ob9FHOb,4=54S";aZ_4(8_4Ha"ae
%ZT;\4.G%g2K]0hTid"CSX>dHF71g,kLg*#YAhS^J7M0i]8,',>o<CAh'SC;lG\.*48Z@#JF9p0Zd:]19bU<[$DtD3:@[e6tc>n$N
%.)K3@2KNQ0s4!nU$c2N#h+DMGNr(RVO<1g!gWFo:mS-8-Vk+cGmX'$!BH]2=?Y4DBbD\'^R1\=5U16[j*m^4sN6j*3#sI'Wp\aS"
%N%af.1VtC[MWrNEEGCgZ@FrNu?q-N)>^=*.kcW*@7PCh:X!=;_in)2s@Kf]80@gj6][V\YCX-9S?$?e9q.*:@@W\q5nqL#C?Xf'd
%)>-"=!HVU2c[LT$+F\\mYkLlXpFl6:a,m3.CGigilb)V6I.?S#PO7ZkBR?u^M](8V!!@s/gW.:Iq343cF-`,Fc1Z-Q%u-Fop2P45
%*@7]>;j0.A&)49I(EGSE^KV61_=V/&)r]1ZaP1m+IRW>sHnp,;F].g9Ij'c"]Ni3H0mh7>X4aO,f<98]>FXq3Ua2`4c1NTaB+DuT
%J^g20f>#DgqAp=%a4kTbkAl"C5UMc>p!M)n>[;_!j-r2<`m6(>l,!-L<@&I%pa]mDm+D5=#1*'QCR2,J>2bob)ijH@$EB6]B)J;C
%hO6Qcs,rlhrsMsN`fDXrTfj:n`AZaH5N54on`)NMM;uGIE<dGLCbE>+8D^JeddO\!is5BSchB_RaH,7c[&.q/ffj%4FiX2+FS/NP
%gV:g@q\S"'T5VlDm4UjGlfJ!0PDMTbqUY&WcS7?7]Q@C#1Q]ed&T8^sVN7_CVLWNdc`Q"df>!6L\c0e#I1egbq8@OIU5KmBC=oGd
%3F9(S;Yj;rD6V5dGK>^Y^ej.9N*:mc[<lMmTNjj*b\/.o\&^J&Bo"7qjre/(%<f\CT<3E1c*=$t9KR5Q2eqi"RQ)g8e8YA,,fbl[
%6Hb/I7Ld(SDP,15)Cuu<3H!@;?),Z(>5k\b@5B.h-jlq5Aos0YN'&G!KGUoh@7KIrgfg=),BU8Xm$Q0e8nn)V,KrEBjhZmZ;B5=?
%7dV%62k/KYi0dH[V&Rac)FCm$@mu:[7PH@@Ajmg`R@H2d\eHMmoKngu'fAHs[5ZEh0"+n[ZTB=s'fDg@n=0cTLFM:>O;;EL4Zqke
%q(e\1jA(!-lD]$I)MGTSCfWsHMd&dAU7e>^FN97kE`pf/2CmdV;K8cDhrE]W?IUNTiUW`!o?1c+^6g"d#a6t5UK(8qdcEsN[)qsD
%c&K6BHZ\',Y05rs0<=iJA^Ej>9mX<p&gK</*RMkYn4p&SZO$+K7:M4.&`rAdIGnL`fo<Lq5/,t[jY7*"BqUjgj;+1c<r:@l_jd!4
%9](a%gE^HQVZNQUM`h@$3f021bQ\c^?(1.bV)0]r6RLgt*7P_]U_aKf%"2FZ>j_DR/,OBs_([7_WZ/L+'8@ACl^[#SR2=9?ErOQ:
%-<#_bP(tbo;Zn!gdh8Hno'P?-XgCkR>ZP`gB[)hSRNFc(`/?&9=P's0/o`co.W8ht"68*_r<nQE?M*S(k-T*[&sb?bN!4X]dRuW3
%U)/iXdB0eA<t2amOY:0"qS9TR_qmcrQoBm[8m&<d#c>IYCQg"A&$410ZmL\@0Oud58GfrMPucu=VI<_W[*-3(7Pj!q)(A*2EJf\m
%n<C(#_:UYIIX#aK)hMsfgM4u=2@VfC?EI"BO),cK;/"a:AsH9:Xh2\7.'DM"B"h.L0C$jH%)b@n-A_j*Dc7a7"A%3X16Y7Z<ATk6
%$Q\Hc4-XIR6:)f9:IuU9P(@!FH1!1*XVPOMe)fWLA.Ld-G@h`=<iqfCVNb2e=3lYU*m"Im2GL5C]pdPn5^<J<D]Uoa";o&!N][B=
%QdDou!bA,+O@OiG=Q1&dLko9&5iRlHqE?S?,^fLQr<ah8_*]8P2hMDUPXd^#@(`^a@o%eU3-g/j`FLQ)*atSSoH'd6#S3BkgLkV3
%i=`X<]d])*#e!+X,SFMUXD`s6;&gmF=/t$g$2u]h'@%j9LRCOS8i%ue=]i9K*BB78W>jRX=-DL4p>QPPDVXXk)U?d?>IA@\hVPWH
%dbVoR'$\,=NW:UrA6b88+m6piR#**^+t&Q;F#A<,KUj#.Tdp;pme@AP3'@!!SOgUhaQ([JMgHP.K[\W!3+*p:-U!r7Rj*\n(_]JI
%Qg^mrV9$$!c9V<VA&aP'h5S$Q#WC!IgOgN_E&Xm\j@?G_LZfW(6:uas,8^`f=ldP_?m#[J\==o"@I!Y#%%"O"7S'=bg6gMiZs\=.
%O'q5?VJ:r07GRbql]Cnh6B%ir5DnrNa5Qej`'oA?*C!`K=ea0%@SomebE!kFm&`?uFHOb-4=5Lkl&D<q+/&p\)^L@cTqBk?aC7[P
%;$?%*,"(?(jSiOX0^[1E*CGGEU,7@U`Zro:L(nVr[V+J)1%?SXMBRNX@[ms`'S@SO013<--\h7[Q\Qa#L0Wnho*jkmRj!pBinjQ$
%#c/urOO4"Zh272BqPH3o]5_24"R<%eqGpb`N89u/EjL"F'^\N7j[]u72kD05i:<WFD0D`,FN9F:Yu2\1#[PU8*>^fkh7egPK8[-#
%fFaugoLGsl\`IEnfXAo'".L<>b-tS\m-$(FAk+M4pZj[^=H'_U1u#V5G$<Ea=E"f">1$Zm:aShre[#!(PcV%Oi\`_rR%.\n8FI><
%'SGK\9>MLTQklcVkA9[k]:UY,s.aS7-#Y;,?d5?O6!]Q5'TA_Bk+Ko?V'5GWf:.$"M5,u<7/K`MU:DfueOW,<H)6cD82M6R;oF2J
%qnn5G2m`=n\Q&h$?/0BNB"P%b('^iL';)d_3+*XlR-_(^6EjS37;P#?`Ca5_96J%Z&#K,4Q3VR>0f^=\]O&0dqcVE`b3$"T`+%DN
%%;Bi'la_XJbBH"QaWiloh\I'+ijjT]_SOCr;16[)$mKIo=['^8"+ZW;KIPPW202[$`+c&/=cJXYe&/(T13bKL0(ASqSc#\Rl*;pU
%l#JI",a/co+eQiimBio!krWG(@DfHM]P6+XQo.<(qoi9`/0F.i33d-Re"Z#0Zd<EEnW!H#=`VW*lb6B<oeS[\WA3B:Z6Z]JZu3;\
%40g$$r6Hs`7m'6m_fPFAirFb'lkJO:`1Kh!\da`bc"!'&D(]mTVi[V^4H?j1G#61NAK><C=;"N,`R)'HcQ8M/#!#Fr^uPo>8e1)]
%$r'h1FZ`muAgH7DUCLGWN`$h)51Qaa]QS0aB;6Z\R]N1n`"MZ$XBV^VWXGV%baF9E?ShE2n#A;+iKfP8ke98U,dbW83F]Hg"@kno
%f&BnFV9s7#b$3-(T0%4re#0O>#i;QJm<-N8ag?!obi[\f5<WU6D,h:o'kqG>/"RDgiC_mS!&9;4KWA1MXgik!&YCE!<hp7I&oAZD
%/oW]QX><Y'((Q]dUMg:=@<)E$>]Dh4AIGkalg6YG$++h]_l*^lKoH#\Y8^622OutbQtOBpZSYS#V`5&[M.3'b3")P$*W?A&]uUq$
%4XP.aDkDB3"p'Ylp!PC;),4(q1gB?NjcO.0r\VV^R`.D>jFgZ\/4Hh!o4e:Im!0V;.2Ca=.o?&aZ<7,"e?+itGr.1s?;ct8qa-=0
%GJV@'StbSj[O>AWod<:pKp/X-"*'7)[9M/JQ9QmOD7u;+%be1\iVXL,K`."5Iusm@HU3s.B4mAEqEeB-4)?P\O'GQU@U#/KS%L;q
%n'1QfA_AT_mOYuSp"Tj[6YWqMdb.Fu+P3VDL"hl(0q0CM,#5MG>BR7<?'d.d^9$0=2?](,WQt&,dppCPR`3$H4p4q^[;_V[LRR=\
%3.)!,`)*Mp6S0d]S)ZkTIoQ"rMA%jR4RcCaB"ZX",.M0l4i1C]e;Kn7_)k_7qDU'Z%r[ir.pg`J[`NDn[#gf:WuYf*"?%iXAlK>q
%Qom;WGEE@o.QckYE22uP6l5lH!QU*NA?;^X9\f.^7%%t/f&fE2ODL)JGYs*IgcY5i72UN(Z6Dt@Ln5F!+'YMLiO*`s?"VTJ?m'cB
%?pi@mid?f_J_8D')hE6S/WLcUMA%ppTut94i#-=L"fqXpf]GYrZP.!VB!f.lI-$q;2%'r,9E^S=]rTNiqm%GC?>X!m!p/P)9no%`
%h.Eu<;I8#<a"@]+1[Xss4?RZ;dD\"*igX0iKKa%3kN58#Pf<QV)srYm5(hf_*u^he3O_+GX/m;:Ri>eb-F54>DT'5*C9G(o?'ifq
%?<6MrCY$]n3PBn<o8/kK$9@4l@fJ;$ObO9H7<Jto7Nb8Qo+6*"ccdTWCn\++DD;(+m!,ppTd$LeRJD(F$)/NJ_Vn84-l/e^P]og2
%=Y'QDfAW."YF7&1QeI6`$QKHCaKSpsX=duMS_12(1F!ZtBndn1KEoqo=he0RN]1QD9uh0d)'7%3fG/q=^3</j7e"X1)"rq8Ch@8^
%b]`ZYD'Vp;ojL)ZH-'q4?A;TB4=n&[d](.A4h@;%+D.H3V[frDNP$B<!4;uSl2V]IlZ5121/g/6GNo/Wc.d/fN0/l[FY[e"e!kH1
%0[&Z?Fb"GBgo1BLj\,<HPG@BJkL9N!?ai+>J2*J.3H]j'IQm2!"2nGrkL@Unhq?_]%M@q<G3h3L0\H]NJb&3PX1Srap7Q<kWe6**
%gbqbG4<0@)nN(nO"f=33aTJWpjs%![=I>;C.;'ORahs%GO8DXVj"]B36TXGq&U=gZ.J*;UF,>n^cO3nDF!icunoR_P5<WWAN[W.@
%hk?g&qmbf!0TQ1'(-jEAhG+bDk^'_sF>dmARQ#3AhLnienI^8KM6H@&ah5:5\+lPM7h0$PR%6<bdhXp2c]-i:AkO.,m+%%Im/$AP
%*%;k7J(Q/0$)N&bPX]Y$f3.jKr3=-g0BVo2%'sSLm+?Sh]Vc=2@2,m'To2"VfFaVX.9+?J@'%skT$*.'gt/6Y*?jK+fX4S],M^`b
%h(.N9A4JWG-sGVlb@k9Hc]:.1JD+$D:88\4pg&nKjXiSNJsV5R#;.f1X['pbMV7>Y0.N9,m.-l[nXtXP*V67?7<QXU*EM6]<F\H&
%ENI5i`epd:8NTrUgYLFA2_-B#$gq+o;6d(;MDtY$+Tuk\_EMYTMIO$b!/J\K&pR0ilSPa=7S1]o0.5aZ*K,7$S-ZK#m!KQr\caB]
%oKndt(W#jn`^:tpf]GWM&sQ^7"=adj1P^/MT8(gj0hCGi^22p?qskq-hS.$R)P)4kp7ek]Y[:_TR4m;gcp^;jJ_Gkq*Q7KBK5Fr5
%2cZc=l[/F>%*W%Ci%CgrSmOC.iU%TDRi,Z3c1Yh9P[s;>,MfLp%rT<I=>'TuXik<G0<=j5ARLlZMtolEq>jN;<XTU:QDh,nE!_.Z
%QkM:Z;s0Fb7_&jX5eefg,j`\9a,pYlOW9dgi.7#.19JmC<+1&FO,9EVAN_uYM207)cWnXgV.Y\GX^u;Qa3%u\dAlUo*k[;SS0@H,
%r8d^7]%Kh42p6FG:cSXMRqXAnOQ]qr5eL8j,^,ZQU8Ji4Y,UdD*fGm^3tlLgrU5nK%Jm/qL,LtZZVV9AhKIg+PE"/%j+dHFE1\"e
%DWI"f3_<rkDn<`bm1?mpTZ7O3a!m+]/T"1Yc49'<jO,PNajs0%r$43gQmrXTo%G&o/!ll_9'59tjo='b,B]kDh3h1SK\9'Dj>`.7
%ddGWkb!4,JOR2f0T+LiUnD(jkV4smFC?k`$XOJpA9hf8QqPs"LA<E?Ra@AbBd(pf#"mU6b*DVR%h)lNk=pc"";%DS$h/ZuYRn[T-
%0W#]5(($l:M%T<jAZsJ19Uk.^R&joR;I5aiC5J-;#H'6NP;ikEb:(WEWn2QmH3JEr;r]D\X`')aG'S_VM;3Z*E+R/q%VUXqJt6Js
%hPRbaa:EteI`oUQGtR="L]6P[B;\sR),J1/6GA7MM4?Q.Q/)J,=MuCcQ8tdr0l-lTZ@e%I0sY]2.,M:[?#NPk<c2%5%Xd^-'4^tT
%I<%jV'jKS_>&KF`e8r?T%#-?9SV4X%(?:Rsr1uet-.B:NWYH0=-^1d3VRo=H#O*\d@uLOhn16BJenqIXUA+s[j+a-e(tBCaakWjf
%U@R63W,Y_9ZW!liA;),Pn'G@-g#44U.-;N!:TZT;]kHRJ+8.R'@aT:!P6OJj]/`MN:\!bfIF8L2@+U^WHGRQo0;oWjGP)$ilF4<O
%lNM7:D1akA!bT@(=&Gq5i8RXk5$%n1<?FDN!B^^k5>K.BeVS?bcC5[5Zl2*;>SS-jXO&#NYe\Q.8i+8:U0PBHd"6ir]P>fF"Yso=
%J<p\Mb>j[=dXC_E!Um"4'*WpR`KabKOfK:C9R9"2FPU"O^unpHKYasT.Cj4S*6Cb_`VS7rLTb!s!:IN]h6e4rjhp_p(Z9<2%85c(
%>7DqJ\QT">T\%5d*+5)p@;?%5gnY[tOQ8Q_`qS[Ka$1TOFTQYO),j:6GN<IaWW[H\^9Ao/\0gP%4?5cPkK2LYmok^7Cl9qJc0[Dn
%-/bR0G:*WO0!?7[i$)5K\Caggpnm:R<9S]-E@48i.dg'Wl+,h.]?%;@6c7'5hH!!P7oq"ph:m?bel2]glfrVEZRf<,pq1^@fFTV"
%2*Xu<36^#OZgbHIL>_Z:gKSQ3#kd,.FbX]<pQ;nT6#<KrSLj35+h.iIH/unui#mp%gHjeMaR*]6JENY+Dc:L(R#jHM6Li&9lbD+L
%q;0@BBO#6<+rog,$WWE]*)A1d,t^-T<8E62Yp!Z#Sb^B`l4/&$S-UJ;l$RR_ELb*Y`eit=c5o`6pp'=EIq:ikFBL)DKXLu$aGJ&_
%fK2i-,cY*E"OAAmHlXiG=2FJP?<*KN[mGgq]2^.h`1*9$Lbr_n:7?s_N%WM7)8-UD@7G2[ohXB,@[eBhe<D\!ZQi:M31'?ml$n^G
%\HJ!,]N<C<q_BEn?Rs[9.OmsQhGe$1HSD8$dqKhW<"tAU(t(\i6TWk.8B%aN?A;F&k.AfufW4@*?r,*%X24S(DL7,f9WrrQMHfZf
%6fRLfrj8&5KA2Y20r2E:Rj5VJh_,irDT:D^idFDOf'1F"d#E@X6u[mn4!Z>rpBaQ-TtMmqPJ1l")Z\DNn?`ONi$$Z@QK(*69gR-B
%_U_'+ecP'C!2)rq*P%uG&6:RM<mDZbjk8LuEr^/Jf0`i1XoZqUe@Y9d04lQ]VW74M,cqNWLYt?ad-GC%PqRbC7Z;Vb8l_M)T6T%j
%>7R%-=l$<h0ap0pE.*9gZ/O`tKq_J=]g%g6d#XNYfblaF1^EPgqU7`5[trl]<"onT!2\Nu04-fK%pam#e:M^c/u[eEjEfb(D]cP5
%WSn$*)[jN$J<S7CZaWZ<.*TpiOeHu6fi\rQc_OA?FZr*l'Z25ker,Ca)<<NN6=\ir*R>?%pt^+h7!1^GfQ@:/5%!I>R;CqZ[s9h/
%:,'c<]k']`a(d(YA[?+P$UXPM`"2M`U[eJR#o,^1KJT>XV"$D/\UED(p%_.7GuX;H7b2`.g[Cp`)N"MoPnZI=kt-.K>n;9_I31sa
%?U77tlef6"e8-aZ>D9c\mkd`JRh*M%F5t`%)uB(c^N]PCB94UE1eg,6DZfG5Y`e^/S6nOFU"]7?cbI*ZW;C-L5@46H\f$cH1*Mc:
%9W^P,3l/cALe1oC;FrWS11k!Q"]5.%^j(C;dT6,HO9I\(A7<?MX7X]iQ"WZhTreLf>"0E$FjI)\kUN)lUQJX;&^pEP$7bec-F*^g
%7=C/kci='YP`G4jb1+K>>iIO?l!=A;l8PHnDnt*cV/jj8fUuDTk3`G,_Q@G0`Qs>Q[,(<#*'h`'.e7:0<.g^ELu8T@i6./ij!(id
%W?Z2s3%UGY%UFeG*X<+SmW(9$5e4$'B>TH@Z@9\qaVhogSDU7.Ps\YIQuCnaBM.<YKb!)9O9lsK_7><NK5?+1;@129_UF:V9O$C'
%ZJ]]T=3GH<$%^3b=g;D^`h^Fh\:=,F;-pgCNM*)`HjL4W,KM3&K![!WW,6=g#2Y716uF8nNb@!W69dn<Jr3<4.[ZoPm=<8bjQh%F
%VG%YeaRtojIC*9^E'YZ#\*<H':^=<,mLKcT!Lt%oM;)R>6Bq>U2?ci%8G%:FeoB+!:;jWnQH'Sji,roZK[Gor-!S;KNA>*\>"@E^
%mnLf@%$2._JY^3P+BC38N$OUEbq9E-KN5BFK#sf%(5<%qCO[G+F9jY![t1"nbR8ASV)lVM7Sk55?Eto+0KkAWHCVFjSPe8-$_1VW
%aqQsm8^nR/"7c`@+G(G6eX.eUNi4.!S>K%5";KAERV&&+LFUa\j"5N3i/On=%jbiGI3GIp300u;P5Q*pSJNI(<"K/S'VVo1iG[1#
%EEjV7kHj3"1U,F_IWODkT_p]X7mu`Z^E<:`H/R1p%'[hXZ(>Nb:qnuhW!EB8f[*Tt"[,nR2eio*E``XP/g(.+Toore2&cg+C=lB\
%5EV9P;q=OI#)JXSTK:HsKijV<RuAQ_liWtE[1RcnQ)TpHr'a[RYQhN'AS*QAPghIWdu@F&*COh)OeE5_,i"bFHgK)d:A:9S\Mj+(
%q@YH3A2JS(3?)G(;nchq_Ld?s91XX?TGp0cSH=<Y_uqQCA3f]NoH3eJ0Hfdr,cS%&Qe5kN"7!JUVqn;5J=H'<q&-XL:JS4Jd#T!#
%IL&1s>Y*#sX%Bes!,6kK9Rm"YB@]Ud!%;93ZH7Ti'>p8f8\M,jR0Qns]efs_*:%i(?+%#3e/.:3j!kQ>;gWaW6WZUrAS`D=#@lt1
%;:[La:NX?gWk3$YPl:_LN&mu;dds:aRAOM!Ypd0ulbN[a<LrF%q%<98VX,,&N#Y^B'orq@#Rb#r:NA(H3>m1?<u+&=NS;fKcmC+I
%EY&5BM3pn8,_ka=D#lo1*BjmfHM$_;no4iV@p'0m1\GGui<ZR"!=8$VJ4?2R";l$,&&lEbmkt7a9E[o>L@74f/MYqHfjYZ/0R=S6
%$lM..?7EetOEAn=6<2W@!UqSTG$ErnEJRf(/kk5G0&0En9ZT_&R3VdZaN5Yi)^$)47g*8g7R.CpZPXC?G>,XINc0cEMc03@Z0/-'
%P)%C02HD(WUXf]\g1a'Hm'.`Fd(OaK0[EgZ$;m`u@Bo*$g_(XSPWVKOmY8gQnJ7)kFX/r=%!,&'R:PLEnc2S<,&-W+iKSZ5HAuWB
%I%6KFf[<M4.[15@Nc)O_$5J&O9ntje!RYisFbe*3!$j-]A+#Qj83j(@\fkgj1bTo+gcXfT/2m_rKubtM]c-bjX'n:0S\V'2]k$A`
%dP-Q,-oY.%5#@RlQFq4B((HbZj1Y.Bp9thBkp00%,MO,$^JP+DHBsjX0G2HtN:`^srnPtZJ_42@C5(,?R;*MM.+i]Up]H&dK;-Ne
%,QWY*+".M05@q,MJ4[J1e[QoeJuSRol:IT\$Y1Ue!+QiU.1G_HG4:goBZ%=fEO8!hO>Q'64%#c$1BYb8[!@RZRK;1G6`!1(eE"F*
%>:;KgV;]@ZZCO(a$Tg@i>@*(b#M7oLRL\2Koj\&HBd).(g+JSZI,`HHiKe$RH$K&YZJ<2?1JTOM:NnW7FAM589tB=J/YgVW"+mA(
%[I1lppAP:N&=@_D,cXDWnVGBr['>KY+LX2MrrF0lZoa]OTTX:KQ@iQf5)9eUJsQRI!_DAP</C+Jj!#fN%\&k`XI6)EJnN<SeYtt@
%]5p4VZQ14qYX)U$T]:oRL'cf9`VB[OmJqI/*pDEGFp4DE`Y!7k">PPHJ\[K?<#]dH*YLb+TRh`ji^j<0OTIYqP0I=k.G#mr.^FFo
%gW(;0+@*V4Q"!O`1)P7DX*G0^8`pM7%C*4_Sc^%W&YbdMc2[.t'K%T-6+8nG!+O6Zqp(?Wi$ZjD+0PhDZn<*=(t>RO,Qk@7+<ZsV
%ea0Wp*H&li9IpWAr5fj?pLbMs1m`V^#*C'R*[VP,%d?jtWOLmdaG_HmX.1\XP^kPef7CgKC"nNP`Y;(V[q^lTm#*d+*.oVHU&a\*
%ZoT<`/0$+E.t,<$hCi>H<dqB(!Suq-<IB6\9>JuP(HUaWK3pl%l`Lc%aE\3l$tX%C&@3Q&BNTFYbrpQK.niuC*!^9ul;0+15BUiE
%Lf]:FNpb)`f#l>aMsf)_XU(I`2+4EhJF4gK[%RM]0U6se?raM^([CmBZ-HtD0q6F%iWm&p31u_1WW@VrKJ*=[k,jcYkQ@MqX5^]=
%;T;SQ!O*5='aI.id8n53nHcss>8?<iP/G>A"m+(4MW\ABcE2s+(k%n6Gq/raRF<iaS3N2o#\r?(piql5+\uC7VM;.-5EKTG>$ALP
%3.GS'"SH^8$:*?l33Q"Pk_bjN>LpltLBB4@mFK04frZ<`MYD3H)]nM'g)u\>g3U80[E#%toD2!,g[*FiDPAgEId>sg%7E<q4e,T3
%7e2Er0<;n6CRR4S$qKR5`"1d=g`SQ9\.SD@nK6u8.nRMP,'ZUGQ20i0%J$,_EYV6#5fiC-;Ft8LV;l;"'`bjp5Y85eA<d5QUZ`Z#
%cFVZD3BAo!A)ch72j:U0YlitY8?0IL%(e9HRA\e7%2d82`CY8L.^fP7N7;u1KNY@SG;*F>WmIIcPs"^F08/0M2ORi6^rS"_[k?hP
%qDM3u3;2BfA<C!pk5D.iKP9\-kh[FhA`0ru;`o$uqVU_Jh2kuh$SJ;]_UR15Lj'OC6r.MUTLr*[A1<&5eMQ.]#F)$6\#'oQQZP38
%;1RK0`1TBnQlHEo>7cXWHcH4&d%.BRRqs;)18\Lm)!Q^FN2R+G/@6^#0*Ej@o5f-1L]A:U!c(8cm/hb9%.a!k'SFHJdP]Y^`)8l+
%_IC@G6L$pg._6Jk2%m6bUW@f3%1sS?GFXB/FRJTk):6\4;@#]g.![^o$DJWH#`p=BRJQ.%2UQZbA)_aE98Nd`Q#"RY0AR3Qa\HDs
%!(:6'7)M+(!%7gNq2c*EVpD"XYH6dm/sE#-gKnOaJ_hEsFL5rkjqiR4"u;qr<rPajZ"g)#EPM<*EZQH@#A&;e22)i.,2(>(f?o"(
%n=fI6kE2o*EojF!b7folIY$:PXD72;iankeFXplh!"P+9_Vp\D9YoM4Ub>&FKh]sb!,.%="-D4Pb.u#2%R4Z/C%1DFq$ceW7aCV[
%En2;8+qW>Dl#t/K!%8o'g%QJ^a33.8TKT0_,8_j(NhWEoFTS3gQ6t]"s-qK4f5)kO&.JVd!<B<7@%+)"1KD.#DCs_m8OF<g&1p0#
%%=k!0[=ijWO2iFVo'81KOlKL>'k(s9#E9&cnOc;YOB;uDGBt^^JB'#d;EapM)7klG$M2>AUo\,CIH@,h`^=)5lL<l"&]Km]-*J;U
%8*WoP%QiY#Trs@LlupKdrQYttgi'3uQb7@g*T]Xpfs3qLqQb&N7pjr.HB,`/(kQi?n`2)%e,pBs*J%cP"b-e/8%H>lJYE+;G#)N!
%lp?KCE`Ad76XUjP"L]JgC.U-KGI>1NU2IY*$JWpg(HT,Af$14K2tDK<gj;DKHfqKq3:H9$K7:JI$_Ou%^)q=Sg)i<$q7qFJI,O*l
%DPmWVmcE5HD3C>ni$k.tr1t+^6$aM#,XNLOWdPr"0b+X$?=1?X>SD&66V'$SY@eV9OH\4D2]3a.3gcr\e3NmuTF?@6oV"en4!V.%
%2Ua&f$Erm$EE;AB9Y(O\`Jn:^j@u<WaE)u%QNs5nLi[D6%'>]k9X!hla/=H]!Z>k':<,VCF9ZbV[k(\KD+iX2d";*e^\EqGf;Kql
%D]Yk*].]tJU;.0DAc8Jd8d</3kr.]-<\%k:.&0^)Kpa'Ej(Dio(p7=c>L$r19C'D>@:M*!(FNpZX84TsJSl>b!AFo$2Sc;9/=3Sh
%8/Tb<0g:+.KB"'XqCKmgC79nQ[i"_*&U;^J#KB(XJ9W^g!fN1-C5)L.1[H36emd(TD$/75M"VHM\ubKUlU.XfqoZ.Wi*IsJ:)gPh
%"-j+9mn6^Q%C*,H[n,%CdbGAL#tkFEkJ"A!e8;W;!MFYI9j<b:hd6$>`tp:?.at2+5mG"eT_XuZ)>)t^>u)5X5B-DBrIBO_B,5SQ
%nFE`;eWY=J;I&9n-4:IH0:!uN/82;E6AVNB-QH)eT[7:,!j0uS:s^EpO)%.&KB[?AP%A_(!3K%W"-pe42oFnqk$m#7aabjjS)D=X
%:)p#T8q82eJQbs'bh4,_b.\c:0//dR7S*"2-/&sD;T96DC3p/SLL!L#YnHaf7gESDJiZq1Z4'1/2[iCfXmX]G&TqH"*HbTFO\C[S
%NA706]P(TNr9DXXG^=9nIMl80HlKYE"isKccp.WRr+?5eo"HV:/.&"14.>U?UINHANN-Bl`I%gBZ+-RLM6QSCoN]g!?lP2=qJnZ@
%6*1+0\0kO!+F3/j6,WnTdg<%NVUeh+C?dRQ8TW!5M9iR,E?ho[31[s=OT*]pQKCOe'*qQjbj7S2S3E$'-JWJ%^tA>]hK<Bg_)r3C
%>l^r&Gp%QF^R1Z<V_W<BEXH57lB^+Xe#Y(,k`(]gFUrT'E.XgY/7(gAnYL/A0k@uG0pE-\5G/n'2B^o4"/9_:oGnfaA<&?n"lU=Q
%<%?F:Kcqo"4EJJ..?8&D9SL;BceO+-XJsr1=0R+"\Xp>e[k%)qk)*I+31`,1&2CV+DZ-G1mQ>Q@bdKs\*.B+Vi]-'Yi62WLH@J1l
%!'?4O#:.@FL5oaR!"9[a1KW`56SEK(!J)t@46DF]KB&:K6P2]208Jd]T^aboPbH0*&+J_;1[u0kk'oL7V99Ud4`eU5M)ime_'q:c
%ouqtlL-fA2RG5NtK,+dlGU:Zh`8k[tiLH9o`5ehk0.%o8Hrf0X`+1.h:-*qO-KAi_:XP*Ba<H_oNE9YB&Cb@e5^:4#,+AY?XWK:.
%RVVnYaU;L)?RI1%e!,l[>_>$L\!Xf/-RNcqLrhMXE9e:'X-I;,@WJjX]gkc!;,t)cS;cn0]H^l7-R5`Q"+']Z72Br`isTCOTXZ"J
%mEW`aPVJSLa[^r'[HK=m-mSZl!^;X;N*G[]&<rhm/O8>%b03g+\egU!Md)^%Jo]\V;7<-&SbZ0(19qPrH(Dp-CY#;-^t_s,9'?,<
%Ul:.><5OrcOeTOJi[*\)(%Sp^AQ7Snm/BW")fUu2BsT*s^-muP8]pg)0#n\eX>>`1e<sK7e%>[T&@Pni+D,gYOtu0r-r`Tt1=C**
%dCc96Kghg0Od*C%]tV0r;<PZ(8NBG-5rj+!WH?@6TO89qQ32jgjC+liQiR;ZkQ4J@`k9<2+E\mooO22JCaDJYO.tu",tfO]&@h;B
%YQZt!hA&XQecAHP<kBuIlVJPWcGJ[t`r7pgp*Irt!;_+'cU5@B8[JWPJ9?i:De'K_o$2TK9@'#)OBWeOET]'r%1Z'eA^fhS0&90:
%'-$-B<58RCW0]%&+R85>!/hdY:-dU#[htu=ORNm^)/siY9=VmT]F=@Ahu4&G-MLf9'$>J6d\1[o3cKdu]8=#k)1H</QCir2BiRdY
%6hqOB#X=(J'mWnn(X3gc^7nh>=pd]]'f-J3"_j'K8RZ;Ck[X5"G$[1b-S0e3Jd'$LB/9I_X.E#>);bAZpQReXgRk[!s6[9ANPGGN
%/V^al.d>8YaZW,h.0T`.JfO-t\%f0.)GN/MQOGOmls"B:X`)B^GqI,s2!EUF>NgWV\?T\iJc_2d4^)_s/T"%'!\Qq!E+@3q[^BEI
%)Xo=;p1t&QA80A(g=W_XDPM_!I*7L4>I'LRF"Rpm_kH\9kJmuOm.!F;4DBlH/N<B>R>0]OIERU5>A!eY4;RKqc^)P5)>KL:HOL2U
%f]R>6#CF/t[gQUJp+85sCt\2FL2XW-B1q)bLsJZHfV<!a\F(1T6U-q[:l,qhl5OX-T@ImtjaYeAm%N7Imq9\KD[X!*DQTr*@?\7]
%k7c=<M0&`_"Xgo"7%.h/X:<e%:)]e4DI]S4J-a9S<B12Fh<>A9Wk!#Q1T6QBlYq+=DL8VqLJ"1l_Tj\uZk;,aO/d)C=qqG)&#K^h
%-$ur/O'O3aE*5.1e[Zn8B/U(Hi'gKd#V`b7hP.U"&/OAE?o]&6NZJ_d*)BKZ%XE1`3?ai+iA$]jcWNSBF5[c]9J;2`A)dl_`Q2If
%Rtr`TeO+U6NZH2AVRB*A!1"du!MeJ8_rEU5e50_P*2e<maueIN;jFI7/_1I5j"jek(G_^hKY.EaR0l>^r(a:<1H#eji^!Z(Wi@T@
%$]%W(n?EVki05=HWsT8a,tsq<_Wm>oP6pbgeIoi`f(aX?h$?oIdMWe%Y6LX-E/4UlXc07.fdc;ok%!=;N;>sAVcAj6gV'R7:RJk_
%q]W`1W@Vd\KdLtj5*0q##%"CSs2Odim67@r^rLVDaqXRcZ$I'[QD1s$h&a-j`kbZU(KkY(NN01m<ZH[6"OgT9SYfl_a?E@EMX%#a
%GWEqkVo.iSrV?YaLENVQ9_+\\![1"=_l4cRp$OgT1@7bF3l\.\`@(<$WK?:5HY[]&3k&tpE[mS2NMG0sWko--4K$nhk>\q@k#?KW
%-J=oH'm0#!;:TNe4,aN[A5M>q<;"`u]8R*m_e<F@N/H;E;K@_rg7;*eW2et)^,u[A.a5pCBpWl\XL\NqjA\hL2EdsinsddHE%9pn
%$e@q?WZ%./:'Cg2SXh-'"W\F%^9!467uQ90)tC#p[b@ei.Nnjj0!E.f\lmhN<NrrcQlKa*MF,hZH6pg;?H'[d-a0Nc>'kNp[9Q4g
%=2COP@K,gIfGtNkFEnU"*2_sj?FE#pDYi+&o;_\bc)^WQrnpfC<6pR\<@cJb&0%5(<E-crj]0NH<?8,,`[kZ?nZ8`oXq94NU!u,i
%<Gf[\.c3k"$?'B]oO1bph@*1\<QE@9A?02=d+>]&S=6MGRST6BkGQ@XG2N26O:ndq?bl$]+()\,PtXI6%#qqKn]t!lSb@snXfd]X
%MPY2Zhk3?FZ-0ot?%E!m^cBeunohHM<IaO5KS0E3RYO=H15':Ds%+Kl#QV\38S#\C(I/hUb"?uirLK@mA69_fU>/-WQ_jJ[VH`_O
%Aa"RNCKPR.(QqaEXRGX)?ke)mmg,77J2GfIlP:#pOf?DiLCHn7M`7VaTimS1fN<l!?I+`SWkq]^BR%qh;B[fbPkZBODE<=n<J4"_
%U1Y_oFHL);_5^`p^eT#'R7S>mNN%M--KG346SI,l1G1gHpRru9d/eV.m3i@8JM)4b8Ejqect]o^WPE?lHo-pnq-rXW8AftYeUZBZ
%+!rI>_(9@:Fj/Q&FSm1^0n.BCQC]Yt')D`/,baC8rC4@`LNE^5lFDO)A4?ZqF0@)-!!1rRYC5/jq)P=hKE[8;<Vk!>!NMp*[DU3f
%eV:&&2q:Xmr.G&=%X2!0<#@/7H5HI[+jWjeWeaeh=sY&"k=s&h;^kk[bD,+gS$LPD$>dtqVeclFk)dS<Q$c`Q`trR0ZP5Ce\E0ti
%`P-ZT/>uI_Hl(<"'OWg],fU.61@`Xc09TT9OeM\g*Hu;d1#>G'dSurYT0g64jm:<n??MgZ[ApiPCb]Xu>K-r/>cFn^imMdKmSqKV
%$?!1qk1qAF;!QMNEUt/VZdkPV<hETghhsrIF<miX<O*aIlbRr"GMuBFOa)C*C'W/!f\,Fk0l82Z4&WH*gbGE=/[N>9Mdi@(;Q0>k
%)]0bj(`9MSX>*3<WFUn1bgc87\lH/2VgK_a<Sf_F9dML._M2q:^2$kEn"2<J<@i'K[:9ZXS[&r#caF];QM.?*^Op3'gB5oF(rL!o
%C*6[>loW6+YeJ0"r%(+Q["Y=uclr(X>kT#`R.3ni6rc]l,E?eGbg!_Lbt^!u(f"$kMn5aI][A*,^Vo^*APfJ9)#%`UR>Q8r1Z`o.
%F<mntWA]7Pb"sX//ZFkpD'=bKDW^tY?M-mfP5VRIX?X4be#M)IW)KYsdS*`?i_>nE]_.&VA&*7^Vo!B#bgECl6tiLc1nBNCLZ[-c
%nG>h+ZoDp@BiM7#BiLLSgF[=g<@Y^CQE<5FVd^2!:*iLE4RU:RX])Jq;kI:7Th`QN32J^s%jum4E9gK)@UsSdFXg(]mOi<m8JQ17
%oLQ_0Pf)S:h)Z9gJMDi>kYs*PB'J!X:8Ri3Z!EnmfD)YXrobu-=dr*_!lbmtX&QaXWH=n^))gJR.bDgB.UGlOl"X2qr\eAU7`G8&
%<&>-)JLSV0p.CZ)$C1U"6FXjaXB28qiJf-?BDg^_7'#1K'e3O(gkfi_[bI?K<Uq8-TlR8/TlP',KhC6lm?$5nPW/96j7O'@\,G5m
%6auTp7`C:(V)diPDk8Dfql!I>jOUM(`?!'aD/3)UE>mB&'f@JTLmPTZ7`G<;;tLtC42m<I].E"')h+sG0.9dF_^ZtQA(+2WXZZOp
%`b0dKnNJ?!5Wl2m27)[g:"6Q"QJ/5U,\pS:Yg$pFKWK:4TdaT(_O7hLDr4,kRq3kW/6aA,I\N7E'-'*VlB]''[>Oi&^KngU8lDG?
%/QTG+$DTt@@1G3\2O\B=Ncdl/Il7aLA#t?W(YQK!`c1Hh1_Bk3Lmh^YWf@?gIF2t*>qF:@'+4I`RmTmAjZ@l@T'iV:B)2`i!o><4
%@Kd<cqc'[Sl@W=D0u'k2[p1<'q".'YY%>dua8;o3i[iZJ;Bu_Z0X#]"!$es[`#+l7B.5E[_K[A5[p/0q)(VY!FmV20[F+LF`P?@>
%mg9Ag;\*Rklt.i%-`EDGN-;=$'#*1O\%A"JiB+KFba%rgk\Sj\L09&:Pbl+)nrW:_3Z03V)NW$'FHJ[/WKNM)mZ%8ur(Q@#:eY0I
%EX.;(:Z@9L2$(Zp'2Yn(AF*O9@&qLc4>'p/<V5lPrb"hecqVcXE\QSQQR?H>4t%5/S2$EX%@$VV#X0gi@Wi,C.!R51hLZ8%0N39'
%501kfZPS$lEj[0:p2%[*5.B&XIIJS?#$^^cDtCKY]O@5eW@o7=#FW6(eK<1o`LHH_HmJQ]_D@V?&Ug$3\5+LK1ut_qUZ3,<)QQ4d
%3N#X.rd#\k@D1<t)H0/sTp;KU-i)--+*KRhq+sei<g%j1V,"[d%lCD5]SM_u=9C^4d>'$AK!X\``/?ggeJ<S+JopT-8G8aZWboe/
%A033Z3k>hF%[A5b--]NMLOW/X`5RI/$QRh)[Lnq8\*QJa.dd=.p7WqR9ZM:b$Et\bJK*T[TA+,(55.cUp>Pa@6?\'gTi96W]SfTG
%^rGL_+4_bfrCT7%nj/:V,Td_dhSt^1q(uUf#fDK_fTU=oCscl??M*ci,l4m=)rZT:fFM#'k_MFdeMq[cVH"?[&)$+Umq^S]KSU$d
%?M4CsA++\'k=a$jrUIl(506"R?'MblVoKPha\;KN6R!B!Hc>!YpBAcaR&*gD3C1=m*!+G2'I.!R@9F*#8KELo<.fhfFEoDm>6?FW
%3LPhZUT[jCVk2$\Tk$*@Ge,XZ$nMsS97Tk'hkSdH,eO&H&KX<USlFB%+M1+(\W*Kn?>uNj/Wf1H7mCR%$G,-8Z*Yb4%2$S94:m\n
%3/ur$R;7(q1ALt9fPJL]&%4G>?S'hGAj#]3(u]9e*iCSGT@LC1M.qutm!'KurGUGN8(-+W%^Y20C.GgX]ZU;`*RD'KD9$_"b`6n!
%q2QJVTlMGqHQ;Et>hj#t)1<@^j.AG3XQ#Ga`\nKe.-Wr:f8QWSTXjGa1ukhL%',t:1EJ(FO9]SXhEdYLn'ObNNAi#tnsJrHO=<E\
%GTqDC`p@s:'lENrNlR/UPpb@1]PRRUB?#:7:,CRON?-_5B"Up,WLuOCLsCqaN,r`'4L-gO"5AWU&8/q&XiuUAc-Ob[D8]pQ*eiAk
%,9A4k;2X*j#=O$@M[\^?E(7KFa0jfeXJr(6".m@]:![Rd?=d%BQ".VA#Pp@:q."mnn6E$,UViQfE6WjPJ69dXD"AYXa=sdi:*lO<
%1Z+`tr%!KR+q_RT%@UnCb>Jr_p?o/P&4IKHUIu%5073<c>Fu*B>:<:^NlNQWSoR(=>[ToR,tV;@Lrmk'7Ie!d\]#W-E*:"6Z)$\-
%m*mTSZn4sfdq*qNI0,gH+4As&-"bUQRlN3SCkjfh2ZTmof>NBBg=VH>VXOK8(-8]C3]IT6:l]2R#sURRjV`:j2H&tXJ6BF+@,O@F
%#5U3sDuBCi]D"FDfW'lgR2093PLp!m15.G-dj'P?_uu%/gQ)tPXJCT8kmLqU,9ZOu+C-`]%\To)XO4$`27`?k:l83LAj@'N0W1Lo
%)V(+fRJ/=ajC668<RMQ_P59$OSstd!=V<%nes2!<Pd=trf:fBZfr^YK)H%fA`VT8_A<fgSLfBTF3m)sn5tBU?M>)=Q%%ALlg^f&S
%OR0N;;+oH/P0Gp\2LVbZ+gc**p+!n@JW.pR9Z2t/AMBOK3GWl%8]4K+MhX,b!eYrP+U(!+8JtR2PW05OZj1'J.^:\?.0bar.$lPi
%b%]CLa79Gs)U9f6WTPh]D-$R6A2QOF8/=Mr&#;oP9VruuK/BJsKS]sp<02_Z-n;U:nIL;NY+@`-H="oP<fW$'CKCaem`L@.gKAi_
%XoRQe7OcYqZ5"%:i[BW2d"U,s3mqfMA?)^PKZTEf$:m,0XMFp,R[Wis..<\B<=0Sp1Kh_,d^E2;=%_*oS@=Wl8[aYS,%7gN*2[qF
%h?])1"NX)l9bkd^MR$*G%2;H<bfW'AZ"Q.)Xc<dgcI-3h]bPjuSB8Fe&ZH!=b6sfnhGh.-_'s$U6ktI2H"od&oqXufn.[g1Dr%gP
%AlU_C/:.U?ba+fh7=:*:YZN<"`);6I7+$gb49>&&4>=eI&=La[NXJh6.%iC?,MQ*_9/H]_,WLmbCr:$8OJn1L6R=0(]FCqkM.;G,
%=nis%*D(k9C6E&3ZZX%bQatu/Ft8R85YA>1c\MfY[rPcPS^e@?MG8Y-Pc!W2Ss!oEjWm";RLRSO\J`@@qO1(t@M$:UN?+'6RQX/B
%0JJ_37_c;.k43J5@959&Z.YqW_`XA1Y&g&+<?K$8K=U>WSDPNS3*DYY2i3F)cs(P=_M-D)>A*9mVN?+7Hi_8<]8Yqrnr@.Khl>0,
%A+:r;Ia7XJ1'\[j<1s*R+o:.-fW+SCjJ.F\66$2ALT+^UAC7H$H'@+/9s%'(^h+"pNZsO@XsALWX,P#,Xj,ff#fGrAOZ>$B?dp?s
%cYU/5nOu1#lRU<PaD+LL]4F[+ao1:p0"V6GYc6a.P5?G4Z=_[*Ta9ur/)Z3G*6(('HrDt4JlKYV'q9C'NR[^f0'g<b(6P&n/NcbI
%**]hf)QHiS#tWa&Us>_=$)QX#,__V`efSF8#.!!\>HnjS7V>NOkI,Z@[;7D17O]VP4DH@DmGnZ9dC"iToIGEQ8:!"ZC?2%JP#T*d
%KsnGSO7]c(`8G4c#K/.D5U_jf3_;Z*c&jbUfV;Kh5tnQ/.:bt+&Q;,<3E^'$6r^('S_M<Tf]Z'-gf3MbISM%L>X6<39Zr.t,[5O/
%'rQ/h<*eetAZ;=Ji1*5mP-VZ%l,iBo:aOOF'=@;nIfc@c<ZZ0iRraq^-k^n!>hBbt=I9r>,:,?_IRNS@iXhlWZ4B(*l;285QY/&T
%7$[#([\+;:;U!:h:2.nRA6*>MQMXa=a^<k3Qpg@b&l_OSba<SHO"[cJSQT%op_'oOr:o9`?71;l!F]QB:D_3K8%gjJSfW:].rOG^
%(+fZ&'ZI8jgF:uYJ;Z$RBd22K\6g\1*p7'80dF7=mHgfHeVmT5Qb!Lb0,@n=o1i>[#2cIO%.CI`B>5">p::3&YNKDc(VB;51.Ueo
%,:CEE(!1DIlH&3MX-s]]IIG$$bMqs(%c=:LnZ6m\.D2*cK0.O:mXp>7A.nM4f0T8n/\f4D^c`@)"H$F4bnsWJ0M9cD[K-.71C0\&
%$V96970Bo6<!:#rU?oo:l*t94eZ@(CRrRN&Xa4'H^4a;aWQ448"k$RQPM'f(iBGMu-=#/j](D>$P7jKQBr:S`N%#b=U1,ng1Tio#
%XeJi[T3F@Desc\Fl?B]-E@cBnd>@"Oj="Xu0]mL#SRc_OSQC+&Sn?d_@^cce95m#b:3[=#@G4['VC=@X.OEJ\*O9-L7*mJY!/-N<
%[K4O(_t04q8raWt/-(tRHASqNX?I&bTuaGd\D/55-Aq\I#@knY^'RgfQG8Vu@(.RepT5Bi[AY5a,>?n0e[3t_+L7JLY=dY/H.;No
%4b_:/#Xj6`.+D:Vk%Hq>LaZ2#IMr[Gg1j68UN8/*e(<A5=jdo!P&HQ,$)4H#O>r_)as[HlFbo>(Ojo4CE7e##j#R4i@&MF!!3pX\
%r*6ADq\g-L&Ym@'-hg(YUT-j0?+E4&s&8Rp2oSVqjFm-+lrH?82:uSm5UE(./u%#>d0^Oj.p,0N^.)nHpd_RZDG&YT6L7a@NLkIV
%796Iko__)eW?-^36j,+84E<=D9,)&"o`/.j^TnTaVMfJjAm)USo&Z(pB=@K*3Jlg2!p,#8.rAqa%,sBKAT&n/#R=);giAsc&mPpT
%iu'k,"]V&pFVB:)-1D(7#E[Y=!L([*#HS\sLD]6sf20E?anGP8?sNI4*KtLQH#>;JO%Ks=[`i!8S(^fb:S<higYktlOoUoJFraj5
%)2W<*+2fuTRcSFf[:/DZc.8t:3@sj%<dFm1Km8B:9Sp6*Fq#V#NFXTtDE7br*A/W9aAL:*\;B!#`flu!W70oPBi8PQ!fot4jC1Oi
%r'3s:Yt0Mg+K/cI9%TG\/LAlU'CO=>7,V!65!0"Wrb-.,j+5Z%cfA:FR9@UX&6o6h/;JVM8LB4RJoZO@@?#55Z#11t3UEG)<;?h@
%%p`A)7AXu3<U,%379t$Y:eG^u<Z$ad3uIq\HrDk965J77,1\[H<g/<PW[:Etc8GKiD#"qU$,fFZ,#]u)A\_7jLj<O8NgQ_@**L[/
%1)r=60rn[L>+pn[+Y6C5L!n'`G>33fM4rhj']K@rZ`8-1(,2Df=p[o8e!6f)C6>/@R*-QcPn4)i8n1ApA([-Q$Mk3]5-Y[q@!<?0
%:B@:!TrEi9hp9)<7uR89Mhjp"@2k"RSeG-X@)U[WoSn`UoQh*6B4]-V\X%&WR#.#tUA:c5]W6k3Kp&&.`CLSn@7AdF8I[.-=\R?1
%jjlY-i3Y]")J&r]<_Ah&\_/,2#0Mrr.opK3LRtu@?Zj0i#j"f&@"\*-4_Z:YjalFHNEgl^#`sDR#AUQlCiZ<=g=]^]hROL2VKU-s
%p#TKrrR\)oQs#^hN,VZo\GR=9$ST4eMokdobJ#ZHNGY#<bmk+P<kOJ-/a^k&!k9&0SH/i'8!^VY!\-A;KPial]TIui\o%^@P;ikF
%ha.nUW+$9j`aX:2@gV9Z+u(K/$nn=EF.e"^RS]SSp5*s.'F95W4]2>T"R,C;fN:\/'eG`-&t"XK-kR#-E3.UkKHUH#7hDD=-`KH7
%@Tp.[*%\UP&M96i+_b#RIpagG9n^P,r15U/!F[-g+AnJDeHPG9pg,BfU#IcplG:f(&pTpt#*g.!<n.T9n3Ri/qe;1%C".2b7#,>Q
%!0Wg'6IeLcdadF<U"GR:,,N7e8N.1NnHD(iDpC8bmt5>VYVQ7>=*3hNA"lcPRPmWm%CU'^Bt]&DA0*<AZT?<XGeb/1(qEG#J2qG9
%,ALZOs47+HL`o:snL0p"[)n@5!0=?.[%9?]",l--#/n5hE@h#/c.K;hY[1c>g]s;MM4rRA??J__'1uR^Dk+1SGQMT(%E6#2A\Gc,
%#*&s`WaLk:co1IRBAKd6?`XC^kb:qPX4Bd@bVuEl.BV]iWGc:q->0EK6S>YGeCY-CNU@WRbQX^[321:gf@H-="I,OS/$eSj&u=bX
%XN1r>G7OE^EjKcoh$&s))hi<#7SW\`J1tg$JZqD'4h(/Hr>S/gr^$dMAB_3\Zo0*:FE'V&A08*D8@>RoE=H(i0a2.P\RD@M$>)`Q
%NNUgpW=+7<kK(HtP<R&t>n-]$`<nfP(.S/aVqsd2mn]!INk;^9YiJ`7q%C#+NP]-]*l2;X&Ip<.$cm0uS>Rf_W)&_A/^b#uKTX!"
%/6Q#\_72KJb]A.C49l[CJ$]PB=c.2JYg-t^*HXQGgOW5P5qb;+BNSD1;AhT7A#R"p=Ras>Ji:i=Hql59DsKY7huZ>+S+YFMR(uHM
%$;+hE&VmL7AMJodTkda3=)rjY4u=G#CWBLKI2EsJC-75F;h1p#pHG>ugr#X9X$MUYhQJg!>b6Iq?rTZ<X]Um?#RV>VmFYd'!`T(\
%KG;?W*lIoK>k:/0"6nAjgUET0k=??gX]32?:_nkECdJu3RLC+0:Fo]?Fa^I<TiSfYs"98A&GRshL?KA1il5gu!o4<a#2mLrmrtUs
%293qA)B!sce9=eOB-F`uEf>5r]dH\K5YiO7h(=[^H(?t99WG</d;'8fqGmlN&,T(//hD?5oj$4V`J!-m:'A`,_fCpFk;8!H(7:O9
%=ort4QPjcCZ9nD&+QmjAScb]rDulhW9!DS<\M'"4aafZXRKiu`B06aKe)R[FO2._;+GrF_Yf@7;+@sY$Vsc?`KpsYlOI0XW"\3K9
%4p2l1+bsUieKoE49lno3-X!-+;0m5<<_l1@hoaNhdX@;hU:*92;+)snG',c!%q\ctc*VPiM7G3X;Jf$'=O"gDao;'enN'l<S3EkZ
%7VPd=@2r<jV)bjJ3.$;<@f8d%JGtC!X^7GAG7Y)(8om/@-:b2Tk*Q7BlXj,0XbK9WJ>jZW+%Xr%Z+I>--;D`-DYc=?%%&B'0^16P
%)Oea.k$^B-bQYoXF(^u9"/8?\Gp'+BmNCQ&HqVmZ8kURo`>^*a<0`&JO(srablkWE28aN\AF]Of!n0k/:A3JqlXf<L3(J4E4*nIN
%n37D]-3oZKeWc2K`uh,T\7:$`4lsPAX;NVl`AP.r7q=<AVj$)4mW^Lp6)Ct6,CN5h;:rmb)tO?J;V*W[J:a6g6&?sBPa+02!3[/Y
%pG,-QP/"#0-(RnsUN?/T1@hlA;q1b7cBa-'6]CHse%)TBI)itAM]SZUS:17*Z11+GM4I8'*p/b5Zc\[s_ud#/$jWi&b\&l"@EqG0
%&U69cbUP]>aB^ncMM-j->I:lGf??J`]!'*W3\*a`c^1Si=/O+%Fr'^%iOBPrD=Q_pC3!3lUZ55SQXG#F.-nM]C5T,dbB(iW+nG5N
%s(W376EMFQ\'<@'r$99Y'4=\/9jinAf-_-;Jo'O68qp+FIR$LXW%=2b$S&1sI&uM4?m[Q[*tZFd_/"S*on;UA,_M)Xa&&RiA`I^0
%+gHSOU<*RM]0NJ,K]"`OP]/X[$6.L5;=+h_QKTXNp-<lE(._BFI7fCS:<i&f!`0dH3d_JYE02TAR3"GWbYEBpZi%TELbKWoN]mSJ
%'.5C!lkC3o_$\;c9?C*/!E!_@<0!_r$Ya[H8eIGR47,[#QoeXD"2^MoS4tWQ7^NFnAp7FPE#9=`DRm*)n2*Zm2U[hJ"_HD$?nAkp
%Ua`-WeAVG$#/d\='k]\-/0UAa"?jE(%lC&$*_8j_Qij?Y-*C#pE+[RnN'2\>Cp4:<(OuOH4aF\&,6H$Z,+'iN/%PLW\5uTd5itB5
%_CKgqR$CrU]Vr0BS'p*DdP([%Dh00:Z9aL'+1d*<-h6cn<$R\n!lC`N%tokDk6r;ejl2aJ^4Q;Sk6J^CKBST_4?^1KNHV(KJC&5g
%FdpMmEcCA04NY!C)]Xi/WL5rdBnE%1)ht\V)LkFlZ4TgnBI18k=I,1go*9/^jL3#XZ-dYH'UVeS2+t8Fap9tSkuo!7,>SMc]eq6C
%=W0%9?$An$Rld2?gHj91.^I.#F(I/XO/0VPN(qt,f\#.&Zn2i@h7F+(Z]Ll!=.9\GEcNn4fLG?Mic?7nqGs0Th58oP!162\o2@Lc
%<>$-17>j7-IdKR6ngY/hp%6nQ)I6]8BJO@hR[g!;/T+=a,%M@&N-,`JK\HZ$b<`8mi:i,[$BoD*E6Nln+SZ''FhhgNokp5:N";]3
%Osk$RYuh55R$)%BAEjrdfV#46<.kSaD>niV_h)M9W<[uN:WH5(MY'/5bNf1+eC'8,&:Gj//TC8nl+"Y9edN.%3joUAR'iQON%?b-
%?3lP?+%CJ1GT)0,7:]Dg6*:M*)?!`%m,WdE1>4%dKeriC[/g;.@i6,gI1RtPA["ZTl%q[h.E/TfEeA\"g*RW@\Y(E\5VgJ\E&<]l
%:G4<f+4q3MVIk_*pM=Rk)&VTk>B+$nG,plbc$0o5Tm=2-(saHSZ_OI,U#gY<2,oO2%j?*ZgW3=^;Fncp"!HSF`=B,3BSHcjs0n9D
%`un8&=^u$slul8K65M4KH'\QYWm,F%K6a8_V[fND0d&:_1<<s("qQ4G3Cs$-R2&$;\J\&/p84JtcK;e@OsFOJX!PaP0sqr*<F/.d
%(pdWo0(,`K]<R_SO->9\"dW^m1c0H]U0ZCj[VtF[[FrP(7?J'("fPkTD9r;0.>inog2fn4Y/XY6=IDa"h#mkA<5fh>0\Oj(0F8s`
%-T)G,?l0+iEK_o2>>t5/LSu!#J_1'8SJ8]<ipLurSii-^U7#UF?J`@Tb1TJe+c^08_VnZAR&cTZ>Du(sBkIE?A]AOGq2Co_OcfCO
%#oj$+k+</EIfMB2@XKKT!Osk?DUl1#[sYns@Je_"?bGj].T-Qg8@!0ViEOdTqG!*X!1#<C$$8es$ct-X/!Z)"==A>4"YI_j-;Fm'
%&1&qa'Ou^W%V@#qq'N!9U_j7^SYp!cEpI-rIG.+#VP_0H19+BkUdFTi!G?LL/2"bZ$Z>=%(b_TC6/CuX6",,)8kBjGfWiqYE\m#e
%90*ed'c04RG\ZfhH53`G(K2-=*@iP>;t%gt+IVe3ZBdlK1gYI3DXKZ2?ts9Fh(u^WTH@MlZ6t18H0ZcbK0a/lCnF>,4)&&2QN0Z9
%l0(da4e%iol79r<mS!"rc^T2[I*Xb6^Y\@.rsJATqYWPWXg,Foh'OO7p;$1SBd''l4f2r/GKgV<=4Ul6=)riP;2dp$F'=AP5;@^e
%hTr<p-3@/J,C7."$^.=*>DAS>\X@c(RYU-4k\l#00M6DLDK1EopWf?7^NZn>F)d[eRPK6`,q@Qpn)AM/h>(X.*aa`f"Ifp,jDp0:
%D4\U2G/LSU13NK8nYS'QI(:5um!-e"jBe/I='a0J!>@\uGlg(&HXPjmburih;GL721Ej.d%*p]E'b2SI9a7oK1PHkuIOj&+1-@ka
%)M2*lLSY[_i,bulN)j!6!1H'#b;=e-A'2\X.fu;/r7:5\5%S"@nk`3"Dn6iBj&(Bh)9io9I'S;>bgb%oX=OGe-U'RpGdE1#JaEgF
%UCB4m=pRt'!o[^8[I,<8Pe^J0o'DX\q`_56PK-f7ootF1JL,?*a=CcoB[R>-=S@qN)C9[Al,mP<@BbBTmN_P5JMjBKF@sKF<kQWp
%pB>:Ud2[FYk6>H!an^,G`tu,D3)C%+q^13C75cYq6(&rnMh83[.QuFKZdL7`!Wq:AQ#mC9<1ljk\/;"rCIPq!X;!3doH8BrfWF#b
%atf&-l6lsI1^s6qD>>=(=nka#C_G/]6:>I:$Uq@ZFN$.Pfal(^)Bpks"&V0;1S,J\Di7a`('\P#h#P-_d<:ms'8S7BK$%'(K;0<m
%+kO!#d>Y5&_jiBM!_/'`iN%3??n?UnCfehgTKA5N%+,f(+S)sTBr3S<=>JQ=dB8WA"j7sB3c;M[+@UUE^*"]ElR$+o8*"W75Y?6Y
%*-^-j/S,IMB8<A4Su\&\_*ZW=#mSSY6]W9oXf05qHbY@`KhaGUC=pK*H30Q_1Wb&0;+knm(bb0j5Dgok=9?L3cp(/%c:,!Umc/sG
%QK=ZJnd/=Vab"cPKOgdTWk$6cgZCbfj?"Sp0T$)MSp2?GeUO#K??egaR$j91$dCT:S-X4F;GQ;9CRV&5#4p=c7+6LsG$<.(Sn6Rd
%/A!8o2RF-cbI1Vc!.#?3`DOIJg@`geWN9Nq_314-Ws)X&e3\=aF7W-eE5S5`Md%G2JX7lPc5pE@.p;u9Hud<\iB[t>q[V3[@s1'\
%aV^N62F+:]?W@gX,W72mMi($3"I4qf8J]4@&>0]*`G)&RfeHVV/)J*)/@L/$@Bi0lNUXf#[u8LJU-Ugr-CcY96j`uS8/3<`TBT3o
%1kq6Xd0kS&M/ba(B4_Umb,/1HU3K/g0H13Ko":cQ_Q9<h#@Lo?"4ce5%Z]OdB73jpF7N3u<[!IbBR5jDH9B'c$pA6j--tbD>-j%0
%\-iEc>Fj>^)\$)D=4EPd$sSWuYuWn9:k#."MeGH\L)JfJo>YHH3A.'oISVoQJ=R7bY&-7C6&[tq6d1eFY;ne#KQD2hrY`&8nArLf
%]CJ]\QnT`_5$eQS)4/;j1'Sq0WK@*n?K[\&dU>3_7:8<`%/F&laeX!pPZ7l;8qdcfBQpSY@aZ+8_EchS_;u\?g23%<4hKO/CiH<#
%Y75em13H*f[/T8hgR_f.6*r+:[/0=3aLr!</N<i>[ol:l:QYuGL!'Tg2^KJ@X9E';UD^sB6'Xf5FRoapYH&XQhggY^:7Ss0LE%mP
%Wek?#EilpU_bl:hGZN_lc:oY)&'fttfn[OEdD`_q>PES!18LQ,3Q%_j?/_9M*Q7N7,H"_RZVnX7lrCH'JCY<U4B-NJ7$^ZPNtV^r
%Yk2,VC@4'b@+es$6C+?-(d>;4`=@@.bHXsa,(TY?BCCjk8WH2sX^LkL.i8Zl!Kd_g'GYWpV,f$%HcGIESrWu0b\XW[.#di[WBa\k
%i,JJK'h`P.WN(IeFtb<gfeicN+*jIjH%\;$DaJ>W*pf5tC"5`<*a"#'_+l&C">.u)[@UQ26d=P#P[QpP:*HP@$`,O.,8`?!lJ#+f
%OK/XbL)7-'M_?SB]0UQTAa.:OnkO8i7)/@Q\j,r2:m"V4J<aitHobQ[01'J%/.F.+s%!b7<JA1=8]9Df[$%=f,h=V]j!<",\A^3S
%7;6]!%1>)br=FXdAjM!nLG\#G/h'5dd,C?K);an3QGI5krr0b&,+0N5/OI,]j4r:`l/`H9quO;EdC2&?N/4)*SDK21)L%&(d#879
%@*LVTEq.h@&IiCB>`:(TkK[s7PcYB8-A0mXUKhU?j(_+gql+>:_.H-H*pG(T;(fGZ%P.Au[D`rF'clA>U4WV"igWUr@R^4.R9ls#
%Zg-Zhi^Gklp<@1$\p(ia?*$B9YG^1Bi8R1eg\Z6eU7peG_i"^,D-X.jJ;Y(H&/il'L;CiaL/a,$&*52bE:KW,jm"jR#iAui]D,3G
%laWDp@847(Rh95`e@qjd<%u@N&S2Nu)Y[1'*n-Jn;+C57;I5:f<6$1t_25D+.pn8!)r5F%PcI-GDaoDXo<Vbn#f/1CqO';TIRJcY
%E$ETF<#(oO,GT7TM\B[appQ+&jJKM`2^cJ"NP=hYW^8NP/&L"QgS]W<@>AB,$<Dg5/7VtukhA%Gj[E!S97QQ-^b.?t_%XBYN,b.8
%0ZFJsCL`SuZ'XF>L[qC"pO-cf/:itQf2JVgerl:m3Y7HbJ"@mWdXnFO1AuPZ>:&$+_HJm$ri;+T+Z7Z(8\iESZ/kK9AC[WRi_1:-
%OR<L5qQ#?Rnd>O%gg6[$Wpet6VAt'Yks)Wkl+jW<rX;B#^6)uj0G\*l$<4AL&>n%,GYl#=V)=Gj9,M_16R&!qeoKo<D(5fU<KaJT
%>=tM02Cl4eRO`uZWXXB;%WcXARJWD:RpO@(-,hd-\4Tg*ht3AEjK+TG&?eUa\;;"Ws4]ZW^i^*8-0"5//1Tc%4>=`'_[jniN@FGk
%IgM>2dA/\J76bTf<.P([nIm_7Wqt/rn!^bk<@iaY=W3g1\o5seXFrGUEq9d@j85OQMs#C^=)RHlfBg61S/<JK\sdPXhCNdNA6L//
%cKH>)UFC2L#d[QWk8"([]1=*S^f^/[Ad">Z?jh8eJmN/?>pN4"8HOgeas-#J)Br%&<[Rs3867>tis:_*H;@r2FQk$55fSeW[$1r<
%U5L6-!`Qomm!9qLY_F1Uc!kj;7=boe=$5:IS$)1Z8:4U*;AE)!Ee6oHapCBOAld`]"AbGprkWQ+gtt4((B40iKH7lFk%OCdPo_*l
%:IIC]Yi*3+.#n3r$sVrRedXJOSHMi##AGdp;IJM:K`7J$&lKZ>NhqXtfJjCt,Mkt;U?ds_Gh,lP#*gQ<<IeKhIM'=ba+6:!4^Z8M
%m!_1\!#`M-Opnd2/5MouJui@'RR3&8V`&oDQui.a!Gl`Ui=Nub,2V((DsRfr;\]rm]FIYhp224dk.\_dWXTWSAf7]bi[RTf0XN(L
%ILo#+9FJF\WiOJ'oqq.T+8e9)aKY@NWSC[87)DLn3R0T/;`eho$B/#1]ue8jg'me(>5GY?l^1\]C;b?E9YB,W/"$R5p\:<jabG^M
%?;JBP<dcd.%NC`j/G-aag`]FZge_,'hCN]bn([S*Z9c,jGQ'-$l2E!;F)s]X6/Y!aq6TK2UEIFl,"He/Ai:kGhlti3.9/65;X^@\
%LX1J;Wlcal*:/gO:;oIH8=\GYMO"MaOh%ga>&jn*'^RLcQH>4^\K2V-&cb]!Lqo3g6bCO8"*,I0ce)hWBBV9&aY*H`bFk@;UoD%i
%1N79P^L2C0f@Y!YPLi>)MFlf0@6Em+n\UZXjMY8gpt"/[C(4c/eu`aUL3&"bh,9T#l0,D([V^5665c"#VE'DS5j#?I/i3VtfK;'g
%m&(\EEV-)GFF$AI+o$^jX=iabA!^Vs7`h#>Yt(BW@I/Uh9p?4j3BYN*-e5NY/oblZTL$KGH)N2CL&9O@CB-f`d=i90_ce9Si,Mpc
%XU;n@.*c_2[Aj:\P_eR4T*qN"<Won2%_O&OkWGUZRF)?:_N%#iCRDMZ_PXV4?J&/R=!186?Ktq;fUX]-\RQ/:B"JPPWR[_bh^o7<
%6lW6+[g#"[ogfS1rc/D?&&LAX'[E2$F7,X5S%=i"<ZhLA8G65nMNqnL9(B,u<3*?]QTq8H%7SHc+jI'uTd+6#UW6$SDNA66p)X.!
%+XmhkjSd:j[-GXTPZO>`GuDuFZoK?6LER%'r,GCB\FS:JchQo;bfE#^+f,0<lX.5+MSbO@Yn-A"D0?bL`2]F[P'j90'XG9h(<5l]
%.rPebHg%Wdcn@`9.ET460T6nA86[E\+L4L4<Tq%j`9jX<m7F$:@u94#0HuubEb_[kE\I]3qC5L7g?K(aBq@,o&XV^n0Gs_BhS'sm
%6B-2=gEiSBgYR;CPG:Z$2RTfJj#7*oIM#aBFr:lUfSJ9Q7YFedUG4`)/!`[Y5,E/?2`!fSB:>6s&V1C2CO-j1RWBC-&YZHlpq2Ok
%kX\qEL^54lCT?*:X9br-"6$L/!!slE=:q9gp9>gK/K9EZi?60uE3R7(fY]n4J&/Q6iBUgBBPqa2$jk0elF.q17HM's88)EJh1gTk
%Q+LNsBN7WXa,kf\Mle,N6a,F=2=33=,*D]o%#a!b6c+U:m.WYtKU1._r"p%bJs!,#(c!?V`.ipI*<,YkODc?#)Y6DYJ_^GlCc;+r
%_e7m7&]RXr?%jPUiELj&%I?/><IftY[A"Se^1gVH1t1p?6`*)OZSC"Km<(><nTXi/E8gC_Cr3k2")[Qnj-[+p?A.3'B:\-u1,fm6
%E+W3&+6=NKDh9(*))&;s6bY."ke6ZN"JaEEHq>7?!E!^HCYVMT+>Zoc'S%\4XHc1^#8D[uB<:AXUN5pb0[U6f2Khh+\dj]trrnl!
%>BjS7*OQ1J2Kg2iC;9DNT>bSreJ@f#N3'*!$p6`7g*lG@&"M`VN/OhY4AbXWHHH@_/f/Yj'3[o%q`(;27C?8p=qj%bY)p&%SEaP.
%S*jqo6m\F==(Vm07ck1V37u3-<Z#:p_N5R6lPi2b0L?^DT%-gd)"tkMm\qe]?SXL4]@77]*HD58<$9+f+jP/Bg!$gtG!3_cmh5[:
%*K7KWNbHK/S2Ra3'or<_'=hoTT]\eEZsl>K)eiIu@jX;<QII7"LAU:+MSEmn(N9/mIkKT2<X=T_4L/$FjL?gY_u[JR<8@,ZM.7T8
%i#kO#\1uQJ!4$JA$Jf;CglR2ABOOTB&>59chBM4aEU@'hG#0*(g(u9RB/6\DWM`p3kE'968h&QcI@!X9fAR@b=R=YiH6g`Y4uuhC
%F'<cdeG(U3+sH+=`@^<dZ.<VYToo<X#r2'[+fh>0W,8/iAp]G,js0J,M4<sW$HCKho>o57G56Wj]bUqh;R9rl+dUq:A&osQ?XY_F
%Y8cfo')Uu9\eN<b_AmOqbWT0q!0uD;N<l.lBOs=&T-#BrL"?ZhBJZlO7/O2WqS@n!dP,N.#q0"A2e0uoNsr#6FfIWHgfAQNT$D2k
%p-ds+80_M^??B/bS!9\u<%&Q=,g#I,=MK?QlT8)2[>qVd]sb`/]`k@D$FTd>7T0I&Reg1U&T('o"5bl'Zn6^L@([p2hX1A3[:o9"
%fe%+@QZZ>2DmBhUJ>0-u>RrD,Yte7i;*6Y@J)4.G3Zu,H.5p`7&Bd;.0FUAC;H1J3G=_q"N!!JH*1:skqB0mAo&U-a_;ZsE#?+N7
%a23G/9Q2Yjb]+#hV.0ha(%<>+.TK`@Ffh,_"8h]-L)mQf2--VBn`deIQ5+3)lc+f576i8QF,!5=!Q+IsmSSuJ;=,=Pqh4&ELoLIH
%;iB6>p;r;-rRL&mIOa`_*k$*ZNaG<*`U45&;e9r/"ZBI&;oK&oW"JZhF=.'-g)qPNa5ZD]qL]&PG=T$&]b*^jH!GNHJ\BWA=7kA[
%cZ%G)qsXa^3[ff6s*ApeMKKR5;[1(Dh_i\N@pOa6)lV&BW\P('@US%"3ZenEOr0(NK'/p*YPL9tnZf@c%r"*XC\Y2\ia?_j.n2aG
%H1,kJZ=pI67BuZelO/JK@EIDi%cTiP=k.maL!)3jYq7HXE-!a>kJ77!dk/3HdfZ<OJ(tF=cX^bNY$/`VFrd0KL-!-".iF%J<FOM1
%!?gCA+PX?9a2trJ&(T(/%`K=/Xc;<%H1ik0<-?h"(3/kK2Bba/$@O(Vdes%G\X]F!e1EkZ]B3?Z\f4"cP-;"rCIlr$_XpRHKrgL*
%%?RVQQ4euFSWo,<a#n<C7.IRZC)C2h3mWO4dFo(Ad"8^Y3ZW@k=Z-EL&Y^oiH,6`3aU=?gPmc(C^.<jsbm=30ZK1Xm#8)kkT(d\K
%=J"?\88ck2GO_*;iL,NW>S9MMC=WVKoei:t$0*Wfg4VtFGd#Z'r@if%rZX"KV3G;f_RoL(LE6<8.Z,I+WCj#H*S0d6pPpF\0"5.r
%?$k!<djN][Xa:C\o5573f<_W;VXAP%S?Eju&!i^-:>`3>fK?sVb`W'iT4'N)oU3"4[&**sg!tFU(^m#,9p7H$]+QFbHRqBKIo7_m
%6raImNRP_A>QV\)Jg]7AqqrntC+fp36%oRd&)0cdit>B0YJ))D;N-_K`4$M-k^Eja2-buDIA_ih8H%DUI9<nFZg)/'70&m0jLh%c
%=1YCNM*4M!_]l>TnVAlB#(_7)>l3p*ORQ'!B"5Smp4]'jnT34AT\!_t2Uc6;YfCJe5$e,O-4o$r9,UcU4jb]OCOiCJJfo,02h5P5
%:UWF+C9lo$+;RjQGs.E,1J%`JSS*tCRZAjpS#:MRjj%i#FOo!X1tbb(gB%,`R:B8f^s#c;;L*@\PAZ1m.p>W/BNU.\$^Pn%fOc9_
%dNU'bKX@-bb#nQBPh2e=^\$LX6:=:8LU`sS)AVGi,Z_KJaAQ]_(-:WPYG/^t(GFh@E!Xo;q1M3,D&Um3b.9=PBt2Q"HW+O:$Q3Ai
%Hst@N0I=LhFJaoGh34Y8,_dZ1"rC!?/IK6qZqfA2f#19LLmZ@uGAQbImd?hd<?]Q1A6=+C*'g(t<YM[r',#^rPIos9&g)>%.<\L?
%\LeD4UYAV+d'ho6YP.%4WZFbrCQc$$Ha3.nAEW__FT3]aTt;DL.e.T9$\=-f5AL*ujkDbb'0S]=q=7"4&hS&$\m.+\^SirXAS3.+
%A])86`C.VBjfu!8$LF"&29&XSF'LeAaLW<iOY'Lq?`k]WV.@b:R/FU5$tNdn]bQI+S!R,]g[[)[)C5!1i(ER7%n%,`lLiN-$d(M!
%;UcHBqSjf;#=djMQ-+(WjQJ4b>n'o"n'`:Bla3%dKWm!?^UWOQ:=SHe%QECD[9mr#)m0q[[([+'&p[oeM4lkNms99=kM1)9#LsR/
%I]>\E&W+tuc*j^shq!P:h6e+uROM,.)-39U2s:fb:EX,#J_YT[kh^rhE](<5)VCZ(B`FT^lcYV=Z#qZuNFAsAZY2J,<ifbQ1`WMf
%Wfa>1*\;`]=`b[Aa^PK.J.3]0-V).u,iU?U9J#7m@.<(=OUtWh;Zs<l+`($.h74SBY8aa%d@?+jg#7BPQ-,Bp_L]dfKi]cBPdJ]A
%gN>AoMfc@M<<4FrL!L+t:+FBsN4*n;C+9`KB^o;]8i@?VlE`,*R9]@oFYpu=ToS*\QC@&e#$frrLRF<+E9:\P.8%ug:-=r\U8DbM
%1!RYZ.`@d7+LLSE)4J'QU-NhF.]hVl'udXZTGA`b,eB[.>uI8>POn0e4nH*a9/k1N=L?PeNDYesRi%!4P-n5=$9p)>d97GZ?=4Iu
%P%i!AeWu1`$C:aUb4%+XF!6C^Xu7AEGBY5pInhiX<?[?Cm!a/KN+(1"8X`>$\EX:@U?YP"K2Y_s$"!59_sqG[/J4\MO]u/T)dt=#
%Nt\tIO3-kq,(L<GhkQTZ3>#6NGlAb"C9iWSDF(*&"D\!?E(U3U=a<e&44NGD>F''Qpc$Yu,`MQDr(;qmHNJr;*\K>j8d(r'\Eh[7
%XB%SkhO(G_150Kh=LEU=jt/=r"@Nii/a`u!$(iT@W2f&A,/Z?&3@BnK635gPYO4Uj)BKJDY9L\CLn7Y^mu6u7AY(fJq%1Y1/boi;
%L'G`[2epFF<7+buM=%`a`$'2MF<G4pW**j44:ed`9l,JKhP(e"`$gHp(Kojr1pR[Y\</?1'2h_!>ogHk,i^e1\JG?^/RRr8%g<TT
%HWp/B2RW,;g-C)#K=+&[SJjls6<CtND8NE"+nR)"7:D.;^"S@F79ZfsGZnG.<VP%H,J.K-/CCRtf4$5Dgln.3/tr'_)mr_&&ij,T
%S)J,FdPhs>VLj:0@*=a5^@La,s#9T9Jm8F`/.70ODeRde%?,:BRq[7<*>K*rONR9K(M<b:PuaCY7"oqF]^miY=9jE$<.b(R,@j*Z
%).#X;L_ShiG7#[4d@8j54A;*s!63A,WP("I5A6B?KeTT]aF)f9J9itHAd;$Sfs`)RAL"CRD=#l6<Q0Fdi`;2O^0oG^2F`FU=;E+,
%1O\T)_sk0W]s";)-<Cq;Xo!.XOs\GF(',P#1L5lFJ9(Afb(_Y+Y$ls5&Z!!&TbhXKQ+4U@*`3s^(NN"7`r_pRCi2tn%r1t5g+=D.
%b@gW-.E:;EDWJ4"`r>m$aDYdW,qKDH4g6=rT-sG0"`&?]+N,!qNj00I%kcnlIJcDQof'W>`5dh>V[<sO+SAS+KPh!eAddrb!2L?_
%%9k-R6+F.8MJj>8Ws_S$R!cd`!\?:0#AgYJ=IH'h)kskk&8r2_9,md$`_^sI53b?U0eQ-.05N&?&b?X#mt'?rn&&oF5@H8Xha<IS
%5t[4Y&M!Q\6uG=/<pfh'/0WiU=UlS]H:8]P5ZZOUfiXA-+0jl8)<S)gUo33F1lVl^M<Ptbq7GjJ,D#A=I&"pC(Y&^Y-\U$QHJ92n
%G1dW<]55\a5q6[eeCT[B&YAg8jE_0f!Y@EnAQo/M@TAb3Ts."HDcq@W;5U;GPX=++ONduH>6)[qX_h8jXML.t0eNGT8n6Mn"_-tL
%DrUn]dap3+Cuk=ZCPFJ4_q1,.Dr\\N9WJr]2D/Y`SpH>'6tUaJ(P(cFLNS.U.`7(D$NOEbI9RMp&%rsV%L??i(R!X&^t>>6.\CA2
%D-[-."nbt6$@@RlCKhS^]6RL,"D]6dE[[s*[)gNOgU]XBbSFDr?.d6+#m&kO^b/^aFW1PYk6L;Pp!_$];?AMF-(t.%RS;l+/E$4\
%"qcE46ul?eBdfWa1dXfXB[bV[L+>'U(<4Ds>70<p3JRKdg3b+ZBPqO>m:<)*RtjBdeDNd1#PQ*a%F6r`YG.r'[RE+e&=05[MNmeX
%:`CUXK\/uK2nXTh>&H;*S7:_7PG,u"U5V')?Hjnpdd;]t#Vcm'3_F5k$)2HsKP-'2"/1mr9:k%10=<7;1p@d!\=T`(,3g1%bc^,g
%.?^B>p?^d,H&hH*Ep1)gUe5)uiCm-R!<Cp[E!e7j^YSQV,#ZsPOY2^a'?g,:a=D0@.DbG6D,NX+!g'F7prIdf,eT>&O[tupn"aV1
%n5bbU&cYR)1H'2*B4/L2=E=2$,MI#`*:/D*$1h%3^1ZYqjbnF1r^n,3,&6oap\/j=Km=ic@!SkH<t<TciS[h[7-+bp4F;/:SYQ)$
%rO8rsD:5W_*S>"rl=mpeq1;#T33iS+gtb*0&m)A3/!/@t)Z0+.&,M,IT`Dr/A68t\D!]c5/M4lDj&Q'rZP'$]iW\m/joWPB@/([*
%@FnV.Y(+HW,i"lH!rMT,p\qN8`MJOm?LhB0\'0Uqr2PZ7)#+Wg20(8*4#_m]L9hV^S8#KEMi7F1L8E="*k@Bo3b*Yq_@A"H3@HHc
%@BV6%j(M\\kJe!=l@u6?!+Y?gjT;.'iJ"4jg]_6m9G4&5LADFA*QA!lpY3,h&GK':0Fs#QBco3/Les]pfj`/kP57>o=Vr!.k4nM+
%9*@*jL673Q@XcK;&R`RH"3+.[`[4SS!YQ:ggOjA(OpD-#pXBM<(O^[$OuD^)`5)BM5]&_`@TN?ShtJc9qss%emG:e>!K*"p&he'm
%m3?dO@^a-q-o#Y*j%uIrHs_OD@ceiPU4*A$6?JON7:ScHg'an-@dSk@oKSRBj]B)CYsq@GTu?4aSr4.1UF@i'6c"ZP"Y%"D2]Yr;
%J_aj=jEWjeLb>m5^8\=b=lH*lilJW(KI,E(Hg?@?RopICn03LW0XhgCOeK$E5EOSfL1BL8B=AFal(!)CY[;<b.8p'b9'FUq\)E+F
%T>,h"^@:uU"2uqK,NC/c^$S!^=Ts0\&rE=Y.4BhR4f'K>DV!D7>Li7MdT)GAQMdV"Hf-k+"aT0bEFLq(?u/eb[+=5Y[28Dd<4AR#
%S.iUBeX&lGP$)>2Ka`JE'QpHGdVd3("qEkP&e`>[oH\./"X>oL_1KA8YGXSAafD`Vo)sjtFD-mN/[hI85Z'q+$Tdm7X4./1JP(_[
%kKH^UD5/de,+;r`lXa8B502H/PrI8*O`@1Ck)2;$<$$BuK$OupR1oZqM?u^OLrsCR+P33bfQ)a_hsqQEQKeUS?^DKBfFtt^UpLgO
%0pm8%fg9-%L*Lk;,$d70I<IluZp/4Ke06Ql*gVKhCaF5qf;<CNfGK9g!MNfO5!$:!bE2I`1)&YHJW*H[+Dk`nN[oGHrJWUJ^;c$m
%K5p]sV&nr#o9>!R#!18_#4;r%W*F=0Nhe5+Gg7TZ^P8K/)i#.1k-e.&^Wl_S`.9@$2)]1$,P*tG^V=inRWNjnmM4C!]kUTgUPjI&
%o]Q,+hV@Gr%C<)3-NZ?DE(6Fkq"D-TpQCTPG4i]apX9";LPj31Ha+_T0T'7borD91d0)pooB/h!_.VW4GXPA"@9bOP5\O91OJY3I
%2tLLHJMkZaTZ,K^ls2>!]V*h-K9CN=HEP5R,+06RJ<C5Xd?6Pd,tc\.8IsA=4S5S('jhXuQ"2'9\^Ej,j,>uIZLlCI3,p=D(hqAG
%o"s2/8(J03H0oW[*9StYKZ#;GjT_3IJ>o=SHJGOe*"/bCJ`utZXLt.!;dN#D),OQ?OW;).@o]GBQ9hg?>/MGDm9d^[38@?(ma[mF
%+)oq^YqYj]:3^WroH-=/6gK:?VS^qupUUki'spIV`YOO\"3UYobrHNk"s"!89B4,Q_S<e(r![u2ZHKbTGgZe/lTN1b4bK`#;>^g@
%1fOW4.FogIRR_+R"IS,m[B'6#Ks[dUo"sIaB8lYm]Uhb!_tjO%`fl#Kmk^\#&XlIp#aDk3?U"5Y^\C9$\09rM,FY)`ChUrVI/-5b
%B_t87(n:4bBOS<\&]tsbEG=Ym.[&jrniq!SBM8A*S''b1D+W.,a#D_X0D"QMD>Et)_`.G.fG3cJ7Y)\gq"R=Jc0i&^'NgDu;***T
%n:'9?d6MTu8mjRsa6/+-0V"nV9[;&$NcPn*CSFK?3EoB,p?`h'VU3Y.N]&75*9V!.ii9J3'O-^RD<PbrZN"8;9ouiHX$(3\H+]n#
%\+(/:8a-gRBoS]n0B<YB0&_*2UEHZ"+>8%2%GWIKkg'cmr0%8EoNc\ID@+%fOj,JoUJub[DBZiG&;a@jJoC)BGt[Y/a(!*fp-JWH
%)elSmhR=VB?Q_T5M!uh^&Df4"n?&^Vg+C0#l[N,j8*pM+F[L`kjHe`M;^&udih5Nf_4r\P4pF\%lfREN,Jg.lKJEZsK#bfj(I/U\
%X-P]i6#YoR2q%&.5$1l6dNcS<J]#>X$,6'\C4%<%L;J5M@jSs@OOAJ>&q!X-bq6_\hF-dS$h1qSAfh&fFdotN!8lY1?4V+S8FZ<'
%<%n'$FL;p7@1jBb":rZ58oG"W"[^q/r$B0hd@Z[W#p*)KB$3\r&)`W/cSLmFq&6m+-,JW^C>Ap-Pi/g9dnumQ]UO'+)eegh_=R8>
%":#_bN#)C[^(0H7#'ET.f^FXTOp'*:Re`TEL\c0EG82_\boO95i1%D0W%*=ArZ\4$'"%riQ*oQ-dtd$S>.+\"_R_qEq'n\`&"6=_
%6CnLf.Y`[L>&MN'Jj:.`eX"'CJOi:"XcTH9Kn'YM@bb98oIq8kD>179>RDu>SAZ_YWhkpi+q3<.1:q?,$6hh(#?<_9QTZiLPa>I^
%3P!SKjY6qE%*O[j*cC8[IA8XV<lC!%H*Rtc:l-AfJ>d5"<3Y^C0iU#eGVS@(!K#H]QrJ:!o4spGk5k+t2_FWT0[ci&=k+m]5<,,*
%>q?)ab2*E7i\>L%+X&"d%O6AYI.WYN6*Yl(QtWJ$0k]c0O>L&=!g4B=#kBB##[GIE(g`R_(6kaL,-)okhcF"][t4`[MZCTjs.oI<
%%`SJITCP,Er,;V]#QMP&s8,%[oAO`ir4i9-kF_eG5BreUV]Ib!_l]=JS@+"Iq9T(hSuXk+*qeuK-m1Y8Ys1>cd.L?Hr;1URT(sJ.
%XY=8MqQ0=WGl>iJToq@1P)>WkcMYS4Ti&q-L(%mXJ&RQ`hgnKj+TIC+@j/\d)]!M*a8U`<HTo3gjVntFs8;B"8+K6JW4";W%A(SS
%KU?'O8/:o.O[iJZ+LKiM2O=<G2'NR!(U3bHi;"l/:'?Z"dW_o@A:hu.ND_]e@;t"NNr/,k`q].".+a@Aee$^>YhgFU4\B2F`5/1!
%1c1GqC]`2.)c6p9(Xrhm!s:j`,9T[gj/YClN<o8Mj$s&rGtk_r"(A*B+M9!Tn)ko`&G_jKiic!7X2#QL"b^[o#YV26_c6GE=+djo
%e\d6K$>EqR\ft[ZTMT'eX+"l\*]l(&Q]i9P]>I?@rKN2-YRgBUZmeoP((hYnM1c"C6:_l+-.[Km+iT@b@Ji>T=DNmdiB\W":fG5?
%ZKY2Bhdb\:@*F;eb[F*DU4Uje-7%em7,Ra3$-)X;6BJD.[(K9NL\Z;'-a+n!fZ01$LCes\)lH,oo&r5.rcOAipXcs/$HXDl4f8Y,
%+9OTf3!5Jq#.6enj"0BBJdg#dZQbj:9b@c-UB%6h""$%Elk&J==.B_#3<a$[_>#mDOPp:M,hYYo:osP@4U"1!6PTY#go8SE,>%Rm
%hA8SREs=0,%>RhuqL*O7"[X^h5NKr2_cBFaFB*I8q^ND!Sr,TFB/srFPc7"96e,@6Q3;mpmdW23AA4-Q)Qph/>,QgT=G5'6i?pib
%M'qli00+c5?P5]k'Cn2T.n6WnnJ[_`K7=B]X#Bk)-\'eBGd1DQ?E(d[>K#KJ5UXq5+0GBth1j&93_GJ(*lWrgIt[a\5s[1FP9lg<
%MH[t&I)qY=BM0uT;9ad!GTGSn@'*Zgp++$8_;dqT2<1(b@D:?jSmm(2H/nPEq+-]9=StbN$DQ1p;d%$H!<>K;.QLj$D=M+eI"##d
%cPhg/BIVlCJ&n7?[It;!7l&Xk#FDhkFU_=+3p@OJ+?C$EbkcdgVq(_i1K9[.kHE,Fg\`2nQZIbK`B>Ak_7\Hm"Uo:"ZLMce4RmBM
%a0uHrODM@`Q#*G7))4Roh`jrR4&I0;q$:j6Q<Z>6Cl%pVCpa*r"I<8Ob`?qgVs$rK.")W.K?#"f#m`+JA-jjRppn'=h`c9U]=N`'
%m"R+g^+cAa:=np3L0?b+9rLblT2B<kdtdF%*&RjR+k1ul1RLaWV-&&GRe]\.Yc.bAES.FLjs&^8'0m"gojsRbNqMuXCIWrN0MT!L
%JQK(EGuD!IN'l.dmQ&YV#DDg\Gog;]6C`d[YY3\#(-I&a^^3YLD_0#$8u.sJIf@rQTU$%tm.H@5BWeAWBd[CjLhnBQVGLIER67Q.
%'+kC'/n!*B8WPc[gcV?3I$)_?6I\q4FX-^&Q4GNF3@C8Xmfu76%/l]RR2.YVipsK80AmGuBN4sT4G1qjRD_%C_DCKq]s*ZXk`Ms:
%M[/8\OKt=H):*+bfe_pq[$68N_#>='E`X]Ef>=b1htnS&&AErP'[b^r8KlBdlsVFJ`jO6keb'C*@ie5:9.W7AhfVWsN$Q4K4iA6n
%PR^7g(JnbE0oXb5eU?OHQUV"b_Kbpkir0Q_U#\b>W!.5[QUX8jSQU&J'GZoUbP4sa.WWk;#tS3,Blp]Y:at>uI-Q)D77ZfI.;D`b
%eZDa!,icg?.4T@ec*aBGgk\sf)j3eoAAtrJPle.\]tRGQpgVXCjJWb7KU#2j8l;99NVQI$n1DgmJV6?()"4jSPl_<n:XH4CTN8V!
%X\^Js8fEEK5rq?So9&3/WM':?b(u8hQBfeV;C^m&>4\Ri<9LM,V1M5UQW!??XAmuBPR@2^Re_`'$4mojJ4lk,h=itjL*O/r/5k`!
%\kj.7J*RgDjMukO+$q#Lad5cm60L_LFc*NDTiIcT445(.<l'4S1SIg1aS^=W<Ib^>FX1Z9eKp6:<`*."o@>BV$1JcQXTH7n\s,^e
%?ke.AK2=)nKta*P6*.;;hr&I,kAh_LX"hc.T5mT=UK:FXJ_bW@FYfJ]=MQR@d5D[Hpak0g0?!uu#Gf@m@KBhKC$AMHJ4LS=M?U5l
%g8.oUl%!tEMT%lA@W>nO=DVe((-jYKGq0XqRe^0$(6o?+g8.qO0[5b5blYW7l]TlD>OLgrCpA9tRZCd+,D$[58$D^1FLPRr:=IT@
%Y\ANe9<[8FWThh]^h?*a#e^;@G*[15'f[&J19C*TE1&W]9<S=%_Ld(*$65>b`hcaeE9B#aH3LN`4,ie=1esDa?&HU\=L5L\W>9^j
%m*nP5@$?=oCDN;I$q&SsE(Hr)DOl=f+l8)FAXpT'LK\ucV-)[*TL?Z!=FaP^gb6VJ/<)c(.i(*9:N%o*!n^3,;Cj`lh291rN'jlF
%7L!36$cF*nEp9o[0C7+2WnUeYN,@)H&J3-;]i9pTR)#J#+KB#&q,/dU8L0d/W"pJ.@6>@L6&oDXDoOVBZL%<a;k:U^C/Ll1Ci7c)
%]dJ]*N`:otK:R[1JSl/R$p<)md#DLZ<miSXZ'Lmq1Ou)Z5Ap`uIsA`kfj+@5kSB.h,0NWgJ4G'qId%X;g09)nC2j9J=Tih<]o8p-
%s+4O6`PFmG!+J3>"hRPm+`j7DS!I`a<rdM>*)\?AUP9Vp@aS;sU0NQZ=)ZjqFCQ?gp(F%'lMFK?;hu(EakiIT[D2%Y/1S"@MtPLL
%WXD39e`%]A\(K?@I%[joqTmfj>hk^2$Qs069=_!"4W85"ie+(=S^Gk$HG?Y(Il/3cH+hf6)0.AF"K-$oF_MY7W"m@T>uWa"5M?:d
%DRSOIm/f"<Q<1.mi5?/0W0@\0Z2$/OEcD2T>\rc@n%S@e9=\^fpto+)>#Tp[UKjIM`j!9Sap%WO"MYK/K)IASm7XuT!(F:j+LQdF
%0Aa:Z#@_uUlQPFACu#/P;8V3'\cj=*;HTT2G;^4t?C,PL,M"Ga8@et2oX&o.(-n0k)PLBBXM4?t\%nffV-0HY8"8h@=gXn-dRUW/
%B+MK\[q:3;n%$(fMoH)GmF!PiDS3QhAq@Z?Z`KL*JR,7]>ae*^@D)rkJcQDHV-"9Yohm>se9*2U0>raeNCgB?>XCCHOCA6"U(hPq
%('nPd5,M4/0_#m84*:`q8lYZkp,nJCd;PW]U2`XSQY(fQRPan7ZT(StRK`QQ<&6mU(>K]Jgs@TC@fF*g//kk)l_RaW$VRnT?((ro
%pq65+:io;-dOWu/`<J![("i0!qEa<[r'"K4Rsrr$05DW@gBa_]m^&ba6_@R??YTbQC>(TYC'C("4<n3J"l`.c/TjrA&4D.SS@;\l
%_5tY0>(Pn$]'jmmS\9A?XnZ935CM#g+PGKl[Gi<!XgkW4.lOid$6\GR<rhGB!es_VCpfB&8]0JP2.'Mj!bZ8Z/h&I(D.EK2W&-:h
%W>.Z>4#!I2HtBckXZ0tXW"mslQWCq4@dBPk$?0+:+@<&@/Gr^*V4tN1j\[KmCOM2/;LqbEm>-j%JQ("n]T`b"m7Q]@;uk+-Whi[F
%l`GJ[.rN9t`=5D<^l/+3knKKs>$,$%"XYkNOHk](XS6U\JK;%fHk7<Sr&h0\TEBr:6*5`9??s8l$?3"Ok+u'7=7JFW"aaj@n^8m(
%T9\$)<<V(49#\c)6`9]K"(--WoPYU%60;MTqJ`-L<W41AC^;SG/-E2*fG=/M;ga$=pi5BgO*X#Je6%;n1\0LQ2CXs?4g&<WmcZP4
%_D"qe4o=^k3cK>K8+da3j8.EMVRJe=$6+itKeOEBj+L:8SN?Z(X7.?W'WX%`-d8A4C^b2L;<7`b]>f.aIY+_jm#aM?O)"`C_&-TM
%A.C-Hm":("4LUe?NLWhM-'T`s,/YdbJfg(SE\]:q@Nds8FHI6YU>,7NW8]PIa[-c*hu(>r^H>Jag#GS=9)j8`eDHV*3OPUZE($@M
%LgB4?*5q1,mZTb5M'iQ0DSp*!2:@"OKApOLd;M?n=j&l($b'hZGG_T16bNQ<\EAibguf;VpJV?VT4T>;:B2i_E@n8RKQ0]'p8$WD
%!Q+V'mNNk3?AJ]+?W`*$LMpAQCDKq2n&Z+OT$_$f.qk&:US2.@0-:6'm<1NPM:e62,Z&YFgiRJq7n]aF0U@el>$`P[PPJaQee0K)
%DV+u?'rN@FU0TRlla"EJVQ+b=A&Dnbg$IJ=mSroCUrL*[OO=u1qncNboQI*48:=\DQGpJ87\?3fb`[,j?.`t-iS]fbB!%A&Ea9a;
%Wnj)e8/-c#)%,Sj,)+-(#NN2T^H7@0_A0[MFnQ?UUb-[$S+UVq5nC9ar=fm(r$#__Lr/HQI1sa?OrP@X$"Rjn#+K&q'[Fb#FB4Cu
%>[lYXK78CPc#+h/V?HO%9=E\5#K$[MPLqC<3.D6%XqUO5dK1ebT9-#;oPsC\FbCBAg:)oH-n[eXiQqbo5eB,rCXV>u=NqO2<"*B<
%^80UB[4TXDj$e(VHRr(ZhTflJLh,o]W+?,IClI?aOmpi*#81BL*h.a^&#'_Q#*s[f`-%bB237Wj/Oh:&FVe<Ef`3f>p%[*NnTHW8
%4,Bc5-`Lf<2*9l&E)W2mdi&?<+O$S1ED80*<r8N=INF0Im+P?i0Ta+LRt\p44p+Gt%JLdp=*Bqm,_'"Z%Bq10LBU._'9U<o&$$7u
%%P9$28'3q@7K!Jn!j#V%o&@I)<dDj'C+Vi`Y7B5o[Y.bgO5;AX2E>_6q\9V*?'oQJK\K^&OIBW9X=[!u-5<#IAdl<dEms-jgcJjC
%6JaZVFo.kV<a1oGipRi`4O2[lD<Bh=U+$/boCUd5gZs@,M6T8Q)*'XAH;W:OA!?/UrV,YD;\<S$ITgoalNiub_54I]Ckn9F:XJC*
%;'3Za"_Mc'>f`Eo,W$&(R9Ws"mbPe!5B.^l1^Sg>iQ!7W?cYiRO)#>7B5%_q;nlGa&*>3C2hnAt_C^j]BgR,.(T,sWU%A@nG1F4N
%"W'#Yn9d@PLX3H`m$.A'LrW@mlCe,BQqu#HlMS>q*^C[l\?S^8q^GS+d[SV!(Cfp\QlK6=c2N#=T%2adF]hIIB3Fl[e#?Pd9WCt'
%=t,Rc$qSI+9`@"BE]To7$+j6OUJ:%K)7u-oD^XJK7J8$#f'@D\G(k1%'MaAj"2cV]?pLa%Dc'@p+FQ,./%Y1=NmPM76:PZW[!%$F
%NRP\_AP!/E*uJ)=?:Hrpb_P9C0:FtQ&*qci;eD=)Ygr*L<BK)8;41^*fdl.=)dsI1N8#0Yc2,!(+%P+lBf0MPD!FbiU=!@a-=$p/
%Fc>c0Ns"C/e:cBM:s(a'`bkI$Z!S;jn)i4BMl'G))j8^m^YCbK%GR9DXZk'bEJE"a"*:6I8(CX(<R&L<V&Jk2]kB]P[@kHe9/!)?
%km'/e.R\ZJV*L?o#4P$J)`+9a-1);00^sh'<:!nq@;MTZr=YC*!><.b'N'_>0Bfd3hH5D+lX/g@?L)OrcOVQ&`B#]QZ=*+LZa'D'
%o`%+O^69mu$\cYCPaAZKKFNRYgOUp5Cbc:#^/*O5>nY\,k93#Ho[$9TmkYCQaD/[XD,m/uke384qk18dgRLK<QZn7Rb'-8(NMWAl
%pA-&se%VD@hZhgl2WcVc3kF>T?.Amk`@kQ;hDB#]G%5$eX8&21PMEo]qm2d7'DrfXa!1KNlYcoLc2HDpm^Z+.IX97%Yj;$"r(uO6
%)hStj09#jBF*#cj>&#FA^>ug[__*!g+f8J$>M70BkX8PrrR!$.oG[G6iC+k_pB!)b1PCi0p>*Fo-L>O'`gGc/2jp3lns7$4M%Cg?
%TVmc%O<fGog[`e(5jPe'lS<6Nd_,K'b<AdCiME-Y4Zs8_/$V^gi??MHj>pjVBc4.l$'aF?KZ1+G=]JWSfdr1O!-K.H9[\ica`q<;
%Fh_`h.lhSQY<una5H*4e`*O6r+1uD=.*p=ng7'?Xf2V(r*Vh)q&l$$%5KE#3m(r['B,Rp2ZZ5h^A3I9efgIipA/Lc<ENG]T?YF?F
%b+9h4-`Q"6bmD]3YgBLfX&`P]NSVY8lOhbcgNc/L;<0BCZ[MDhH"0sQH4V-Va&dM$,g7N8N'\!g@=Tqt&Hmm=BMqs@CM_u6,)bqb
%[iX_qYmD[=9BT\e.G/+tL"'m?@,)^8I+WSKd//cdW=X_,ItFQNQL>C"*ThroM*KXB$G:r&<kk/irjn\.Xu5jGBjnT3p"n=ib_W8M
%jVsM&ct"=)Oleo0<jD]\FqT^*q57o-,a2u7HtmeNQceL=%oVdKHrq_J_][uPh2aA0!e<a4dmPYPG;Wrqnt;p^%^6uG`F-?c\pd`N
%!/3[0OmS@?#MnoM[#0sK,5QT=22<(r0;LMjbW!Po)8<(2BSYRrJ$())J1?TjN+1n2>S^5]F\OTr&O7:`*(1m8b8U+RE,/UD.QIkS
%h3S>*.9aq+O_U<m5oi4*GH`>ES3eF_bE`e-V]nuYGXT'42SH5jGrq9c;/E&IhE@1]Rd->]pTe',<9^r?NG"qO:=9q3;Rle2P@A"]
%)._6$_Z83gQjOeKeWrW+,D&gNoW1F@ckUM_?AM4s]qCGcj'b`Z'[Y=@m[+]R'][Lc8+f\o^nb"l&/:R#QdUCm]M]2aO^'b6791Ts
%G!7*_QAH_=:IclsCBT2YC=6e"lXCkVS!P$%%>ioTWb'A]8UtB%UjWbj3'0aT7?f[49d^=24oG;1AR)Oc@Y9Ajfk5*6(H*+X[bMUa
%6r\EE+HX\4Uf!FACJ*.-.2dMhN?_![:%(s/*Y_*^%ah[qlB-pb;ZKE&g[qf0Mmu;-5>N[:JcO./9:6.L=s/h/65`G%0jq]qM`]fY
%Nb'Hs_*efe#Cpp*BGh%UFdX&rD#i#X4Yb?EkHPVe[+IO!A[][.TJ$k5/.VN!?:[s*^kFpLQABA;,E-F7rL&\Ei`XhHQ5C'@;$&b'
%d>o1Rd)1[<1-NE`"L,p'ZTHZR=Guje$u>&P\*Eo#13!/Wf]dgh9IlTGCD=%MdVTMk\T#]8HJB)5lq8,q@!S,9%Cm!&kOI1A7(,P\
%aq=>.bD>E7*W`U3.Vrf\riYRfm1^eup$eEVlSI`Wb^b'Qkmg3e5M(Kl=^b'h65QHDei[Gb:V<JBdFW)"%:sa^+osd,^;JX,T?H6h
%X0X4.-=m2]D!&t=>WMR=T8n=SXUmY!Vb6//fh:"GSNSu[9:*0hCZ&K&'&fs"p[)8c.mH!H7JjtkrVODBq-]!FjIHH&B,g?=j8mpW
%hBYE1c-29t_J]pZ4s=tjb;p=tAZnh0?a^^0Wd;4iSsh1B\e#3JJg-/IO1).+BbJ8AMpLan)pgk\_QBFO[37Dfa*[/@>Z(Nq3;(5\
%#:?g`4\RE4_FYQuN`]LSTB<M_WlR>2:\^=T'\#m5&Cc:aR1D,bVqmV?&pA)R%$mU&C'U8eYKhT56W@FH*]CMs'"2^#DQr\/8q[3&
%)s*:`(G*&^TtX<@W'n#V:^o^.I*OfbS4iA\$U&;T"JdN>-V'@D/ul(YrD\\i$;`P*X:U(OQ5<kjDLPDbDgH7M%jm/=3ms.*gC)+J
%HWUUkrda:U(Y.V_+)tcb24\^7?-5HF6&V![bXn@LOrCg$q%\[%F&@P;pQ9GjoQ4kq1lbI!cVsocD.-d/fGo2L5&?,mVD#6^YNP\N
%F*n_'#LVP](sJ8uZcOs69#1HN7'jL9*ctgYf:gnLhnXGufg*V:2jS^(o\:BjNYcg$k4dDR+5a&$9s6oJ'nZ7-MH)2BKYu,V/_D)f
%JT4=''fcLI00j>J=M`<bKEa#n6.!-m*AGl+/t()s%VZaprV<%]\mN)^'i^;?\4d*]UiA1G0N_Q?Kt(LB$X5;7$ZZ.fl_Ff+r9!VG
%!eFWt77,l'f.8<Io9/#M["usF^9B.p.Yr]CDh?np6&XYJbk(-ChESd1%tP9iYu3!C,_p$:6(\Y5=tU.J>nY66(54e%J1Yt--kMhR
%op1\B@7oNtfoTL;ee'dnD/!KH!GAK1Kb-L^6m<Zq'dD&u`/<XJ+puWS&#G9SM&"MpL-1ng5EKSjZHea.GFhfA0MPV*LH1_(<r#GN
%@msc+=S7YaK`PNt6EbCapnD:b'>ZUfU:KY,S/t3#NKfH@iesTCFc`DpZbfl3[9mY\Z<bU6DX59LVIE)&>`6`!YG[,M^[WZ3mq+J*
%F*(;5\Tlk,oc+fGa3C1kOVq*fSMPu0a[=[]?*ebPh`"$8:C#N`=4dk?7n!G'76PsK@?`IrqE#Q3]S.p[IIqfCA=9<aQJYIu27LZn
%O0<(O8==k-k_uIROl`kn[k1I]@J'OgT(rM_)bXq&WAdrk:g[E"FGmf&BC-/^0c]ETq96oZI42o$l^FAZMY#@23+G5"XK[ZMf@]]m
%qCuec#W\@$hN]?^g%W2W[t8/j,K.r7_@*3Ai9`'p6X,Pu?)gt+'t8cM=KkqiF>%H`N+rcWo<_pZ6Zbs*l117:+Jms8a1r3nCqGX8
%>Zsuq44NRPH>`=$KISP]<"9og@M`NmJ^>cp>J-#C,?YLSNsi$64[F"\5+-8jc830pX#Q*Y4c<pfXHUVkf;pnoM).YM%3@5/GC&%C
%KZO^[\'mDJ[2JWC3<SD/5dc#LR!CtqAO@YoicS/el\3]Z4(;H&ZEs^2i>cqrncuKM<FpC8rHXDVHlTAT("rstON@sDOAJSh0fN^a
%m]daEoT9<Ok"^ii@1ha3R7&+l1dN(WR*s\ep_9L!2sl1=\;2+"r<%ak;uGfcL4m>^)KP8[J.7?-*?ckfAG]%&VGSYj5E;]6C^9&L
%,X1uRQ"C7(5Kg7sO6FK(Z:,:0mqPYi$'9co.k1FNW"HiRU<,bURNhH\!@h5(k5hA]@nk^P)IK!maV3<LDT_IhFiq#/rE-T1Kq^?J
%(0n4KUM'?F-?+>JZ7EH9aR=JhNW&[e#MbgO\fH<EB$%Ai9O!\p@;\b;1S$^k*BAUUdC,EeDs311*f]>DF?RR$E39r#;i`LV?=P>\
%!2H`SKU_WKX,@V<Sc(rR:EB:%DeG^^&K*PL'h!9iXBt%/J[([n&`(/mqCR3#FId\X2McXI%DX6hdklb,op4*!&k7SS=Hnu:Zpn8j
%^4gSO&I;]RiX2#F&Xmn1Q*EP<m,-Ep8L]H(25bP1g_^dA?`MheCASh6OYe@X-(E#$Wf#?SfgR6?99SE&ONp4ZOqkXI^.H-Z(lF7:
%<P@]IG$n=L\o`J[XrWkWr=G_R22h^'J.tE?BEF'sb(tbq_&pd"TtM^''GFu,:t6_o<!C-NR,=@rQ1\403.F-6>5po57H._M:>UkQ
%;\`AKlRDhH+b%<W-]K(kdb/2'I*R*bnHk?k^JErp8ou[b"ir#C^f2g"@$GtDe^.UVgsSKqT$jpi;huu"7S6TV]j_15T=/pHQR[a0
%4E+:/>='0da[2EE>d-taKB?X?a&5+&(oC);KHOu&B-H_W79"S;<K"t*0>CcKEJUI;ibF"l@Z,kp:^jQDnN;u8?<+%/C*#`2j0iL8
%^+!6:Y";[eo3iNI@Tc7lm=heWims&hdJD.3&<0W<rHZO*Kh,WH]uQs^aO=GG&!=\<pb!,G]5C$!]g-*^1b=7.b2XlTOOU:Vq<,P,
%4luG6+:9=0C<dUU]!B:+V@`lL-u=)'e3RL8ItCoa<[R:L($R3i@3,,+#-YoE4Bfs-dcV:!s)InpZci5/emrba7u`+sWt\o/eV3SX
%+QL!R0%8F6\%<7>K"?f2V\j.12eCH(B$D(g?Ja2[jQh+k8qo_lfCH?@\5Zf*"i_bY)J@8fp<O8.pF\T*3GL'iBcfCE%ch"5(1UU1
%c\`3EQ#GeR36cRk.C;I"-r$#]l\Ka4X5/`-LO!Ms2-`r_kC0_N,+WdAL4VqBP`!FX5g9Qg@thL'_G0t,WN+HWF7OaR/t$g(SEQea
%An>N#.7LlW8ZIN?E>oS_jdR<.Ru<k53A3s/AP\MV'/t-H\/q2),RK\VjO\qt8iWtNhJZa?9Ub-*+a3XlJ@^VK^94I/+b6KH:GnL'
%k;BZ#,QrScpDfc_VKobqGj2!NS.(o!rL:rQnljtl9a+M%DJ.Q6//VGpoH`nU<sh$s2JX^dpkL5dp,8e4T+<^=^d-7F&QL7d)J#Jb
%,X:1R/HI3:8?pP$niF9OD0Mb55YQMLp-MQKmXh:Rj;N&-"Y&t_/hB$0DSVI9;)+3`W\Eu="X"&s0Ord5;8nNcGh/n8fkH:Y-:R/f
%`aO\4\fdU)%hX"*o4B^a:k+D7G-l&SKKN8TO,hTQ:&kT[q7\jS6C-:&<;Wlm!,\-+J()YTFhnO9!cq>_mb8:)GVa?!pOBpGq!TjK
%,4*1i3Yio-s1Y`]k/FogV>`QrZ%%4I+8(RXDr\f^nqe`t2h&g@fKVU5n#jN_ML\-K6LA(_I6Os.cD-:4Fif]/;F_GcJ-D;.1nRbE
%,+[G@Vc;W1A\N\+35JG8MW%i's+?$TRX;B)]==_:;ls0l";g^A"^k<F.b;mt[BSH@>k_0?Q0:)*`SN*8W;0p\7D1H[7!Qci*EI"^
%,^3[&)jIRi1\4Jd_/C'i;Q_JHA:D\S2+]sd?c_HC-Ch>Kkg]kV1B$9R]j$;&V07if2+0j4_'m(kptCjmK\trsLUr5SO1CU?J6e5\
%/1ReZXClD=MiY!^mUo_!MAG<:F6e/HXd>fUffmmGe0'=./@Qk;%S4hfMFGLa/sD/n!4$4m\p=J[*@.oHMMDB-ffhW"P-e*KrK8e>
%AZQO+A?+Vs*ZG=9?d4a9c7Dfdojljcd`0bSE9ZigX"nSC$<$?1CR%RH;>mUSF7->l^Y'&#*MmF`*c]f-E0D(n`Y2?oT&@G,GA+G@
%VEahlnSWMB&YE)`ed#-ER]M7?S5Y53@ag]'P7S7o7R9(Il"r=aH0=""RcLftMbUNW=hc&1)h6Q_K2TCY<i(-X-/=A];_+RPfC"QC
%1Z6`\.X`JC=RB$,=JGVCDmCNsPigFlD0Pg>_,4]:H'")6KWst%jp.pZkg-lEAro;Sj8G2\RK?Vubu?8.Z_U*]WY4$.<P_=nh$3C8
%@cQp";\."6pCCg/[5Qd$1\\UA!k[jSc&;*JAfI*E;5L2g$tZQ*7`n3n"-g1]pV7lD@lRttYYfngmL/F:Qen""\pB8"8p/+8U,9QC
%rH_u$N8ksPm*?42it[!h8#9<p^LHR&.jm:>N&C=lL\KV3jAH#c`IB]Gf+oKcdpgXM9f_;Nh%8Yf*6tHs\!Vg=S%7`mg%J=!T<^`u
%(XA6%#ZH490$Lc*]"rbjm4uam,U]iE&PQOeC*;7f>;4M8fiCKG^kUk(egJdaOPe8mXXX0'nWYMPj%Zo?,:@Ze/(9j'Ch1i6,>mO3
%=7Wn?89Sg_OQ0!E0pYJkRtbilR`q2$XF(\_kD8#Bb]Qi;9$<dkhA>8;Z@$*IT"[tMH=9'L3^S$J3V"ug?$.KoqoIh6^EsIGV2M53
%ka&N-ph0;H,EH"AC#$^1"G,HG<J`V$:;El6KT#Tf&g\FGf6LS,iYAo)[/L]T:k/Nh^ZR&q/O7aj?f]'1Lbn,<eJ+h4=1+1L.B;RZ
%RQWnNEGdETr'Uc_Z;'j`,qL_%@$7]MiM9q,)Q.WGe=g#B#-G4t(3<4uc+f=r.;Zq;5!&%hcM7:VfP$@;Z^eis!3Lr.TQ2MF\=V-D
%6tcI9o9JtC:#QG(nl6SNDAtW<R^64o\3E#!:CST`M"^M:0';n,'N'[j*Z(buDapds*kJ8kDM+ZnF"NI,J$[:/d(6b.'BJhXXR4+c
%C3t1QC*^)HbQh.U>jirmN1=0_iA'/Lquj4.P:Rba/W=HE,]'b9rR%'`9#>!.8)nuqU7@3:MDk@Gh'<,@SBWuDVXjJ@ab^(p0/8;X
%"E^A0mqf7u?.HHj3ko\oF544AMspk-+!ig6<C$#.C'eYf,+#j/h9N)WJd.Gm97PgFYRrhOZgPT=koM'EcKJuU_ffC5\+E$2l.[_K
%l)9,8;>CDk\W5E**,O[O*hullH)eFHZ/1_Y^Q7JJp?h?X)O<F*/UGQ$;Z<`nARDq6MjE8,fZ#L6"a94c*EN+31Nn[,hqiQ)LR4rn
%P]XhB]eS-0@)@@%U09p<$WclYn)>`DZFqg#dm8S=rL@\m?Uef#,-k1.`j%N]YL_EuT$O9+kPB&qALF;NNc(Ps?4ZScQ[[$1(Zk2"
%Mc134aIdZfJKbI=OIYYm@8mMRlq=i+`q1t:81Q;eft.??M]081k`6$u3gUJHRWQ)Z1D!U`U\h%GJ@@e=!g<D@f/,9O7e,`p]>XI_
%(OQ1#%ETZ^(\hQMrg;/j]$eIpON`ha<m\i\)DtXK@.\hR[G$0.VZ#io1Q\eqWks?%TTE-G_=#&1aR9MZ;6QQ>nTj?c@HQ$_U>4?A
%l92)7T$nn_hUnSG4;4-c"Ygh3@8ArmChlF9M"!ugQ)c6"GTq5_ST!AOf4SN`eD:]rXl@`"&CK0>ZHI;sfq3BB`4\7a*_cRTDh-`B
%@E)]J0s)p`R<FuTr,^?7$H[L'M[BN)5>4eO4jWN_in)0.1tTV`b^"7m/sB:PQ+FtEQ>B^:q/@G^g,cQ9hVK!Tg\\^-?b"sCnDVPR
%/'ZpA;FN$R2ZsUPi9*1f\'c$:^E[<V*$((RW.2agO[o`UqR2BSH(;-(@K*8khnG<>>eKOEnbl`0f=ns62fX.>7F7YKhKJGd;*R`%
%jVPZr=Rc3=;elK'q#./M,!Z!S<5jq>IfD^hDCkS]#B@5Q_s[hH<UJrCUIDHI@-&jHOBr?FChCDRl;?q()#aNQlg)OZ5F@q."iDEf
%F`\/3ruc&JG]EZ/?0,dAr"#O1%\)PjK_RNK/Qb1jGu]LYO)aM%AGI0(/H:=?o'r/&l&"N^kG<YKQB+VkJgZkFDaVXN_t*X%rQXo<
%:,UiYIl-8J*c<$GE:`u<FsGf"&Ga<85m+[+(XE?ZAEurra\?j=q;2I!oDHqL\B<1Wq$.;!01&;Jdg);?d`,_lUWG<rR6E$;3YYBf
%r;Q!>qP-VY]:M>VgUSr>NtmZO,e-$>^><+EFN#YEY($Pioa_gC?SC[\fB:KA2qQ*GdM("8i;1@%`1*;.qDp7PWP5OZQ`/)=Z61Hj
%5?PUH]pM!Mgu=>ihqf,)rGR&WQ0Ah4:i=8hfIbYa"NIX;Z!5`Vp:e0<#4*_toi$UT4n'2b^^6#!5@[9^!EBeA)*:tUZ_=)5IXnS`
%fh(?k@cph=f^IJkc!S6Oe5V7-oC(HVm#5n3gh?)Dih,Za^K>g0[(Cu"!bqZ&N>8kp"u;Cm/;A/;qtI>10iZ(5h5ZB)O!t8u'Wf$^
%4u5f@?_/G5VIh@)o2Jf<R]Z^rVTCl%,'Ad,(tVb66DP)CEctM6`4W't*s?lV.]Ii+%37h/-EBQ$E3J/?i5Chu/hsC=-66-E_T]n=
%+Y*T.YKqjbql8r0>u*196>p<V%e)FG_NP_1J2Ik.S\:7pHc:ran%6%hm:;BjDT/GEa=)dAD0RAHWKf/a_Hb&3POO?uQ>E4knRb2u
%c3%O0;,n;gi'_sRH6Ni;MAhkj:X]>bZLhX5AYu\V[>I+i/<nIpX7i[O!pA;HB\:OXeUGRoWHch=VEQ<7fnJn"WB!J!EYbW/gPW^4
%Uo[ogPcNIK/D)<%CmhXcap#PF_f_AI;.-]`HAg>)P)ti547_)`m,t_L;p=5N30a%u4ug<5Z"V_slO;e06iVO`)u7]G&?XuRq3&L2
%9Q<:<7rb3=&&3Rd:lL4E-pVZFh5%EDZ!QCZ@O4&=\BckZI4Q't2N\k`b5DnBl'e_uCcX?ao""B$lZN2=Kp7Y@i]o15eXRD/-r_<c
%mY/"tK@5`*VG$DQ%WiBIEH=\Y7<1&&:6-N`gX*TmW4!'uY$EQZYKQ7O\4jfkSD(=$EnP]ojY+H%,L_?F63G-WVPqSa\#h`>?q,q]
%g_++bE)`)G0Ga7g#ouL[+j:mh/TKNfeV""?W>]5D^D;8`"G&j\I0#ge>aW`tHBCSqf!",;2-Z%\GJlM$jNnKp171"\ZpVC2b/8cL
%E=:%;C>!89ccfiMJ%p_d&7.T0>X!,QBIVtoPGUqO7bG#q_ZF?"CqV7O7a1oirnJ/;\`l62cbMklR^QK`HV<37p\uUN.B0E%h](m=
%B)6Y%fRLmP:Qi#I&/a^&1ZmTio>C$'&fVI$&t^gl3qenKXZYCWiqHN-lXbbO'BqpkZP+&Gbn.anR*4BE+K&2b@N,aPIYp=A(Rd\)
%l!MTm6lO"\Nkgg1G#PAdZNB,_=_m(-r)O4cDOC<hq(,6:(![CV3s@;ok-lQ">Lk4q3VV*GL'i`3b!Q1Bn[):kZ>;/9p=*l&/S]SV
%F6;[gD60\[\DB'UdOb.;*uippllN?t&Q]7s)XcRT)Vm_KBm4;K:Nfi>bsi)X:a0Am81DhM/hB$E0On^1!uXQ%+a0Z&R8@`c6-ZK<
%%"JSH]:)9M<FsI*RmJ#:,qD\m*WT#>"2Y*a5b\QPT'C2"N9R6*(mb\b1?AleEGM)Lk/-V4'2u]8S0RsB6(PZfEL\BOM#NhU8iZ3,
%k1*`-*M4jN70q1r#k:(rACdSEP=Ad(_3JtC>\A4)g4RD(Zg4;FWa;hHkh+,7j6(IDGqe]QPNpE7+K3`2M6lVKEF1DKhNK/?rhC`N
%@VcFoaF2bb&1m(<@g=Y<k$1%TRf-TL27E^Ds1*KPBEa`IeWR81LQa8G.7VFIlGg6q3gW3T;?:_fe7e.j^J>.7Gm[3)aqfAgZHnWe
%Y$k&P=sQMCOPlX`'2<^)O>)nEG9O'dnG>EdL-@%BS"rK.$prmUjf*rC[$cXt-)\=()_qEcqpdk,R$SqgSEuKF1l<Ra\E1hgRT(#W
%!q8HdQ)Z?XAFnGN^;lQ*oJ1-HgWd5G=2EI\[<.uJ/Q2rJLK0iq#%],6,k#3Z2oYn3H;VuMge59(E"I$S'eG?U'/2<%.ZS)UAM[s6
%Op>q%'?F0U@Dl4[N"'$f,(OgXQkP&98/orK17[Sk"Y(C(>qa&a/nT&XJhV'cT<[H\ak>dX3UuM?<S#\Ij*u(pW-7&%N2>][R?R'F
%q$_82pB>jX9h1Mp;oH4LlgaG'<HWt)V@XpSH.#f`#?a;fc9BtIE)he@"kc:E:jPn8`ER(2r/1S5Q-?e1C@Ws@./1^ciP"LnY7nCi
%ZqR(3_@.%.g>cUC$hg_[>#,!81k&M3"J-hM.?Xt:&CtL)OJ;6@hu@t19OH;=M?oQC++DKL3dl9t[E.Hq0j"Y/mXC%QWVLN[8KaIM
%7;t8&5`fYm/B0H1]Pd;@_+HBO_]f'Ve5K*/8rkU-b/iIEC2?n?>=D*dkt&r"HT^o)F=NWQTM]kNc0#T+!jG#B9i(F45QX$(%E7\8
%.*DAS$W93L65-50REb(PpGtb!D"=<=Ae?5XqPoYR.XK?sU"!8B$SgVbfEj^k,3L45Mj9jtZW;XRlqM_6T\6broXu>@HqtbiDC"T+
%#HLHi+C\*iBI*YmlDlt(BGf4eFj8kh5j#oT`M^EgR!;n_L><=3GmkYO&S6\[dLg6Cc,ZE:b!pXP5tjW,)=OKeb2B\)9F&LVGE&B2
%9I.Pa2dTrh(88^$eM:(o^23Vs`.jtS*1M3Q180LR'=e3WU\"V"<55X\YJqX\kD/ff)-tUYq2V67*:.>rojM[mO3l9gfX&,TJ&./:
%oBfWJ,`&2,kFU);+<[lIpO6,_W`(WZ=Aal!fc6_<Kh^Yb+Hfh]bt`nid=K!2<Y_h6g*-UUXN0_Ve^N:5S/BXcLhD`c#7l:0W68rU
%_Q""_Y7KF@=h&C.o?JDVZd3^-rH2K"V>'E8)Gh@D5=\"-=6J"c83s=EGL3H7U(_CP;T;bh6a<LY6U]gE(jKs.Yp.rYr0&$C6]J!M
%S_P+7&NO&_r'8N^/KS@!`hOZNjg,*&UENYQC"s&)F`-eJ&CCP_n]OrEd:YG.LIje59<i/#6+i=V&.]N`,2\W=83s=0j*N52eY]gN
%+BJ6F3XR(FX=W22Tcg)kFnVl3+C^&Yd$5gZ&aLq'G8*HP(m\[\$6o2F=[SI+Ln1u))u:]aA6S2>k?pdT*X*.hKTeiY:_8bCPg$M2
%+<p]X9cYE,Lc5qRik[rI`1+'/.VX_*?2U(H>=6?1L(tP>LnNdG]gitb^@tcr`N166TpESd6UZ.hgufu0Tf78brL[:Zj-&::[mcuW
%Td!r-T-sSYX,*F$jpO^0@U3a<H;m:S^n,O;=[b`NCoQir+p(o]VPGHfV(-#bN^t@D,e&Mg#jcgf\VaXXlJrs+&O"Sh1E@Ku?T>63
%k:/$t8a9Yo7@/0/TDE]rLfebtL.=`ZqoILb:_LTRP.+Rd,085SP)abfTd"A&1dh>MgFto.O`XtC,?.&V/u37XSiS'-r@B,?&b0_$
%NK0/-B%/t=>%2VobbHKDTM(J0=sA.'pb5<5X=M6[ckE\%U8Xh8eg4,Nd1dNd1lI>je.`F61rUDtVMI0RbE:3eWs]<lRNcEbfnq+N
%Z%b:]MBY6f<aA'Sj(GA$eC!`h:gqV5&.V`*qcd%?iL;Jt*OJ`!rLtHM\.qH&Fe,m9'Yu#kD_W\ui$0D=L8'M%Zf.gX.H92`W*<qm
%heplS\Kk&YCo[q<nR/%>,#K[<>1++SZfuC&YpHfDhO7osC(,Mm$p&iqo,gGT4I/mrrDZY-M5)N*6`k3#Tdc^'XlW^NM.lRo%m9MQ
%oVZ!4Cr1L-gHdEb-_b7XY34.F%s%<\)j?l7::K%[<VLm=;Klo6R++>j9k9=Q0O%@JCdl$RDD`$^L\heJ3:EU0=GNo\P%(>Ep<]de
%I=:BPbJZn.&Y%i_LR-S+L&:$]M(P^?h,+g>UGag8Rb4,[G1=I"R-Ic2XX5sHkMLUFNCcu`8WB^1VV"f%V+4I#Xt4`Q`Q"E`I=QE)
%/m#^t'4-aEcr9@]E&>OITRL[6ClKD^Cq@eHMu"JhnO>iD4BQ9SGZ4*AWJVe9GQ(GSdBQl3(8339[^*43Z0n$<dR-rLk-%9R7([-#
%s$?tOGq>:_W9(*VRI@&FH7Olt&O3b!aM"nW,";%gB5!1[G5[?!Lp#sbekq`6s80f<$;tSU2*_,$EU9;>hPULgN?4AO?oagkhY7b-
%[$Ye#]4:>O">XP2MH%7':%8MO>\X>-LJ9_O@Rfh%(:HW'2`rD4K3O0^-%L\WJ>kL/I^!FVG\f;88S4RC'Qmd9jDt(-l*It_mb>\0
%h59f+0Z_F.osTJsj/;V02_dYr;7a!7Z536llsIZ*2Vn8Zp5!P@!P'u19%m)j8*9aZM[%<46#+rOdL0f.o8Tt2n*g9]f]MEk8[@@Q
%D>Ep`/MLm-Ar%u*27];8F5K+HP+hLjh*cD(Wj)5Qm]3#q,."8Ye%0V'n!ai'/gK6GPZ<q8jD4*go?Sj7%6H[(N%,&[7iEm1^8_U%
%-\_<6&MYQ'mdG@g7ol#]XO4+.;H1+o_`"AA#Adj0X9bO$'4:]o`e.$V"O=&%X7`G"*bP3c^RpIK#iJr:^(8bNrY"PULh6Ti/_/3H
%.T)&*XOYa+*FaU@;3jl'+8shW\i=L_ijfXWZNF4(C(cXN]"7T#ccTN/WufsS9&#k>&#E^k.8J.-Xd5f8<TEDrbSR>J8SO$:$'Tn@
%EWiFT.U?6P;pM![Y9&f->>,EM-aT(LXgNALXuWZuQ#E2FA-?\2j)AgN[sr#<^$b'kHoQjD(Ob_I^pO&!DZ>+:_-4%G481ND8a@5^
%VcrclbdOKcH>=ND]*KjX>'?j/BYN8ZUB,Bl?`p7IVR?@$JaU7*7eWk%'DK1[Y[dXsYUoUKJ&`H<`%RrVg"#p6WEL[/92\f>_MWO8
%*r5t\N0esk1;V;h\^A->l()Ac[DJe/C*@=P9(?e/^Y[U:;dmAk=CQc/Gb;8g2N$dkV7qGuf]uTaEkZujd%;E:G(1%PmICaI@@Vaq
%)0@O5WO1S:#BSY#s"qdVQgm%G!*/n5\1R0ekF8T]+WeBLX\D;&";'-<j9alN3H0N7n<k7.ibkishoDpa3Pftm^'h]C_Df_`Fg]X4
%<u;OahNP3qXs_GWLe*8S$LCGOOKo"IO>AN_H5ZVO_]%Ct4!WlObC9&LEQQ=u\anBmfY/H=g4_088htVMX:M1=L*&q5oIGl;#kMTi
%dhV;WaHE0Vo]M53AkU>\5I[9U<b@'`!8/u:el'jSC/&4XXE$(g8BT.+bPsmm9YGbBZ,gP],%jqY9(@7;VF;6l26MZ2_ZDWa\UoF+
%;F0<3DNqRANFVGCo@-mB9./ICQnX-0Zh:f$5"<J&)8>iGZj!:&.LbGeY-AF/'Fsd/Hm+qGHH*Of_VEVgRu.4_%BQY9V,;Y$HA=AH
%\Lu&+5(h\Q&(5!kf!p^EpPAOh(LKJ9)ZH6q\L<_*+*I?$(M7_qFA%n$/+-@fAo$"(XG*+KL<!48`?$p5[P\<'qJpK!Ws;K4=Zg9m
%!ngB,f.'l0Uj<F.k/A3A?,+Cr5t[8IX"V-o7ZoJn=)C!P4D2pe`uM^*m)kJk=aZeSTBi"[IW$'fIH[pa;H0iT>-`eh9-T^,@Nhg;
%61ik#"cC#a+c5\]%O8Cn6+)rnDXNUNVFjHG6LnPGbRH\V;=stKAjQ5B!7)nDl4s#>r0UNi6Fa3?p8h_dA3h?^3d@tLL<_/WN%+pd
%a#tcl8&(AO4tLSYc3`Un.sXpRV+N11dmcE_RO4+N^rUjG=X@W:DI[KD`&HfI9o\M9XC?7eWO<"f;Q(l6[;P;l39*64Ji?_@R)MG1
%V0Mg17mode&(T:sDVO[EFRrqP%R@>;SCu`,^Kq&0)00?.DVpfM_2e@TMp,ct@n2(Fp:`UiW2m?LW<_[rJ"=dAK>JND%[54N-t:m.
%n,Y<Z]0IXb5EW0(;clNR3C@c!@P0Q/C$HR_EtkE;PksL@B1rQ);+a*>9soha\[4:n5)(pq(?_,D<2F4$ejMY_1RTVR%r)fuFKRH^
%1@<_,*^>ds1RL5)EQiUd@A(>qh](6p,fOV2Wq6qoQ6VP^-m=_V1F\I^+2R3>dQ_L@q/k)+/>cEH4lVuG^:BCcFL=6oI"GRFY[Y3J
%=]Q>c0%&N-hd8psc90f_<o$Io%b?NpkLD+2EJih<3p.NLJo%,s=1='.A):"O`jt]9/5*c5i%uA/*7kK#D]]di*FNlTl`$n%2KC3"
%UBmI9(-sXSe2*YM`=o6L/P=q9X5Q0";RUB#?m%#kI['^#$-HQ<?mX)jO5p<)aU\&k*[cq-$[#f#%:u6rql4@F#'W5\<EiO+f(9$e
%RbQn`f/C"?P-T]k2_-.s\kTp]rKA!oNs?Y2pV/YOh1Zf?'LCe2*D9qo0FtA^n8=0SB0K)5)NGRhYHAIZ$4f^coD_oaIb(:-c`)ie
%>=NHZ7IlUP)i?G;pJ]OI,2"*SV5t-hSLTtB^i$7,4hH-&3A0Fo8i/`D+_Q4GQ9V4Y$@P9+j@<gEgR#7ObbpIKS?WO24tl;V!Jg6,
%S@FY%r=g3<h(PeKhme0=W`-npWG?,Y4Rd3g^Y#4,-[XKt6$Dnp`erP"^RXTJ+GT>eh>6d^q\.P&:C/!+?_D2qG3JjWSXJi<5=#4N
%5<jNGFmjH7NT)_M?Zn9cK7SnaHdB[`T-)p62j^X!_bh,,o(R`"qaBQaL&oG?26$KCkPfSa5Zbiuq\XDiZ\bkI8]sqF`#KQpWS3TJ
%rZlasNuc4(I.="#YQ#mkCY5ZQAnCa%4]H"d$U@5G>0Ht>N_[VH4&f\`XmSf7YSVjbKM;a.!CZ-.r2a>d?kZ8c-4gE2r-(*%KM]+#
%*0aNV8@LIu*K)jSFu7R*aY_?#a'h1]nU"'-U-.j;O20F[50#3$HqN#rT43IZFQjcY29)np0'P_T6G)MCT.=gJ_79ebcg8-]!oI<P
%UGSj0"I=>lLD:&f'UtZ,P_TC6qTh*X4PaRa'GiE[)u0<M.".T)ZnBGg@H6Kfr`ear`71hNQI,cfJP<o!pBMd@c[_KimtZ4"d5W&(
%1`&GpaZZ?pJ"+Dpp8T7W4l_Ri\e0C[L)EA+LZY_F@]X$`r&+?bl)rI=1e*.[lhatt1uqhh>'WcU=9'A?l`&3[/c@Gj%4f!UQt1*;
%G15mN(<:<28X8W#gV/)Ip_/dVDg$?/UM$6,EEqkfZ(lYnHf**9@)=\ZVg84/NHO'!^XViJC%G]9(@TMLV&g4<E#58q0\bX/\GrLk
%E,0%f[7/t\-c-QD'=!a?ZbMrh7!92l_Mn/PkSq1JUsrb.A.+hT\WnklqsD_]30jWUQ:0B4#qflhieNk'EiMe$.b/eU9>-&Mo0f6O
%3D]>9J:2Gcc942/UTE2Ibq,lu33o@rfl]ep\^gE6$R:$8h_sh;-MjWh\<TFV@C,q0`p1I-P?":adc,:Y^Xf;bYB,pIg\7k\;"CC<
%_6r>Sc\m3XbBUQ/faUu"^&8X<@d?JJ.?;8Rc<+9s7?bp/,6>=SLj$/M=T('0i2IrMbZJHEZX2[*A9A+F1$P]3A<"_h9I&@F'qZ1K
%!2A2E=s=o*cf<u$h,!.t\7nE]E@JMf<9iab=B2&QF$`.:[3ntNGJEV%l06hGflM']K@SZ"2`ZtO(_BaUZgF9H9f?k]^,nKULp'm$
%DVS?;(DIk;(ZN6A$`iPmlo/'%L65Y(kB1CECQ2iU'F"6A8+_RXg7$dOCtbL_,GZ40>^i$3l4Jk[V.UBCNhN<(hQ;XtMJ2O_EAh6)
%[19a/VKRZjLVW,=o:*Bhr8=_!Q<MNNAFquZ6l7VGC>riSHXGXA(Zc;%0/d"=p!$jPQV?t]qX",(VJM"qlKTq2L]7,.F^PSnKk^Pi
%/^Jo"824T?9,]gnX9ujg`S%6#m[M(:R59Ge;$WWY139m+1=SOP&Zc#C?"SERoaJF8g(#l-<ZBVQ]2Nc@NaBH.kS1RcfKf&5l&mnr
%0-mSF^>!H.7er$^HE:S[c*)TB=lJe:`EAI7kMe;JMj\1G]p`(e>3A2Ge`i'5"%ubl+KKH9Rr'X6I9"J=0eB=[('!,<3i9Z/ggLH:
%Z('sRQ)gm]KklAZ-ao2EUS8!oD9qY4Wp+k%'1>_n^0:nVi:dTc*caPg)!Ej3FPpS&g<45Xkd@_,M<3bTCT"-#cI&QOF:bpnSe3Fd
%:U/-alV/lR.e_1?22Jpm[1`R]gk-CuG,*UtdJfqJg8fRgC@TW0=NV@O3EN;+eU!;@R,Ye,YDrEd.$fBAkF[lFH?3?n3Z`"1SZ5=:
%,to(V+dBsFXC3#AULPc4@9-B\q5liY9L"5.%DA1[WNZr,Wl,s3%>Q*ghs:Kf6DN.2?%ia`U;AgS0YSh2>ZB7sbo&(:#8[#'V49])
%aRk*/%=WtaWAQ4AfMqCSSN6@O]nQ!2(#TT(?L9<*$Yu[Vb;[ftnNdk(nj2JPq5g\8TZ/hj']W;9Jq7'Ga?>KcrERfrAjunZYY(H'
%[6c3]A@jDOF2e\TO_sJ.^KIId>4q21F_@9:oZ1SgDBMa>Z#bm`+=aZb!j;0Q%oR%A7pO3/5U'J8<.IM0Y!>ip#+NWL$os(e:t7K@
%$j5sUY*r!V^cp#73MW!>!+pF-V:(#WdEtbL_-Ie3(2?#fF$18,*8ZA:m3JU+7sYZ.UP4pgC>(Xe!_cdSl:CZ"56RU%>%=jU3,Pit
%PX>T\-<i1G)gKXV5tr*@p_osRkR]pEB]9,7%Jqi=-.5ffhl\@-;YMs..#)DQ%l:q+`)O_T\O&^b,uo(jmHYn0h2HQ,H"sR)).#_C
%'`4Is*@?);6i^p<A&1trL8n$@hYe86\K#*-#13:KF<(4$14%D@kD&sK#"f'=F<FW:@/)(_S.1rbrdaOaA5P?**jW0_^Il&AO)pQ%
%[an@0"F<EnnlpD33Y)%dW#!6/WPlm<n"uJM;%7+[m=sA,2DfU8MU<Gm,K%J2Det`=$3Vrp=)F5lHYE>pAUR%,.i$bM]h_pF.:f<.
%I5t#O*Q8@.X$lUhf&.eU>jeJVR*d`p<+gJU2%^*(aD\It*.E/`=iDC,OO=A9UMbUEiDPi;m]a"l/Idq4:s4lsUm<s$T,b7)2T?S=
%,*S8=?!J",a&jI1Y'+NLOiU'q(fdsoaO>[D&<Y+EG[(C%P4%7i!&f_H>ah!8l;&-QbVbt_XCat>6A^gfTJ5N0bb<nZXMM[TS3So)
%KXi0slCPq</$V1X6EK)%`@I076Dih<([Q0tDel4Dp7]k-O.]0XlZ8V[$^`W$'l-s0>#$hCMgOBb8%Z,<S0:U8I)+q\VOM>"V?K<o
%n>[C^AP>88l>EjW!MZW+R9#t"R9jfck6.N%;BFEf'`1<3WC_mYS9Qd7(ah$XP@Af,m'$1,K%S(h,It9#\$<;ldl_q:CC:\]8hd3q
%SVbi?<F<to9X1@idm@oC'5(JN&=7D^onYQLPq2-^.)I58nY`DA,)SZqJ_;',Q0hh<VEI+f\f3maD2`O@J%IFRf'b'#S<Qmh6YK7,
%*U)[,Q(Wif[Ei#g.mo;AfkH<PWk\S20'6#^1&=?-H-EXZX6-Xf(:e29c%DE%#"`aD;Uj(Fg;J#O>3LPo`dMs/:<\]Se+<?QhIq\n
%QebQM\?F*A.5lpEm-.t9$noPPb^*D\kL"FV4#&\*JadMiPkFuqH^?Epb?4`LDX"npB)V!2lP!*Wr>G4Z5<lgLXr?4<[Xt^qK\ZK*
%)2Z>MT!a)bnQLk-+Qj'r//VbKfPd'YkUcMG>L+ld=nk_nFrrZkjG;EtNN&=CWG5VWdhq*L""(h*MVD-3-cSHB<c+Y0G#&hHg58Y4
%r4FH^s#3/<0)WM6&KA*e6gg!&WQd)/M,XOUIN]I"*:68X0E\5Ea[JpkY_n:_)3aXUD_l^IIKZ9hDD_%5eIjPqp]_omHUFl1Y!H;5
%CdK.B^[=nhDZ9WDL[X%@/g>=7g;\m,+F^<:8$Cr[Y`&A)l9+`h_61&lG1dtBMfQSXmk0d=p=-:FDs7+FI9bgp8*p0%f=0R#KRiU`
%4sC`SZJ96<?BZoZY]lkJ@<fA,ll]qFDi?p**gO&W?Sb&T.kR,4kLKP!ZAUntdWeAE"7&?I-:UL!W@:1L]/>U7U82VF[%RCf[najQ
%nah%he=9MuVZp(-Oc4_Fcq9KVi;63BI:2Z[*@J<3Rhb\n#"#rAjoICRSDmqm:XFu\H)I.p<%tpH?CV<pba*jMI:;9d,P#!MpF]e]
%)'q\^V'!#3^Ge'8Su"IiSR/lL0ou;)_tt9tE6sN;2cet\l]",;(J0+)hqe4uTp_-HCEsiS/O\lcg92a'OX1<Y[5(l3ff"+]Xa$lA
%G&\W.hc7mg(g2gT@o&BSSuFubbe,o@*2>Z3pSQ\&.3JSbn*<flqLeVLX1!ZY<l2Gl)#GbLL`\DdL3tfWhm=%?#tS0:<WF!bMCKRh
%F(_ur:XFnr<[2XK8aNPS`@rT&`Tlt-\Q%a&,@0T$`beC6B)N\m%N_G"=u;8H(c7WZ9`)cXO3+G]j%9c[hF=!2[Sg?26&`*M<e$#0
%4B8,+;-LGgLnuTPD'QopXM"HXp=Xa+6dD<nOV#df+Xc3i":6?CFjt`()6d^B;/;fBA+`+EdZQ^B>U4J]]b*c;?!($m"5foTcOP6_
%G)p3EK8\5g%]m5DZ&:b2>#LTXXF_`Rri`YJ)Uu&qS:6\bmB9,CKW<?,'J@uNQ5TD2K,AMJeTX:ajc<2mX=28>pqk@&h+/?/f!p\g
%R>[8G658[:GC,Sm0<\eIL]**Y.PN69;l.kNP&4_/(5Y,bqM;.Od-0%K0]TF@.WZM"BT@`?1eJ#.:JIf/HrF2uEH<b0'NHM_G$)n-
%E=n7L2,-4jDre/YGH_kWmW8g"ZtE6#pK.O&@>0u'QJ(JcUCtscq7=<.fYUH`,A^$M.9<T!1;/taSO'cNqCWW'qW>(T\RnCZ!7U76
%GfZ]0GK#t/aaM:S6ahK:j)nuSm"dbUWpfnB*?hLqa4^BHFY/it.Wb#JXDQ_I)>b(J`;hbr=WTe:k>(pJ]m%29;IQ58CA>t_BGQa<
%kgp2O"iap<Oi77sn2B.N#DFl"rflq>6bcq=,K,&E7hY^j_qX#gltYs_+^T'3\>146KKUN!Otd=&N;<CRP'A+Ml;hJ3e%&@@d+>;n
%T$':-q\<CG1hn@[\shFZAKnnBInRU/kGa8E-+?kN/N*jnc`Im5mC'F406\42SS5=RSo1@kNW_;lPQfg3\2E*sNPAOH9<mBV`g'qh
%=mt4M(fER_Y1ZcD7#Rds*VWK,/uu.D3pcPtCr0hjLW6U"Pg'!l"rN(/eoT@g($g']:YOVhKMOlMpn]<Xh)BA!gU]Isr/;*T1D)rV
%F+)$9@?$VQ0F%Q>X2[mb[KUlrFIt\8X`).9]&KTDV\lTaA)#G?g18[A7"JZmh<%-eYh4YKg#o&/4[>,EH6^sXYjM]tig/r"g]&4e
%)ES.kc<)E2(=gF_UjE^bO_!*M>i_1mGoXO\,k()AnJ8Qjluo6gd8d>/RN"qY`P6A*HSu,,d.?WA?YW"O@BMT6qd;q(mm@gWI`;k=
%r:[joSP7l*3[Uo;(#-`3B,A:]hP4V7FI`!&:''og]([V)/PKkaWW#Pq6k]NYW5/RH`9p*`N4,tFZEUUn;?BTjdfj:C4X-&Kr+9_)
%$d.("Cei25.51:4ICqT7_&Q"_X*Qjkksf\:$nAh2rK5%=G\EO-Q6CV#:.+hg7Zo!gMnkJo5e7u!oNl9;.s?-ZP5qE5c6L`t7^rmK
%-`gJ8!0V0K<MNgE^guNo%O5ut5ntpN34@Cl#W*`dZtWYjP8@dmVNKZAQ7BS^WW2>$F[Xe^2ge,83id@d.:K"RHi<Qr:64h%I[jYu
%lB(_mgHXS0o9@-ps37tcY[,N2$YmCo88,a;@'p-S<d4J`-H@L2?Yts;\rO)ZlZJD^Y<M^:G[/VdIS*bbdue7:]P[nI3PkW5/JBN5
%:X\*eULN*A#5i>ld_g6rMkV#A7`^U$pphOcgu1Pf<3pr]PmR&"lgfbqlf*S$;"%8UDEl*OWqMGt_j64km!7SRX)[7+Uor0jm?=oW
%Y8d5D5?`-L55A_d>Ki'aq5BD=>L]\BB<6#KnVmGHg3]/,>C%SYlj<AIlq%_1OC[pF*6PL%(g__%aTaRX)U%<bL8lMm-+'>Sp\HL.
%198ule0@`rs5;f#X5of[7KhcB%dVQ2#n*Tt2eX_p'PHMj[e1o'^4ADLO#LQKOG?urUA\k<PC@FP@Hu]R<s3raWGN/40H<DpU\m2#
%aq#aSN2$5h`]hP9nok?*T7m4JP[8RN0:1rciU=[MlBC^ELCt@TP"pLOgURIG^G_fM^DbX+88Z$jg!aFUr9uod^M1OqQf3+Y)rZQV
%Z-N@nr"k?cGJXl$Pb%;N8I:u3_LEl$0i#RrA;X&+r&YOEIpkY<JOl7AKHKS%a,TRqLmV]J8VI-'Mq>?KIa13l&UmE<-pUUXpdsYr
%2O_>q@8VK"8roP6,>uC(e;a$/)dK9262;D^_IoQs\%Quk;#YB[F(NB3ao\eErX#"`CT#^BnfonUZZm+I+5K.S&8Z^ZkH`S/2<mX+
%Z1ViLpTI'XI4NH9\+AWTq)Rt'W"J+r1<)fZ(U,=fNm7%nV\p-[I^YR1KV*Z2)rXl-b=9qEqHc+ONJ]/XlMd%mc;2<<\\-Xen70JU
%$u:U8Lh.4Xs13)T#X?i+B=UmQ#qb<5;Y6Eecsh46f!YCcGDC_UFi*=%/a=5bZsPO*/Y-pp8@%hAn#oXrh2bod@_\\;WSgYM]OD[a
%:js<`81^tdC@oSafXpSW$;Yc!p%poJGrgeRU#BbF,H;TJ<30=L>Z/I!+YlJAi[E&2NppR2@G2l?7QsJBGd1e8M2Cl(:>R]I,D_Rb
%'hO,#ld?-::a2ViIO1*dOcHa1D26[b-ef-5G#[;4b%=>;SFM^7Y3S[=C%$#5L-d+**'tN/FTi<mdOa@!)7!(jZrdlS's=E@G"_1R
%&e@/iU;`8_E3"p;]0MtM\=dN^GL[hTo+Ifsk'!kPSpJ%TlDk+><Qd?lebgme!SV=p]:tVCm%@ioF=!/]cVNu?%>iHb$_umZOr:.$
%*hn[KFe=u^)-'B/*%Jo9d!X?L4@9K3"X($)jN)DcR>3jD,JYtl<EabrIgk&&;L!C9Hl^Je:1qi<c)cAng(_aPaqGOPDEX30b)_XT
%Phha2pN+eA52VH\SXbX8'mDeTIGQ]f!tiXQU)rj.&XJp<?Q;`5"cZrV7M.-.Lb(,M]XWnF$s;)mbW,TBV;8q2UeiLG%b!A"3lfek
%+Tnu(j73)BYAUWf5J$5['*oPmKf+RE<BW6^U(aS2Zh!9Q=-Snmf4AGkG5JKZPra1"Y&/t!a60V[=#QeIM_\qNqL4q8WJ4Yi:Rr1G
%*;#[V#8@'EEm(9o6*JK4L48fLfl#7UHT!uJMJ39J*h6JHZ,HfRW6>r*G:ECGRY`7V_!D=Kk>ff0P6&70b.9g6.:mj7^Ldt;^%.(`
%;5lnNQdE`jUMJ%[oME3LgK/fJ^1d/\obt*\8tH?*>[c8I]_75)aB,usmRWsa]6C@UFuAElR3N]2?"(WfH['_U:S;m?54$J,0?S_-
%AnG0E`=Ke,62mYfrYX3In`[c4oor1e%>4.eIY),qhUE?-!bc"7*Y2]E5Bj1i2@Q?G*aqeKP6SSMkT4@Fa=#0aI]SG"8)Iu1Wl)W@
%cEJiSo&L);Ydo6@cEJ`kFpEK`8h%rq"%:Fb!hd6:3)]O.P4g)s`.lLk-Tb:BNQ;67AJhjYc.R\dLd,Hg$>Up/:+$6W0OcDLN37&>
%XE(<.=H`Ele[E-4)2Q4jl+)=q81Z:=ht=EU8h0^Tm1quI*Q/hrK89.r@^^qG`h#cn?I`.eQk2K/KoHPG_igQgR%jV(,"[T64+ESc
%72@-VC=OLlQndXRP[t`PU%MAj[^oBCF*?7J5($8ka@_qP8h"!2p.^HXlWK2eMscQRf%noPiD#t<E!%:,hh8#J-.cUYo"r0UB^:I7
%Cb^^&50TEil=93^MpBk_YM"E'Y7pn.^]1G&\F=a%*7528pNaeMh&af=_a"/-j$,`ae@41p<<Xe\[C'GL?<X[?J&Gr'?gHJ$RTXdB
%[Pf]%X\Ku.-Z$6a[D'\2IA1YD>d)4<fbAr3F2tl_!'Pc[hD>,dhI/&6nYX$IcuFEuY-o+SeI/)2])I5^[_C;$[oF1<kgn>'[X*_d
%A_pm#>@6^nVbAjdmr21-CNa;u@l=`W%iHP(_lh[\DtVqga6Wi5g03-0n*(.,MljG%e[N#1H;aIF-FVGd+2?Z@>?bJ#qpQgghuEU=
%/D%u#s8$+%8i_f(.L^R+rB)>RV4@12>`M*?TR8/X]77So=rMGULbI2Q:_g$kKoc^\5Ac'4X%6C]QdLV<^WOc<`##K3iJP.)">o`M
%r&*nhMdq6r3EO/\#=lqg4*c!FXB3(p4^M7!iV?[d+jd3,c`e&@'Br_;/)+T=pD/\$lt,'_4Ynq3Q`b^iU?'@ad;CZl&Drt6]".ul
%@jZr;I/*\%?<8qE>&d.(/Hu-h'h\)W*_IrNCS^ji@hlj!<'7NoWeh5a0;')ZndM0*bkoi!IFAoXJQ4KS8Hl;WT?R:h10r1B^ps)'
%'Q:W+dUM$oH;Q8:_jD(##a0!)Tj\f(VF+Ft4K=pq_YK.Zoi7]c]fT'nO@CU%5+*n]"bo@IhO]r9%EPJ>#WF`_0;j":/U,N4B&mQ3
%i73?+F`pRQd/_O]X0&:U<mO3Cp5a)5Q`SR'g*-$PD\5PXHU`RXKOL:!_>0,t@gM_.<:"hiU429[<BQ244du?N;8``VVW?4#YQi1a
%^j)1DP]7*.9`s^1W__DBoIUA;PG7"1l`84Sc`!gfRO$V\/2on\o*"r0Em)ijUZ]CjgKh?3!&3K1pK7%FMG.0_%iFuQ40S_Z!C?pn
%5qpI:XGo<ZWEHnF%eWb_(!n('(`bn\MUjT2[C[Y:KDSBf%M3P";Kj@Pf2o5O"4@%4[U\(rF;G%2!"rP7G%rY1bYPL4dMnrW8@O\K
%$fk96$jY6h@G(c;7Ce:Uk&A7`_6*iRR=hj!3Y=jR_7X&dC`W_/jr1V(DhckoNWh?e8J/C>.?]R+fKmFAbcE.Q<:E-]?U5l`)uuC*
%2E,*<I%YL>;(Z+75ie@=U&`D'3)qH+ZePh&Mf;4(.-NK`"p681B/'3XBP1"rFc)?Pq*]i-j8nfQfth<sM$,OA%YuV[!n1i"":f]Z
%LSq%.SHrD7&da/RTkG^&CIaC@_?5o7f9Ac.nf!VMjIq-R[Yo;iAJ[(9oj?>TOV#Ua0SuI,q5SY7ag1bt.Dc9bi1VH,\8M#u@\8\%
%-c3#BF$(hTWLjMo`1*E5_#:3K+Y#Es]6si`eY?QoE?6'rBh*O5BTlC)@1&i`Kb8lu+!^"hZV,M?VcPUdWaQMWVe&`]6k/\r302e^
%jO>.-DASdHA80c-QAOQCbM"]rBaM\frrHWN?st7*VqbV[1s@f&3tsZBq1t1DGL]_[/fG(u>q)cR-lpC)2m<@rXufX8Xk?6Zs/KIu
%UE[XUJ[M,lNP/<l.DR-!:tA.6-)\WY!7B6tktP#reQPKV=>1?3Bd:(s6s-7uRgjQ.l2DFRr&Folfmu]CN]p%`SrppCdGd_$nPOM_
%H&t.eZ>YP_2(i]ToNG0WTJmF"nVbeOG3IF2_!8bdlS8[]YZs?K`n/=^3/%PJVISQN0r>Q-&sK6bW\3uXTm^S*XCAQT-\>'I$,1fU
%*=D`TB\nI7,6]X`&L+)4jemDMrhn.r5a9#t3f?oN@(]!F4#58_/Sq&kig"eEFiA.o!n"T1aIsA2SuT#KAI+0b.Qeoap#XBJ$l5(&
%p"IFpKoVRh3A[Qr\G*1kecNqYo]bkmppK9VE?"KASQ^6n>*pHh+Ps?H*3"s^7o_9UOqRNOaq[boHO;^kL87@,]!2.AqauT$EM=P5
%nqB'NGoMf=S,hrP7IV!=5[Ui(FGLU'eX)\OM%bsN2F.BDYGUq--=ErG*Td4]E]2`&9XN!Jg,F;O?'LtI3776(eU/B7SCir8-[&2C
%";"%OR,S7KVJ^Mi-ed[$NDl?\QSUd"EM?`f&(nf,$t`V[&4["!<Z6`eE<7p]e+$/&BLAc9VDJ<`2dKUQ-<`P'D:/QAITd#>1k@0;
%E<)jm5uYKMU(_qN2"-p^KIf#]:=@&iYr&^q,%0=YTPn,a"M'Da;eg<H+&9C*`<gYantdWu!UG'#!M;]>NB6coA/@8&#o`_A;aO+j
%COSX>JE8He$A:6e7B&J[+\c>`F:U""$#G7C'"t(ICkG[HPq[d6g7-/O#SYho%+7,3#rJ#DSL%"'Qc#RS"c2e4;jn8e>IUYnLGj"*
%VY@J!gAS'Q:#I9kFS]eOhM$fX*8>TC'BD\WguP$A8b]ejR%Obkaf0q"DZ>!mB9e\#HkRiWN@p1<6t\&3c)mdu*=6Fh@8!%kR&()h
%q(s<gB`a*._^/"W]CI:DFHXb[M%_jQ\[S%f!NM5S]b/m<YM`?L^sSesi"RQQ&_\[/XCJWU#qQqrB2*A4B>b\tMA%+f%/$o_';2(d
%aFp>qS-W:K9PL5(1V$-lfR8,WTAg"!83'[FiWSs+A)D4a"RYb;-:nk)[([#E[%rO!$#*kh,Ydb2-HR'e-I@<`8cT96!aQ=ROJE1&
%&dl9M:;@Jb'([_M?kF6<FFJp9ZNh^h!lp&3i\kM&#6'C#<0S_C[pC@C:n#2@O!9-"U^<VF=!_Qi;-cg.3tTiY[sda7R_VLgD9+%u
%9Pfn4H=YS)!uB;fAHoL4&gpMK>3:o+d2f]:'.5h=OdJQ_+5?1l]Fg[n6oR21@e-q>J&N+:k2n*fFMr5LilOQZkgb`0;k?eq2Us'u
%U*FMFk]A@O+N%E-3QVrU_'\Sdp&LeOXtTb?cJQ.Gl3[d'jGAm^"7D>kM%4<fe",L">bRYoEFMF)S=%sKlZQC9easp;"H"4`6ij*Q
%o_LoBMeUs:G_J>O&d8h-VG;uBG=UEA7#Kid+(InWR(cgK`Yf*L(f=sVS9nI!ir"]-f1Vq'n=jYua'5?)>.s2o=u0?I>@gA?$X"+]
%`:hlb?CZ5lOskKE&d=A-a\!aG0:JS?V!,d#CSjYM@;=K85%[3;38/dm?m'D%4F1OoR3Decn*0YTM%mVBMms8Q>]A[QA$%MJ;E\))
%;Xa[ohb0[DE;G0O7'Vh";+tf@n@k'[9qm0?GYl/:-t"TD-=6fXm#&CiFV6*96#RY^!elg9ND6'2Ek5^_JDpX:nX80:Uk#"#4l,-;
%Uk,:;4%0L$&B"ZDL_P9i%<fl.8E[up[Ss'UOcV#89JQcdU(,G5.AgIi-<&8HI=IqUV\fMRMA.aXY8/l[UnDG.3<QO?0SJo/W[1PN
%"tVo>TR^U]fWC5`0QF\6/5\)[?W+id;:+$$2+aHkNIU.C[+2G:fkTL(e:H$,E!d:IXMC/fEC29Rm$QuQ>T]Cl+qc:V%f>r`!PaL1
%G8hq^o?:c%V%aZKP8FC?P:)__0CFtt.X(oV-^`RAPTQ2=@WFi):qfSdfNc*2^NWh4$/7SFO<q./7H0"h$)S_Z53\:XYT]B\C6KsJ
%Qa;tOOsT;siKjSe'$NLQHDI<sJ[N"L\S7G_EpQ[*e*c<,dEH3W,@4_c".6AcQG=+ff$l$?>TbH6IA/E8AOh=]@H%H$4XVdhie:+S
%7D]2Ei08MnB9i'Mh@_.f`6l-&-R_Xg0HI&>Z$qHN&]bS0!jN;fTCgd'63Ikc%RPmM1sCF6&<SZ,9np0`/IaTU!n25AFsEu*\uDNC
%1'HEPo!ujRham't+kFb<1'DY62Gk=5&3:V.@o.m[4h["RGfUGh$k,WjKa8ZNbM9+N#eK&<d@:alE%pq^'gb;18hmZ*#c9QR42SYU
%7]6SZMP,`[?R[6hlpsYZ4!lBX2)1K;PTm!Nf-Wp?]4NT>V$J'%l:5a6#<3cHMr1<9-9/\^=T^Z4:QItC":e*g/:(KWT\EPRC5Pml
%BUHkuV$NTbAAKUg#^Up0.S151e67a^JWM(im=[,j"F[k]p[q+U'O[o"m=N8r-t9#uM]u%iVD$>*Fe6TkHhW@Z=cTN2r?FA$Y]:9Y
%+@e6G,rqNpPfJM+f'ZtZTb/e&?VZEtj5=n@^sX)nM.$<:e\!H+EC8UpW\mf%fVo-/%q:u\5@>X,m:F%B73Nj3JL@Q6qb.m>@9_Eq
%+RcSgQ`]Uulk"UEJe_l@!-7lHS9Q$rF:K5C"QrXn([`U=Hfht[0.tlWHn^,a.()j76c]?C4na?aXq7RV!+[42RLk",aTH/TBTt"Y
%eFRg\4uXgp3^0eGSsfD.Y"+fBm0QGP$AM7p7C/mML5r0e9^g&q)N*mN'h^md+-dg]>J00Mm;Ae`Gpo@>?[U[L8+s-t<6$+C4T4)u
%DE3VTVZq(;VFcqfY"JuD>XfL`!1IDrfYfiH/;N(+I8*Fq;<:QAT`cs+PBU0="/#V;kZGb!+.R!SmYkfUP-ZN)OZ#IBR&:"7&C'=(
%d$GF&D>)s+JQOIc'!SIM:Z,nbK,[8='%hqOlaIa49Z7_+#hQLDKIj/Q!-7<^U`O!RG)VPPEeHfL1)l?aZNu>a@MekpMl<\g.Khjn
%'_ScbZNNtGORRH_6<(6O=7!.Fe^2`%CZS<:i-Br4X(3`[CP*r.NRd=12/Wh*8$^\2rY>CJaP$+YFX7ooc$Q)0d@#"uO7Mt11YArp
%"SePX%*oJm0.A:*b,TV2V6-^XJGg[E-t3A&)1.cXS39Bd,%?<Z6Pr4Lh+XN-Y6):8!7X,G['./NP1Pl*,u_=16f]#)FR"]rEg6ZM
%I>,_nG]V5tDpCG)p0u(YXiG>p[HSp4M$(*+jA%erI+`^;T3,`&d\Z&<]LVDE,3]Wj(%6K[<TKsXYO\ArFgTLl*-lE@$X5!8FL*P]
%"L@H@V!e\POtprpDZ+fZPEo))0WF[;IZQ33c_u[Cm$[dk`+V*b&At\Q-'nQ:??'49PV*p!dF+TdA#"T''s^CMdZ7N\TYbLrW-e<J
%U%2*nYF+3F3(%kG!YIe6S18`Sf$O#QF1=A>RBIa_YIUppT_fkR-#BRs30?/K7niqo[D'@hE^:K(1enYm-4M?_&onFD?fIsHc%PDq
%dSB8GhItY\LYOZoDma;.-e9:mj?`-ggP9qqR<a(df2]<seTt/\d&53N(])._NMUb8LVf0H2ktYRO-k^`VI0grK4@8@/pJ9)6,!dW
%bqKmMY'=54mK)t/G!4Wi5YR[YL>Z)];+i=uZ`:IRpB^J3+t4^"CtN4!0U<=U1>f;]@tu"HR+hjDc.>Ks#BI?k<B2da=lXfV2Ep:[
%Ruu<"LGN'hMl,j?>_RDm381?m7NX*LG=4!R@Mo<#EcB_#pQ(R3R2$lf(m8kC#818\P6h\B#s9E?c=Q.;+BVEO7`uEV?kV"OG`bd4
%;qK!Ib'q#>UU28bBaY`c9fhKU45XP;@/Om5Dn8DK-QDm\,Vlt(`lhg18KsQFI:4KY'UHG20WF:p4n4%4cL5XR!R9!0e>>qKGC7*l
%?2rWl8''uurp,>21=SjeCanP]@IEr*'bKu@#d[h4WRl;9k=LA'd7j`h1S%l+E@h^jMPju!qJ$%.L)ErY-=Cpej^Mi7_nL<e/l8.`
%DOLC9"q005r,a^`*J<5c8\?c#H;I*KJ'a%iIV9Fjk[b(a@_,`.bYj?MKT+giofV*1JG<!A-nZjh<G/@_HCjGSN.!J?.I&u+VTn(!
%p(?CmbdG/G(n;G"n%q&F;%n,G-GDb$Yh;`>XoK8[JoDj;i38d>CPKFD]oJi33,g`h%a8O#jN"6HHQjl)m8OtUA&Hm#r4ZRD/%6F5
%IItWm;p>-SZu#=77oi4ej5Gh(W?;:.r5K,qW>%"UdZ]=Hi_"0kB%4WJCqkm;)=.o%$P:Cf99<L.h8[Om(<&I:>H\Mo/L9/`O5bh@
%?+D]k.-=X(3>K+)[+gKk5OMAXXk7?OP>;\/aDLL-ICtunY:$7Dh.T#5JaKAr$A6>-)e&\':X4dZ^af!r&BeiHfVLB,$KXh[G6m8?
%e,u3T#3&6/d-:DhFaou8G=`D4\0<Rqq*dHfA/BtZ!l1`@'L`3D:LMY-7?4qcNuM\5(&W)B:3gVm=An?Of#/g=?q+kVKD*/`,Km>/
%Qm/e&#Co?Alt3X@5t\V>]XkOVAjAKgcfaP3"djra(GbA)0i>$8jocp+;rO^soPg."n0_^68JoV^4uH'Fe$rLl_jF5alWNtO&$(/U
%^0Mf+2`kUl?,V5s:8-q1?Al(OY7V^6XCWOGL?t#-@Z,I4bUFEQF?NWJp.D$Ki%#->=ZhD^IZ_F"RX_7CF3Vh;gaP^H#,9be4d[0^
%Zi!;@UpnH<cma/MYpN[Ek7bY[GKWk+&07.KJ2T&W>_3Z+Clf9p8llJU?F1>tl+4J?EcFj#e)#9kAM,+3R<1q(dL)"o.W>R$n2m1s
%FkXpTIHeHWM,]e7i@.O\Fk&#B'!Y(4+YbCJc3IXQJ](gB`uMm?*nDH>5%nnX[PCJ.GnLa$=fF!%2c1(un"?Rj)etFJ/q[b6$Yk"?
%hE3YcY6kEo]'mN/'r$6u@HJUR$N..CEkluZkK2=k+Gs=;@uMf2KKot&nQ!]ncZCU'O!IHdn/#Pfc(QPq)j2E"i!g?"@nd^mjIj?_
%m*TBc(%nT\-5X$2*TpRXW-pRHPJK5s:pl[V1E[IR4<6GL!8M(Ohf2a=+>"4,`^VSC:'7P`XO]?KZ4AIUXOZ6ER*$lG:?M]p^+*R[
%Ke*tKmS\$K-9f-=p39jK=.!RifDo?M#bEg,Xuk&G$L`]Ynub64YO%c4eR[F^U3'N&Vt*g]ieYe1e5iq,eS_C5jq'=n`UKs%W+%7i
%,;A.*PAoNj;MG>6SU';p,PVgV;9Ppjf0h0)7![q'cpAKBPr*@mX&<Dcku%R@neo!K=;@$$,a8=tF%`>KJ8tGUTq(PG25t5!Hm*Z:
%!@\u!j91mPS,"FNU+Y?e]S=,]1q_iHL`%<A"?.;JfFLt.[(/<pmCI^G2r9'cO,J`,$.Ph/_/1V'@&i)UVc-0'!2'3h.Nl9eTUNc-
%,;Ula#9;\<1SRtZ$NMJR854-4oR5Y#0t?^m]CH]W2n.7sq;]htZsL_lde\k8IcTF9c$*FL1plY][!L4P=aTN>(B6Ddr;uTNH'2Vi
%>n.;!P>oabKL8Tk@hCd-'i>SEmA'&.RYr,Q;9)X2`cTSKOI1RD%9rBWSi1dg[u!i.ZO?L<V\gm,XYA`kD42a`qeN!%Zc#ddD2uKg
%-p6K@ijiOcP%>5[`\haN2E4U"+:TRP^%qI3;2Q&m;Ft[s6;WIg/58-I-2,L?Vs/-/l-clNR,DO,:IBk4@V73"=n!o-%gV=8VEkJ9
%+NprX\_#,[4I!9kTR%<f@3[a#6.lj=QFYXVEl[5S5\LPBUP4%<++LO@)F@Gqk4F+8"JV,k+C'_,F6;Osl[b]K3:$1i^WI]++BBA'
%<R1+;j4(%VQQ=>=S.Fa4T1ZOBnI&>LjIDa[N[[aPOM_ST1_W43@T>CSI(KAJe[oE5-TGaOI[Q)q[FA:dVc(+Yp^#8)3lr>N.s]^m
%rb7905&[BdH!]*5kjp54/T5oL+a8T3$C*Dj-n$YY]1F#8f?99b]APKfP5<9n=fQ10Fga$]4>g6RZFS@rbnV@:IWLkaAMmW&E`hGj
%oV'o2$o4k)?.rW!(CiM>/d.JT^:cI!N*2%2BAH_I\TQr*KWL"o8<+*E(rtkH:FA2*Ilha\d__Or:Qf+%5<$[',HU?MTeseM_*hhK
%,1!s,.:B+r8#,IUQRK$R9IN7bP+D7kVi=\f^u:6BQ@<V2OGC6#jmsEF0`$L,O)c)\^r[GL`J2(34.p4"mK>]nOFfh$`9BA/YUiK2
%NnD9>jX+$,d:>saKIl=Ja19qQ`+Csp<V6aTU_7i!aNDQ.d1%=lQI5R.e`!;ZX9k?r':eu@1sQ]6E"3g!F[Z#Y=.%CJ^+DA=!a"j[
%].>1KIblenBsKVc,e5b,6U6eMG/jq6-d$+O=Wre]m$DN\9=+)4g&gf%k1oE4c*.MW-p.#XRqm#R/HDCUS4I,^@".tJECZJ7rnalG
%i,s@`,a$_YUHJqKd$U[E,[F3\`<R,@5Kp/_![3:Gf>\HlQ^WQ@IrrWmMLtbH1:n:&N487c2-c.eF'fZe=Pq]t*f0R7>Nc6[ELb)R
%*`@;'Hp/km*m;\1KiIYh"?-Xi.W;u"JiEif0dr?YZD5ic@n!E44RNk\j&L0tWZJtpKC]<lfB4@B;oQ[mpC_g,eBtcDaggCEV@P%!
%9V>M834UDu)McBO<fah4TY!$0S]qmV-a^mJ\:`puhpfUs<"gf`e73HoLN=tEhIF'.R*1@"`$8k:SkL4[J(0d>YCc!_CO6TDem^B:
%081GcDGo@.7kI/$18hZ-k8D5I*S+/$KaQpA784Zk_-85Dr8teZesS20**d^Gn.n%Gd-o><ZOI@]4oTK<iM3V?raJL@[-tJC28:u_
%ft<^j#S%-"kL:RiK2e.RfgBI+T+O^>=VtC7<kN:S(rd]]OF]]`V;/_sWfT81\DrJ?e8r^TUjhO;_RJ$3_<#Q>D[S1%Mn2sEhE]Ba
%`7^E![E-N[CLANAihq&Qh-ia>e-=e?rjqerW%F2a;a0Z;[k+o`IQs/3#GV^N;?u12H13u#HONF:Zr/IHFVAhY_IBiD)iQ!Sjhq5]
%lL:G3;QoR=lh?m@$'B+4[I@K`oJ/]f<NJkUc^8CCpCY^Q7Nj^EPEZutoc6W:,?8PHHF%'LAd,!&AS[;eOH1oX2)IITbcG^:=[^lN
%'72C-*YQ9Hjl.5c0XI2drpZtjC#q98Zn3T-]C-.,jc5_m^UH9+ai-o292g$;P%e:SNTcB^PNR>M&a'aPlZl!j&aFMq&]el3%i_8B
%BCI55MEhgJIbZQ=TnJEkL-V?IGU<cd%:e,XgolNBKu(>EL-d$O=2Y@SEaB?qg8]Ec>X>[ehHC6qLMqtlIJJ%Tpeg$o779b6GssFI
%\D<K>$dL1=Y:B\-bN!X7=%Q7Nf,]FTkk51?.g"tbS*ffi752QipOo]**UslLTXZ2M<C3+U46!WZbC2r(l[1+2F[qs9WC:o!S3_t?
%3s(o7E+FR[D:+`*4m;n`6tNtTL?"'74(<G(efAaaQ2Geq>`/[ZNk"0=Z/$!*g$XZQbrap*\uTsD+E<\V!TkCWh",YY%-?/EeGhYT
%n^N!'HgeG)+reM6+u$R\g;19CYUo4+D?t'032sP5^7G+C5n&&)gb+Blo*$k^SEC&1*+![#+Jt4u]HFGe\,0Te6,7Y.N%goaqr*L9
%1b&H=A,lLV303b'5/3g4jglO![$%PRI6ZX$`S619LGOXJC>9=-RJ4T/BaCdgmGsY:fq?\Kq`LCfB+jq0n;D)/IZ07IqsAhLZo;=C
%_cUrmYD9BSH/j2f];]6O=dof`lf%/MJ%ZnnRr<dET3-;"M?g,7%anQ49m&MfgG9Aop=PDdom4>sLM^UlN-*od>J%6.)f2k1pboSV
%gq-%C+rgH7'h&?qXlj`ukBA"db5O=$]`*sJr[7hH3n!%3]>r5<.rs$)fY(4\Y?s!_F(2[(#<!9^9`<'%P;"O*6Blg4:gmPGAj[[`
%]!7W<P/6[G4c#1&o-h`BR!9Y(!K.pAe06+?&73q+#SSMq>[T>EAPMej4f(&HHQ'2lM,d;s56_-,Wgu'<5j4NPiA#jgQA_)e.G@Ks
%5ZlTCZV$?U;i`OSfjQA2?YU,h(g8O7M=5mF0j=D_#XeM1j5nOCQq4A+)njj4pO:'/;cnD>TG+mN%5HLR`X*V7p>Rdu%A-3S2I6E?
%6:`'M>0Jf[RpH(dN+mmjL%S7R2_]2R]8V4'gcHn>lFcSq_i!b,npIc*Vn!f\p/4\B`KAJFAUO&i6JA,jQ#DK'1<U]i'Xj8!FEk3Z
%Q#0134F"aFMd[q:+Mn%*?.5S04mgbrJ]cYh(`nc-?R]h*,.(X`hiV)Oa%V:b<2ta*`@5"M,)9@^/ZN:&:rY&jD><m++UGg'GsCMH
%<VUC1V-l&^*\8m2V=.[\ZRt@&N(+r9ICbDdHsZrVbm#58q9Ztml:_9.au!_$$;;K32W^t>Q_nLbpbe*7iWD?Jb.+,N&S<.V7iL6H
%_\"N$1MGfFct>iFQHPldWK4rfq>QZOG%"9;bmKIIpfO*f$GJ+6nb7c;W<mJ[2_]$A30)IhX]VC1`dtV`0=uLdSB)S@=qM!+Jb@XG
%FKsW_U;SY=ZsBZFd-M5SR$2.\01989+OBod')Qp[IUATS)3hG,*r>&JhD#q4588U0gtl9%OT%Q`SW6-_MPG!RCl3hPAgCR"*s2+S
%!8G]R7;YMJI.>enDj<Zs5t.t>dR'OaHJ-H$0ug;("@4<O8g.h>MY93NaA.rT8^c*8UP3<L@fS0-DK($AD5'@j:pe:(&lboj9/1^W
%bHcX(O0V(DhGuM3L]PsCW3I[1irg@g;'FW#`?[OIUJ[87KL;M<!]R;7l4JGIa/+SDBCoFIN['d\,)T]Ip77"?i2h@^^NqVjAeFP%
%ba>"OlPA[LdZY%kNFK6!J\nFU[@j3V@pR8Z[n,8QE\]PmphE_):qoeuG$REW:`Y3fVGA\^pE3.9AL9;>*p#HbK4I$=BY$r=`A^-O
%3I1n%dkql8TtlR-AFHbEOmmW`F&:C[-_02AChA7(UW1"n&PXXt[ktq7/OTuAf8fN(\)B.nMU:%"MubeS;,68K]ED!4\kItshphRC
%MUD)O]RMt0br$Fa"&Wr?9G=!$\>-XGU_<31TgTsPpL)SRP!(8^"^88$83P3iCfnhI]2S]D/P-Ds*migGUc"VfB\K=GBKGsF"klYm
%X!<#T@u(:s4<%!f#o83Q@l_@_kpsfr]c=C+&F]5Nm.[\'M;>HmW=a7c+DcH1@TNQ76O#a0Fa<c!3DAXI45o*5hQ=Xg?9d;.gjAD_
%Froctlc!hM'=+US(012&_8P-jlb79Uc.fV=RmYRq(HkPRf\V'pBE$"$RLFMJ5)PG#+9OU9N]SaZM/4s#Lf9Ps/;tC"X0r>.ArKT!
%lOd+A!MbRFl^D[E(oNU,]Kn3U*HiPf89[`k/Z:',h8f)06?>1H8Z,5Cr"sf0H6FMrdL$$(X>n\e;S"b\M9r`p]J"A'GrX#ele^T*
%hCkcE+F&=!'I,u3'B:75#a]U+&kD(p#j^h&%RO5cAGs%B/e@B/Q%SgYob>cTG2H$b2#=eu<lF>=Ea9H%pUOdiF"t&Jj:_i;M*_X)
%U>IFYI8A8jd=TbuQC9Ul4VJ>'RcP8B&^<(0+`:YX2S!3iNf:%nf5.Y0DFfq,P&-a-opDGsckVr)D+G02NuLQoa_e+=XCjrg0/e(Z
%M3P0p6#6?e=t-YDiu^.)hTa9jn<c",;mA=0_W#1a$/A!^bi@i!e%]XHQ,87&g,Q7Qn@]YT**-jBi03SH.gic?pA=`m5JP.W7LI:2
%oSY'lT0%4RMCWf>Mj+#Ok-?(IlD'HGd&",%0n6aap`<quO#Qb!iH0-Sp^SSU;iEn1OgJgb6>F2i\e(;s0ut,iD8EUU`%gNfUigXn
%q!+Qap^iJ4j,=S7SQN?]JKk^q'bH(u$MfuqTkS4DJLsS[K6BM"g3l[!L$=B*0%WUKF*b*[U0s.Z%2Ip^GUcIh1a,O0i'=E2aWN/u
%*N2sCNNpQ)m`8+H*^(kbW3uMO;^Cf@WA</<@A<#(Wb3:X`k,W"9cJm@0l$-h66O"Rb#ul?\E>9PYCZ!bfV4me,*-38'r<e3;`>ZY
%!&dF%5I[,Cb-l<i7\8B+k+cCm\huM8@6[W*baX[@^9YYnT\F^Bb1!#K2da2ZhAO''RUa9=:=%'.EC6`=qV<i?]31>(6B^nrEqe.I
%b\,$rT2,8hKN`\Qm]_IUBsN&658u*SC3"--e-P11VZOeC(6M5ST!(L']f;(i$C14cBtDh*fg%DVT/'B:88OI(^kQCQKrNkG-pFW>
%eQP1"j5m8^-F%`U6G-E+Bd;1apFR>hVG4g.S/H?-70("Deo^"%40dopZ=F]gRVs!bs2Y\_X;ji]7H$.?Ie=R=R;njDDe*_O.c0i_
%$0-bNV.<Oc@hJa#2'pSPG_PDNPU*9.QO5[kM`$?39Uam)MK<n*MIm^#j19_?/V#Y/Y+kVniK24k,tn\oMUtkH9ZEIP)!<&1n!DfZ
%;=)$]^4ojGT'Y/fN1W2?o\-u?p!4^6*et!D^;RPR#L$m$<*"&7>DT?ZV;ui:C!I:D;h5_A@r\Jr)sn]o1#$TQg">\U_70&U("d$:
%:-JD9p9M\%hUKS]HD,NO]<u,7EGq7]kMoknZ&^j:4`952oM>sN#iSDj"A;45c"=NqdSN_f7<_`9Bdi+rBN:kd%X]#qS_s[q"OU8j
%ddc[Y[+no$6:3Kmi!N^@ARu(]W524F"]A4.X82J:--:s)f$Q5q*Wq0Sb@WOu?B`;,qP]=0Z6H=<&HF'O3JPPl%NM4pL_A)QkT1ir
%aD:O)`%/uj;/dnG9GdL1ah!Pl\a2-1bAj>+`aRq.e%R:ppis!5_r=qPI's:gdmapI'QTu/iq5*b?OW=5fBbqKpnVXfmr^\VdR<;3
%j8_,iOlRsYNE)7o@@'B[Ntit<0347p@'[)8mp$_$*LBLie&oe;DgbV+csbH=k)!bi*"`E)T9a[@(o9:0+o6V`G"8uS9bY.3"D2ng
%mO'G1YMrk_SiLPsT+8unKfREtIHbm'kRR7`goUR2'dhV2`].+nGH=%cW45R<AgeX4[:(Q)Pg27Nnjan9=YI6gD@=tV6U7!-.q?+l
%9<37O7-$pgM4e`PlXNMmaV]O?GY5Ytea7+)b0O62:!7<,,G?6Ed4+o[em#c='J#7Amon0tGIfM$!ij;eN-&]?CWanas5HR54j4SF
%3-"Y\2GMG^pnAZGi#.A1ZMDmf=mD`_cDbB6=>mVIh%UsbUM'nWQ+ZShqL-&L]E>BYLPRC]K0JakhG>Cf[3!VJ7WTtNTd3DUS*Mcu
%VV$oj9@_?.oR'M8W0A'lEj$5Wns/R`=Hd5rV'ELJ).=sM?Q&aj72)b83T]m\6ho5NWY!ffcRD9n"^^Q3]Th)SK-4a:glb]-Sn+$B
%>f:1CNss[,cML\K\7&+bCKu78cuVo33f`FRn5VH77A3MlY2'n&Ij?>Dg7J.!a?0^F3?@/XNg[JDit@oK2^%=TpA>)*Z\?]i]CKtR
%^WD3SUm//D-,5pVQ[P^!K:P1D2CJa^W?aPm_NuOs/)h(F<aJq<NJL-4lm,6T'fS]-^%gNHV*sC:@Th59";pt_+.%284rQrCA4tah
%,9_j1=HB[Q51:[$TK1"7fL1d?84BpS%tlZHb_s"\7c_;<[gj%Mm2K[t]I`@\:m?><Db;IU1+THBl1ZW#Y(Yn8iAcO]EPPLXYq:5r
%BL)NPjg8P5gRp?g,@>o0S<</l\le2AY^2'H6<\Sk/TfP&L+m"<M(b/$'6RF*SmNq(1jLFfG"Np0i\a>H#7/FNr*\PM44r^sr6]HK
%L/`FMh_861&NTg:U^J,af3tOJ[X5g\AXWKXeXY26.r@GYatSfeOKmG\79#7tQoX$_LBBMaBLBhC2kpNYaXW-D[PsPZo&0Eo81;?f
%qMq/@[]q]Q`@of%7Bo1:)8E^\FHN%V4MR)=HfQQNhW+!kaY,1r9E0uZ8U/05q]E))M>"74Z(e>@_J1tRr>jY8[UmJM%\%n"b'qAn
%[Z<B-V9H;]>VbR_h4gQ("tQIh]dTP72mod`7VF=Wb26CVYU'(Di)E=Xp]lbJW'Y@CiJpel%ChJ[\=)fYXX(QWr=JZ4F/udUhm"X+
%INR7#WNqME/`"Eoatd*C_WVXj^\`7Sp1s#e@^cHpQ66g44'$GqLbK'D.ou6acr)_-P")")Nfms1`<ejnUp;Kr)%OiY74TW$qs$lR
%r_\`CAsq_pO?kNW[!'TImV%_EeZN:F./D#m..=r#$D_,Eb=l!QMSb\EE]>]G46s"Jh,N*=>0&uJ8&t3,d14/5**q<\VdiH/F8r7.
%AruNCa(.dQT9V`/j_1&/CTaDbS4f+^mHa)t:#fdVUmVUcIG-&'#.'p=,?Vo"XH5d4D75u;4Z1b'7IoRK<')+!bF;;DlZU2Q4)W]m
%1WGl*_('++S+@q">7F=!ZkXK9hE8YX-<*jsn;O;N3U1ni9)c9#BrE@n#1T4gV&XT_dtWtOpq__#opbp\)pkBag`br=Nc<P/,RkK7
%?#eH/FU&tgdV3I5+i(A7EH0$ngm8M/HH\emd7>+n-Y)lBPW!Zu_K=2$iJ,me9Qf$Ln'utETL*C]8Za*YIGQ](nGp,$Go-tXo0TPJ
%cJh#&A&s**n0:A_N\5I/%Kk?hFB0rSOXCAV9E"f>)lR;&:-qp[dt]T!LKYXSIa;=T<XiL]ad>*ADe_f/H*a.gU;7;:q$%MY*H=N_
%O)V%*QO[A#e,uE!Bl"H__-+UBP.,.,8;?e7h^cj@bAQ@CP%#oIhoZ[7B<B;70F6Q:D@qNE^:N7$n<TcH>fr6O(s:U8"9of44nF#=
%P,F$q@dTsYB!_Nnn'Z<:gjr$a-5HpP=HUknqJ=EBPYH)Ql;Q:_AJ0oMB<u4XY_^-k)*TYsjDt!0`A])G+[)lo])(+4j\QDm7oqeg
%UppXgj@gkClbjW]?PR/,;=^9@bp?0HguEKkUpf>\CO(Rbp#S>c?ao2_h*A\dD9C["*i;G0l,RBqq%h0%P!*=o8gCK'?u4l`9tM@F
%$la-=QdA(-b6Saa)8&+LIbfI\YmB\^YJ^'g,d+AnKbLZ6%5CAW&=#Hp/Ild"^_0b(@,0'#<%nm:)WJ3+1T1P\[gI"hN%<"PN$KGE
%P87P81+p7$oDHC)N@/mudrE2MeNt\d7W4m#DS,*"(Fuk!A-F>&YBkp@?FS`H7PN;e;kH`NfIl4&,@?e8U80m!'Wp;JOeGTG>mN#0
%e/AQmkea7[,`C&4\Z&[MT^T6`Xrc8I@g]R"em`HA_@E&S:/M5/"X4?F(K4*O)nI8YY_mcJnO/=f-Isa62btaOPXZh#oP]%0kPe9_
%A<L2gM5NC,(D-DR^sTq0lYCVE9)K8*r^:uYegdQfL3*Td]4%I]2p1!f2C6UX%hdND$n*Y?WuNU&I2H1SOTI3Mg"d?T=02V56#;.)
%$i:E+#]<MZ-j"GBC6sK7!q;MO0DG=A,9OHGVhY9(ZFQ<'cEWWPrLU&gAIA:FQA"auJTdZ-5/?*n1ZF#_<hj.)2k#Y&D-O+VPlW?.
%<t.AQDD4mX5`QQhW'R=MK43M#p1?@.$mQ*WL=nSjkdc</`gl?s2Kam<(Kucp1)@0"IdUS)j3X%:]ugn(CekfJgkjjn-NdA1TV;lA
%6\ZWGh$1Y6`g^1:3btVbFNk0(Ar>h*eP2H_F5NDtSa&J*-%l\9<U<h2d0cu]pDH0X@F]X[i4/!4`<-h"<0ti;#R2MFdsn7:3g<*a
%4I]$eLBXNh-I+FVp/Ok2+a!&.gu7fCU=BZcEC7g#\QiN7(<2f+M'#Im2]7<`dd%KuNLG#e<ooB0cWee6e`;,Y_MV"#/dhaIT\=cH
%al*KnNr7-uU87C>Y8rE75n8\I=%k`aePiT[Xil"oCTWedAXuC"Tga18/lE;P:Xs/1<A#$DF#K;d%ZLpQQeFkbm^MBqT-)(a-&[59
%oD[OMWh^.j`2]TuH.W1h1$5qi%W7M#JfkNFKF;i=db19J1mDg#8i1gboi6/b(A]H+C,S.)$uXg8k,0#RNH5DU0:E?q;kK3]$2HDC
%>2b]?<7VE)2Pk9IC#Y2(6lT$gdlhMQca_V^/7Ms3?^'Aa!6f+_eaGXNFgUF&j%HN(C>)eA@0:&>:U0\/KPb3[MjOd`*FYC_hKB[t
%niUjf0?hqSY7;n>?p/VSCCI3j?A'6qV`\"cMs6K=D?pY5!+&$)lh3!Oi3$Y1c1E.2=f38Kk'l=5dC0QChbCA0WitiJbWh_DN+kK.
%1Bq7g.EJl=K<9,0;`5*S%Yrg#_(YXWH3T=aac\Vha+e9n.9G-t.bjBZ2)T6a(T1lb;=W:MNTrmn%-Q<)M<Hs+k&*`&lR^8B^ptCX
%O_l23j3k.&W=A.^_jh!B6aK^M7)p6"3_jmIhEW-PSucp$l.8Lpf'J%;`,\bqL;Y,g6fG5=\rJYid.U;i2R[O&pVXO/EIlZA[@d1/
%2<<ZHr2WufkqI^oI:_oj6V6jqQ1;(Y47hhVCm7FqAO#&$\%<>2/?hp;"eLE"iMJJ:G.be[E7<f<k7:Z#4Q"lKNGtFeAae*b^abDo
%p"&GET*G5)l4%7[$keQ"B\gOiGb"Mb/DOcl9AeNGf]LGKG9;upqXKoN8PVQ-PTB(PTitJK-FE9%+*U9ger&)Sek&:fhZgTp20%M#
%B:h./:c4XM8Wh[d0$-nq/\GFp`fm4>=MIjl,fT1Qa^%e4KNdZ9/1ND#75McRXGF)/l*Bqp=V9UkW8@naO`kVJH^&On6gsjZbDPf=
%c^Ulc&Z[?`i2!<-`8]gi$]D\JTOc-$h;39Q<('XLmOt*H)bf=dq2qV3ACa7'^R(n/,9\Q)QpaBoA4]dq,$Q"t/1i?W8!g#AM2LZ+
%.ATANc3RdlG=`CaYHCH[,3![&O<)Gk@p2=uQDB?0?l"NZ'`7-m`$m0F;1nNN;3;g9Cb93ejrM(@bp=kqI';a=Ll..SB;-tTOb#eI
%4bouG,9\Q)QpaBme4d4q.eZDV^PRile^6dn,qCb1c7+Vn=cj<k/sQfIYnmZ/RBe$#7F[n(6Eh,X&)C>E::\K[^T*1K^4aJNaN;h9
%NkKi1'kg3tfK>L'6:m*VWLi.=1+S37pXMk_8W1[/c7gVE=p/jUEGZjNU:p7h>Qf51\3-g<qDpKRGoE[E8jceC!;e\A3g`9?QQ4Wq
%9V<uUBE%NibcapR?pFB9?(lIV&Y$$6lNjf?hI!nEno:&1:F)aT*L!kOPW2[->1-l@n8"N#fZdeUBbBkIq;sH/74+[AVYP'A%Cld?
%EKTRYFO29c@`B]h/TDBghL-@i/n3Y+3CE>q=EX#1,qeoR+@&k1"OaV91l7,P'&qo28R)C=QogYEfHUX^-8)#oVn$;oMg^KV+YI7(
%n4e3B(OL9eTIK"H)LEkj`JXD7]@n*F`Y&(<;7]BR.m!(I=)Zq*5&;Aq.Q4Q>Nlf!r3LJ<X(I<$8E\ZZEVYE0J:R/Tfm4R5U`Ql]$
%,2sb!/hH)&hF"minm_'J3P?O*$dTqV:QcOk-.gV*b`&4o)_j[Fo"8DTnm"LW,pP^RinNQ`A5YX>_B^d@8a1W#\;2EOVhYoE,*F(t
%Q?(-+5XtK>TtIms,qn]=9I2@DrK%iC*1o\YJPhi']d[OHHT8_%'GrR9@[2!?N#.]B=jK?a&bAt:g\98)ZFXng/(hB-e`FFH;e3g=
%1&T3A11E\sD+e@)0H<8&QUtZQh<AW4OV&B,bbd0b`dLKWAGimVQF@=1c.+)W,3+\TAF*TGkn4l]IpK'IAE5.;n7tI"NT?Lh0Za&N
%2oN=H`+g\.Y>X=2M%RqKbdEqYLd`jYAi#MH99p6h+c12/VBt0=6=L'1<*:F*'a[2bOV)<C]5L#mN(f9"lUrEH4.\fRl+tc.I#3f1
%KJG675tjnof0[-,MN=RJ])E>]m-\rJ"CXl\>c=M`8n)%`)%tu=-3#/D?J1GA,-]GW*MX67IMS]=5@Z8AnYX%in1_H7ZA"k>j]:D'
%Cl'q)lJ"HaL;K9uK->QhVle<@*D'S^9Inet6_l@Um+W@m#usIceAtEmZTRXsWf$<PC:9$O/.\pp$IG;?[l8(\><ZXkea+61Gl[&%
%d.XLJXon(D&6ft&F&toKI[c1'=OBtE=?3JQ198lSRmo?(Kephef4p/kncOiYLBY(>%TLGYe!K.!kj(b8P&+&]OV[1q-T5["C9j@7
%Abd.qoIAP<jDp.Q7+O*`lt0Tfp#n<bY.f/7\AG:8EU\6b3W&@-r-b\i=YK30+4G)q2^HtN?FRQ8U04"h^)g=69I!i6M2+QZOp9[`
%?)g:1**bPfri(A8dSPZslYr;[NHcYU/.GfVA+I&s:"@RQ9VWh*<bp'ZnT$cg;sCG:XdE<pE<p.5cc5Om^_=[1R`g5TT?\Ho?!^MD
%B"g9Na!eh[&o8%66qY;4"-G1X1NY0B4:aYe*4_=rdTR@.6&&O6h:9,Z[1=gg:1bLpB51#AYq,R9RJOQnl:VW7Mc(ec0b)qcV7q3A
%m?F(:a+?fXC>.mLrM/L'PGfmb':)bn-ArBV8#ASS:'eM&HU+Tr1j:-T-">`86]%2"m/_Jo%qgf4PTSc-f5s`do-MGfk8-G2]fV"Y
%DJ*bfM%K9ZbF&a<mFF:?h=!S'c-4L_3B/$+$T3o[G,F#DN$`UY":fdmflg_-0aBRMG9u:dQ4@^r^Z7D)LLI/(176AUOfE\)3BEVC
%K8N]X0DG`T$I$?H>5j>sL%]AR]>6:N&;i)_as!B6fKJJC(>.Z-<Q$53grg?-GZ14CMC3^"ikql5A%,LWDVc9Do^Sfeh4PVLd/8im
%Y2ZOf!HH^?dqB,+_)olI7#Ob/o$*mHdWXmZY<#$6dWSrP<OOduKnaJI``E(+89C/qjVN!*&_H/E7+N/$.kYXIg#^'OhA<eGS-R:e
%2t#b+N1fj@HR71c8LV+F&Urk"dc)8"Bkj]d?)st`R^V)NlFPt,RIRp#VP)=mVfCW4mp4IHP)u&tMq%N?>MZZZ,2ZF9?c6^2%FFm4
%/t9I&:_J'GA"#^3mQ-TK9TD44l6id'"!"EL(e"`M%Eh-^4%/_gCb]-=REj4H.M@Q[>mq@S^?Y7fiD>Q?V(B3a%e7KE!,RrQALNT"
%N!sZ4,>cdJ6lOF+Q,o`RPoG[HU"]!2eo?W_R_m@qjs.hlJ*=FbIDofL(uK<c5f8eZk5LKpKV9Sr6q9&>!q"^cUanNBme.o1=h3cp
%/uUP%<d4q*+DbJ-CJo($E3H2SlqKYu%p9@52X#C@H2"OYTkKf1'p=!M7/i3l2u,Ak[:UslWo.PL*A._NGZ'IW;#F<p2JZ>mD<f61
%)k92KKf!d3]&.9k0eNX\VCG<H3Y?^'X5(X(8jQt/;d5Z=4)FAkqMTa52iV1Z`&)Or>53'.<UB+[)+)90-uJtkX(W^_)$A:Cg)!>E
%G+GV06Z&MVHWX>g4jZO^gM,N-US[$^0@^B75'O)!`UW`"*34MtG_c+k]9W>T2;&`IK?LNfmdJe/2PM;l!LnMjb'qAn[Z<B-V3UbS
%EAA`mkS@%Q1$XH6pTh_$hUK$^<i-!_mnEt-8cV`Bf<^5u_&I2E+9chHSmh2e@%'^[B<C*9C_aW'`qV\R)r4,8a!Ql=D-59AAfD_Y
%fn\;r\R%Y0M1r\?pf?g@T1sLu:s&s'J3S7Zfq9#cO1J\M$L:2W,UNhQr"mc?*NYG<`oVUl2P+ZGV$;JQg.g:#C8d`uYHmf0&iZ3o
%!.fTV^1gZ+9RFo(9NA,LM>9l=agH(TWpIT&DIUSM.h<JQ.oT.&k]bF%3pBW5D_l0re_H;$'r*9&S4H/i3TrY(o.+R[<>.1e3PuQ"
%Ri1SRSqAX]q0H6oh/;-$DWLjh:3?p2JGB\N\k:Pb&HgGkca%(jo_#GN<13!p'WN.>&VJE&qj%PZXY#&A%l$/A8*!ZE2<TLuOtWBe
%4Ljb*BtY?N"L-Kp'0We/eWg4kfm8-r($WJJA6f3kgaAt?M$.@<f94Zgc3eM_?%c-=#&p!hRntoe[&Rhh[piiUo8.I6RtliWp+j4-
%=^*nQjM#T^abG;MhO'EdQ1lZLg=uqrTj0k3RQdtB[";0Kj%XqIi;'`u'W=u4[X]BnDDb3GL#Ng@\V)T17'oH2?]+#ekNaWF*`^VR
%g"5Rd>)k^+9!(+g_#mb:A!P=ma?ClM,Wt#0@Udp)m5#t7F-KfHc]AJmUmO*oZ%L@7XN=.j@O/6BS#n]rY7cWD]LEboEpUH+:F5G6
%"A;.H;SmHlI^R_U4djh9-tK<BgPYekW^Gn*(.HW/^Fe7nAJC=m@Wg$BD4S\R&V73&9W<UmUd?Sud,c'4^si@K5R#b2EIK+."Kp#g
%Im\gFClkrOZ6Ja/B2g;ie,^Ue%iX_tT/RYX8f_hY=P-TUCPUt6Z^'s<rMt0>ECDaL0jA]A7AK=BWhBtbj"B,Ki`4eWVqEn$dkj',
%PVkjrbRp'7P-/Yu9Xd1YgO9TQ=mh4B:N3`k:6&PI0'c<&s+=jHWq6I8Csdt-_JB6HTsE<*PPGYK2L-b2Un@4`Tf#1dat'FSl<ouP
%n]N<!EU<'XT#rRF9%gu%ZK)#&XQ-iPn/ROG2LklsbGS5P:^oTOK:uTYFFsuXSTGAD@6gA24b"B<p<o0b"pj+2JC%9qL0S.s4gD/L
%b*jG'!0MF;mEq]8>U"jdVd<D^c-k9d.eLn1B="ZEO%.'+hnV^tN[[=10ZZAo:6Z@V!:q/rZTtl-9";OJMR4"pBkI&uh#djIYtas!
%,$qE`_6&6ujUt/E`o(>tl,tlX3.?2<1@paNPr)!uLZH8Ib2nVo*-trr/*0Zt;cP-lLFt":_Pp8OWFDAI)I']q,2,@rES'AT;J)UL
%Qr.g$dHV)+ff^h>%h="si:lTF<i%m^01A@cbZNjL_YWkDie8)WX(2BS!(+5>6^j0m\QE6.?5TVSS3Dpf&4o0amcEZ;KqkTb-!=D/
%+D:64OnQ>=ShBUhS/\Kn2W,QtSMJ3b<>'qmJ>`!poX]NOS-',kN9#+kg,:d2bmYPpqaD>D$q)3@d"VBZl$;.`m069#0ZFp*-!>gi
%"0"W;P!4Q81kEmk7BRt`qEnn[Br:]sS?sc$WtH:DN'Z,G\ujaBcGHXch3!p(OXioMJ_7]"gKCdc>4EHO`n<G-;,Oh99hoV`+mH47
%\`GoiS/!M40fflNVAQ@C_P01_/]F72*`:OS;\9s<Bg/as4X8/Z:B.(6RD>0<?<AD$`F7[d/`B;0s#rQ)J/9ZZRA]8.6us&-=11'9
%&>6g>@EnqM7QQb>=\tP\39W"PN6iJS#=b77AumM,1+UL97oPOcJ.0_+?_3P-d;s7d)8m!n3(9kaid=$OIkDP`YhX(8Yap3MZa('`
%&%<lsmO%=j;>-sl/7$t1mOX6;`@jQ"hkAS$+BgZ9V;#(BYHU:eJ;!#rCiji.3^61H88<6-f)^00@Ma2K,>jZJ.Hn#gjlsU\9$L+)
%V\!$q&n-M(/;&S_:@Cka7i$"CV-hXBENc^HB@+C*kCfN:Yui6`i4=/h/o*OC6IgHEeOp/EIP!tLAAG[gC(>HKRYDgnHV?/>;6>fJ
%=eH/5H:@)_M/La*B1JK;I`%WL2!&GMU?.`Tfjmbd`$&,2dlS92l4ur6(u(fZO2^6L=Z?fFGmrCNMbWFV\:\leR1`c3aUF);MJtVg
%09al.(TmL2\0,`slbG]T<$Z0s3P6bO.tt=%S3;KC;,E0j7^3cg)5\j+mT"X>d%YX^9ps5%!^"`ellEGS"N>2#_4tKu.<CpA4D7Os
%f!7:"#K=)[29SI#M_[Vf&iNWSKS#LKiAl"nQ/TA+PJkdX0Sg'[QMmlHOOiJU[JUG&a6&$@2CGE>c(H=;c-dej`aJi(0"&=gS"a\k
%&_t[(4#Re!n3PqIKjK"^\a7A+qK@?%G][pLSEF1G";JYKS=77;O9euJ^E1VXU18Wq!b=3Daf<)FMSe-jY](/'h>3.6iMLW/F.Dg^
%B\UMZ<#GG&/h<UDf+BGfA5*@_Op9BS7Uq6X0RCdDc^okM,j.BPjN:!sJN\hNX,>MEOWf>F1#tPZ(rTa^66\*._hKF6;d$9PGKU\l
%i=scj;a_q)UrQF"Fkpb(s.QdF#NZs3F8cJG]nr`]W\(8J\SGkbc0(Q2hH.JEqeY#$$bKs%X6CL\Xn`aeFs#S)NrB9".pLpSQ2Z<9
%SboO=G>G3cHb/s"@U&`c*g1HHXf\f"m;9Pt+SlK6VZbM4/ARcWL<c^?a]ahc-oc"m-F,5jL9YS>3G2\U>p754Q$274<B3&KA%1]u
%U'I%!Or\j9R\V.l-^$K!4Q>ef!0@#M?.SE6!72s3Nc.!?Euqcb1ZVuPcJ3A0OEE12",ZBB(UdEB#p2\of6/XJ+d5r#Cf6MV5V@u[
%34\432@V13(BGHbEOpt]f0t/F>i6OfR*!:B@McP2dAZN-+R!J;1WH^BDsF+*a?nLE?<E1?[i4.4CJ0/Xmr>\%="KcF9N5FOI;.]*
%3XW="oOd(Dg15pi-g9r<`E0tOMr451<B"bURFD8MV/?hkRK0#!8uOi,Wg[F"nTmoMofD?h1t=g0lXCpI9h@`;LOS*p;YV`m<5WY8
%;E;MMdk,06XM\%)s"%p&MdNpWP+j15k8eogcsIbt&FB\\nA=o"0N]nHAHI_`M[P19l#5/uc;]oPfij[;,'ZlVa`iq(aYD2MW$h!/
%3OVc:>buPg8SZ5O&C1TOV6e,)^#V:$D<%K9U6j?:.u:DZbSJ?i)#h;IOTb'BdtF<R9Bal>Ig^sg7DG+qTK@X&Z"ZI>Su[/I3#EQt
%`[odIhFQ*gS;b'-`ou\UFSXmdKkB?#-:?]b($:=#TYDfj03g[,k@lAJ2M9o4`j58-e[gAd4PY;s.O""C'[_$%r^KC*?Lhk$ZsQT'
%)dlU(EnW%;RFq0pmKaIsX.6G4o07E+=A2&+'fmfQ$\lnT<]V(4F%SE5lk9Kl:uBiGctJV0I`HnQiT3IU>LcKioG<m`2"%#crSI3a
%S^Gp0r@;Hu/'c/T*?2JNPl]OfoK&_VHtllP,NNu:ra/2pl<GFj^mq^.fP7qkKi&)nHCrQaoS=_oS8;I`X<n0_pXeVp((=D48u;=u
%cFe@T,)1:Ggp$@i^(9%a6-:VQRO.Dj3b6<Aeb^Wib\l2&CJ'T0+cH*l@Ub8O\KYk->AUQP*MI(Dr<(V.9+Q=Nak$#7ettoSQ$nEf
%A]dtZnl`.\@,$,'FhG>=6?bi.:c#o:>#ru`HJBXWDEmP8M1*%99b%sQXkHNs)i"&ERaMN!g+`6jVRG;AoruO=F:ZO_L2b#t&IBPS
%@41@gR-09VViPXg7oMBq"<AOi.p]eQUq#c;be,)D75XA1ma"SF1Cd8lD%6e10$IgbB7b.lOCpRtPfm,Q69:a`Ot5S`,7JR0f0Z(9
%o&Xrgp(]KaAW?dU$6V/<5]_8)![NCNF@nibZ`G\)D^J5J5aRX+V#h:5MeZoCa%=.Ccc?a;U_CA70nik9'98uZcur]4rohq'fu4re
%0$UI[dk7<a)Tj/7)7'F=NoA8a3OoEZVeDN^_+<k$,hu#pFW-b<(eGa'bM:C>b*%f+3;f^EXd.%'#*SD$>SF\Y9Wj6R[*//RV\L;4
%la=HYfsPrZY3E1:7.E@>askhaYq[ic&74@Jc4\Z&2hW)K3A_Rg:3h_c(jQq!!+(>hHb6]3F^,LorleE#0mj+"'_B%J@@1Eml`lrR
%5!BFX\ao#;7&j;cY/+1i`c<!iVWIOX*tR)3(5LOBPIIq[JrhVbAjdb;Q@m5C'ZsZ0U%nJG,.RGNJ;X1$Du5>g+Y0J6aN3*k+P_OW
%68KG%aKaI:n]jPBHq1,kMk,<"Zj!Y7RLUnYB:nS=eK.A)7%j5cNsCYLbt&>8^]T0*'r2^;=bp^E8H[OFLHYW=;q:LiBe#T6,?0"O
%XL!UMB!*GES6,^gFg[W0",2Ke2OUB3o8YO7*h/o:#RF#g!ino(N>k7trD]H1'!*E3dsr^i5Uh/:+JNnYeh:D+!S`0A3L=Tg9\$2,
%%Y)DN?pr]`[pU+uK],$u:=usTo,)qWQ?tfbqlR?nfVqKW^h;Z.Q"t]2#]=TYOi9-)bN%g\YK2'kVUMSm";`L3.8@>0NL=$qXiX!8
%hY2a$RRa-m]@:;a(1oFV*)(C\q7q3UM2!J54<oII-F;#l%DCgABIc+=aEQ:fl7DfB>O9eIOZb$OX6V?t/`"EoaY(KV5#RmF]8nm^
%^H*/?8%To630d'C@SQZf'ZL&o-)<b5I56DTloXQs/kclH:BmqIMp8PH^G*k#%\%n"b.bbU[Z<B-<W))aj0l#NkiR2-=T+.U[r"P;
%ICuQHmP?$hVq'4MboK-[PV<O@Nm4t2"RpiCdVhBX]n*VDn/Wq;&(oIs/GfpHg\:T\<[*+jQaqN'Ci3VT/Fc?e[dWsr?P<a)=7K^a
%5'0,`4*K<Do0=?4OX>+*#8;-6V"GUc>B[Y9X)SjBle(k`Y\X!H54pS9Ff,c<rfn=Pn,Q1=):<:3PaUnAR+\^%$,g7l:V0"7#L)Q4
%h;b&ULZAu2,-!Ng'.+H%;`8DPRd=2+Z%SO'C`WA"m5M:>f(/:s^?52`h7n7Zo]0%IN)2^h]gig$asgF>HGq!lq]aG8r;3coCI[qA
%CmeZ5U@k$g6c@WbDN+f/qHa.RagB!!oV2l1#s$$(YdGTJT['hff"\h%@!Zs#20BFrmJ5T%bd%@aVn0'YI_p20;sI[V1SD.tc2++/
%Oh;K4c(Y*3\En%4a7cLW@_P_qVF12T.H]?07u!6V)g:a>XElLqW+Khi(NPegS,23hSt:)kG4++BHsO0pfZZQb]%%WRi0,30b!6PO
%7fFPlFusjq[!NMcGZ1.Q;fW_23IoN?*?,7r5Y%/]`.L)<`0<WoLR33SGQB-1?9[B/ga#F;VG!Ib4?@iM"[(K<X<"g!UeF^cLn:rp
%ren'#].TG^Y3_L'ntPAjHtII?OkFVCoqC4bAPHc*^3#T8JB_6$;Z\3;l*/H,JW*K;onWq)i9E5>RZp#/qYD]124^=4g#SheA[t@W
%UWcL'Q"aS@jW4-)G`*?-G'!uP%op3,<PFHDZ#;H_VU0@^Dp3;LMl.1NW@!3(F.XYc1uni\M&cj?Z=Dto<R9pa^::;L2/E/JfkO65
%SF$4-lZeg8T&aEbcSnZ]SPikm-8UD7Woa_djOP17PUB+%pee<a<4C`h[%kWY%7h'V=A'ED5O]#X[`mUj=O'jeZ8C*'I7t&/^6[gF
%UA]:>1ul@Cqqptp;@;DaAZkfRa%5###4bT:k4]_9I_;XuIo]3c)W'3%Yur_eXKFcsdFPf'p9qbU?=2F?YZ^EkDR2Q9Z`UG(4oXa\
%I@Fccn<.YE:fNJ$4%?4?TdN%;J\B*+p>\kqqnQF'?>aUs=O_[<:($n(Cps#E^0Rpi81CdP[:?Q"F3/[qY\<?,IK,O'7S[&SC$hrW
%)`AWVhR.jKAnSj/[h&BDp\1el%?#P+9B<8S"#ep1>2QLNcJEhN><=b/D;M[M^nRrLp&/TfO5KtXcL:f0lc&2hrm/@-fd-6&\G/r'
%8-RCh.M4X6-YPCM6RC1dr'aiinb%kT8&&`,?;D3E8LTr9.@M$6_A6fN=aYOIh)?DU8(3*(U.Hgo-of0ThED7#O7GO#,3>d6B_2*f
%?<q"M=ZQu2=0UH=gMn8ACRZO<opIIQ1U#LO*bFT&eeGY6M"6C5'B'(P&c,u"))NZp_>P[pPS]s]H8lk?VE?Y"jJn?"io[sIojBp\
%Q@E():3'H71S$$1>RBr>`p)u#En*_Nj9-[OTV@:32(5$@;a/%$AWT'$cCNS[X4U'QInep<K&M2O>N$eU+*\!j`coGS>d-khNohQK
%=C`r",ZKOT;)$3H@P,Cpi#dIIX4MOkT3og^^]'Ss5.Y9pO,]A@dkcV,cJ2!R[PL5(rYdnB&epD*Qi>2G4s/;eM`)<H@"'gr0Z82F
%5.*o^QB8N:J/L`>nn,fuJIubELQY6D(h-V\B0(u,-uIBoAEAKWVX,cbe)[-dnF?Z-><_E^N_+&E&Y!bq\6Y5JOBG`p':Ii"AF!1[
%0eH<9/n6S^6Xnts9E\'X#6QSe(23FF6Up7d!_2KY=ogB@A9-$9ROp73B,V9%MCg6'8dph?9oLBX5YJYG2>*12X.g9]G<MBV5op5%
%^KnK1d^_3,!u<6oKdQuS6fA9Wo?IV'YIt27J8R[Z:k$gQ9<f`@O[aDq6`sPjbjrqBcT,65P)L.naU[o%!sg3lPfYb\V$ct&B)[H8
%Td#IMp+s/F[3@Od=CU?'2+&k%Ob/?9KnS(Gd3CP3E6me;/.\Vr%(*dqe++RRR[DZh-/H8593A[e'a7W*n<[2Z@i0F+.jS+"qgaYZ
%:2DDRNW3(p'&6na>?fZ%5oq3Y%LO3":81<09KLUqKNJ2pD6(3poa4/:fVaZ_OQg)/6dN*T%E!_rg_I"+88!;AJ^GKEIm@\9`8d^,
%^aY1=PsLOK?&pVrE?eE\_2'peM8^N*L-S5KkMBns&I]MmnJr%BL=PV4(\enXK'./a*B[jS0;urd(a2N`HRE71C"e;(DO@QXT[RKL
%hP?sSM2q7*]qhD#CRED6p]GN<L>a1-mOhm@%[Q%p>-N!E2t7$QB/m(r)\caYmW*9*jFd/0:II*lgbRr9qd3Z_Y1oKQ(DLc)f4[d"
%5kg63TblD[i!me0\[+iDGX3(.8aU6?fb+ml%dM"0!sT2V9El)\YQusB_=qcuhZFrH7VhZa^a\0>"<2R<J.3cSI8(07bXLkVf\KqF
%NT%rGHmHZ_L)?i^gui0q@Uss9i$"3b*L3*"3/liYPE1RE1\BC9$%_4l-;d#"#l0o<)!<RthFZ,[K9qtS`AJsp"4lg'$/80ZgFnMH
%5FBcgj=(3?am1*!1E*`c$Qun*$Ri;m#69f%grZoU&On2`%s@(H3WuO27,<nc0.^a+ZgPm]HjT-4;a<%_f?"5?SrUG#E1U\eeuba\
%OpL=\_kpghNYf^&K>9*<$\Y.jb'hX;9api_AS^dDcP#`3(Z2'R[/g5#.a&Zg+11F#6.t@9h\%7G`cA^3V=DHC5.eu.na1r;4-^HV
%m&Xf'V.%$B'%DC"=l_FKIE/#*+&q<6k)6up=HQFn:;<pS6**87SW@SHg;6nefECm5UcRXj+[Hed!)*mj_%4t*`H^<S&%Udh"+4io
%eE+BJf4mj3G%FeV!5%=eZ")n&e(/<Rq77%E;?"@H+ptQ/VEeFB<nuF<]3OS+^oAP%h$5@amsk<YVE8c!.h)\p?u_5pDF5OpLKW!>
%*]s'F!.FHK0Dc6KAcG5oB_7I>'s5uadF_sHT]_%6oWa[0LTRkc<q>JkIb^Z8,p*VB+4t)DRN1W8HeEVq/GhA(>kb.S5t3B2ho6^!
%2WSQ@fZV"HB%^69-bMMOd<,Y2HF7d^?(0DU_fCW:XfLeMCm@F>d<9\B(:4_Q%d^H1=f.RI^$IgsQMhb61X./7iB:Zsef_3;NceWq
%O1jmAXK48C8T)kX[SOPmC+M1bh6G"\fou*6Q[OY6ZEI:?,ClJJ_-fQ/qoLA:Sk6pC4'#t:X6_oaQMhaU`h*.Q)Dd-;Fk;X:2@RHW
%B4mNYLTRk3j#)-_LD-Ot^oN`D7)X4XNu]an#k6Ki^;FPcZnhO-kG`:(hgM*=KoL?Z=4qe"hbGKaZ898-(rS-P(!JOd`rpW3YsB3%
%#0\9ip/3YeAi4eOFX=)JW[CbX?*iH..'3\+G63=6?Bnmc,^qr.:P9,#"T8'S5Qt!CV$$r!7O`3&'t+?u4Z3_jI]fC,U?jsXQ$p%A
%])s,HI`r6.6`IY,Nu^=FAmAp)@E5fBa5tga4j2[jX],OB#jeg+7?=.'^$IgsQMoPk#leeS`"`RJ_#5m*NGVdYlY\6M%P-iPKF"<r
%),.DWdUMhp>9%@t*]qrkF$00%n$#sgeOkEt'1Z0f=<NE)48.=3C\E+?I>??i/<DDRJGZt\.ESD,HgKCtm^BFiYjDdNO?!-$P3c0=
%eo,#Y%:ahh=msS?n$#e-Xc,Nc*(t1sb*Z\,(cZ%"H^9)8Xg3G?c9cke`(l%r5aQ4nNt$`kiAI!6hdNQ:=rHkl&Z#-NQ)O3YEk,U]
%&'^0KloXQ9Uc-\ED@iUMnrk7Z@t=gUfH<AJ$AsFRTNMg8N&>!a-+UB?1$1#FljOA7/,KfLM^r4LN**_pP+'rGa-&"?SC>6q^;JC-
%,^#SC'?XRh,r)[ZYXoP<ZL>#W:sof:O*]T;>'MKZ2sdeZBCO>RflpP%r3\Z_35Ree(K/sm48.=31:P[]q[Ug(p-Mf_DOHH0;a&K%
%3K;[$a,8^d*dcRafIZnY5-HCbpSCE/I\8/0o[k>,:&b+D$bh1di8<a.cso-?-,(S]:gf>)/!K8$ZL>$);;u@B1q)#d<\(GgY&-a>
%.p^nmI)j[D]gdhZk*R\<NGd*QLJ#e7.ej4jCU1t2Cn/JL%3s0X_Uc8%A`$qN=bL@SEY`)&ctFg1[iSEKHgFjsp>W?DI>?(QJ"olf
%gsmGR_qJEYp=QXlTPS2s@2mYsO]9OM'JPPA.isqj@g@mZ`N@K+.%>jBCtdq;ZlfOO\6V2ifWd5cVQK2Hlr\k(63YZ*VH.`kGHP,k
%C#?J$0pd=OI`9alb#$1Em1eQ2N,&7W,]20rEEh+?fQIVJZT:/D,UV]B'\$sHKFJ:2Yn_Wg/Riad_]d^:'U0CpJ#43QfOMtITX%eT
%G?A%5=&'$#0HtZL.5/'Bb,?31A&Ie8%is;4/,Kf\ARDQ)/>ZV^*6g)>W.gD%0i8%"C`'$1a^0(TI>=r1BVdar/D)W`DTl?a2X%D3
%QQBi^>JW8F/GM/=7A94*Z<(02kVY>N`r]#f1Q-V_d]E/(K'rN*p[R@]o&o!/kMc=$iVVfsqrcr8kMc=$iVVfsqrcr8kMc=$iVUq3
%ha-Mrk>NG]TQJmh/ZWWJ\qYm^(H9$C"<eFEC.noVmj:V@G)(KSkDQu-2f.f;7egCe$Z"Fq16I'Je"X67RY=\Gkg,0#S:#]&EdRnu
%\XYL4!?M4uH,qIO4Ehl,knGaF%&EO3'2Qqr3r!JL^[;8YSH3nip&<mC5P\c4<Wsei&bj6GH'O-`^qf:H`C_MMO!>.$*mgW<'HP*3
%Se;"\2S`nI9^[$PgJu[I4rAeh*lM?H39/dAn^YjdVfT'"$c)r0gip8si@lu?K$O<S*"C@9pU0OU[2BC8GG!/DI'AMbM!<\NhXHF7
%M2_apYT!j1F?1`%LSK-IdE$s32*1FY_bN"3JAR&'5^+q79WYWBqok7FS8mn`'KWag3;-b:?hYjl"!.8d*9.!tDpZ$RlMu^1lsjrt
%@6nl,!c(Cu*YM!iKL=r5G\k1W6`9q%.02o<pgY]B@jghW-h:apnma'<@jghW-h:apnma'<@jghW-h:apnma'<@jghW-h:apnma'<
%@jghW-h@;HS]G/QJne%Q]>S>$"uuJ70ku)c"$e[ZaHM!%8i&"r+AXK)WE%ii3i$Iloh</\4b%<N;=^uoU8#.\>B<9*^K-uh8$ggR
%U9A'R>".WZOk?R)&NMQK2TMR3<6%[<g56Nq6*WZ?-h=&O;/$*_<s\ACUqNX^\36*5L?IKqrSD9U8r[k,cNq\<?HoZccY#sZa7ls`
%dOedHSJS/Rnp!d'P.ifW+I(5M=0+3BRWu&D?U91fJGW3i!j8rV',t8L<RL:KY3*`/kLld/dHpP-kj-lm<hF-$W:04/B.$:H23AX"
%Mp2e!TZ\^*-I)>rTN<.m^-0611+(\SR0]fo)$<6/UK/sCFhGf^C<6HJ7;q<IlKtZ_%HV;pXa<>sWdZi"l-(lhWc"FXL/qetk7L(>
%DiX&UXQJ.>lS<O_lIMtHW8"AL&OTd9M/U\Sh!/!/H!4(h<+h1(al*D$PfEcSo&_ipjU8cuFh4?mfeiVN]Jtn^="od%bQJmG=C58a
%?N&F"g``^GnP/XueoDkXdou%^aGYG[41^F@N$T?B!MQ1lOJCg6(FCgX$[M:h&9#YE7u*_E=%*dBF3e24Ft28"WlUK6>AH^"^U?>N
%Y@bO^7:/RZ[*DppX:CYMII>b\]!X1pJruj1+6,baP+sViabNXI%dU01W\Nh-J/`k7>$*k^Am?(qqeA$uh.k?8ohk@-<V1EM:[@J/
%[RkES<^eF;0/4a9AaM?m\j0g&jq5qCim+(e9VBXe>$*_S>SVD1da_Tp"F'QRIPcC7/,D<8Vr&,sf;f%.ofJS;e2T)RcuH%)U^TB]
%5cnNT^PS/bWgQE/JR?3,Wj6@gU,o?O&sR,'-GG?9c<BoB4oLJIZC35=dY;l_Glc!HcDV&&A_c86Ftq0:O=2j1r9EdhfrSfffA$`A
%)gWQ3("G[f&Qa%)aR4h3=s)!qc\fGsmHI-+_0GE;((QrUFR%s,5X(+3#uXbsK-<G>"G/6_g!=JA<MbB)C79sJHiDa'Wj-J"23!$"
%ccG_0euSUHFF7-]AT1F0n2TLl0b<]jcCk=FX!ATtSXuoN9g>ND>c[PW[qg[$bPLMnadEkI&?S*FD-6@[Rh`c(N4WXZ(Pn$0D)jMh
%RU_aCI3%.mY>8>KQuU'3-\g9:kj#!-o_NuL0\m["&/j8<40GbLgT-nP\?Y5#%7?dPG'$d7D3_f'lObF`okAk3HT`nU3]<"c3_8T\
%R*#1kRTLWB874PGFrS#9hDH+q<a(;q[84*rlRSRTZrIf*[.aF*@EB>-XQ[V[BtMUO!dXcKSQ]CFZ-8ZNNpc-J]Bd6bb-:\OEgmMZ
%[Po<6T;/a1beeTp\X`eIdZ2Z9p[bFV%DQYHLtd:Ug9;nM_,aK9DRll4,L9_$YNAomkHh%hj5[(.nNE8ZUtH-f6u0hW_(*F+LYOGN
%qR!CpUd!]<XfmmVO'0j5`a#d*d8V.`@9*LmIF@0/>Th@"X&J>bkkD+Alf^1fiI-oU<51+[j26_&;m80aVNU2`idXG(dG4S5L)>qs
%[[=sP-5IB6po5_Fp=7r]l=ZaO8$ggRU9A'RqUJMd%?IDJcPoo0$tZ+C!dPIpV/[B06Qf/gN/H8jYC[nCMC)0[Hu3!7.GQE<R_,]4
%*](HOC48&;4_smT3fVfK!Ac^U3o2P9AK>s@_!c#NN5O+.&bNntZ[Lp=>kLcu;VqpNeGLJ.&QaWfV"N</OlrpuVtna,orRBCfUdP7
%k5<V[bpb4\eeq7'G%_mk#++.k@),7L[#)lo6Aa=G=%RJGlC#F&f@pb0ZcZ=r#]H'_gmAa;q_UOk7cK<>NpZ'IE6Uc=EAMN8j,FDX
%_!7_;/4h3%Fu,4-hoN2^l`4.%=jI4s>a67OksF2U)DQB@\ZmJ@qD:F*]q,se*SWAVj'fk3[k,:W#D*)5FQb\mGDh-WNW(!,^su":
%#,0%le\1s:l]44YZfjeV]mON&_>^jcHcgJ%&%f4m!2X9Lig]/nXQ;X-Vi:[5ACu@"9J*?p!tT9%eZ$WT]-kYs#4eRXJ6$*,'e;0-
%R=H5DZ&+#4"`9YB]jqN<MqM>X.-EdrO(PS.7:4+/Zp@#UKCG*DHtAl$9DDoiG$*GhWe72Fl?$D(KfG2BN>?bUDI<3Sh.d9Bg/C"A
%0WP)bl@D;HK\b0^+O=Dq:[>&A(>&/#Cel!?G]Y5KNX\)3-$3HJi%0b'Vh2:;-g`9Di;$B2!CoQlQl:SdX'uaNMCc#NbtT()ldYiI
%p3YB_F`^EKC']O1bPQTo?+4F&#sGo$0/;jFaGEJo?!kSAc&*iec)Fn!n>/,qK"39'lte9cPaaaQIPq!cC\g*'Vl`IJQ=.!Vlm-Y*
%Sa%rmW'2PWnar2eO*Q0h9/nGj^uA</<lH%q'ictb>B;[3XK>FmX4crEe(;u1D9Gh&dS62/q_E;JV\-;LONDHXW"%$E*ESH3`VNdG
%^W]i&+sRBbKMEfcJ=#E"j4$`QC;U$D73CYNm,P*U+2ZL(1G*fJ:jOaAmMK5!$`P&.AUs>1\/^+G1)KjVd!C2h8)+gEX/6;g>>5d1
%dfjYuoKGEfD`'C4@W(S@jdJ2V28>SCT/D$;hp\GbPX"CRkp*gE6WXOED<[NLI*&b^q]h1M?'XKf\\:Zk8R(j]+O-s#@G*T\XQVNe
%\n,JpJNSG,5-9lXY@g:2a7clCOm]V6hnV-DDcaH_0<jJEF*&,TIR1t)bssHq#?^ljX6//T<]#B,]\Y?W?#:>PI;<V95([XBRU=<g
%c^MS.mV*mn*WIrR3u]N+N,k*I[q<">AolGNm(a^1g>hQN5M*#`-88FO)eOfJ<`+ookHh]F>Kf:UO(PS.7:4+/[)!J59Z#gIakeM/
%N%F\^8])p18_TjEL(gtD7lp%4XY6,`E,S`MjG\c'$S$<9?e$P2cdl!)j]R"g:SP2%P5BKq[e\AN:?Rjo(7$8]>]FqNBCM@&2pH'N
%k1Q;4`Nbs+9OOF-*L$9(.OlbHX1:!0_sGkMBH)dYqDu'_mE]$?SkR\OP'E[982UT9B!G"\'aJV+_AIOVEhEJ`eY:0aW3*Uh,JUJ3
%XO*sq'EtPJF\/c3c*(`oB2)`'pTufJ.DZqo_VE[=Vu^1VJHmRAcY^bEQ9c[:I?fCf6p22c6XEl:FB'$-=j=&lcT]U7B!5i9?cVlI
%H/>'HTN5Q,AQ"pN-e.rZ))4D*T&pM'F)g>DgFB7uD3\U`Nbt%MA]D1$3[&!;jZ#b?>@i;lXg2a=3k?]`pr`HY\'g"&a$s'.N*5T&
%FG9=R4b;dYf9lM:>!l7XBoUH^[:.XkD&$1a[l$+0F^(d+=(NCtfCX3-*&CKu`Q%I0Dcl/m^`N$qV3d`#p:0*7ag'.@RYgIVY?G0=
%;:,NlR.h%?>+MdilEjNk\JjeHFXk+/rJm>\ND>o/I]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@R
%I]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@RI]TZ#XK?rQXa[@RI]T[NgX]Dds5DSerU^&cra5]b
%hu2Gn^],s:rJ,mrc[PiKhu3"ns)7o5J,I4As1]Y*rJ+b[k!/kD5Q:?MhuC<<p[A.2huBUhreK*4IfGmeq!3G-:]LD9rqcLVr]gG^
%56H0GM9l4in,C<+p-8NPrrCgla%Q~>
%AI9_PrivateDataEnd
