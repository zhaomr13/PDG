%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gnuplot 4.6 patchlevel 4
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 172 68 651 519
%%HiResBoundingBox: 172.800135 68.544068 606.000005 518.687914
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F9_0 /Symbol 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/alpha/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
270 rotate
-595 0 translate
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
10 w
3.8 M
/DeviceRGB {} CS
[0 0 0] SC
4532 2744 m
4532 2807 l
4532 6055 m
4532 5992 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 461.2 239.984] Tm
0 0 Td
/F8_0 24 Tf
( 0) 20.016 Tj
Q
3980 2744 m
3980 2807 l
3980 6055 m
3980 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 406 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 10) 33.36 Tj
Q
3428 2744 m
3428 2807 l
3428 6055 m
3428 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 350.8 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 20) 33.36 Tj
Q
2876 2744 m
2876 2807 l
2876 6055 m
2876 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 295.6 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 30) 33.36 Tj
Q
2325 2744 m
2325 2807 l
2325 6055 m
2325 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 240.5 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 40) 33.36 Tj
Q
1773 2744 m
1773 2807 l
1773 6055 m
1773 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 185.3 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 50) 33.36 Tj
Q
1221 2744 m
1221 2807 l
1221 6055 m
1221 5992 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 130.1 226.641] Tm
0 0 Td
/F8_0 24 Tf
( 60) 33.36 Tj
Q
4532 2744 m
4469 2744 l
1221 2744 m
1284 2744 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 264.392] Tm
0 0 Td
/F8_0 24 Tf
( 0) 20.016 Tj
Q
4532 2928 m
4501 2928 l
1221 2928 m
1252 2928 l
4532 3112 m
4501 3112 l
1221 3112 m
1252 3112 l
4532 3296 m
4501 3296 l
1221 3296 m
1252 3296 l
4532 3480 m
4501 3480 l
1221 3480 m
1252 3480 l
4532 3664 m
4469 3664 l
1221 3664 m
1284 3664 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 356.392] Tm
0 0 Td
/F8_0 24 Tf
( 5) 20.016 Tj
Q
4532 3848 m
4501 3848 l
1221 3848 m
1252 3848 l
4532 4032 m
4501 4032 l
1221 4032 m
1252 4032 l
4532 4216 m
4501 4216 l
1221 4216 m
1252 4216 l
4532 4400 m
4501 4400 l
1221 4400 m
1252 4400 l
4532 4583 m
4469 4583 l
1221 4583 m
1284 4583 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 441.62] Tm
0 0 Td
/F8_0 24 Tf
( 10) 33.36 Tj
Q
4532 4767 m
4501 4767 l
1221 4767 m
1252 4767 l
4532 4951 m
4501 4951 l
1221 4951 m
1252 4951 l
4532 5135 m
4501 5135 l
1221 5135 m
1252 5135 l
4532 5319 m
4501 5319 l
1221 5319 m
1252 5319 l
4532 5503 m
4469 5503 l
1221 5503 m
1284 5503 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 485.2 533.62] Tm
0 0 Td
/F8_0 24 Tf
( 15) 33.36 Tj
Q
4532 5687 m
4501 5687 l
1221 5687 m
1252 5687 l
4532 5871 m
4501 5871 l
1221 5871 m
1252 5871 l
4532 6055 m
4501 6055 l
1221 6055 m
1252 6055 l
S
1221 2744 3311 3311 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[-1 0 0 -1 321.134 198.4] Tm
0 0 Td
/F9_0 24 Tf
(a) 15.144 Tj
15.1441 -7.2 Td
/F8_0 19.2 Tf
(i) 4.2624 Tj
15.1441 12 Td
(-1) 17.0688 Tj
32.2129 0 Td
/F8_0 24 Tf
(\(Q\)) 34.656 Tj
[0 1 -1 0 518.8 368.542] Tm
0 0 Td
/F8_0 24 Tf
(log) 32.016 Tj
32.016 -7.2 Td
/F8_0 19.2 Tf
(10) 21.3504 Tj
53.3664 0 Td
/F8_0 24 Tf
(\(Q/GeV\)) 89.352 Tj
53.3582 424.7 Td
(SM) 36 Tj
135.7578 72.6 Td
/F8_0 12 Tf
(SOFTSUSY 3.6.2) 94.704 Tj
104.039 372.8 Td
/F9_0 24 Tf
(a) 15.144 Tj
119.1831 365.6 Td
/F8_0 19.2 Tf
(1) 10.6752 Tj
Q
5 w
/DeviceRGB {} CS
[1 0 0] SC
1404 5128 m
1404 5767 l
1282 3105 m
1302 3156 l
1327 3208 l
1351 3261 l
1375 3313 l
1400 3365 l
1424 3418 l
1448 3470 l
1472 3523 l
1496 3575 l
1520 3627 l
1544 3680 l
1569 3732 l
1593 3784 l
1617 3837 l
1641 3889 l
1665 3942 l
1689 3994 l
1713 4046 l
1737 4099 l
1761 4151 l
1785 4203 l
1809 4256 l
1833 4308 l
1857 4361 l
1881 4413 l
1904 4465 l
1928 4518 l
1952 4570 l
1976 4623 l
2000 4675 l
2024 4727 l
2048 4780 l
2072 4832 l
2096 4884 l
2120 4937 l
2143 4989 l
2167 5042 l
2191 5094 l
2215 5146 l
2239 5199 l
2263 5251 l
2287 5303 l
2311 5356 l
2334 5408 l
2358 5461 l
2382 5513 l
2406 5565 l
2430 5618 l
2454 5670 l
2478 5722 l
2501 5775 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 170 472.581] Tm
0 0 Td
/F9_0 24 Tf
(a) 15.144 Tj
15.1441 -7.2 Td
/F8_0 19.2 Tf
(2) 10.6752 Tj
Q
[40 20] 0 d
/DeviceRGB {} CS
[0 1 0] SC
1644 5128 m
1644 5767 l
2890 3105 m
2884 3156 l
2867 3208 l
2850 3261 l
2832 3313 l
2815 3365 l
2797 3418 l
2780 3470 l
2762 3523 l
2745 3575 l
2727 3627 l
2710 3680 l
2692 3732 l
2675 3784 l
2657 3837 l
2639 3889 l
2622 3942 l
2604 3994 l
2586 4046 l
2569 4099 l
2551 4151 l
2533 4203 l
2515 4256 l
2498 4308 l
2480 4361 l
2462 4413 l
2444 4465 l
2427 4518 l
2409 4570 l
2391 4623 l
2373 4675 l
2355 4727 l
2338 4780 l
2320 4832 l
2302 4884 l
2284 4937 l
2266 4989 l
2248 5042 l
2231 5094 l
2213 5146 l
2195 5199 l
2177 5251 l
2159 5303 l
2141 5356 l
2123 5408 l
2106 5461 l
2088 5513 l
2070 5565 l
2052 5618 l
2034 5670 l
2016 5722 l
1998 5775 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 194 472.581] Tm
0 0 Td
/F9_0 24 Tf
(a) 15.144 Tj
15.1441 -7.2 Td
/F8_0 19.2 Tf
(3) 10.6752 Tj
Q
[20 30] 0 d
/DeviceRGB {} CS
[0 0 1] SC
1884 5128 m
1884 5767 l
4066 3105 m
4021 3156 l
3980 3208 l
3939 3261 l
3897 3313 l
3856 3365 l
3815 3418 l
3774 3470 l
3733 3523 l
3691 3575 l
3650 3627 l
3609 3680 l
3568 3732 l
3527 3784 l
3486 3837 l
3445 3889 l
3404 3942 l
3363 3994 l
3322 4046 l
3281 4099 l
3240 4151 l
3199 4203 l
3158 4256 l
3117 4308 l
3077 4361 l
3036 4413 l
2995 4465 l
2954 4518 l
2913 4570 l
2872 4623 l
2831 4675 l
2791 4727 l
2750 4780 l
2709 4832 l
2668 4884 l
2627 4937 l
2587 4989 l
2546 5042 l
2505 5094 l
2464 5146 l
2423 5199 l
2383 5251 l
2342 5303 l
2301 5356 l
2260 5408 l
2220 5461 l
2179 5513 l
2138 5565 l
2097 5618 l
2057 5670 l
2016 5722 l
1975 5775 l
S
[] 0 d
10 w
/DeviceRGB {} CS
[0 0 0] SC
1221 2744 3311 3311 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
