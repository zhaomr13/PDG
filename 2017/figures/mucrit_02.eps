%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (Donald E Groom) (Berkeley Lab)
%%Title: (mucrit_02.eps)
%%CreationDate: (7/25/02) (1:31 PM)
%%BoundingBox: 161 278 467 503
%%HiResBoundingBox: 161.7292 288.3233 466.3541 502.2781
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%DocumentNeededFonts: NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Roman
%%+ Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 33 582 761
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 1 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI5_OpenToView: 122 540 3 1274 981 18 0 1 3 40 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:30 33
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -33 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 92 8
%%BeginData: 6560 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD86FFA8A87DFF7DA87DFD79FFA8A8A87DA8A8A87DFD70F8FD08FF
%7D7D7DA87DA87DA8F8FF8CFCFD35FFF8FD35FFF8FD10FFF8FFFC8CFD6BFF
%F8FD10FFF8FD6EFFF8FD10FFF8FFFF07FD6BFFF8FD10FFF8FF0607FD6BFF
%F8FD10FFF8F8FF07ADA6FD68FFF8F8FD10FFF8FD05FF82ADA6ADFD65FFF8
%FD10FFF8FFFFA6ADFD04FFA7ADA6FD63FFF8FD10FFF8FFFFFF82AD82ADFD
%04FF82AD82FD27FF527DFF7D527D52FF7DA8FF7D7D7DFFFF52FF52FD26FF
%F8FD10FFF8FD06FFA6ADA7ADFD04FFA6ADA7FC8CFCFD22FFA8FF7D527D7D
%FF7D7DFF7DFF7D5252FF7DA8FD26FFF8FD10FFF8FD09FFA6AD82FD05FF8C
%FC8CFD21FF52FFFFFD047DFF7DA8FF7D7D7D52A8FF52FD27FFF8FD10FFF8
%FD0BFFADA6ADA7FFFFFF8CADFFADA7FD57FFF8FD08FF7DA87DFF7DA87DFF
%F8FD0EFFAD82ADFF07FFFFFFAD82ADFD1AFF7DA87DA87DA87DA87DA87DA8
%FFA87DA87D7D52A8527D52A87DA8FD21FFF8FD09FF7DA8A8A87DA8A8F8F8
%FD0FFFA62F0729FD04FFA6ADA7FD13FFF8FD15FF7DA8FF7D7DA8FFA87DFD
%20FFF8F8FD08FF52A87DA87DA87DA8F8FD12FF07A6AD82FD05FFA6ADFD0F
%FFF8F8FFFFFF7DA8527DFFFFA8FFFF7D52FFFFA87D7D52A8FF7DA8FF7DA8
%7DFF7DA8FD21FFF8FD10FFF8FD15FFADA6ADFD04FFA7ADA6FD0AFFF8F8F8
%FD05FF7DA8A8FFFF7D7DFFFFA8A8FFFF527DFF7D7DA8FD2AFFF8FD10FFF8
%FD17FF82AD82FD04FFAD82ADFD07FFF8F8FD07FF7D7D7DA8FFFF7DFFFF52
%52FFFD047D527DA8FD2AFFF8FD10FFF8FD19FFADA6ADFD05FFADA6FFFFFF
%FD04F8FD18FFA8FD2BFFF8FD10FFF8FD1BFF0607A6FD04FFAD82ADFFF8F8
%F8FD45FFF8FD10FFF8FD1BFF07FFADA7ADFD04FFA6ADA7FD47FFF8FD10FF
%F8FD1FFF82AD82FD05FF82ADFD45FFF8FD10FFF8FD21FFAD07ADFD04FFA6
%ADFD44FFF8FD10FFF8FD21FF060706ADFD05FFADA6FD42FFF8FD10FFF8FD
%22FF06FFFFADA6FD04FFADA7ADFD40FFF8FD10FFF8FD26FFAD06ADFD04FF
%82AD8CFCFD3DFFF8FD10FFF8FD27FF2F07ADA6FD04FFFC8CFD3DFFF8FD10
%FFF8FD2AFFAD8207FFFF8CFCA6FC8CFD3AFFF8FD08FFA8FFFD06A8F8FD2B
%FF07062FFD04FF8CFCA6FD39FFF8FD04FFA8FFFFFF7DFF7DA87DA87DA8F8
%F8F8FD2CFFAD0607FFFC8CAD8CFCFD35FFF8F8F8FFFFFF7DA87DFFFF7DFF
%FD06A8F8FD2AFFF8F8F8FFFF29A6FFFFFF8CFC8CFC8CFD35FFF8FFFFFF7D
%7DFD0BFFF8F8FD29FFF8F8F8FFFFFFAD820706FFFFFF8CFC8CFD33FFF8F8
%FFFFFFA87D52FD0AFFF8FD28FFFD04F8FD06FF06ADFFFFFFFC8CADFD34FF
%F8FFFFFF52A8FD0BFFF8FD26FFF8F8FD0BFF82070607FFFFFFAD82FD32FF
%F8FD04FF7DA8FD0AFFF8F8FD0EFF7D7DFF527DA8A87DA8FFFF7DA87DFFFF
%52FF7DFFFFF8F8FD0FFF29A6FF07FFFFADA7ADFD2FFFF8F8FD04FF527DFD
%04FF7DA87DFF7DA8F8FD0FFF7D7DFFA8A87D527D52FFFF7DA87D5252A87D
%7DFFFFF8FD11FFAD06070607FFFFFFADFD2FFFF8FFFFFF7D7D52FD04FFA8
%FFA87DA8A8F8F8FD0EFF7D52FF7DFF7DA87DA8FFFF7DA87D7DA8FF52FD18
%FF2F0707FFFFA7ADFD2DFFF8F8FFFFFFA8A87DFD04FF7DFF7DA87DA8F8FD
%3AFF078207FFFFFFAD82FD2CFFF8FFFFFFA87D7DFD0AFFF8FD0DFFA8A8A8
%7DA8A8A87DA8A8A87DA8A8FF7DA87DA8FD047DA8A8A8FD14FF29072FFFFF
%FFADA7FD2BFFF8FD06FFA8FD09FFF8FD1EFFA87DFF7D7D7DA87D7DFD16FF
%060706FFFFFFA6FC8CFD28FFF8FFFFFF7D7D7DFD0AFFF8F8FD0AFFA8A87D
%7DFD05FF52FFFFFF52FF527D7DFF7DA8FFA87D7DA8A87DFD17FF062F07FF
%FFFC8CFC8CFD26FFF8F8FD10FFF8FD0BFF52FF7DFFFFA852FFFF7DFFFF7D
%7DFFFD04A8FD22FF070607FFFC8CFC82FD26FFF8FD06FFA87DFD08FFF8FD
%0BFF7D7DA8A8FFFFA8FFFF52FF7DA827FF7DFF7DFD24FF29072F07FFFFAD
%A7FD25FFF8FD05FFA852A8FD08FFF8FD0BFFA8FD36FFAD06070607FFFFA6
%ADFD23FFF8FD06FFA8FD09FFF8F8FD43FF062F0707FFFFA7FD22FFF8F8FD
%05FFA87DA8FD08FFF8FD46FF070607FFFF82ADFD21FFF8FFFFFF7DFF7DFD
%0AFFF8FD47FF29072FFFFFA6ADFD20FFF8FFFFFF7D527DFD04FFA8A87DA8
%7DFFF8FD48FF070607FFFFFFADA6FD1EFFF8FFFFFF7D7D52FD04FFA87DA8
%A8A87DF8F8FD48FF07062FFFFFFFADA7FD1CFFF8F8FD0AFF7D7D7DA87DA8
%F8FD4AFF070607FD04FF82ADFD1BFFF8FD10FFF8FD4BFF2F0729A6FFFFFF
%A6FD1BFFF8FD10FFF8FD4CFF07060706FFFFFF82ADFD19FFF8FD10FFF8FD
%4EFF0707062FFFFF8CFC8CFCFD16FFF8FD10FFF8FD4FFF06070607FFFC8C
%FC8CFD16FFF8FD10FFF8F8FD50FF2F072907FFFFADA6FD14FFF8F8FD10FF
%F8FD11FF7DA87DFD3EFF070607060706FF82ADFD13FFF8FD10FFF8FD0CFF
%F8F8F8FFFF7DA87D7D7DFF7D277DFF7DA8FD37FF0707062FFFFFA6ADFD12
%FFF8FD10FFF8FD0CFFF8F8F8FFFF7DA87D5252FF527D7DFF527DFD39FF07
%0607FFFFFFADFD11FFF8FD10FFF8FD57FF2F0729FFFFA7ADFD10FFF8FD10
%FFF8FD58FF070607FFFFFFAD8CFCFD0DFFF8FD10FFF8FD0DFFF8FFFFFF7D
%7DFFFFFF52A8A87DFD3FFF2F070706FFFFFC8CFD0DFFF8FD10FFF8FD0CFF
%F8F8F8FFFF7D7D527DFF7D527D52FF52A8FD3DFF0706070607FFFF82ADFD
%0BFFF8FD0AFFFD06A8F8FD0DFFF8FFFFFFFD047DFF527D7D52FF7D7DFD3F
%FF072F072907FFA7ADFD0AFFF8FD0AFFA8A87DA87DA8F8F8FD5DFF070607
%06FFFFADFD08FFF8F8FD0AFF7D7DFD04A8F8FD5FFF2F070706FFA7ADFD08
%FFF8FD10FFF8FD61FF060706FFFFAD82FD06FFF8FD10FFF8FD62FF072F07
%29FFADA7FD05FFF8FD10FFF8FD63FF06070607FFFFA6FC8CFFFFF8FD10FF
%F8FD65FF2F0707FFFF8CFCFFFFF8FD10FFF8FD66FF07060706FFFFADFFF8
%FD10FFF8FD67FF29072F0729A6ADF8FD10FFF8FD68FF0706070607FFF8FD
%10FFF8FF7DA87DFD0CFF7DFF7DFD07FF7DFD06FF7D7DFD04FF7DA8FFFFFF
%A87DFF7DA87DFFA8A8FF7DFF7DFD13FF7DA8A8FD0EFFA87DFD0CFF2F0707
%F8FD10FFF8FF7DA87DFD0CFF7D7D7DFFA8A8FD04FFA8FFFF7DFFFFFF7D7D
%A8A8A8FF7D7DA8FFFFA8A8FF7DA87DFF7DFF7DA87DA8FFA8A8FD10FF7D7D
%FF7DA8FD0CFF7DA87DA8FD0BFF0706F8FD10FFF8FF7DA87DFD0CFF7DFF7D
%FF7DA8FD04FF7DA8A87DFFFFFF7D7DFF7DA8FF7DA8A8FFFF7DA8FF7DA8A8
%FFA8A8FF7DFF7DFF7DA8FD10FF7DFFFF7DA8FD0CFFFD047DFD0CFF29F8FD
%0AFF7DFF7DFF7DA8F8FD6EFFF8FD0AFFA8FFA87DA8A8F8FFFFF8FD35FFF8
%FD35FFF8FD0AFF52FF7DA87DA8FD70F8FD93FFA8FD0FFFA8A8FD14FF7DA8
%FD0DFF7DFF7DFD0EFFFD04A8FD11FF7DA87DA8FD0AFF7DFF7DFF7DA8FD11
%FF7DFD0FFFA8A8FD14FF7DFD0EFFA8FFA87DFD0DFFA8A87DA8FD11FFFD04
%A8FD0AFFA8FFA87DA8A8FD11FF7DA8FD0EFF7D7DFD14FF7DA8FD0DFF52FF
%7DA8FD0DFF7D7D7DA8FD11FF7DA87DA8FD0AFF52FF7DA87DA8FDFCFFFD4B
%FF7D7D7DFD7DFFA87DFD7EFF7DA8A8FDFCFFFDB9FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			dup length 1 sub
			1 exch
			getinterval
			
			cvn
			findfont
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
					findfont
					[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: NewCenturySchlbk-Italic
%%IncludeFont: NewCenturySchlbk-Roman
%%IncludeFont: Symbol
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _NewCenturySchlbk-Italic NewCenturySchlbk-Italic
[/_NewCenturySchlbk-Italic/NewCenturySchlbk-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _NewCenturySchlbk-Roman NewCenturySchlbk-Roman
[/_NewCenturySchlbk-Roman/NewCenturySchlbk-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Symbol Symbol
[32/space
/exclam
/universal
/numbersign
/existential
/percent
/ampersand
/suchthat
/parenleft
/parenright
/asteriskmath
/plus
/comma
/minus
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/congruent
/Alpha
/Beta
/Chi
/Delta
/Epsilon
/Phi
/Gamma
/Eta
/Iota
/theta1
/Kappa
/Lambda
/Mu
/Nu
/Omicron
/Pi
/Theta
/Rho
/Sigma
/Tau
/Upsilon
/sigma1
/Omega
/Xi
/Psi
/Zeta
/bracketleft
/therefore
/bracketright
/perpendicular
/underscore
/radicalex
/alpha
/beta
/chi
/delta
/epsilon
/phi
/gamma
/eta
/iota
/phi1
/kappa
/lambda
/mu
/nu
/omicron
/pi
/theta
/rho
/sigma
/tau
/upsilon
/omega1
/omega
/xi
/psi
/zeta
/braceleft
/bar
/braceright
/similar
161/Upsilon1
/minute
/lessequal
/fraction
/infinity
/florin
/club
/diamond
/heart
/spade
/arrowboth
/arrowleft
/arrowup
/arrowright
/arrowdown
/degree
/plusminus
/second
/greaterequal
/multiply
/proportional
/partialdiff
/bullet
/divide
/notequal
/equivalence
/approxequal
/ellipsis
/arrowvertex
/arrowhorizex
/carriagereturn
/aleph
/Ifraktur
/Rfraktur
/weierstrass
/circlemultiply
/circleplus
/emptyset
/intersection
/union
/propersuperset
/reflexsuperset
/notsubset
/propersubset
/reflexsubset
/element
/notelement
/angle
/gradient
/registerserif
/copyrightserif
/trademarkserif
/product
/radical
/dotmath
/logicalnot
/logicaland
/logicalor
/arrowdblboth
/arrowdblleft
/arrowdblup
/arrowdblright
/arrowdbldown
/lozenge
/angleleft
/registersans
/copyrightsans
/trademarksans
/summation
/parenlefttp
/parenleftex
/parenleftbt
/bracketlefttp
/bracketleftex
/bracketleftbt
/bracelefttp
/braceleftmid
/braceleftbt
/braceex
241/angleright
/integral
/integraltp
/integralex
/integralbt
/parenrighttp
/parenrightex
/parenrightbt
/bracketrighttp
/bracketrightex
/bracketrightbt
/bracerighttp
/bracerightmid
/bracerightbt
/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
%AI5_BeginPalette
0 0 Pb
0 0 0 Xa
(New Color Swatch 6) Pc
0.7608 0.898 0.5255 Xa
(New Color Swatch 7) Pc
0.0431 0.2274 0.5373 Xa
(New Color Swatch 8) Pc
0.898 0 0 Xa
(New Color Swatch 9) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 1 0 79 128 255 Lb
(Layer 1) Ln
Mb
0 A
300 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
161.7292 288.3233 m
161.7292 502.2781 l
466.3541 502.2781 l
466.3541 288.3233 l
161.7292 288.3233 l
h
W
n
Md
0 R
0.7608 0.898 0.5255 XA
2.5 M
202.3253 476.8775 m
207.4844 475.2807 l
212.6434 473.561 l
217.8025 471.7922 l
222.9615 469.9005 l
228.1206 467.9351 l
233.2797 465.8961 l
238.4387 463.7342 l
243.5978 461.5232 l
248.7569 459.1893 l
253.9159 456.7817 l
259.075 454.3005 l
264.234 451.7455 l
269.3931 449.0922 l
274.5522 446.3653 l
279.7112 443.5892 l
284.8703 440.7149 l
290.001 437.7914 l
295.1601 434.7942 l
300.3191 431.7234 l
305.4782 428.6034 l
310.6372 425.4342 l
315.7963 422.2159 l
320.9554 418.9485 l
326.1144 415.632 l
331.2735 412.2908 l
336.4326 408.876 l
341.5916 405.4367 l
346.7507 401.9727 l
351.9098 398.4842 l
357.0688 394.9465 l
362.2279 391.3843 l
367.3869 387.7975 l
372.546 384.1862 l
377.705 380.5503 l
382.8641 376.9143 l
388.0232 373.2293 l
393.1822 369.5442 l
398.3413 365.8346 l
403.5004 362.125 l
408.6311 358.3908 l
413.7901 354.6566 l
418.9492 350.8979 l
424.1083 347.1391 l
429.2673 343.3558 l
434.4264 339.5725 l
439.5854 335.7892 l
444.7445 331.9813 l
449.9036 328.1734 l
455.0626 324.3655 l
460.2217 320.5576 l
S
[5 3 ]0 d
202.3253 482.8964 m
207.4844 481.5207 l
212.6434 480.0466 l
217.8025 478.4989 l
222.9615 476.8529 l
228.1206 475.1086 l
233.2797 473.2907 l
238.4387 471.3499 l
243.5978 469.3354 l
248.7569 467.2472 l
253.9159 465.0362 l
259.075 462.7515 l
264.234 460.3439 l
269.3931 457.8872 l
274.5522 455.3076 l
279.7112 452.6544 l
284.8703 449.9275 l
290.001 447.1268 l
295.1601 444.2279 l
300.3191 441.2553 l
305.4782 438.209 l
310.6372 435.1135 l
315.7963 431.9198 l
320.9554 428.7015 l
326.1144 425.4096 l
331.2735 422.0439 l
336.4326 418.6536 l
341.5916 415.1897 l
346.7507 411.6766 l
351.9098 408.1389 l
357.0688 404.5522 l
362.2279 400.9408 l
367.3869 397.2803 l
372.546 393.5953 l
377.705 389.8611 l
382.8641 386.1269 l
388.0232 382.3436 l
393.1822 378.5603 l
398.3413 374.7278 l
403.5004 370.8954 l
408.6311 367.0384 l
413.7901 363.1567 l
418.9492 359.2752 l
424.1083 355.369 l
429.2673 351.4383 l
434.4264 347.5075 l
439.5854 343.5768 l
444.7445 339.6215 l
449.9036 335.6417 l
455.0626 331.6864 l
460.2217 327.7065 l
S
u
0.0431 0.2274 0.5373 XA
0.7 w []0 d
261.9663 450.4434 m
265.7364 450.4434 l
263.8655 450.4434 l
263.8655 452.0894 l
263.8655 448.822 l
S
278.0671 441.7712 m
281.8655 441.7712 l
279.9663 441.7712 l
279.9663 443.4172 l
279.9663 440.1498 l
S
290.5679 435.4084 m
294.338 435.4084 l
292.4672 435.4084 l
292.4672 437.0298 l
292.4672 433.7624 l
S
300.7727 430.4704 m
304.5711 430.4704 l
302.6719 430.4704 l
302.6719 432.1164 l
302.6719 428.849 l
S
334.7318 410.4729 m
338.5019 410.4729 l
336.6027 410.4729 l
336.6027 412.1188 l
336.6027 408.8514 l
S
339.6074 406.5913 m
343.3775 406.5913 l
341.4782 406.5913 l
341.4782 408.2127 l
341.4782 404.9453 l
S
344.0861 402.9308 m
347.8562 402.9308 l
345.957 402.9308 l
345.957 404.5522 l
345.957 401.2848 l
S
348.2247 400.3267 m
351.9948 400.3267 l
350.1239 400.3267 l
350.1239 401.9727 l
350.1239 398.7053 l
S
352.1082 397.698 m
355.8783 397.698 l
353.979 397.698 l
353.979 399.344 l
353.979 396.0766 l
S
355.7082 395.3887 m
359.4783 395.3887 l
357.6074 395.3887 l
357.6074 397.0101 l
357.6074 393.7427 l
S
365.346 389.8366 m
369.1161 389.8366 l
367.2169 389.8366 l
367.2169 391.458 l
367.2169 388.1906 l
S
368.209 387.0605 m
371.9791 387.0605 l
370.0799 387.0605 l
370.0799 388.7065 l
370.0799 385.4145 l
S
370.9302 384.1861 m
374.7003 384.1861 l
372.8295 384.1861 l
372.8295 385.8321 l
372.8295 382.5647 l
S
373.5381 381.8031 m
377.3082 381.8031 l
375.4374 381.8031 l
375.4374 383.4492 l
375.4374 380.1572 l
S
376.0326 379.5921 m
379.8027 379.5921 l
377.9319 379.5921 l
377.9319 381.2381 l
377.9319 377.9461 l
S
378.4137 377.7004 m
382.1838 377.7004 l
380.313 377.7004 l
380.313 379.3464 l
380.313 376.079 l
S
380.7098 376.0299 m
384.4799 376.0299 l
382.5807 376.0299 l
382.5807 377.6759 l
382.5807 374.4084 l
S
382.8925 374.4085 m
386.6626 374.4085 l
384.7917 374.4085 l
384.7917 376.0299 l
384.7917 372.7625 l
S
385.0185 372.7134 m
388.7886 372.7134 l
386.8893 372.7134 l
386.8893 374.3594 l
386.8893 371.0919 l
S
387.0594 371.2885 m
390.8295 371.2885 l
388.9303 371.2885 l
388.9303 372.9345 l
388.9303 369.667 l
S
389.0153 369.8636 m
392.7854 369.8636 l
390.9145 369.8636 l
390.9145 371.5096 l
390.9145 368.2176 l
S
390.9145 368.8318 m
394.6847 368.8318 l
392.8138 368.8318 l
392.8138 370.4778 l
392.8138 367.2103 l
S
392.757 367.7999 m
396.5272 367.7999 l
394.6279 367.7999 l
394.6279 369.4459 l
394.6279 366.1785 l
S
394.5146 366.6944 m
398.313 366.6944 l
396.4138 366.6944 l
396.4138 368.3159 l
396.4138 365.0484 l
S
396.2437 365.3678 m
400.0138 365.3678 l
398.1429 365.3678 l
398.1429 366.9892 l
398.1429 363.7218 l
S
397.9161 364.508 m
401.6862 364.508 l
399.8153 364.508 l
399.8153 366.1539 l
399.8153 362.8865 l
S
402.65 362.6409 m
406.4201 362.6409 l
404.5492 362.6409 l
404.5492 364.2869 l
404.5492 361.0194 l
S
404.1524 360.8966 m
407.9225 360.8966 l
406.0516 360.8966 l
406.0516 362.518 l
406.0516 359.2506 l
S
405.598 359.0541 m
409.3681 359.0541 l
407.4972 359.0541 l
407.4972 360.7001 l
407.4972 357.4081 l
S
407.0153 357.5064 m
410.7855 357.5064 l
408.9146 357.5064 l
408.9146 359.1278 l
408.9146 355.8604 l
S
408.4044 356.106 m
412.1744 356.106 l
410.3036 356.106 l
410.3036 357.7275 l
410.3036 354.46 l
S
409.7649 354.8777 m
413.535 354.8777 l
411.6358 354.8777 l
411.6358 356.5237 l
411.6358 353.2317 l
S
411.0689 354.2635 m
414.839 354.2635 l
412.9681 354.2635 l
412.9681 355.9095 l
412.9681 352.6421 l
S
412.3728 352.7404 m
416.1429 352.7404 l
414.2437 352.7404 l
414.2437 354.3864 l
414.2437 351.0944 l
S
413.6201 351.8314 m
417.3902 351.8314 l
415.5193 351.8314 l
415.5193 353.4774 l
415.5193 350.21 l
S
414.839 351.0207 m
418.6374 351.0207 l
416.7382 351.0207 l
416.7382 352.6421 l
416.7382 349.3747 l
S
416.0579 350.3328 m
419.828 350.3328 l
417.9288 350.3328 l
417.9288 351.9788 l
417.9288 348.7114 l
S
417.2201 349.8169 m
421.0185 349.8169 l
419.1193 349.8169 l
419.1193 351.4383 l
419.1193 348.1709 l
S
418.3823 349.2273 m
422.1524 349.2273 l
420.2815 349.2273 l
420.2815 350.8733 l
420.2815 347.6059 l
S
419.5161 348.4411 m
423.2863 348.4411 l
421.4154 348.4411 l
421.4154 350.0871 l
421.4154 346.7951 l
S
420.6217 347.8024 m
424.3917 347.8024 l
422.5209 347.8024 l
422.5209 349.4484 l
422.5209 346.181 l
S
421.7272 347.1636 m
425.4973 347.1636 l
423.598 347.1636 l
423.598 348.8096 l
423.598 345.5177 l
S
422.776 346.746 m
426.5461 346.746 l
424.6752 346.746 l
424.6752 348.3674 l
424.6752 345.1 l
S
424.8453 346.6477 m
428.6437 346.6477 l
426.7445 346.6477 l
426.7445 348.2692 l
426.7445 345.0017 l
S
425.8658 345.1246 m
429.6359 345.1246 l
427.765 345.1246 l
427.765 346.7706 l
427.765 343.5032 l
S
426.8579 343.6506 m
430.628 343.6506 l
428.7571 343.6506 l
428.7571 345.2966 l
428.7571 342.0291 l
S
427.8217 342.889 m
431.6201 342.889 l
429.7209 342.889 l
429.7209 344.5104 l
429.7209 341.243 l
S
428.7855 342.2011 m
432.5556 342.2011 l
430.6847 342.2011 l
430.6847 343.8225 l
430.6847 340.5551 l
S
429.7209 341.5378 m
433.491 341.5378 l
431.6201 341.5378 l
431.6201 343.1592 l
431.6201 339.8918 l
S
430.6563 341.4641 m
434.4264 341.4641 l
432.5556 341.4641 l
432.5556 343.1101 l
432.5556 339.8427 l
S
431.5634 340.2112 m
435.3335 340.2112 l
433.4627 340.2112 l
433.4627 341.8326 l
433.4627 338.5652 l
S
432.4705 340.0884 m
436.2406 340.0884 l
434.3414 340.0884 l
434.3414 341.7344 l
434.3414 338.4424 l
S
433.3492 338.9337 m
437.1194 338.9337 l
435.2201 338.9337 l
435.2201 340.5551 l
435.2201 337.2877 l
S
434.1996 338.2704 m
437.9981 338.2704 l
436.0988 338.2704 l
436.0988 339.9164 l
436.0988 336.649 l
S
435.0784 337.6562 m
438.8485 337.6562 l
436.9492 337.6562 l
436.9492 339.2776 l
436.9492 336.0102 l
S
435.9004 337.042 m
439.6705 337.042 l
437.7996 337.042 l
437.7996 338.688 l
437.7996 335.4206 l
S
436.7508 336.477 m
440.5209 336.477 l
438.6217 336.477 l
438.6217 338.0984 l
438.6217 334.831 l
S
437.5446 335.8874 m
441.343 335.8874 l
439.4437 335.8874 l
439.4437 337.5088 l
439.4437 334.2414 l
S
438.3666 335.7891 m
442.1367 335.7891 l
440.2375 335.7891 l
440.2375 337.4105 l
440.2375 334.1431 l
S
439.1603 334.7327 m
442.9304 334.7327 l
441.0312 334.7327 l
441.0312 336.3787 l
441.0312 333.1113 l
S
439.9257 333.7992 m
443.7241 333.7992 l
441.8248 333.7992 l
441.8248 335.4452 l
441.8248 332.1778 l
S
440.7194 332.9639 m
444.4894 332.9639 l
442.5902 332.9639 l
442.5902 334.5853 l
442.5902 331.3179 l
S
441.4847 332.2515 m
445.2548 332.2515 l
443.3556 332.2515 l
443.3556 333.8975 l
443.3556 330.63 l
S
442.2217 331.6127 m
445.9918 331.6127 l
444.1209 331.6127 l
444.1209 333.2587 l
444.1209 329.9913 l
S
442.9587 331.0477 m
446.7288 331.0477 l
444.8579 331.0477 l
444.8579 332.6691 l
444.8579 329.4017 l
S
443.6957 330.5809 m
447.4658 330.5809 l
445.5949 330.5809 l
445.5949 332.2269 l
445.5949 328.9595 l
S
444.4327 330.1633 m
448.2028 330.1633 l
446.3036 330.1633 l
446.3036 331.8093 l
446.3036 328.5419 l
S
445.1414 329.8684 m
448.9115 329.8684 l
447.0123 329.8684 l
447.0123 331.4899 l
447.0123 328.2225 l
S
445.8501 329.893 m
449.6201 329.893 l
447.7209 329.893 l
447.7209 331.539 l
447.7209 328.2471 l
S
446.5304 329.6719 m
450.3004 329.6719 l
448.4296 329.6719 l
448.4296 331.3179 l
448.4296 328.0505 l
S
447.2107 329.2543 m
451.0091 329.2543 l
449.1099 329.2543 l
449.1099 330.9003 l
449.1099 327.6329 l
S
447.891 329.0332 m
451.6894 329.0332 l
449.7902 329.0332 l
449.7902 330.6792 l
449.7902 327.4118 l
S
448.5713 328.8612 m
452.3414 328.8612 l
450.4705 328.8612 l
450.4705 330.5072 l
450.4705 327.2398 l
S
200.4544 484.5916 m
204.2245 484.5916 l
202.3253 484.5916 l
202.3253 486.213 l
202.3253 482.9455 l
S
300.7727 430.7161 m
304.5711 430.7161 l
302.6719 430.7161 l
302.6719 432.3375 l
302.6719 429.0701 l
S
451.1792 327.8785 m
454.9493 327.8785 l
453.0784 327.8785 l
453.0784 329.5245 l
453.0784 326.2571 l
S
451.8028 326.5274 m
455.5729 326.5274 l
453.7021 326.5274 l
453.7021 328.1488 l
453.7021 324.8814 l
S
452.4264 325.9132 m
456.2249 325.9132 l
454.3256 325.9132 l
454.3256 327.5592 l
454.3256 324.2672 l
S
453.05 325.1025 m
456.8202 325.1025 l
454.9493 325.1025 l
454.9493 326.7485 l
454.9493 323.4811 l
S
453.6737 324.4883 m
457.4438 324.4883 l
455.5446 324.4883 l
455.5446 326.1343 l
455.5446 322.8423 l
S
454.2689 323.9724 m
458.0391 323.9724 l
456.1682 323.9724 l
456.1682 325.6184 l
456.1682 322.351 l
S
454.8642 323.2108 m
458.6343 323.2108 l
456.7635 323.2108 l
456.7635 324.8568 l
456.7635 321.5894 l
S
455.4595 323.7758 m
459.2296 323.7758 l
457.3588 323.7758 l
457.3588 325.4218 l
457.3588 322.1298 l
S
456.0548 323.4319 m
459.8249 323.4319 l
457.9257 323.4319 l
457.9257 325.0534 l
457.9257 321.7859 l
S
456.6217 322.9897 m
460.2217 322.9897 l
458.5209 322.9897 l
458.5209 324.6111 l
458.5209 321.3437 l
S
200.4544 484.0757 m
204.2245 484.0757 l
202.3253 484.0757 l
202.3253 485.6971 l
202.3253 482.4297 l
S
239.2608 462.8498 m
243.0308 462.8498 l
241.16 462.8498 l
241.16 464.4712 l
241.16 461.2037 l
S
309.4184 426.6625 m
313.1884 426.6625 l
311.2892 426.6625 l
311.2892 428.2839 l
311.2892 425.0165 l
S
316.9018 421.7 m
320.6719 421.7 l
318.7727 421.7 l
318.7727 423.3214 l
318.7727 420.054 l
S
323.4782 417.0077 m
327.2766 417.0077 l
325.3774 417.0077 l
325.3774 418.6537 l
325.3774 415.3863 l
S
329.4026 413.7649 m
333.1727 413.7649 l
331.2735 413.7649 l
331.2735 415.3863 l
331.2735 412.1188 l
S
359.1098 393.3005 m
362.8799 393.3005 l
360.9806 393.3005 l
360.9806 394.9219 l
360.9806 391.6545 l
S
362.3129 391.1632 m
366.083 391.1632 l
364.1838 391.1632 l
364.1838 392.8092 l
364.1838 389.5418 l
S
399.5319 363.8201 m
403.3303 363.8201 l
401.4311 363.8201 l
401.4311 365.4661 l
401.4311 362.1987 l
S
401.1193 363.1322 m
404.8894 363.1322 l
403.0185 363.1322 l
403.0185 364.7536 l
403.0185 361.4862 l
S
423.8248 346.746 m
427.5949 346.746 l
425.724 346.746 l
425.724 348.3674 l
425.724 345.1 l
S
U
u
0 To
1 0 0 1 442.2735 402.6999 0 Tp
0 Tv
TP
-146.4319 0 Td
3 Tr
1 w 4 M
%_ 0 50 XQ
/_NewCenturySchlbk-Roman 7 6.86 -1.505 Tf
0 Ts
115.3839 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
2 Ta
0 0 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(/home/sierra1/deg/dedx/mucrit_plot.pro) Tx 
(\r) TX 
TO
0 To
1 0 0 1 442.2735 393.5364 0 Tp
0 Tv
TP
-94.4262 0 Td
3 Tr
(Thu Apr  4 11:43:03 2002) Tx 
(\r) TX 
TO
0 To
1 0 0 1 441.6586 383.4127 0 Tp
0 Tv
TP
-111.2987 0 Td
3 Tr
(A B E gas =  7980.  2.03 0.879) Tx 
(\r) TX 
TO
0 To
1 0 0 1 441.6586 368.9672 0 Tp
0 Tv
TP
-116.2335 0 Td
3 Tr
(A B E solid =  5700.  1.47 0.838) Tx 
(\r) TX 
TO
U
u
0 R
0 G
0.4 w 2.5 M
196.4292 311.9345 m
460.2217 311.9345 l
S
202.3253 311.9345 m
202.3253 315.6442 l
S
331.2735 311.9345 m
331.2735 315.6442 l
S
460.2217 311.9345 m
460.2217 315.6442 l
S
196.4292 311.9345 m
196.4292 313.777 l
S
241.16 311.9345 m
241.16 313.777 l
S
263.8655 311.9345 m
263.8655 313.777 l
S
279.9663 311.9345 m
279.9663 313.777 l
S
292.4672 311.9345 m
292.4672 313.777 l
S
302.6719 311.9345 m
302.6719 313.777 l
S
311.2892 311.9345 m
311.2892 313.777 l
S
318.7727 311.9345 m
318.7727 313.777 l
S
325.3774 311.9345 m
325.3774 313.777 l
S
370.0799 311.9345 m
370.0799 313.777 l
S
392.8137 311.9345 m
392.8137 313.777 l
S
408.9146 311.9345 m
408.9146 313.777 l
S
421.4154 311.9345 m
421.4154 313.777 l
S
431.6201 311.9345 m
431.6201 313.777 l
S
440.2375 311.9345 m
440.2375 313.777 l
S
447.7209 311.9345 m
447.7209 313.777 l
S
454.3257 311.9345 m
454.3257 313.777 l
S
196.4292 497.1454 m
460.2217 497.1454 l
S
202.3253 497.1454 m
202.3253 493.4357 l
S
331.2735 497.1454 m
331.2735 493.4357 l
S
460.2217 497.1454 m
460.2217 493.4357 l
S
196.4292 497.1454 m
196.4292 495.3028 l
S
241.16 497.1454 m
241.16 495.3028 l
S
263.8655 497.1454 m
263.8655 495.3028 l
S
279.9663 497.1454 m
279.9663 495.3028 l
S
292.4672 497.1454 m
292.4672 495.3028 l
S
302.6719 497.1454 m
302.6719 495.3028 l
S
311.2892 497.1454 m
311.2892 495.3028 l
S
318.7727 497.1454 m
318.7727 495.3028 l
S
325.3774 497.1454 m
325.3774 495.3028 l
S
370.0799 497.1454 m
370.0799 495.3028 l
S
392.8137 497.1454 m
392.8137 495.3028 l
S
408.9146 497.1454 m
408.9146 495.3028 l
S
421.4154 497.1454 m
421.4154 495.3028 l
S
431.6201 497.1454 m
431.6201 495.3028 l
S
440.2375 497.1454 m
440.2375 495.3028 l
S
447.7209 497.1454 m
447.7209 495.3028 l
S
454.3257 497.1454 m
454.3257 495.3028 l
S
196.4292 311.9345 m
196.4292 497.1454 l
S
196.4292 311.9345 m
201.7017 311.9345 l
S
196.4292 427.5469 m
201.7017 427.5469 l
S
196.4292 346.746 m
199.0654 346.746 l
S
196.4292 367.0875 m
199.0654 367.0875 l
S
196.4292 381.5329 m
199.0654 381.5329 l
S
196.4292 392.7355 m
199.0654 392.7355 l
S
196.4292 401.899 m
199.0654 401.899 l
S
196.4292 409.6376 m
199.0654 409.6376 l
S
196.4292 416.3444 m
199.0654 416.3444 l
S
196.4292 422.2651 m
199.0654 422.2651 l
S
196.4292 462.3338 m
199.0654 462.3338 l
S
196.4292 482.6999 m
199.0654 482.6999 l
S
196.4292 497.1454 m
199.0654 497.1454 l
S
460.2217 311.9345 m
460.2217 497.1454 l
S
460.2217 311.9345 m
454.9493 311.9345 l
S
460.2217 427.5469 m
454.9493 427.5469 l
S
460.2217 346.746 m
457.5855 346.746 l
S
460.2217 367.0875 m
457.5855 367.0875 l
S
460.2217 381.5329 m
457.5855 381.5329 l
S
460.2217 392.7355 m
457.5855 392.7355 l
S
460.2217 401.899 m
457.5855 401.899 l
S
460.2217 409.6376 m
457.5855 409.6376 l
S
460.2217 416.3444 m
457.5855 416.3444 l
S
460.2217 422.2651 m
457.5855 422.2651 l
S
460.2217 462.3338 m
457.5855 462.3338 l
S
460.2217 482.6999 m
457.5855 482.6999 l
S
460.2217 497.1454 m
457.5855 497.1454 l
S
U
0 To
1 0 0 1 345.4724 467.3574 0 Tp
0 Tv
TP
-27.5 0 Td
0 Tr
0 O
0 0 0 Xa
800 Ar
1 w 4 M
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
100 100 Tz
1 Ta
12 0 Tl
(___________\r) Tx 
-7.1938 -12 Td
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
-100 Tt
-1.0001 Tc
( ) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
50 Tt
0.5 Tc
(\() Tx 
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Tt
0 Tc
(Z) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
( ) Tx 
/_Symbol 10 10 -2.93 Tf
(+) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
( 2.03) Tx 
75 Tt
0.75 Tc
(\)) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
3 Ts
0 Tt
0 Tc
(0.879) Tx 
(\r) TX 
TO
0 To
1 0 0 1 254.9724 407.8574 0 Tp
0 Tv
TP
-27.5 0 Td
0 Tr
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
0 Ts
(___________\r) Tx 
-7.1938 -12 Td
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
-100 Tt
-1.0001 Tc
( ) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
50 Tt
0.5 Tc
(\() Tx 
/_NewCenturySchlbk-Italic 10 9.68 -2.27 Tf
0 Tt
0 Tc
(Z) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
( ) Tx 
/_Symbol 10 10 -2.93 Tf
(+) Tx 
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
( 1.47) Tx 
75 Tt
0.75 Tc
(\)) Tx 
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
3 Ts
0 Tt
0 Tc
(0.838) Tx 
(\r) TX 
TO
u
1 g
0 R
0.898 0 0 XA
300 Ar
0.5 w 2.5 M
204.2245 492.0108 m
203.9694 492.8216 l
203.2891 493.4357 l
202.3253 493.6569 l
201.3899 493.4357 l
200.7096 492.8216 l
200.4544 492.0108 l
200.7096 491.2001 l
201.3899 490.6105 l
202.3253 490.3894 l
203.2891 490.6105 l
203.9694 491.2001 l
204.2245 492.0108 l
B
243.0309 470.4655 m
242.7758 471.3008 l
242.0955 471.8904 l
241.16 472.1115 l
240.1962 471.8904 l
239.5159 471.3008 l
239.2608 470.4655 l
239.5159 469.6548 l
240.1962 469.0652 l
241.16 468.8441 l
242.0955 469.0652 l
242.7758 469.6548 l
243.0309 470.4655 l
B
313.1884 434.7205 m
312.9333 435.5312 l
312.253 436.1208 l
311.2892 436.3419 l
310.3538 436.1208 l
309.6735 435.5312 l
309.4184 434.7205 l
309.6735 433.8852 l
310.3538 433.2956 l
311.2892 433.0745 l
312.253 433.2956 l
312.9333 433.8852 l
313.1884 434.7205 l
B
320.6719 430.0282 m
320.4168 430.8389 l
319.7365 431.4285 l
318.7727 431.6496 l
317.8373 431.4285 l
317.157 430.8389 l
316.9019 430.0282 l
317.157 429.1929 l
317.8373 428.6033 l
318.7727 428.3822 l
319.7365 428.6033 l
320.4168 429.1929 l
320.6719 430.0282 l
B
327.2767 425.4833 m
327.0215 426.3186 l
326.3129 426.9082 l
325.3775 427.1293 l
324.442 426.9082 l
323.7334 426.3186 l
323.4783 425.4833 l
323.7334 424.6726 l
324.442 424.083 l
325.3775 423.8619 l
326.3129 424.083 l
327.0215 424.6726 l
327.2767 425.4833 l
B
333.1727 422.6581 m
332.9176 423.4688 l
332.2089 424.0584 l
331.2735 424.2795 l
330.3381 424.0584 l
329.6295 423.4688 l
329.4027 422.6581 l
329.6295 421.8228 l
330.3381 421.2332 l
331.2735 421.0121 l
332.2089 421.2332 l
332.9176 421.8228 l
333.1727 422.6581 l
B
362.8799 401.2111 m
362.6248 402.0464 l
361.9445 402.636 l
360.9807 402.8571 l
360.0453 402.636 l
359.365 402.0464 l
359.1098 401.2111 l
359.365 400.4004 l
360.0453 399.8108 l
360.9807 399.5897 l
361.9445 399.8108 l
362.6248 400.4004 l
362.8799 401.2111 l
B
366.083 399.516 m
365.8279 400.3513 l
365.1476 400.9408 l
364.1838 401.162 l
363.2484 400.9408 l
362.5681 400.3513 l
362.313 399.516 l
362.5681 398.7053 l
363.2484 398.1157 l
364.1838 397.8946 l
365.1476 398.1157 l
365.8279 398.7053 l
366.083 399.516 l
B
403.3303 371.3867 m
403.0752 372.1974 l
402.3665 372.787 l
401.4311 373.0082 l
400.4957 372.787 l
399.787 372.1974 l
399.5319 371.3867 l
399.787 370.5515 l
400.4957 369.9619 l
401.4311 369.7408 l
402.3665 369.9619 l
403.0752 370.5515 l
403.3303 371.3867 l
B
404.8894 371.0182 m
404.6342 371.8289 l
403.9539 372.4431 l
403.0185 372.6642 l
402.0547 372.4431 l
401.3744 371.8289 l
401.1193 371.0182 l
401.3744 370.2075 l
402.0547 369.5933 l
403.0185 369.3722 l
403.9539 369.5933 l
404.6342 370.2075 l
404.8894 371.0182 l
B
427.5949 354.1898 m
427.3398 355.0005 l
426.6595 355.6147 l
425.7241 355.8358 l
424.7603 355.6147 l
424.08 355.0005 l
423.8249 354.1898 l
424.08 353.3791 l
424.7603 352.7649 l
425.7241 352.5438 l
426.6595 352.7649 l
427.3398 353.3791 l
427.5949 354.1898 l
B
453.6737 335.5926 m
453.4186 336.4033 l
452.7099 337.0175 l
451.7745 337.2386 l
450.8391 337.0175 l
450.1304 336.4033 l
449.8753 335.5926 l
450.1304 334.7819 l
450.8391 334.1677 l
451.7745 333.9712 l
452.7099 334.1677 l
453.4186 334.7819 l
453.6737 335.5926 l
B
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 1 1 255 79 79 Lb
(Layer 2) Ln
0 A
u
0 To
1 0 0 1 193.92 311.3352 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
0 O
0 0 0 Xa
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
%_ 0 50 XQ
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
2 Ta
0 0 2 2 3 Th
0 Tq
0 Tg
9.84 0 Tl
0 Tc
0 Tw
( 100) Tx 
(\r) TX 
TO
0 To
1 0 0 1 193.92 343.6552 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
( 200) Tx 
(\r) TX 
TO
0 To
1 0 0 1 193.92 378.0952 0 Tp
0 Tv
TP
-17.514 0 Td
0 Tr
( 400) Tx 
(\r) TX 
TO
0 To
1 0 0 1 193.92 406.0952 0 Tp
0 Tv
TP
-15.012 0 Td
0 Tr
(700) Tx 
(\r) TX 
TO
0 To
1 0 0 1 193.92 424.4152 0 Tp
0 Tv
TP
-20.016 0 Td
0 Tr
(1000) Tx 
(\r) TX 
TO
0 To
1 0 0 1 193.92 459.7352 0 Tp
0 Tv
TP
-20.016 0 Td
0 Tr
(2000) Tx 
(\r) TX 
TO
0 To
1 0 0 1 193.92 493.9352 0 Tp
0 Tv
TP
-20.016 0 Td
0 Tr
(4000) Tx 
(\r) TX 
TO
U
0 To
0 1 -1 0 171.5 404.4035 0 Tp
0 Tv
TP
-22.9662 0 Td
0 Tr
/_NewCenturySchlbk-Italic 10.0001 9.6801 -2.2701 Tf
1 Ta
9.9729 0 Tl
(E) Tx 
/_Symbol 9.091 9.091 -2.6636 Tf
-2.7273 Ts
9.973 0 Tl
(m) Tx 
/_NewCenturySchlbk-Italic 9.091 8.8001 -2.0637 Tf
9.9729 0 Tl
(c) Tx 
/_NewCenturySchlbk-Roman 10.0001 9.8001 -2.15 Tf
0 Ts
( \(GeV\)) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 202.3333 302 0 Tp
0 Tv
TP
-2.502 0 Td
0 Tr
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
9.84 0 Tl
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.8533 302 0 Tp
0 Tv
TP
-2.502 0 Td
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 292.8933 302 0 Tp
0 Tv
TP
-2.502 0 Td
0 Tr
(5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 332.2933 302 0 Tp
0 Tv
TP
-5.004 0 Td
0 Tr
(10) Tx 
(\r) TX 
TO
0 To
1 0 0 1 370.8133 302 0 Tp
0 Tv
TP
-5.004 0 Td
0 Tr
(20) Tx 
(\r) TX 
TO
0 To
1 0 0 1 421.8533 302 0 Tp
0 Tv
TP
-5.004 0 Td
0 Tr
(50) Tx 
(\r) TX 
TO
0 To
1 0 0 1 458.2533 302 0 Tp
0 Tv
TP
-7.506 0 Td
0 Tr
(100) Tx 
(\r) TX 
TO
U
0 To
1 0 0 1 332.5 291.3352 0 Tp
0 Tv
TP
-3.335 0 Td
0 Tr
/_NewCenturySchlbk-Italic 10.0001 9.6801 -2.2701 Tf
9.9729 0 Tl
(Z) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 345.4524 468.3795 0 Tp
0 Tv
TP
-22.5099 0 Td
0 Tr
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
9.84 0 Tl
(7980 GeV) Tx 
(\r) TX 
TO
U
u
0 To
1 0 0 1 254.9524 409.3795 0 Tp
0 Tv
TP
-22.5099 0 Td
0 Tr
(5700 GeV) Tx 
(\r) TX 
TO
U
u
u
0 R
0 G
0.5 w
309.2775 463.1147 m
291.9378 453.1667 l
S
U
u
0 O
0 g
1 w
295.9069 452.9981 m
288.9591 451.254 l
295.8768 457.6685 l
294.7204 454.3555 l
295.9069 452.9981 l
f
U
U
u
u
297.5392 423.6997 m
304.4869 425.4438 l
297.5692 419.0293 l
298.7255 422.3423 l
297.5392 423.6997 l
f
U
u
0 R
0 G
0.5 w
300.8396 423.208 m
283.4999 413.26 l
S
U
U
u
0 To
1 0 0 1 202.837 319.2029 0 Tp
0 Tv
TP
-3.7485 0 Td
0 Tr
0 O
0 0 0 Xa
1 w
/_NewCenturySchlbk-Roman 9 8.82 -1.935 Tf
12 0 Tl
(H) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.337 319.2029 0 Tp
0 Tv
TP
-5.9985 0 Td
0 Tr
(He) Tx 
(\r) TX 
TO
0 To
1 0 0 1 263.837 319.2029 0 Tp
0 Tv
TP
-4.4189 0 Td
0 Tr
(Li) Tx 
(\r) TX 
TO
0 To
1 0 0 1 279.837 319.2029 0 Tp
0 Tv
TP
-5.4989 0 Td
0 Tr
(Be) Tx 
(\r) TX 
TO
0 To
1 0 0 1 292.837 319.2029 0 Tp
0 Tv
TP
-3.2489 0 Td
0 Tr
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 303.337 319.2029 0 Tp
0 Tv
TP
-3.2489 0 Td
0 Tr
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 311.337 319.2029 0 Tp
0 Tv
TP
-3.6674 0 Td
0 Tr
(N) Tx 
(\r) TX 
TO
0 To
1 0 0 1 319.5434 319.2029 0 Tp
0 Tv
TP
-3.501 0 Td
0 Tr
(O) Tx 
(\r) TX 
TO
0 To
1 0 0 1 331.837 319.2029 0 Tp
0 Tv
TP
-5.9174 0 Td
0 Tr
(Ne) Tx 
(\r) TX 
TO
0 To
1 0 0 1 421.837 319.2029 0 Tp
0 Tv
TP
-5.5844 0 Td
0 Tr
(Sn) Tx 
(\r) TX 
TO
0 To
1 0 0 1 383.337 319.2029 0 Tp
0 Tv
TP
-5.2515 0 Td
0 Tr
(Fe) Tx 
(\r) TX 
TO
U
u
0 R
0 G
0.5 w
228.2857 351.3768 m
231.8857 351.3768 l
S
229.9657 353.0568 m
229.9657 349.6968 l
S
U
0 To
1 0 0 1 236.1157 347.8168 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
1 w
/_NewCenturySchlbk-Roman 10 9.8 -2.15 Tf
0 Ta
10.97 0 Tl
(Solids) Tx 
(\r) TX 
TO
0 To
1 0 0 1 236.1157 358.3168 0 Tp
0 Tv
TP
0 Tr
(Gases) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
229.7407 359.9165 m
230.7902 359.9165 231.641 360.7673 231.641 361.8168 c
231.641 362.8663 230.7902 363.7171 229.7407 363.7171 c
228.6912 363.7171 227.8404 362.8663 227.8404 361.8168 c
227.8404 360.7673 228.6912 359.9165 229.7407 359.9165 c
s
MB
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
